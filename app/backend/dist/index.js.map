{"version":3,"file":"index.js","sources":["../src/settings.ts","../src/requests/sendChatMsg.ts","../src/requests/updateFriend.ts","../src/requests/auth/disconnect.ts","../src/requests/auth/getPrivateKeyHash.ts","../src/requests/auth/signin.ts","../src/requests/auth/signup.ts","../src/requests/client/destroyLobby.ts","../src/requests/client/joinLobby.ts","../src/requests/client/leaveLobby.ts","../src/requests/client/makeLobby.ts","../src/requests/client/saveDeck.ts","../src/requests/client/selectDeck.ts","../src/requests/client/sendToken.ts","../src/requests/client/setDeckKlass.ts","../src/requests/client/setDeckName.ts","../src/requests/client/startGame.ts","../src/requests/client/withdrawToken.ts","../src/requests/game/attackCard.ts","../src/requests/game/endTurn.ts","../src/requests/game/hoverCard.ts","../src/requests/game/playCard.ts","../src/requests/game/unhoverCard.ts","../src/requests/sidenav/acceptFriend.ts","../src/requests/sidenav/addFriend.ts","../src/requests/sidenav/block.ts","../src/requests/sidenav/declineFriend.ts","../src/requests/sidenav/setAvatar.ts","../src/requests/sidenav/signout.ts","../src/requests/sidenav/unblock.ts","../src/requests/sidenav/unfriend.ts","../src/requests/index.ts","../src/services/Service.ts","../src/services/BlockchainService/BlockchainService.ts","../src/services/MongoService.ts","../src/services/ChatService/ChatService.ts","../src/services/GameService/GameService.ts","../src/services/LobbyService/LobbyService.ts","../src/services/PlayerService/PlayerService.ts","../src/services/SocketService/SocketService.ts","../src/index.ts"],"sourcesContent":["const production = false;\r\n\r\nconst settings = {\r\n  mongo: {\r\n    uri: \"mongodb://localhost:27017\"\r\n  },\r\n  eos: {\r\n    endpoint: process.env.EOS_ENDPOINT || \"https://testnet.telos.net\",\r\n    contractAccount: process.env.EOS_CONTRACT_ACCOUNT || \"telosgamesbp\",\r\n    contractKey: process.env.EOS_CONTRACT_KEY || \"5K2rKojEWKC1UmmiyWKvvXcVeS1Devq2LQEgDyKejyFNJAX2AX2\"\r\n  },\r\n  socket: {\r\n    opts: production ? {} : {\r\n      cors: {origin: \"*\"}\r\n    }\r\n  },\r\n  server: {\r\n    port: process.env.PORT || 4200\r\n  }\r\n};\r\n\r\nexport default settings;\r\n","import type {SendChatMsgReq} from \"@som/shared/interfaces/requests\";\r\nimport type {SocketRequest} from \"models\";\r\n\r\nconst sendChatMsg: SocketRequest<SendChatMsgReq> = async (services, params) => {\r\n  const {chatService, playerService, socketService} = services;\r\n  const {sender, receiver, text, date} = params;\r\n  const msg = await chatService.pushChatMsg([sender, receiver], {sender, text, date});\r\n\r\n  if (!msg) { return; }\r\n\r\n  socketService.emit().sendChatMsgSender({sender, receiver, text, date});\r\n\r\n  const player = await playerService.find({\r\n    username: receiver\r\n  });\r\n\r\n  if (!player || !player.socketId) { return; }\r\n\r\n  socketService.emit(player.socketId).sendChatMsgReceiver({sender, text, date});\r\n};\r\n\r\nexport default sendChatMsg;\r\n","import type {SocketRequest} from \"models\";\r\n\r\nconst updateFriend: SocketRequest = async (services) => {\r\n  const {playerService, socketService} = services;\r\n  const {socketId} = socketService;\r\n  const player = await playerService.find({socketId});\r\n\r\n  if (!player) { return; }\r\n\r\n  const {username, status, social: {friends}} = player;\r\n  const socketIds = await socketService.getSocketIds(friends);\r\n\r\n  socketService.emit(socketIds).updateFriend({username, status});\r\n};\r\n\r\nexport default updateFriend;\r\n","import {PlayerStatus} from \"@som/shared/enums\";\r\nimport type {SocketRequest} from \"models\";\r\n\r\nconst disconnect: SocketRequest = async (services) => {\r\n  const {playerService, socketService} = services;\r\n  const {socketId} = socketService;\r\n  const player = await playerService.findAndUpdate({socketId}, {\r\n    $set: {\r\n      socketId: \"\",\r\n      status: PlayerStatus.OFFLINE\r\n    }\r\n  }, {\r\n    returnDocument: \"after\"\r\n  });\r\n\r\n  if (!player) { return; }\r\n\r\n  const {username, status, social: {friends}} = player;\r\n  const socketIds = await socketService.getSocketIds(friends);\r\n\r\n  socketService.emit(socketIds).updateFriend({username, status});\r\n};\r\n\r\nexport default disconnect;\r\n","import type {GetPrivateKeyHashReq} from \"@som/shared/interfaces/requests\";\r\nimport type {SocketRequest} from \"models\";\r\n\r\nconst getPrivateKeyHash: SocketRequest<GetPrivateKeyHashReq> = async (services, params) => {\r\n  const {playerService, socketService} = services;\r\n  const {username} = params;\r\n  const player = await playerService.find({username});\r\n\r\n  if (!player) {\r\n    const msg = \"Player not found.\";\r\n    socketService.emit().notification({msg});\r\n    return\r\n  }\r\n\r\n  const {privateKeyHash} = player;\r\n  socketService.emit().getPrivateKeyHash({privateKeyHash});\r\n};\r\n\r\nexport default getPrivateKeyHash;\r\n","import {PlayerStatus} from \"@som/shared/enums\";\r\nimport type {SigninReq} from \"@som/shared/interfaces/requests\";\r\nimport type {SocketRequest} from \"models\";\r\n\r\nconst signin: SocketRequest<SigninReq> = async (services, params) => {\r\n  const {\r\n    blockchainService,\r\n    chatService,\r\n    gameService,\r\n    lobbyService,\r\n    playerService,\r\n    socketService\r\n  } = services;\r\n\r\n  const {username, publicKey, signature} = params;\r\n  let lobby;\r\n  let game;\r\n\r\n  // const transaction = await blockchainService.transact(\"signin\", {publicKey, signature});\r\n\r\n  // if (!transaction) { return; }\r\n\r\n  const {socketId} = socketService;\r\n  const player = await playerService.findAndUpdate({username}, [{\r\n    $set: {\r\n      socketId,\r\n      status: {\r\n        $switch: {\r\n          branches: [{\r\n            case: {\r\n              $gt: [\"$lobbyId\", 0]\r\n            },\r\n            then: PlayerStatus.INLOBBY\r\n          }, {\r\n            case: {\r\n              $gt: [\"$gameId\", 0]\r\n            },\r\n            then: PlayerStatus.INGAME\r\n          }],\r\n          default: PlayerStatus.ONLINE\r\n        }\r\n      }\r\n    }\r\n  }], {\r\n    returnDocument: \"after\"\r\n  });\r\n\r\n  const playerOnchain = await blockchainService.findPlayer(username);\r\n\r\n  if (!player || !playerOnchain) { return; }\r\n\r\n  const {wallet, last_nonce} = playerOnchain;\r\n  const {friends} = player.social;\r\n  const friendsView: Array<any> = [];\r\n\r\n  for (const friendname of friends) {\r\n    const [friend, chat] = await Promise.all([\r\n      playerService.find({\r\n        username: friendname\r\n      }),\r\n      chatService.find({\r\n        players: {\r\n          $all: [username, friendname]\r\n        }\r\n      })\r\n    ]);\r\n\r\n    if (!friend || !chat) { return; }\r\n\r\n    const {status, avatarId} = friend;\r\n    const {messages} = chat;\r\n\r\n    friendsView.push({username: friendname, status, avatarId, messages});\r\n  }\r\n\r\n  const {lobbyId, gameId} = player;\r\n\r\n  let gameView;\r\n\r\n  if (lobbyId) {\r\n    lobby = await lobbyService.find({lobbyId});\r\n\r\n    if (!lobby) { return; }\r\n  } else if (gameId) {\r\n    game = await gameService.find({gameId});\r\n\r\n    if (!game) { return; }\r\n\r\n    if (player.username === game.playerA.username) {\r\n      gameView = {\r\n        gameId: game.gameId,\r\n        currentPlayer: game.currentPlayer,\r\n        player: game.playerA,\r\n        opponent: {\r\n          ...game.playerB,\r\n          deck: game.playerB.deck.length,\r\n          hand: game.playerB.hand.length\r\n        }\r\n      };\r\n    } else {\r\n      gameView = {\r\n        gameId: game.gameId,\r\n        currentPlayer: game.currentPlayer,\r\n        player: game.playerB,\r\n        opponent: {\r\n          ...game.playerA,\r\n          deck: game.playerA.deck.length,\r\n          hand: game.playerA.hand.length\r\n        }\r\n      };\r\n    }\r\n  }\r\n\r\n  socketService.emit().signin({\r\n    player: {...player, wallet, last_nonce},\r\n    friends: friendsView,\r\n    lobby,\r\n    game: gameView\r\n  });\r\n};\r\n\r\nexport default signin;\r\n","import {PlayerStatus} from \"@som/shared/enums\";\r\nimport type {SignupReq} from \"@som/shared/interfaces/requests\";\r\nimport type {SocketRequest} from \"models\";\r\n\r\nconst signup: SocketRequest<SignupReq> = async (services, params) => {\r\n  const {blockchainService, playerService, socketService} = services;\r\n  const {username, publicKey, privateKeyHash} = params;\r\n  const player = await playerService.find({username});\r\n\r\n  if (player) {\r\n    const msg = \"Username taken.\";\r\n    socketService.emit().notification({msg});\r\n    return;\r\n  }\r\n\r\n  const [transaction, isInserted] = await Promise.all([\r\n    blockchainService.transact(\"signup\", {username, public_key: publicKey}),\r\n    playerService.insert({\r\n      socketId: \"\",\r\n      username,\r\n      publicKey,\r\n      privateKeyHash,\r\n      status: PlayerStatus.OFFLINE,\r\n      xp: 0,\r\n      lv: 1,\r\n      deckId: 0,\r\n      avatarId: 0,\r\n      lobbyId: 0,\r\n      gameId: 0,\r\n      decks: [\r\n        {id: 0, klass: 1, name: \"Deck 1\", cards: []},\r\n        {id: 1, klass: 2, name: \"Deck 2\", cards: []},\r\n        {id: 2, klass: 3, name: \"Deck 3\", cards: []},\r\n        {id: 3, klass: 4, name: \"Deck 4\", cards: []}\r\n      ],\r\n      social: {friends: [], requests: [], blocked: []}\r\n    })\r\n  ]);\r\n\r\n  if (!transaction || !isInserted) { return; }\r\n\r\n  const msg = \"Account created successfully, you can now sign in.\";\r\n  socketService.emit().notification({msg});\r\n};\r\n\r\nexport default signup;\r\n","import {PlayerStatus} from \"@som/shared/enums\";\r\nimport type {SocketRequest} from \"models\";\r\n\r\nconst destroyLobby: SocketRequest = async (services) => {\r\n  const {lobbyService, playerService, socketService} = services;\r\n  const {socketId} = socketService;\r\n  const player = await playerService.find({socketId});\r\n\r\n  if (!player) { return; }\r\n\r\n  const {username, lobbyId} = player;\r\n\r\n  if (!lobbyId) {\r\n    const msg = \"You are not in a lobby.\";\r\n    socketService.emit().notification({msg});\r\n    return;\r\n  }\r\n\r\n  const lobby = await lobbyService.find({lobbyId});\r\n\r\n  if (!lobby) { return; }\r\n\r\n  if (username !== lobby.host.username) {\r\n    const msg = \"You are not the lobby host.\";\r\n    socketService.emit().notification({msg});\r\n    return;\r\n  }\r\n\r\n  const [isDeletedLobby, isUpdatedPlayer] = await Promise.all([\r\n    lobbyService.delete({lobbyId}),\r\n    playerService.update({socketId}, {\r\n      $set: {\r\n        lobbyId: 0,\r\n        status: PlayerStatus.ONLINE\r\n      }\r\n    })\r\n  ]);\r\n\r\n  if (!isDeletedLobby || !isUpdatedPlayer) { return; }\r\n\r\n  if (lobby.challengee.username) {\r\n    const challengee = await playerService.findAndUpdate({\r\n      username: lobby.challengee.username\r\n    }, {\r\n      $set: {\r\n        lobbyId: 0,\r\n        status: PlayerStatus.ONLINE\r\n      }\r\n    }, {\r\n      returnDocument: \"after\"\r\n    });\r\n\r\n    if (!challengee) { return; }\r\n\r\n    socketService.emit(challengee.socketId).destroyLobby();\r\n  }\r\n\r\n  socketService.emit().destroyLobby();\r\n};\r\n\r\nexport default destroyLobby;\r\n","import {PlayerStatus} from \"@som/shared/enums\";\r\nimport type {JoinLobbyReq} from \"@som/shared/interfaces/requests\";\r\nimport type {SocketRequest} from \"models\";\r\n\r\nconst joinLobby: SocketRequest<JoinLobbyReq> = async (services, params) => {\r\n  console.log(\"joinLobby\")\r\n  const {lobbyService, playerService, socketService} = services;\r\n  const {lobbyId} = params;\r\n  const {socketId} = socketService;\r\n\r\n  const [player, lobby] = await Promise.all([\r\n    playerService.find({socketId}),\r\n    lobbyService.find({lobbyId})\r\n  ]);\r\n\r\n  if (!player) { return; }\r\n\r\n  if (!lobby) {\r\n    const msg = \"Lobby not found.\";\r\n    socketService.emit().notification({msg});\r\n    return;\r\n  }\r\n\r\n  if (player.lobbyId > 0) {\r\n    const msg = \"You are already in a lobby.\";\r\n    socketService.emit().notification({msg});\r\n    return;\r\n  }\r\n\r\n  if (player.gameId > 0) {\r\n    const msg = \"You can't join a lobby while in game.\";\r\n    socketService.emit().notification({msg});\r\n    return;\r\n  }\r\n\r\n  if (lobby.challengee.username) {\r\n    const msg = \"Lobby is full.\";\r\n    socketService.emit().notification({msg});\r\n    return;\r\n  }\r\n\r\n  const {username, avatarId} = player;\r\n\r\n  const updated = await lobbyService.findAndUpdate({lobbyId}, {\r\n    $set: {\r\n      challengee: {username, avatarId}\r\n    }\r\n  }, {returnDocument: \"after\"});\r\n\r\n  const isPlayerUpdated = await playerService.update({socketId}, {\r\n    $set: {\r\n      lobbyId,\r\n      status: PlayerStatus.INLOBBY\r\n    }\r\n  });\r\n\r\n  if (!updated || !isPlayerUpdated) { return; }\r\n\r\n  socketService.emit().joinLobbySender({lobby: updated});\r\n\r\n  const host = await playerService.find({username: updated.host.username});\r\n\r\n  if (!host || !host.socketId) { return; }\r\n\r\n  const {challengee} = updated;\r\n\r\n  socketService.emit(host.socketId).joinLobbyReceiver({challengee});\r\n};\r\n\r\nexport default joinLobby;\r\n","import {PlayerStatus} from \"@som/shared/enums\";\r\nimport type {SocketRequest} from \"models\";\r\n\r\nconst leaveLobby: SocketRequest = async (services) => {\r\n  const {lobbyService, playerService, socketService} = services;\r\n  const {socketId} = socketService;\r\n  const player = await playerService.find({socketId});\r\n\r\n  if (!player) { return; }\r\n\r\n  const {lobbyId} = player;\r\n\r\n  if (lobbyId <= 0) {\r\n    const msg = \"You are not in a lobby.\";\r\n    socketService.emit().notification({msg});\r\n    return;\r\n  }\r\n\r\n  const lobby = await lobbyService.find({lobbyId});\r\n\r\n  if (!lobby) { return; }\r\n\r\n  const [updatedLobby, isUpdatedPlayer] = await Promise.all([\r\n    lobbyService.findAndUpdate({lobbyId}, {\r\n      $set: {\r\n        challengee: {\r\n          username: \"\",\r\n          avatarId: 0\r\n        }\r\n      }\r\n    }, {\r\n      returnDocument: \"after\"\r\n    }),\r\n    playerService.update({socketId}, {\r\n      $set: {\r\n        lobbyId: 0,\r\n        status: PlayerStatus.ONLINE\r\n      }\r\n    })\r\n  ]);\r\n\r\n  if (!updatedLobby || !isUpdatedPlayer) { return; }\r\n\r\n  socketService.emit().leaveLobbySender();\r\n\r\n  const host = await playerService.find({\r\n    username: updatedLobby.host.username\r\n  });\r\n\r\n  if (!host || !host.socketId) { return; }\r\n\r\n  socketService.emit(host.socketId).leaveLobbyReceiver();\r\n};\r\n\r\nexport default leaveLobby;\r\n","import {randomInt} from \"crypto\";\r\nimport {PlayerStatus} from \"@som/shared/enums\";\r\nimport type {SocketRequest} from \"models\";\r\n\r\nconst makeLobby: SocketRequest = async (services) => {\r\n  const {lobbyService, playerService, socketService} = services;\r\n  const {socketId} = socketService;\r\n  const player = await playerService.find({socketId});\r\n\r\n  if (!player) { return; }\r\n\r\n  if (player.lobbyId) {\r\n    const msg = \"You are already in a lobby.\";\r\n    socketService.emit().notification({msg});\r\n    return;\r\n  }\r\n\r\n  if (player.gameId) {\r\n    const msg = \"You can't make a lobby while in game.\";\r\n    socketService.emit().notification({msg});\r\n  }\r\n\r\n  const {username, avatarId} = player;\r\n  const lobbyId = randomInt(1, 1000000);\r\n  const [isInsertedLobby, isUpdatedPlayer] = await Promise.all([\r\n    lobbyService.insert({\r\n      lobbyId,\r\n      host: {username, avatarId},\r\n      challengee: {\r\n        username: \"\",\r\n        avatarId: 0\r\n      }\r\n    }),\r\n    playerService.update({socketId}, {\r\n      $set: {\r\n        lobbyId,\r\n        status: PlayerStatus.INLOBBY\r\n      }\r\n    })\r\n  ]);\r\n\r\n  if (!isInsertedLobby || !isUpdatedPlayer) { return; }\r\n\r\n  const lobby = await lobbyService.find({lobbyId});\r\n\r\n  if (!lobby) { return; }\r\n\r\n  socketService.emit().makeLobby({lobby});\r\n};\r\n\r\nexport default makeLobby;\r\n","import type {SaveDeckReq} from \"@som/shared/interfaces/requests\";\r\nimport type {SocketRequest} from \"models\";\r\n\r\nconst saveDeck: SocketRequest<SaveDeckReq> = async (services, params) => {\r\n  const {playerService, socketService} = services;\r\n  const {cards} = params;\r\n  const {socketId} = socketService;\r\n  const player = await playerService.find({socketId});\r\n\r\n  if (!player) { return; }\r\n\r\n  const {deckId} = player;\r\n  const isUpdated = await playerService.update({\r\n    socketId,\r\n    \"decks.id\": deckId\r\n  }, {\r\n    $set: {\r\n      \"decks.$.cards\": cards\r\n    }\r\n  });\r\n\r\n  if (!isUpdated) { return; }\r\n\r\n  socketService.emit().saveDeck({cards});\r\n};\r\n\r\nexport default saveDeck;\r\n","import type {SelectDeckReq} from \"@som/shared/interfaces/requests\";\r\nimport type {SocketRequest} from \"models\";\r\n\r\nconst selectDeck: SocketRequest<SelectDeckReq> = async (services, params) => {\r\n  const {playerService, socketService} = services;\r\n  const {deckId} = params;\r\n  const {socketId} = socketService;\r\n  const isUpdated = await playerService.update({socketId}, {\r\n    $set: {deckId}\r\n  });\r\n\r\n  if (!isUpdated) { return; }\r\n\r\n  socketService.emit().selectDeck({deckId});\r\n};\r\n\r\nexport default selectDeck;\r\n","import type {SocketRequest} from \"models\";\r\n\r\nconst sendToken: SocketRequest<any> = async (services, params) => {\r\n  const {blockchainService} = services;\r\n\r\n  const transaction = await blockchainService.transact(\"transfer\", params);\r\n\r\n  if (!transaction) { return; }\r\n};\r\n\r\nexport default sendToken;\r\n","import type {SetDeckKlassReq} from \"@som/shared/interfaces/requests\";\r\nimport type {SocketRequest} from \"models\";\r\n\r\nconst setDeckKlass: SocketRequest<SetDeckKlassReq> = async (services, params) => {\r\n  const {playerService, socketService} = services;\r\n  const {deckId, klass} = params;\r\n  const {socketId} = socketService;\r\n  const isUpdated = await playerService.update({\r\n    socketId,\r\n    \"decks.id\": deckId\r\n  }, {\r\n    $set: {\r\n      \"decks.$.klass\": klass\r\n    }\r\n  });\r\n\r\n  if (!isUpdated) { return; }\r\n\r\n  socketService.emit().setDeckKlass({deckId, klass});\r\n};\r\n\r\nexport default setDeckKlass;\r\n","import type {SetDeckNameReq} from \"@som/shared/interfaces/requests\";\r\nimport type {SocketRequest} from \"models\";\r\n\r\nconst setDeckName: SocketRequest<SetDeckNameReq> = async (services, params) => {\r\n  const {playerService, socketService} = services;\r\n  const {id, name} = params;\r\n  const {socketId} = socketService;\r\n  const isUpdated = await playerService.update({\r\n    socketId,\r\n    \"decks.id\": id\r\n  }, {\r\n    $set: {\r\n      \"decks.$.name\": name\r\n    }\r\n  });\r\n\r\n  if (!isUpdated) { return; }\r\n\r\n  socketService.emit().setDeckName({id, name});\r\n};\r\n\r\nexport default setDeckName;\r\n","import {randomInt} from \"crypto\";\r\nimport {cards} from \"@som/shared/data\";\r\nimport {PlayerStatus} from \"@som/shared/enums\";\r\n\r\nimport type {StartGameReq} from \"@som/shared/interfaces/requests\";\r\nimport type {SocketRequest} from \"models\";\r\nimport type {GamePlayerCard, Game} from \"../../services/GameService/GameService.models\";\r\n\r\nfunction shuffleArray (array: Array<GamePlayerCard>): void {\r\n  for (let i = array.length - 1; i > 0; i--) {\r\n    const j = randomInt(0, i + 1);\r\n    const temp = array[i];\r\n    array[i] = array[j];\r\n    array[j] = temp;\r\n  }\r\n}\r\n\r\nconst startGame: SocketRequest<StartGameReq> = async (services, params) => {\r\n  const {gameService, lobbyService, playerService, socketService} = services;\r\n  const {lobbyId} = params;\r\n  const lobby = await lobbyService.find({lobbyId});\r\n  const isDeleted = await lobbyService.delete({lobbyId});\r\n\r\n  if (!lobby || !isDeleted) { return; }\r\n\r\n  const [playerA, playerB] = await Promise.all([\r\n    playerService.findAndUpdate({username: lobby.host.username}, {\r\n      $set: {\r\n        lobbyId: 0,\r\n        gameId: lobbyId,\r\n        status: PlayerStatus.INGAME\r\n      }\r\n    }, {returnDocument: \"after\"}),\r\n    playerService.findAndUpdate({username: lobby.challengee.username}, {\r\n      $set: {\r\n        lobbyId: 0,\r\n        gameId: lobbyId,\r\n        status: PlayerStatus.INGAME\r\n      }\r\n    }, {returnDocument: \"after\"})\r\n  ]);\r\n\r\n  if (!playerA || !playerB) return;\r\n\r\n  let gid = 1;\r\n  let playerADeck: Array<GamePlayerCard> = [];\r\n  const playerAHand: Array<GamePlayerCard> = [];\r\n  let playerBDeck: Array<GamePlayerCard> = [];\r\n  const playerBHand: Array<GamePlayerCard> = [];\r\n\r\n  for (let i = 0; i < playerA.decks[playerA.deckId].cards.length; i += 1) {\r\n    let id = playerA.decks[playerA.deckId].cards[i].id;\r\n\r\n    const card = cards.find((card) => card.id === id);\r\n\r\n    if (!card) return;\r\n\r\n    if (card.health) {\r\n      playerADeck.push({gid, ...card, maxHealth: card.health});\r\n    } else {\r\n      playerADeck.push({gid, ...card});\r\n    }\r\n\r\n    gid += 1;\r\n\r\n    if (playerA.decks[playerA.deckId].cards[i].amount > 1) {\r\n      if (card.health) {\r\n        playerADeck.push({gid, ...card, maxHealth: card.health});\r\n      } else {\r\n        playerADeck.push({gid, ...card});\r\n      }\r\n\r\n      gid += 1;\r\n    }\r\n  }\r\n\r\n  for (let i = 0; i < playerB.decks[playerB.deckId].cards.length; i += 1) {\r\n    let id = playerB.decks[playerB.deckId].cards[i].id;\r\n    const card = cards.find((card) => card.id === id);\r\n\r\n    if (!card) return;\r\n\r\n    if (card.health) {\r\n      playerBDeck.push({gid, ...card, maxHealth: card.health});\r\n    } else {\r\n      playerBDeck.push({gid, ...card});\r\n    }\r\n\r\n    gid += 1;\r\n\r\n    if (playerB.decks[playerB.deckId].cards[i].amount > 1) {\r\n      if (card.health) {\r\n        playerBDeck.push({gid, ...card, maxHealth: card.health});\r\n      } else {\r\n        playerBDeck.push({gid, ...card});\r\n      }\r\n\r\n      gid += 1;\r\n    }\r\n  }\r\n\r\n  // playerB.decks[playerB.deckId].cards.\r\n  shuffleArray(playerADeck)\r\n  shuffleArray(playerBDeck)\r\n\r\n  playerAHand.push(...playerADeck.slice(-5));\r\n  playerBHand.push(...playerBDeck.slice(-5));\r\n\r\n  playerADeck = playerADeck.slice(0, -5);\r\n  playerBDeck = playerBDeck.slice(0, -5);\r\n\r\n  const game: Game = {\r\n    gameId: lobby.lobbyId,\r\n    currentPlayer: lobby.host.username,\r\n    playerA: {\r\n      username: lobby.host.username,\r\n      hero: {\r\n        id: 2, // should be deck.klass\r\n        health: 600,\r\n        maxHealth: 600,\r\n        mana: 100,\r\n        maxMana: 100,\r\n        damage: 30,\r\n        passive: 25\r\n      },\r\n      fields: {\r\n        magic: undefined,\r\n        minionA: undefined,\r\n        minionB: undefined,\r\n        minionC: undefined,\r\n        minionD: undefined,\r\n        trap: undefined,\r\n      },\r\n      deck: playerADeck,\r\n      hand: playerAHand,\r\n      graveyard: []\r\n    },\r\n    playerB: {\r\n      username: lobby.challengee.username,\r\n      hero: {\r\n        id: 4, // should be deck.klass\r\n        health: 600,\r\n        maxHealth: 600,\r\n        mana: 100,\r\n        maxMana: 100,\r\n        damage: 20,\r\n        passive: 25\r\n      },\r\n      fields: {\r\n        magic: undefined,\r\n        minionA: undefined,\r\n        minionB: undefined,\r\n        minionC: undefined,\r\n        minionD: undefined,\r\n        trap: undefined,\r\n      },\r\n      deck: playerBDeck,\r\n      hand: playerBHand,\r\n      graveyard: []\r\n    },\r\n  };\r\n\r\n  const isInserted = await gameService.insert(game);\r\n\r\n  if (!isInserted) { return; }\r\n\r\n  const gameSender = {\r\n    gameId: lobby.lobbyId,\r\n    currentPlayer: lobby.host.username,\r\n    player: {\r\n      username: lobby.host.username,\r\n      hero: {\r\n        id: 2, // should be deck.klass\r\n        health: 600,\r\n        maxHealth: 600,\r\n        mana: 100,\r\n        maxMana: 100,\r\n        damage: 30,\r\n        passive: 25\r\n      },\r\n      fields: {\r\n        magic: undefined,\r\n        minionA: undefined,\r\n        minionB: undefined,\r\n        minionC: undefined,\r\n        minionD: undefined,\r\n        trap: undefined\r\n      },\r\n      deck: playerADeck,\r\n      hand: playerAHand,\r\n      graveyard: []\r\n    },\r\n    opponent: {\r\n      username: lobby.challengee.username,\r\n      hero: {\r\n        id: 4, // should be deck.klass\r\n        health: 600,\r\n        maxHealth: 600,\r\n        mana: 100,\r\n        maxMana: 100,\r\n        damage: 20,\r\n        passive: 25\r\n      },\r\n      fields: {\r\n        magic: undefined,\r\n        minionA: undefined,\r\n        minionB: undefined,\r\n        minionC: undefined,\r\n        minionD: undefined,\r\n        trap: undefined\r\n      },\r\n      deck: playerBDeck.length,\r\n      hand: playerBHand.length,\r\n      graveyard: []\r\n    }\r\n  };\r\n\r\n  const gameReceiver = {\r\n    gameId: lobby.lobbyId,\r\n    currentPlayer: lobby.host.username,\r\n    player: {\r\n      username: lobby.challengee.username,\r\n      hero: {\r\n        id: 4, // should be deck.klass\r\n        health: 600,\r\n        maxHealth: 600,\r\n        mana: 100,\r\n        maxMana: 100,\r\n        damage: 20,\r\n        passive: 25\r\n      },\r\n      fields: {\r\n        magic: undefined,\r\n        minionA: undefined,\r\n        minionB: undefined,\r\n        minionC: undefined,\r\n        minionD: undefined,\r\n        trap: undefined,\r\n      },\r\n      deck: playerBDeck,\r\n      hand: playerBHand,\r\n      graveyard: []\r\n    },\r\n    opponent: {\r\n      username: lobby.host.username,\r\n      hero: {\r\n        id: 2, // should be deck.klass\r\n        health: 600,\r\n        maxHealth: 600,\r\n        mana: 100,\r\n        maxMana: 100,\r\n        damage: 30,\r\n        passive: 25\r\n      },\r\n      fields: {\r\n        magic: undefined,\r\n        minionA: undefined,\r\n        minionB: undefined,\r\n        minionC: undefined,\r\n        minionD: undefined,\r\n        trap: undefined,\r\n      },\r\n      deck: playerADeck.length,\r\n      hand: playerAHand.length,\r\n      graveyard: []\r\n    }\r\n  };\r\n\r\n  socketService.emit().startGame({game: gameSender});\r\n\r\n  const {username} = lobby.challengee;\r\n  const challengee = await playerService.find({username});\r\n\r\n  if (!challengee || !challengee.socketId) { return; }\r\n\r\n  socketService.emit(challengee.socketId).startGame({game: gameReceiver});\r\n};\r\n\r\nexport default startGame;\r\n","import type {SocketRequest} from \"models\";\r\n\r\nconst withdrawToken: SocketRequest<any> = async (services, params) => {\r\n  console.log(\"withdrawing...\");\r\n  const {blockchainService} = services;\r\n\r\n  const transaction = await blockchainService.transact(\"withdraw\", params);\r\n\r\n  if (!transaction) { return; }\r\n};\r\n\r\nexport default withdrawToken;\r\n","import {PlayerStatus} from \"@som/shared/enums\";\r\nimport type {AttackCardReq} from \"@som/shared/interfaces/requests\";\r\nimport type {SocketRequest} from \"models\";\r\n\r\nconst attackCard: SocketRequest<AttackCardReq> = async (services, params) => {\r\n  const {gameService, playerService, socketService} = services;\r\n  const {attacked, attacker} = params;\r\n  const {socketId} = socketService;\r\n  const player = await playerService.find({socketId});\r\n\r\n  if (!player) { return; }\r\n\r\n  const {gameId} = player;\r\n  const game = await gameService.find({gameId});\r\n\r\n  if (!game) { return; }\r\n\r\n  let opponentUsername: string;\r\n  const endGame = async (winner: \"A\" | \"B\"): Promise<void> => {\r\n    const {playerA, playerB} = game;\r\n\r\n    const [A, B] = await Promise.all([\r\n      playerService.findAndUpdate({\r\n        username: playerA.username\r\n      }, {\r\n        $set: {\r\n          gameId: 0,\r\n          status: PlayerStatus.ONLINE\r\n        }\r\n      }, {\r\n        returnDocument: \"after\"\r\n      }),\r\n      playerService.findAndUpdate({\r\n        username: playerB.username\r\n      }, {\r\n        $set: {\r\n          gameId: 0,\r\n          status: PlayerStatus.ONLINE\r\n        }\r\n      }, {\r\n        returnDocument: \"after\"\r\n      })\r\n    ]);\r\n\r\n    if (!A || !B) { return; }\r\n\r\n    const isDeletedGame = await gameService.delete({gameId});\r\n\r\n    if (!isDeletedGame) { return; }\r\n\r\n    if (winner === \"A\") {\r\n      socketService.emit(A.socketId).notification({msg: \"You won!\"});\r\n      socketService.emit(B.socketId).notification({msg: \"You lost...\"});\r\n    } else if (winner === \"B\") {\r\n      socketService.emit(B.socketId).notification({msg: \"You won!\"});\r\n      socketService.emit(A.socketId).notification({msg: \"You lost...\"});\r\n    }\r\n\r\n    socketService.emit(A.socketId).endGame();\r\n    socketService.emit(B.socketId).endGame();\r\n  };\r\n\r\n  // ;w;\r\n  if (player.username === game.playerA.username) {\r\n    opponentUsername = game.playerB.username;\r\n\r\n    const {playerA, playerB} = game;\r\n\r\n    if (attacker === \"hero\") { // attacking with hero\r\n\r\n      if (attacked === \"hero\") { // attacking hero with hero\r\n        playerA.hero.health -= playerB.hero.damage;\r\n        playerB.hero.health -= playerA.hero.damage;\r\n\r\n        if (playerB.hero.health <= 0) {\r\n          await endGame(\"A\");\r\n          return;\r\n        } else if (playerA.hero.health <= 0) {\r\n          await endGame(\"B\");\r\n          return;\r\n        }\r\n      } else { // attacking card with hero\r\n        const attackedCard = playerB.fields[attacked];\r\n\r\n        if (\r\n          !attackedCard ||\r\n          !attackedCard.health ||\r\n          !attackedCard.damage\r\n        ) { return; }\r\n\r\n        playerA.hero.health -= attackedCard.damage;\r\n        attackedCard.health -= playerA.hero.damage;\r\n\r\n        if (playerA.hero.health <= 0) {\r\n          await endGame(\"B\");\r\n          return;\r\n        }\r\n\r\n        if (attackedCard.health <= 0) {\r\n          playerB.graveyard.push(attackedCard);\r\n          playerB.fields[attacked] = undefined;\r\n        }\r\n      }\r\n\r\n    } else { // attacking with card\r\n\r\n      if (attacked === \"hero\") { // attacking hero with card\r\n        const attackerCard = playerA.fields[attacker];\r\n\r\n        if (!attackerCard || !attackerCard.health || !attackerCard.damage) { return; }\r\n\r\n        attackerCard.health -= playerB.hero.damage;\r\n        playerB.hero.health -= attackerCard.damage;\r\n\r\n        if (playerB.hero.health <= 0) {\r\n          await endGame(\"A\");\r\n          return;\r\n        }\r\n\r\n        if (attackerCard.health <= 0) {\r\n          playerA.graveyard.push(attackerCard);\r\n          playerA.fields[attacker] = undefined;\r\n        }\r\n      } else { // attacking card with card\r\n        const attackerCard = playerA.fields[attacker];\r\n        const attackedCard = playerB.fields[attacked];\r\n\r\n        if (\r\n          !attackedCard ||\r\n          !attackedCard.health ||\r\n          !attackedCard.damage ||\r\n          !attackerCard ||\r\n          !attackerCard.health ||\r\n          !attackerCard.damage\r\n        ) { return; }\r\n\r\n        attackerCard.health -= attackedCard.damage;\r\n        attackedCard.health -= attackerCard.damage;\r\n\r\n        if (attackerCard.health <= 0) {\r\n          playerA.graveyard.push(attackerCard);\r\n          playerA.fields[attacker] = undefined;\r\n        }\r\n        if (attackedCard.health <= 0) {\r\n          playerB.graveyard.push(attackedCard);\r\n          playerB.fields[attacked] = undefined;\r\n        }\r\n      }\r\n    }\r\n\r\n    await gameService.update({gameId}, {$set: {playerA, playerB}});\r\n  } else {\r\n    opponentUsername = game.playerA.username;\r\n\r\n    const {playerA, playerB} = game;\r\n\r\n    if (attacker === \"hero\") { // attacking with hero\r\n\r\n      if (attacked === \"hero\") { // attacking hero with hero\r\n        playerB.hero.health -= playerA.hero.damage;\r\n        playerA.hero.health -= playerB.hero.damage;\r\n\r\n        if (playerB.hero.health <= 0) {\r\n          await endGame(\"A\");\r\n          return;\r\n        } else if (playerA.hero.health <= 0) {\r\n          await endGame(\"B\");\r\n          return;\r\n        }\r\n      } else { // attacking card with hero\r\n        const attackedCard = playerA.fields[attacked];\r\n\r\n        if (\r\n          !attackedCard ||\r\n          !attackedCard.health ||\r\n          !attackedCard.damage\r\n        ) { return; }\r\n\r\n        playerB.hero.health -= attackedCard.damage;\r\n        attackedCard.health -= playerB.hero.damage;\r\n\r\n        if (playerB.hero.health <= 0) {\r\n          await endGame(\"A\");\r\n          return;\r\n        }\r\n\r\n        if (attackedCard.health <= 0) {\r\n          playerA.graveyard.push(attackedCard);\r\n          playerA.fields[attacked] = undefined;\r\n        }\r\n      }\r\n\r\n    } else { // attacking with card\r\n\r\n      if (attacked === \"hero\") { // attacking hero with card\r\n        const attackerCard = playerB.fields[attacker];\r\n\r\n        if (!attackerCard || !attackerCard.health || !attackerCard.damage) { return; }\r\n\r\n        attackerCard.health -= playerA.hero.damage;\r\n        playerA.hero.health -= attackerCard.damage;\r\n\r\n        if (playerA.hero.health <= 0) {\r\n          await endGame(\"B\");\r\n          return;\r\n        }\r\n\r\n        if (attackerCard.health <= 0) {\r\n          playerB.graveyard.push(attackerCard);\r\n          playerB.fields[attacker] = undefined;\r\n        }\r\n      } else { // attacking card with card\r\n        const attackerCard = playerB.fields[attacker];\r\n        const attackedCard = playerA.fields[attacked];\r\n\r\n        if (\r\n          !attackedCard ||\r\n          !attackedCard.health ||\r\n          !attackedCard.damage ||\r\n          !attackerCard ||\r\n          !attackerCard.health ||\r\n          !attackerCard.damage\r\n        ) { return; }\r\n\r\n        attackerCard.health -= attackedCard.damage;\r\n        attackedCard.health -= attackerCard.damage;\r\n\r\n        if (attackerCard.health <= 0) {\r\n          playerB.graveyard.push(attackerCard);\r\n          playerB.fields[attacker] = undefined;\r\n        }\r\n        if (attackedCard.health <= 0) {\r\n          playerA.graveyard.push(attackedCard);\r\n          playerA.fields[attacked] = undefined;\r\n        }\r\n      }\r\n    }\r\n\r\n    await gameService.update({gameId}, {$set: {playerA, playerB}});\r\n  }\r\n\r\n  socketService.emit().attackCardSender(params);\r\n\r\n  const opponent = await playerService.find({\r\n    username: opponentUsername\r\n  });\r\n\r\n  if (!opponent || !opponent.socketId) { return; }\r\n\r\n  socketService.emit(opponent.socketId).attackCardReceiver(params);\r\n};\r\n\r\nexport default attackCard;\r\n","import {PlayerStatus} from \"@som/shared/enums\";\r\nimport type {SocketRequest} from \"models\";\r\n\r\nconst endTurn: SocketRequest = async (services) => {\r\n  const {gameService, playerService, socketService} = services;\r\n  const {socketId} = socketService;\r\n  const player = await playerService.find({socketId});\r\n\r\n  if (!player) { return; }\r\n\r\n  const {gameId} = player;\r\n  const game = await gameService.find({gameId});\r\n\r\n  if (!game) { return; }\r\n\r\n  let opponentUsername: string;\r\n\r\n  if (player.username === game.playerA.username) {\r\n    const {playerA, playerB} = game;\r\n\r\n    if (playerA.username !== game.currentPlayer) { return; }\r\n\r\n    const {username, hand, deck, hero} = playerB;\r\n    const card = deck.pop();\r\n\r\n    opponentUsername = username;\r\n\r\n    if (!card) {\r\n      const [A, B] = await Promise.all([\r\n        playerService.findAndUpdate({\r\n          username: playerA.username\r\n        }, {\r\n          $set: {\r\n            gameId: 0,\r\n            status: PlayerStatus.ONLINE\r\n          }\r\n        }, {\r\n          returnDocument: \"after\"\r\n        }),\r\n        playerService.findAndUpdate({\r\n          username: playerB.username\r\n        }, {\r\n          $set: {\r\n            gameId: 0,\r\n            status: PlayerStatus.ONLINE\r\n          }\r\n        }, {\r\n          returnDocument: \"after\"\r\n        })\r\n      ]);\r\n\r\n      if (!A || !B) { return; }\r\n\r\n      socketService.emit(A.socketId).notification({msg: \"You won!\"});\r\n      socketService.emit(A.socketId).endGame();\r\n\r\n      socketService.emit(B.socketId).notification({msg: \"You lost...\"});\r\n      socketService.emit(B.socketId).endGame();\r\n\r\n      const isDeletedGame = await gameService.delete({gameId});\r\n\r\n      if (!isDeletedGame) { return; }\r\n\r\n      return;\r\n    }\r\n\r\n    hand.push(card);\r\n    hero.mana = 100;\r\n\r\n    const currentPlayer = username;\r\n\r\n    await gameService.update({gameId}, {$set: {currentPlayer, playerB}});\r\n  } else {\r\n    const {playerA, playerB} = game;\r\n\r\n    if (playerB.username !== game.currentPlayer) { return; }\r\n\r\n    const {username, hand, deck, hero} = playerA;\r\n\r\n    opponentUsername = username;\r\n\r\n    const card = deck.pop();\r\n\r\n    if (!card) {\r\n      const [A, B] = await Promise.all([\r\n        playerService.findAndUpdate({\r\n          username: playerA.username\r\n        }, {\r\n          $set: {\r\n            gameId: 0,\r\n            status: PlayerStatus.ONLINE\r\n          }\r\n        }, {\r\n          returnDocument: \"after\"\r\n        }),\r\n        playerService.findAndUpdate({\r\n          username: playerB.username\r\n        }, {\r\n          $set: {\r\n            gameId: 0,\r\n            status: PlayerStatus.ONLINE\r\n          }\r\n        }, {\r\n          returnDocument: \"after\"\r\n        })\r\n      ]);\r\n\r\n      if (!A || !B) { return; }\r\n\r\n      socketService.emit(A.socketId).notification({msg: \"You lost...\"});\r\n      socketService.emit(A.socketId).endGame();\r\n\r\n      socketService.emit(B.socketId).notification({msg: \"You won!\"});\r\n      socketService.emit(B.socketId).endGame();\r\n\r\n      const isDeletedGame = await gameService.delete({gameId});\r\n\r\n      if (!isDeletedGame) { return; }\r\n\r\n      return;\r\n    }\r\n\r\n    hand.push(card);\r\n    hero.mana = 100;\r\n\r\n    const currentPlayer = username;\r\n\r\n    await gameService.update({gameId}, {$set: {currentPlayer, playerA}});\r\n  }\r\n\r\n  socketService.emit().endTurnPlayer();\r\n\r\n  const opponent = await playerService.find({\r\n    username: opponentUsername\r\n  });\r\n\r\n  if (!opponent || !opponent.socketId) { return; }\r\n\r\n  socketService.emit(opponent.socketId).endTurnOpponent();\r\n};\r\n\r\nexport default endTurn;\r\n","import {HoverCardReq} from \"@som/shared/interfaces/requests\";\r\nimport {SocketRequest} from \"models\";\r\n\r\nconst hoverCard: SocketRequest<HoverCardReq> = async (services, params) => {\r\n  const {gameService, playerService, socketService} = services;\r\n  const {socketId} = socketService;\r\n  const player = await playerService.find({socketId});\r\n\r\n  if (!player) { return; }\r\n\r\n  const {gameId} = player;\r\n  const game = await gameService.find({gameId});\r\n\r\n  if (!game) { return; }\r\n\r\n  let opponentName: string;\r\n\r\n  if (game.playerA.username === player.username) {\r\n    opponentName = game.playerB.username;\r\n  } else {\r\n    opponentName = game.playerA.username;\r\n  }\r\n\r\n  const opponent = await playerService.find({\r\n    username: opponentName\r\n  });\r\n\r\n  if (!opponent || !opponent.socketId) { return; }\r\n\r\n  socketService.emit(opponent.socketId).hoverCard(params);\r\n};\r\n\r\nexport default hoverCard;\r\n","import type {PlayCardReq} from \"@som/shared/interfaces/requests\";\nimport type {SocketRequest} from \"models\";\nimport type {GamePlayerCard} from \"../../services/GameService/GameService.models\"\n\nconst playCard: SocketRequest<PlayCardReq> = async (services, params) => {\n  const {gameService, playerService, socketService} = services;\n  const {field, gid, id} = params;\n  const {socketId} = socketService;\n  const player = await playerService.find({socketId});\n\n  if (!player) { return; }\n\n  const {gameId} = player;\n  const game = await gameService.find({gameId});\n\n  if (!game) { return; }\n\n  let opponentUsername = \"\";\n  let card: GamePlayerCard;\n\n  if (player.username === game.playerA.username) {\n    opponentUsername = game.playerB.username;\n\n    const {playerA} = game;\n    const {hand, fields, hero} = playerA;\n    const handCard = hand.find((card) => card.gid === gid);\n\n    if (!handCard) { return; }\n    if (fields[field]) { return; }\n    if (!handCard.manaCost || handCard.manaCost > hero.mana) { return; }\n\n    hero.mana -= handCard.manaCost;\n    fields[field] = handCard;\n    hand.splice(hand.indexOf(handCard), 1);\n    card = handCard;\n\n    await gameService.update({gameId}, {$set: {playerA}});\n  } else {\n    opponentUsername = game.playerA.username;\n\n    const {playerB} = game;\n    const {hand, fields, hero} = playerB;\n    const handCard = hand.find((card) => card.gid === gid);\n\n    if (!handCard) { return; }\n    if (fields[field]) { return; }\n    if (!handCard.manaCost || handCard.manaCost > hero.mana) { return; }\n\n    hero.mana -= handCard.manaCost;\n    fields[field] = handCard;\n    hand.splice(hand.indexOf(handCard), 1);\n    card = handCard;\n\n    await gameService.update({gameId}, {$set: {playerB}});\n  }\n\n  socketService.emit().playCardSender({field, gid});\n\n  const opponent = await playerService.find({\n    username: opponentUsername\n  });\n\n  if (!opponent || !opponent.socketId) { return; }\n\n  socketService.emit(opponent.socketId).playCardReceiver({field, card});\n};\n\nexport default playCard;\n","import {SocketRequest} from \"models\";\r\n\r\nconst unhoverCard: SocketRequest = async (services) => {\r\n  const {gameService, playerService, socketService} = services;\r\n  const {socketId} = socketService;\r\n  const player = await playerService.find({socketId});\r\n\r\n  if (!player) { return; }\r\n\r\n  const {gameId} = player;\r\n  const game = await gameService.find({gameId});\r\n\r\n  if (!game) { return; }\r\n\r\n  let opponentName: string;\r\n\r\n  if (game.playerA.username === player.username) {\r\n    opponentName = game.playerB.username;\r\n  } else {\r\n    opponentName = game.playerA.username;\r\n  }\r\n\r\n  const opponent = await playerService.find({\r\n    username: opponentName\r\n  });\r\n\r\n  if (!opponent || !opponent.socketId) { return; }\r\n\r\n  socketService.emit(opponent.socketId).unhoverCard();\r\n};\r\n\r\nexport default unhoverCard;\r\n","import type {AcceptFriendReq} from \"@som/shared/interfaces/requests\";\r\nimport type {SocketRequest} from \"models\";\r\n\r\nconst acceptFriend: SocketRequest<AcceptFriendReq> = async (services, params) => {\r\n  const {chatService, playerService, socketService} = services;\r\n  const {username} = params;\r\n  const {socketId} = socketService;\r\n  const sender = await playerService.findAndUpdate({socketId}, {\r\n    $pull: {\r\n      \"social.requests\": username\r\n    },\r\n    $push: {\r\n      \"social.friends\": username\r\n    }\r\n  }, {\r\n    returnDocument: \"after\"\r\n  });\r\n\r\n  if (!sender) { return; }\r\n\r\n  const receiver = await playerService.findAndUpdate({username}, {\r\n    $push: {\r\n      \"social.friends\": sender.username\r\n    }\r\n  }, {\r\n    returnDocument: \"after\"\r\n  });\r\n\r\n  if (!receiver) { return; }\r\n\r\n  const isInsertedChat = await chatService.insert({\r\n    players: [sender.username, receiver.username],\r\n    messages: []\r\n  });\r\n\r\n  if (!isInsertedChat) { return; }\r\n\r\n  socketService.emit().acceptFriendSender({\r\n    username: receiver.username,\r\n    avatarId: receiver.avatarId,\r\n    status: receiver.status\r\n  });\r\n\r\n  socketService.emit(receiver.socketId).acceptFriendReceiver({\r\n    username: sender.username,\r\n    avatarId: sender.avatarId,\r\n    status: sender.status\r\n  });\r\n};\r\n\r\nexport default acceptFriend;\r\n","import type {AddFriendReq} from \"@som/shared/interfaces/requests\";\r\nimport type {SocketRequest} from \"models\";\r\n\r\nconst addFriend: SocketRequest<AddFriendReq> = async (services, params) => {\r\n  const {playerService, socketService} = services;\r\n  const {username} = params;\r\n  const {socketId} = socketService;\r\n  const [sender, receiver] = await Promise.all([\r\n    playerService.find({socketId}),\r\n    playerService.find({username})\r\n  ]);\r\n\r\n  if (!sender || !receiver) { return; }\r\n\r\n  if (sender.username === username) {\r\n    socketService.emit().notification({msg: \"You can't add yourself as a friend.\"});\r\n    return;\r\n  }\r\n  if (receiver.social.blocked.includes(sender.username)) {\r\n    socketService.emit().notification({msg: \"This player has blocked you.\"});\r\n    return;\r\n  }\r\n  if (sender.social.blocked.includes(username)) {\r\n    socketService.emit().notification({msg: \"You have blocked this player.\"});\r\n    return;\r\n  }\r\n  if (receiver.social.requests.includes(sender.username)) {\r\n    socketService.emit().notification({msg: \"You have already sent the request to this player.\"});\r\n    return;\r\n  }\r\n  if (sender.social.requests.includes(username)) {\r\n    socketService.emit().notification({msg: \"This player has already sent you the request.\"});\r\n    return;\r\n  }\r\n  if (sender.social.friends.includes(username)) {\r\n    socketService.emit().notification({msg: \"This player is already your friend.\"});\r\n    return;\r\n  }\r\n\r\n  const isUpdated = await playerService.update({username}, {\r\n    $push: {\r\n      \"social.requests\": sender.username\r\n    }\r\n  });\r\n\r\n  if (!isUpdated) { return; }\r\n\r\n  socketService.emit().notification({msg: \"Friend request sent.\"});\r\n  socketService.emit(receiver.socketId).addFriend({username: sender.username});\r\n};\r\n\r\nexport default addFriend;\r\n","import type {BlockReq} from \"@som/shared/interfaces/requests\";\r\nimport type {SocketRequest} from \"models\";\r\n\r\nconst block: SocketRequest<BlockReq> = async (services, params) => {\r\n  const {chatService, playerService, socketService} = services;\r\n  const {username} = params;\r\n  const {socketId} = socketService;\r\n  const [sender, receiver] = await Promise.all([\r\n    playerService.find({socketId}),\r\n    playerService.find({username})\r\n  ]);\r\n\r\n  if (!sender || !receiver) { return; }\r\n\r\n  const [isUpdatedSender, isUpdatedReceiver, isDeletedChat] = await Promise.all([\r\n    playerService.update({socketId}, {\r\n      $pull: {\r\n        \"social.friends\": username\r\n      },\r\n      $push: {\r\n        \"social.blocked\": username\r\n      }\r\n    }),\r\n    playerService.update({username}, {\r\n      $pull: {\r\n        \"social.friends\": sender.username\r\n      }\r\n    }),\r\n    chatService.delete({\r\n      players: {\r\n        $all: [username, sender.username]\r\n      }\r\n    })\r\n  ]);\r\n\r\n  if (!isUpdatedSender || !isUpdatedReceiver || !isDeletedChat) { return; }\r\n\r\n  socketService.emit().blockFriendSender({username});\r\n\r\n  if (!receiver.socketId) { return; }\r\n\r\n  socketService.emit(receiver.socketId).blockFriendReceiver({\r\n    username: sender.username\r\n  });\r\n};\r\n\r\nexport default block;\r\n","import type {DeclineFriendReq} from \"@som/shared/interfaces/requests\";\r\nimport type {SocketRequest} from \"models\";\r\n\r\nconst declineFriend: SocketRequest<DeclineFriendReq> = async (services, params) => {\r\n  const {playerService, socketService} = services;\r\n  const {username} = params;\r\n  const {socketId} = socketService;\r\n  const isUpdated = await playerService.update({socketId}, {\r\n    $pull: {\r\n      \"social.requests\": username\r\n    }\r\n  });\r\n\r\n  if (!isUpdated) { return; }\r\n\r\n  socketService.emit().declineFriend({username});\r\n};\r\n\r\nexport default declineFriend;\r\n","import type {SetAvatarReq} from \"@som/shared/interfaces/requests\";\r\nimport type {SocketRequest} from \"models\";\r\n\r\nconst setAvatar: SocketRequest<SetAvatarReq> = async (services, params) => {\r\n  const {playerService, socketService} = services;\r\n  const {avatarId} = params;\r\n  const {socketId} = socketService;\r\n\r\n  const player = await playerService.findAndUpdate({socketId}, {\r\n    $set: {avatarId}\r\n  }, {\r\n    returnDocument: \"after\"\r\n  });\r\n\r\n  if (!player) { return; }\r\n\r\n  const {username, social: {friends}} = player;\r\n\r\n  socketService.emit().setAvatarSender({avatarId});\r\n\r\n  const socketIds = await socketService.getSocketIds(friends);\r\n\r\n  if (!socketIds.length) { return; }\r\n\r\n  socketService.emit(socketIds).setAvatarReceiver({username, avatarId});\r\n};\r\n\r\nexport default setAvatar;\r\n","import type {SocketRequest} from \"models\";\r\n\r\nconst signout: SocketRequest = async (services) => {};\r\n\r\nexport default signout;\r\n","import type {UnblockReq} from \"@som/shared/interfaces/requests\";\r\nimport type {SocketRequest} from \"models\";\r\n\r\nconst unblock: SocketRequest<UnblockReq> = async (services, params) => {\r\n  const {playerService, socketService} = services;\r\n  const {username} = params;\r\n  const {socketId} = socketService;\r\n  const isUpdated = playerService.update({socketId}, {\r\n    $pull: {\r\n      \"social.blocked\": username\r\n    }\r\n  });\r\n\r\n  if (!isUpdated) { return; }\r\n\r\n  socketService.emit().unblockFriend({username} as any); // ;w;\r\n};\r\n\r\nexport default unblock;\r\n","import type {UnfriendReq} from \"@som/shared/interfaces/requests\";\r\nimport type {SocketRequest} from \"models\";\r\n\r\nconst unfriend: SocketRequest<UnfriendReq> = async (services, params) => {\r\n  const {chatService, playerService, socketService} = services;\r\n  const {username} = params;\r\n  const {socketId} = socketService;\r\n  const sender = await playerService.findAndUpdate({socketId}, {\r\n    $pull: {\r\n      \"social.friends\": username\r\n    }\r\n  }, {\r\n    returnDocument: \"after\"\r\n  });\r\n\r\n  if (!sender) { return; }\r\n\r\n  const receiver = await playerService.findAndUpdate({username}, {\r\n    $pull: {\r\n      \"social.friends\": sender.username\r\n    }\r\n  }, {\r\n    returnDocument: \"after\"\r\n  });\r\n\r\n  if (!receiver) { return; }\r\n\r\n  const isDeletedChat = await chatService.delete({\r\n    players: {\r\n      $all: [username, sender.username]\r\n    }\r\n  });\r\n\r\n  if (!isDeletedChat) { return; }\r\n\r\n  socketService.emit().unfriendSender({username});\r\n  socketService.emit(receiver.socketId).unfriendReceiver({\r\n    username: sender.username\r\n  });\r\n};\r\n\r\nexport default unfriend;\r\n","// Global\r\nimport sendChatMsg from \"./sendChatMsg\";\r\nimport updateFriend from \"./updateFriend\";\r\n// Auth\r\nimport disconnect from \"./auth/disconnect\";\r\nimport getPrivateKeyHash from \"./auth/getPrivateKeyHash\";\r\nimport signin from \"./auth/signin\";\r\nimport signup from \"./auth/signup\";\r\n// Client\r\nimport destroyLobby from \"./client/destroyLobby\";\r\nimport joinLobby from \"./client/joinLobby\";\r\nimport leaveLobby from \"./client/leaveLobby\";\r\nimport makeLobby from \"./client/makeLobby\";\r\nimport saveDeck from \"./client/saveDeck\";\r\nimport selectDeck from \"./client/selectDeck\";\r\nimport sendToken from \"./client/sendToken\";\r\nimport setDeckKlass from \"./client/setDeckKlass\";\r\nimport setDeckName from \"./client/setDeckName\";\r\nimport startGame from \"./client/startGame\";\r\nimport withdrawToken from \"./client/withdrawToken\";\r\n// Game\r\nimport attackCard from \"./game/attackCard\";\r\nimport endTurn from \"./game/endTurn\";\r\nimport hoverCard from \"./game/hoverCard\";\r\nimport playCard from \"./game/playCard\";\r\nimport unhoverCard from \"./game/unhoverCard\";\r\n// Sidenav\r\nimport acceptFriend from \"./sidenav/acceptFriend\";\r\nimport addFriend from \"./sidenav/addFriend\";\r\nimport block from \"./sidenav/block\";\r\nimport declineFriend from \"./sidenav/declineFriend\";\r\nimport setAvatar from \"./sidenav/setAvatar\";\r\nimport signout from \"./sidenav/signout\";\r\nimport unblock from \"./sidenav/unblock\";\r\nimport unfriend from \"./sidenav/unfriend\";\r\n\r\nexport {\r\n  // Global\r\n  sendChatMsg,\r\n  updateFriend,\r\n  // Auth\r\n  disconnect,\r\n  getPrivateKeyHash,\r\n  signin,\r\n  signup,\r\n  // Client\r\n  destroyLobby,\r\n  joinLobby,\r\n  leaveLobby,\r\n  makeLobby,\r\n  saveDeck,\r\n  selectDeck,\r\n  sendToken,\r\n  setDeckKlass,\r\n  setDeckName,\r\n  startGame,\r\n  withdrawToken,\r\n  // Game\r\n  attackCard,\r\n  endTurn,\r\n  hoverCard,\r\n  playCard,\r\n  unhoverCard,\r\n  // Sidenav\r\n  acceptFriend,\r\n  addFriend,\r\n  block,\r\n  declineFriend,\r\n  setAvatar,\r\n  signout,\r\n  unblock,\r\n  unfriend\r\n};\r\n","import type {Apis} from \"../models\";\r\n\r\nclass Service {\r\n  protected readonly _apis: Apis;\r\n\r\n  constructor (apis: Apis) { this._apis = apis; }\r\n\r\n  protected get _socket () { return this._apis.socket; }\r\n\r\n  protected _handleError (error: unknown): void {\r\n    console.error(error);\r\n    this._apis.socket.emit(\"notification\", {msg: JSON.stringify(error)});\r\n  }\r\n}\r\n\r\nexport default Service;\r\n","import settings from \"settings\";\nimport Service from \"../Service\";\n\nimport type {\n  GetTableRowsResult,\n  PushTransactionArgs,\n  ReadOnlyTransactResult,\n} from \"eosjs/dist/eosjs-rpc-interfaces\";\n\nimport type {TransactResult} from \"eosjs/dist/eosjs-api-interfaces\";\n// import type {Game, Lobby, Player} from \"models\"\n\nclass BlockchainService extends Service {\n  public async findPlayer (username: string): Promise<any | undefined> {\n    const {contractAccount} = settings.eos;\n    let table!: GetTableRowsResult;\n\n    try {\n      table = await this._apis.eos.rpc.get_table_rows({\n        code: contractAccount,\n        scope: contractAccount,\n        table: \"players\",\n        lower_bound: username,\n        upper_bound: username,\n        limit: 1\n      });\n    } catch (error) {\n      this._handleError(error);\n    }\n\n    return table.rows[0];\n  }\n\n  // public async findLobby (lobby_id: number): Promise<Lobby | undefined> {\n  //   const {contractAccount} = settings.eos;\n  //   let table!: GetTableRowsResult;\n\n  //   try {\n  //     table = await this._apis.eos.rpc.get_table_rows({\n  //       code: contractAccount,\n  //       scope: contractAccount,\n  //       table: \"lobbies\",\n  //       lower_bound: lobby_id,\n  //       upper_bound: lobby_id\n  //     });\n  //   } catch (error) {\n  //     this._handleError(error);\n  //   }\n\n  //   return table.rows[0];\n  // }\n\n  // public async findGame (game_id: number): Promise<Game | undefined> {\n  //   const {contractAccount} = settings.eos;\n  //   let table!: GetTableRowsResult;\n\n  //   try {\n  //     table = await this._apis.eos.rpc.get_table_rows({\n  //       code: contractAccount,\n  //       scope: contractAccount,\n  //       table: \"games\",\n  //       lower_bound: game_id,\n  //       upper_bound: game_id\n  //     });\n  //   } catch (error) {\n  //     this._handleError(error);\n  //   }\n\n  //   return table.rows[0];\n  // }\n\n  public async transact (\n    action: string,\n    data: object\n  ): Promise<TransactResult | ReadOnlyTransactResult | PushTransactionArgs> {\n    const {contractAccount} = settings.eos;\n    let transaction!: TransactResult | ReadOnlyTransactResult | PushTransactionArgs;\n\n    try {\n      transaction = await this._apis.eos.transact({\n        actions: [{\n          account: contractAccount,\n          name: action,\n          authorization: [{\n            actor: contractAccount,\n            permission: \"active\"\n          }],\n          data\n        }]\n      }, {\n        blocksBehind: 3,\n        expireSeconds: 30\n      });\n    } catch (error) {\n      this._handleError(error);\n    }\n\n    return transaction;\n  }\n}\n\nexport default BlockchainService;\n","import Service from \"./Service.js\";\r\n\r\nimport type {\r\n  Collection,\r\n  DeleteResult,\r\n  Filter,\r\n  FindOneAndUpdateOptions,\r\n  InsertOneResult,\r\n  ModifyResult,\r\n  OptionalId,\r\n  OptionalUnlessRequiredId,\r\n  UpdateFilter,\r\n  UpdateResult,\r\n  WithId\r\n} from \"mongodb\";\r\n\r\nimport type {Apis} from \"../models\";\r\n\r\nclass MongoService<T> extends Service {\r\n  protected readonly _collectionName: string;\r\n\r\n  constructor (apis: Apis, collectionName: string) {\r\n    super(apis);\r\n    this._collectionName = collectionName;\r\n  }\r\n\r\n  protected get _collection (): Collection<T> {\r\n    return this._apis.mongo.collection(this._collectionName);\r\n  }\r\n\r\n  public async find (query: Filter<T>): Promise<WithId<T> | undefined> {\r\n    let document!: WithId<T> | null;\r\n\r\n    try {\r\n      document = await this._collection.findOne(query);\r\n    } catch (error) {\r\n      this._handleError(error);\r\n    }\r\n\r\n    return document ? document : undefined;\r\n  }\r\n\r\n  public async insert (doc: OptionalUnlessRequiredId<T>): Promise<boolean> {\r\n    let inserted!: InsertOneResult<T>;\r\n\r\n    try {\r\n      inserted = await this._collection.insertOne(doc);\r\n    } catch (error) {\r\n      this._handleError(error);\r\n    }\r\n\r\n    return inserted.acknowledged;\r\n  }\r\n\r\n  public async update (filter: Filter<T>, update: UpdateFilter<T> | Partial<T>): Promise<boolean> {\r\n    let updated!: UpdateResult;\r\n\r\n    try {\r\n      updated = await this._collection.updateOne(filter, update);\r\n    } catch (error) {\r\n      this._handleError(error);\r\n    }\r\n\r\n    return updated.acknowledged;\r\n  }\r\n\r\n  public async delete (filter: Filter<T>): Promise<boolean> {\r\n    let deleteResult!: DeleteResult;\r\n\r\n    try {\r\n      deleteResult = await this._collection.deleteOne(filter);\r\n    } catch (error) {\r\n      this._handleError(error);\r\n    }\r\n\r\n    return deleteResult.acknowledged;\r\n  }\r\n\r\n  public async findAndUpdate (\r\n    filter: Filter<T>,\r\n    update: UpdateFilter<T> | Partial<T>,\r\n    options: FindOneAndUpdateOptions\r\n  ): Promise<WithId<T> | undefined> {\r\n    let result!: ModifyResult<T>;\r\n\r\n    try {\r\n      result = await this._collection.findOneAndUpdate(filter, update, options);\r\n    } catch (error) {\r\n      this._handleError(error);\r\n    }\r\n\r\n    return result.value ? result.value : undefined;\r\n  }\r\n}\r\n\r\nexport default MongoService;\r\n","import MongoService from \"../MongoService.js\";\r\nimport type {Collection, DeleteResult, Filter, InsertOneResult, UpdateResult} from \"mongodb\";\r\nimport type {Message, ChatPlayers, Chat} from \"./ChatService.models\";\r\n\r\nclass ChatService extends MongoService<Chat> {\r\n  public async pushChatMsg(players: [string, string], msg: Message): Promise<boolean> {\r\n    const {sender, text, date} = msg;\r\n    let updated!: UpdateResult;\r\n\r\n    try {\r\n      updated = await this._apis.mongo.collection(\"chats\").updateOne({\r\n        players: {$all: players}\r\n      }, {\r\n        $push: {\r\n          messages: {sender, text, date}\r\n        }\r\n      });\r\n    } catch (error) {\r\n      this._handleError(error);\r\n    }\r\n\r\n    return updated.modifiedCount > 0 ? true : false;\r\n  }\r\n}\r\n\r\nexport default ChatService;\r\n","import MongoService from \"../MongoService.js\";\r\nimport type {Game} from \"./GameService.models\";\r\n\r\nclass GameService extends MongoService<Game> {}\r\n\r\nexport default GameService;\r\n","import MongoService from \"../MongoService.js\";\r\nimport type {Lobby} from \"./LobbyService.models\";\r\n\r\nclass LobbyService extends MongoService<Lobby> {}\r\n\r\nexport default LobbyService;\r\n","import MongoService from \"../MongoService.js\";\r\nimport type {Player} from \"./PlayerService.models\";\r\n\r\nclass PlayerService extends MongoService<Player> {}\r\n\r\nexport default PlayerService;\r\n","import {SocketEvent} from \"@som/shared/enums\";\r\nimport Service from \"../Service.js\";\r\n\r\nimport type {Player} from \"../PlayerService/PlayerService.models\";\r\nimport type {\r\n  GetPrivateKeyHashRes,\r\n  SigninRes,\r\n  UpdateFriendRes,\r\n  NotificationRes,\r\n  JoinLobbySenderRes,\r\n  JoinLobbyReceiverRes,\r\n  MakeLobbyRes,\r\n  SaveDeckRes,\r\n  SelectDeckRes,\r\n  SetDeckKlassRes,\r\n  SetDeckNameRes,\r\n  StartGameRes,\r\n  AttackCardSenderRes,\r\n  AttackCardReceiverRes,\r\n  PlayCardSenderRes,\r\n  PlayCardReceiverRes,\r\n  AcceptFriendReceiverRes,\r\n  AcceptFriendSenderRes,\r\n  AddFriendRes,\r\n  BlockSenderRes,\r\n  BlockReceiverRes,\r\n  DeclineFriendRes,\r\n  SetAvatarReceiverRes,\r\n  SetAvatarSenderRes,\r\n  UnblockRes,\r\n  UnfriendReceiverRes,\r\n  UnfriendSenderRes,\r\n  SendChatMsgReceiverRes,\r\n  SendChatMsgSenderRes,\r\n  HoverCardRes\r\n} from \"@som/shared/interfaces/responses\";\r\n\r\n\r\ninterface SocketEvents {\r\n  // ------------------------------ GLOBAL ------------------------------\r\n  notification (params: NotificationRes): void;\r\n  sendChatMsgReceiver (params: SendChatMsgReceiverRes): void;\r\n  sendChatMsgSender (params: SendChatMsgSenderRes): void;\r\n  updateFriend (params: UpdateFriendRes): void;\r\n  // ------------------------------ AUTH ------------------------------\r\n  getPrivateKeyHash (params: GetPrivateKeyHashRes): void;\r\n  signin (params: SigninRes): void;\r\n  // ------------------------------ CLIENT ------------------------------\r\n  destroyLobby (): void;\r\n  joinLobbyReceiver (params: JoinLobbyReceiverRes): void;\r\n  joinLobbySender (params: JoinLobbySenderRes): void;\r\n  leaveLobbyReceiver (): void;\r\n  leaveLobbySender (): void;\r\n  makeLobby (params: MakeLobbyRes): void;\r\n  saveDeck (params: SaveDeckRes): void;\r\n  selectDeck (params: SelectDeckRes): void;\r\n  setDeckKlass (params: SetDeckKlassRes): void;\r\n  setDeckName (params: SetDeckNameRes): void;\r\n  startGame (params: StartGameRes): void;\r\n  // ------------------------------ GAME ------------------------------\r\n  attackCardReceiver (params: AttackCardReceiverRes): void;\r\n  attackCardSender (params: AttackCardSenderRes): void;\r\n  endTurnOpponent (): void;\r\n  endTurnPlayer (): void;\r\n  hoverCard (params: HoverCardRes): void;\r\n  unhoverCard (): void;\r\n  playCardReceiver (params: PlayCardReceiverRes): void;\r\n  playCardSender (params: PlayCardSenderRes): void;\r\n  endGame (): void;\r\n  // ------------------------------ SIDENAV ------------------------------\r\n  acceptFriendReceiver (params: AcceptFriendReceiverRes): void;\r\n  acceptFriendSender (params: AcceptFriendSenderRes): void;\r\n  addFriend (params: AddFriendRes): void;\r\n  blockFriendReceiver (params: BlockReceiverRes): void;\r\n  blockFriendSender (params: BlockSenderRes): void;\r\n  declineFriend (params: DeclineFriendRes): void;\r\n  setAvatarReceiver (params: SetAvatarReceiverRes): void;\r\n  setAvatarSender (params: SetAvatarSenderRes): void;\r\n  unblockFriend (params: UnblockRes): void;\r\n  unfriendReceiver (params: UnfriendReceiverRes): void;\r\n  unfriendSender (params: UnfriendSenderRes): void;\r\n}\r\n\r\n\r\nclass SocketService extends Service {\r\n  public get socketId (): string { return this._apis.socket.id; }\r\n\r\n  public async getSocketIds(players: string[]): Promise<string[]> {\r\n    let socketIds!: Array<string>;\r\n\r\n    try {\r\n      socketIds = await this._apis.mongo.collection<Player>(\"players\")\r\n        .find({username: {$in: players}})\r\n        .project<Player>({_id: 0, socketId: 1})\r\n        .map(({socketId}) => socketId)\r\n        .toArray();\r\n    } catch (error) {\r\n      this._handleError(error);\r\n    }\r\n\r\n    return socketIds;\r\n  }\r\n\r\n  public emit (room?: string | Array<string>): SocketEvents {\r\n    const {socket, io} = this._apis;\r\n    let emitter: any;\r\n\r\n    if (room === undefined) {\r\n      emitter = socket;\r\n    } else {\r\n      emitter = io.to(room);\r\n    }\r\n\r\n    return {\r\n      // ------------------------------ GLOBAL ------------------------------\r\n      notification (params)         { emitter.emit(SocketEvent.NOTIFICATION, params);           },\r\n      sendChatMsgReceiver (params)  { emitter.emit(SocketEvent.SEND_CHAT_MSG_RECEIVER, params); },\r\n      sendChatMsgSender (params)    { emitter.emit(SocketEvent.SEND_CHAT_MSG_SENDER, params);   },\r\n      updateFriend (params)         { emitter.emit(SocketEvent.UPDATE_FRIEND, params);          },\r\n      // ------------------------------ AUTH ------------------------------\r\n      getPrivateKeyHash (params)    { emitter.emit(SocketEvent.GET_PRIVATE_KEY_HASH, params);   },\r\n      signin (params)               { emitter.emit(SocketEvent.SIGNIN, params);                 },\r\n      // ------------------------------ CLIENT ------------------------------\r\n      destroyLobby ()               { emitter.emit(SocketEvent.DESTROY_LOBBY);                  },\r\n      joinLobbyReceiver (params)    { emitter.emit(SocketEvent.JOIN_LOBBY_RECEIVER, params);    },\r\n      joinLobbySender (params)      { emitter.emit(SocketEvent.JOIN_LOBBY_SENDER, params);      },\r\n      leaveLobbyReceiver ()         { emitter.emit(SocketEvent.LEAVE_LOBBY_RECEIVER);           },\r\n      leaveLobbySender ()           { emitter.emit(SocketEvent.LEAVE_LOBBY_SENDER);             },\r\n      makeLobby (params)            { emitter.emit(SocketEvent.MAKE_LOBBY, params);             },\r\n      saveDeck (params)             { emitter.emit(SocketEvent.SAVE_DECK, params);              },\r\n      selectDeck (params)           { emitter.emit(SocketEvent.SELECT_DECK, params);            },\r\n      setDeckKlass (params)         { emitter.emit(SocketEvent.SET_DECK_KLASS, params);         },\r\n      setDeckName (params)          { emitter.emit(SocketEvent.SET_DECK_NAME, params);          },\r\n      startGame (params)            { emitter.emit(SocketEvent.START_GAME, params);             },\r\n      // ------------------------------ GAME ------------------------------\r\n      attackCardReceiver (params)   { emitter.emit(SocketEvent.ATTACK_CARD_RECEIVER, params);   },\r\n      attackCardSender (params)     { emitter.emit(SocketEvent.ATTACK_CARD_SENDER, params);     },\r\n      endTurnOpponent ()            { emitter.emit(SocketEvent.END_TURN_OPPONENT);              },\r\n      endTurnPlayer ()              { emitter.emit(SocketEvent.END_TURN_PLAYER);                },\r\n      hoverCard (params)            { emitter.emit(SocketEvent.HOVER_CARD, params);             },\r\n      unhoverCard ()                { emitter.emit(SocketEvent.UNHOVER_CARD); },\r\n      playCardReceiver (params)     { emitter.emit(SocketEvent.PLAY_CARD_RECEIVER, params);     },\r\n      playCardSender (params)       { emitter.emit(SocketEvent.PLAY_CARD_SENDER, params);       },\r\n      endGame ()                    { emitter.emit(SocketEvent.END_GAME);                       },\r\n      // ------------------------------ SIDENAV ------------------------------\r\n      acceptFriendReceiver (params) { emitter.emit(SocketEvent.ACCEPT_FRIEND_RECEIVER, params); },\r\n      acceptFriendSender (params)   { emitter.emit(SocketEvent.ACCEPT_FRIEND_SENDER, params);   },\r\n      addFriend (params)            { emitter.emit(SocketEvent.ADD_FRIEND, params);             },\r\n      blockFriendReceiver (params)  { emitter.emit(SocketEvent.BLOCK_FRIEND_RECEIVER, params);  },\r\n      blockFriendSender (params)    { emitter.emit(SocketEvent.BLOCK_FRIEND_SENDER, params);    },\r\n      declineFriend (params)        { emitter.emit(SocketEvent.DECLINE_FRIEND, params);         },\r\n      setAvatarReceiver (params)    { emitter.emit(SocketEvent.SET_AVATAR_RECEIVER, params);    },\r\n      setAvatarSender (params)      { emitter.emit(SocketEvent.SET_AVATAR_SENDER, params);      },\r\n      unblockFriend (params)        { emitter.emit(SocketEvent.UNBLOCK_FRIEND, params);         },\r\n      unfriendReceiver (params)     { emitter.emit(SocketEvent.UNFRIEND_RECEIVER, params);      },\r\n      unfriendSender (params)       { emitter.emit(SocketEvent.UNFRIEND_SENDER, params);        },\r\n    }\r\n  }\r\n}\r\n\r\nexport default SocketService;\r\n","import {createServer} from \"http\";\r\nimport {Api, JsonRpc} from \"eosjs\";\r\nimport {JsSignatureProvider} from \"eosjs/dist/eosjs-jssig.js\";\r\nimport {MongoClient} from \"mongodb\";\r\nimport fetch from \"node-fetch\";\r\nimport {Server} from \"socket.io\";\r\n\r\nimport settings from \"settings\";\r\nimport * as requests from \"requests\";\r\nimport {\r\n  BlockchainService,\r\n  ChatService,\r\n  GameService,\r\n  SocketService,\r\n  LobbyService,\r\n  PlayerService\r\n} from \"services\";\r\n\r\nimport type {Apis, Services, SocketRequestParams} from \"models\";\r\n\r\nconst {\r\n  mongo: {uri},\r\n  eos: {endpoint, contractKey},\r\n  socket: {opts},\r\n  server: {port}\r\n} = settings;\r\n\r\nconst httpServer = createServer();\r\nconst ioServer = new Server(httpServer, opts);\r\n\r\nconst mongoClient = await MongoClient.connect(uri);\r\nconst mongoDb = mongoClient.db(\"som\");\r\n\r\nconst rpc = new JsonRpc(endpoint, {fetch});\r\nconst signatureProvider = new JsSignatureProvider([contractKey]);\r\nconst textDecoder = new TextDecoder();\r\nconst textEncoder = new TextEncoder();\r\nconst eosApi = new Api({rpc, signatureProvider, textDecoder, textEncoder});\r\n\r\nconst requestKeys = Object.keys(requests) as Array<keyof typeof requests>;\r\n\r\nioServer.on(\"connection\", (socket): void => {\r\n  const apis: Apis = {\r\n    eos: eosApi,\r\n    mongo: mongoDb,\r\n    socket,\r\n    io: ioServer\r\n  };\r\n\r\n  const services: Services = {\r\n    blockchainService: new BlockchainService(apis),\r\n    chatService: new ChatService(apis, \"chats\"),\r\n    gameService: new GameService(apis, \"games\"),\r\n    lobbyService: new LobbyService(apis, \"lobbies\"),\r\n    playerService: new PlayerService(apis, \"players\"),\r\n    socketService: new SocketService(apis)\r\n  };\r\n\r\n  requestKeys.forEach((request): void => {\r\n    socket.on(request, (params: SocketRequestParams): void => {\r\n      requests[request](services, params);\r\n    });\r\n  });\r\n});\r\n\r\nhttpServer.listen(port, () => {console.log(\"Running.\")});\r\n"],"names":[],"mappings":"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"}