{"version":3,"file":"index.js","sources":["../src/settings.ts","../src/controllers/GameController.ts","../src/requests/auth/disconnect.ts","../src/requests/auth/getPrivateKeyHash.ts","../src/requests/auth/signin.ts","../src/requests/auth/signup.ts","../src/requests/client/destroyLobby.ts","../src/requests/client/joinLobby.ts","../src/requests/client/leaveLobby.ts","../src/requests/client/makeLobby.ts","../src/requests/client/saveDeck.ts","../src/requests/client/selectDeck.ts","../src/requests/client/sendToken.ts","../src/requests/client/setDeckKlass.ts","../src/requests/client/setDeckName.ts","../src/requests/client/startGame.ts","../src/requests/game/attackHero.ts","../src/requests/game/attackMinion.ts","../src/requests/game/endTurn.ts","../src/requests/game/hoverCard.ts","../src/requests/game/playMinion.ts","../src/requests/game/unhoverCard.ts","../src/requests/global/sendChatMsg.ts","../src/requests/global/updateStatus.ts","../src/requests/sidenav/acceptFriend.ts","../src/requests/sidenav/addFriend.ts","../src/requests/sidenav/block.ts","../src/requests/sidenav/declineFriend.ts","../src/requests/sidenav/setAvatar.ts","../src/requests/sidenav/signout.ts","../src/requests/sidenav/unblock.ts","../src/requests/sidenav/unfriend.ts","../src/requests/index.ts","../src/services/EosService/EosService.ts","../src/services/MongoService/MongoService.ts","../src/services/SocketService/SocketService.ts","../src/index.ts"],"sourcesContent":["const production = false;\r\n\r\nconst settings = {\r\n  mongo: {\r\n    uri: \"mongodb://localhost:27017\"\r\n  },\r\n  eos: {\r\n    endpoint: \"https://testnet.telos.net\",\r\n    contractAccount: \"telosgamesbp\",\r\n    contractKey: process.env.EOS_CONTRACT_KEY || \"5K2rKojEWKC1UmmiyWKvvXcVeS1Devq2LQEgDyKejyFNJAX2AX2\"\r\n  },\r\n  socket: {\r\n    opts: production ? {} : {\r\n      cors: {\r\n        origin: \"*\"\r\n      }\r\n    }\r\n  },\r\n  server: {\r\n    port: process.env.PORT || 4200\r\n  }\r\n};\r\n\r\nexport default settings;\r\n","import {randomInt} from \"crypto\";\r\nimport {PlayerStatus} from \"@som/shared/enums\";\r\nimport type {Game, GameCards, GamePlayer} from \"@som/shared/interfaces/mongo\";\r\nimport type {GameFE} from \"@som/shared/interfaces/client\";\r\nimport type {Services} from \"models\";\r\nimport { PlayerDeck } from \"../services/MongoService/PlayerService.models\";\r\n\r\n// mutation probably isn't the best way to do this...\r\nexport class GameController {\r\n  public constructor (private readonly _services: Services) {}\r\n\r\n  public async saveGame (game: Game): Promise<void> {\r\n    const {mongoService, socketService} = this._services;\r\n    const {$games, $players} = mongoService;\r\n    const {io} = socketService;\r\n    const {gameId, playerA, playerB} = game;\r\n\r\n    const [$updateGame, $playerA, $playerB] = await Promise.all([\r\n      $games.replaceOne({gameId}, game),\r\n      $players.findOne({\r\n        username: playerA.username\r\n      }),\r\n      $players.findOne({\r\n        username: playerB.username\r\n      })\r\n    ]);\r\n\r\n    if (!$updateGame.modifiedCount || !$playerA || !$playerB) { return; }\r\n\r\n    io.to($playerA.socketId).emit(\"reloadGameState\", {\r\n      game: this.generateGameFE(game, playerA.username)\r\n    });\r\n\r\n    io.to($playerB.socketId).emit(\"reloadGameState\", {\r\n      game: this.generateGameFE(game, playerB.username)\r\n    });\r\n  }\r\n\r\n  public async isGameOver (game: Game): Promise<boolean> {\r\n    if (game.playerA.hero.health <= 0) {\r\n      await this.endGame(game.gameId, \"B\");\r\n      return true;\r\n    } else if (game.playerB.hero.health <= 0) {\r\n      await this.endGame(game.gameId, \"A\");\r\n      return true;\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  public async endGame (gameId: number, winner: \"A\" | \"B\"): Promise<void> {\r\n    const {mongoService, socketService} = this._services;\r\n    const {$games, $players} = mongoService;\r\n    const {io, socket} = socketService;\r\n    const game = await $games.findOne({gameId});\r\n\r\n    if (!game) { return; }\r\n\r\n    const {playerA, playerB} = game;\r\n\r\n    const [A, B] = await Promise.all([\r\n      $players.findOneAndUpdate({\r\n        username: playerA.username\r\n      }, {\r\n        $set: {\r\n          gameId: 0,\r\n          status: PlayerStatus.ONLINE\r\n        }\r\n      }, {\r\n        returnDocument: \"after\"\r\n      }),\r\n      $players.findOneAndUpdate({\r\n        username: playerB.username\r\n      }, {\r\n        $set: {\r\n          gameId: 0,\r\n          status: PlayerStatus.ONLINE\r\n        }\r\n      }, {\r\n        returnDocument: \"after\"\r\n      })\r\n    ]);\r\n\r\n    if (!A.value || !B.value) { return; }\r\n\r\n    const isDeletedGame = await $games.deleteOne({gameId});\r\n\r\n    if (!isDeletedGame.deletedCount) { return; }\r\n\r\n    if (winner === \"A\") {\r\n      io.to(A.value.socketId).emit(\"notification\", \"You won!\");\r\n      io.to(B.value.socketId).emit(\"notification\", \"You lost...\");\r\n    } else if (winner === \"B\") {\r\n      io.to(B.value.socketId).emit(\"notification\", \"You won!\");\r\n      io.to(A.value.socketId).emit(\"notification\", \"You lost...\");\r\n    }\r\n\r\n    io.to([A.value.socketId, B.value.socketId]).emit(\"endGame\");\r\n  }\r\n\r\n  public getPlayers (game: Game, username: string) {\r\n    const {playerA, playerB} = game;\r\n    const player = playerA.username === username ? playerA : playerB;\r\n    const opponent = playerA.username === username ? playerB : playerA;\r\n\r\n    return {player, opponent};\r\n  }\r\n\r\n  public checkPlayersDeck (playerDeck: PlayerDeck): boolean {\r\n    const numberOfCards = playerDeck.cards.reduce((acc, curr) => acc += curr.amount, 0);\r\n\r\n    if (numberOfCards !== 30) { return false; }\r\n\r\n    return true;\r\n  }\r\n\r\n  public shuffleDeck (deck: GameCards): void {\r\n    for (let i = deck.length - 1; i > 0; i--) {\r\n      const j = randomInt(0, i + 1);\r\n      const temp = deck[i];\r\n      deck[i] = deck[j];\r\n      deck[j] = temp;\r\n    }\r\n  }\r\n\r\n  public generateGameFE (game: Game, username: string): GameFE {\r\n    const {gameId, currentPlayer, playerA, playerB} = game;\r\n\r\n    return {\r\n      gameId,\r\n      currentPlayer,\r\n      player: playerA.username === username ? {\r\n        username: playerA.username,\r\n        hero: playerA.hero,\r\n        minion: playerA.minion,\r\n        trap: playerA.trap,\r\n        deck: playerA.deck,\r\n        hand: playerA.hand,\r\n        graveyard: playerA.graveyard\r\n      } : {\r\n        username: playerB.username,\r\n        hero: playerB.hero,\r\n        minion: playerB.minion,\r\n        trap: playerB.trap,\r\n        deck: playerB.deck,\r\n        hand: playerB.hand,\r\n        graveyard: playerB.graveyard\r\n      },\r\n      opponent: playerA.username === username ? {\r\n        username: playerB.username,\r\n        hero: playerB.hero,\r\n        minion: playerB.minion,\r\n        trap: playerB.trap,\r\n        deck: playerB.deck.length,\r\n        hand: playerB.hand.length,\r\n        graveyard: playerB.graveyard\r\n      } : {\r\n        username: playerA.username,\r\n        hero: playerA.hero,\r\n        minion: playerA.minion,\r\n        trap: playerA.trap,\r\n        deck: playerA.deck.length,\r\n        hand: playerA.hand.length,\r\n        graveyard: playerA.graveyard\r\n      }\r\n    };\r\n  }\r\n\r\n  public async reloadGameState (game: Game): Promise<void> {\r\n    const {mongoService, socketService} = this._services;\r\n    const {$players} = mongoService;\r\n    const {io} = socketService;\r\n    const {playerA, playerB} = game;\r\n\r\n    const [$playerA, $playerB] = await Promise.all([\r\n      $players.findOne({\r\n        username: playerA.username\r\n      }),\r\n      $players.findOne({\r\n        username: playerB.username\r\n      })\r\n    ]);\r\n\r\n    if (!$playerA || !$playerB) { return; }\r\n\r\n    io.to($playerA.socketId).emit(\"reloadGameState\", {\r\n      game: this.generateGameFE(game, playerA.username)\r\n    });\r\n    io.to($playerB.socketId).emit(\"reloadGameState\", {\r\n      game: this.generateGameFE(game, playerB.username)\r\n    });\r\n  }\r\n\r\n  public async drawCard (gameId: number, player: GamePlayer): Promise<void> {\r\n    const {hand, deck} = player;\r\n    const card = deck.pop();\r\n\r\n    if (!card) {\r\n      await this.endGame(gameId, \"B\");\r\n      return;\r\n    }\r\n\r\n    hand.push(card);\r\n  }\r\n}\r\n","import {PlayerStatus} from \"@som/shared/enums\";\r\nimport type {App} from \"models\";\r\n\r\nexport const disconnect = (app: App): void => {\r\n  const {services} = app;\r\n  const {mongoService, socketService} = services;\r\n  const {$players} = mongoService;\r\n  const {io, socket, socketId} = socketService;\r\n\r\n  socket.on(\"disconnect\", async (reason) => {\r\n    const $player = await $players.findOneAndUpdate({socketId}, {\r\n      $set: {\r\n        socketId: \"\",\r\n        status: PlayerStatus.OFFLINE\r\n      }\r\n    }, {\r\n      returnDocument: \"after\"\r\n    });\r\n\r\n    if (!$player.value) { return; }\r\n\r\n    const {username, status, social} = $player.value;\r\n    const socketIds = await mongoService.getSocketIds(social.friends);\r\n\r\n    io.to(socketIds).emit(\"updateStatus\", {username, status});\r\n  });\r\n};\r\n","import type {App} from \"models\";\r\n\r\nexport const getPrivateKeyHash = (app: App): void => {\r\n  const {services} = app;\r\n  const {mongoService, socketService} = services;\r\n  const {$players} = mongoService;\r\n  const {socket} = socketService;\r\n\r\n  socket.on(\"getPrivateKeyHash\", async (params) => {\r\n    const {username} = params;\r\n    const $player = await $players.findOne({username});\r\n\r\n    if (!$player) {\r\n      socket.emit(\"notification\", \"Player not found.\");\r\n      return;\r\n    }\r\n\r\n    const {privateKeyHash} = $player;\r\n    socket.emit(\"getPrivateKeyHash\", {privateKeyHash});\r\n  });\r\n};\r\n","import {PlayerStatus} from \"@som/shared/enums\";\r\nimport type {App} from \"models\";\r\n\r\n// this needs refactoring...\r\nexport const signin = (app: App): void => {\r\n  const {services} = app;\r\n  const {eosService, mongoService, socketService} = services;\r\n  const {$chats, $games, $lobbies, $players} = mongoService;\r\n  const {socket, socketId} = socketService;\r\n\r\n  socket.on(\"signin\", async (params) => {\r\n    const {username, publicKey, signature} = params;\r\n    let lobby, game;\r\n\r\n    // const transaction = await blockchainService.transact(\"signin\", {publicKey, signature});\r\n\r\n    // if (!transaction) { return; }\r\n\r\n    const $player = await $players.findOneAndUpdate({username}, [{\r\n      $set: {\r\n        socketId,\r\n        status: {\r\n          $switch: {\r\n            branches: [{\r\n              case: {\r\n                $gt: [\"$lobbyId\", 0]\r\n              },\r\n              then: PlayerStatus.INLOBBY\r\n            }, {\r\n              case: {\r\n                $gt: [\"$gameId\", 0]\r\n              },\r\n              then: PlayerStatus.INGAME\r\n            }],\r\n            default: PlayerStatus.ONLINE\r\n          }\r\n        }\r\n      }\r\n    }], {\r\n      returnDocument: \"after\"\r\n    });\r\n\r\n    const player$ = await eosService.findPlayer(username);\r\n\r\n    if (!$player.value || !player$) { return; }\r\n\r\n    const {wallet, last_nonce} = player$;\r\n    const {friends} = $player.value.social;\r\n    const friendsView: Array<any> = [];\r\n\r\n    for (const friendname of friends) {\r\n      const [friend, chat] = await Promise.all([\r\n        $players.findOne({\r\n          username: friendname\r\n        }),\r\n        $chats.findOne({\r\n          players: {\r\n            $all: [username, friendname]\r\n          }\r\n        })\r\n      ]);\r\n\r\n      if (!friend || !chat) { return; }\r\n\r\n      const {status, avatarId} = friend;\r\n      const {messages} = chat;\r\n\r\n      friendsView.push({username: friendname, status, avatarId, messages});\r\n    }\r\n\r\n    const {lobbyId, gameId} = $player.value;\r\n    let gameView;\r\n\r\n    if (lobbyId) {\r\n      lobby = await $lobbies.findOne({lobbyId});\r\n\r\n      if (!lobby) { return; }\r\n    } else if (gameId) {\r\n      game = await $games.findOne({gameId});\r\n\r\n      if (!game) { return; }\r\n\r\n      if ($player.value.username === game.playerA.username) {\r\n        gameView = {\r\n          gameId: game.gameId,\r\n          currentPlayer: game.currentPlayer,\r\n          player: {\r\n            ...game.playerA,\r\n            // deck should be number so players can't cheat\r\n            // deck: game.playerA.deck.length\r\n            // but endTurn event needs refactor first\r\n          },\r\n          opponent: {\r\n            ...game.playerB,\r\n            deck: game.playerB.deck.length,\r\n            hand: game.playerB.hand.length\r\n          }\r\n        };\r\n      } else {\r\n        gameView = {\r\n          gameId: game.gameId,\r\n          currentPlayer: game.currentPlayer,\r\n          player: game.playerB,\r\n          opponent: {\r\n            ...game.playerA,\r\n            deck: game.playerA.deck.length,\r\n            hand: game.playerA.hand.length\r\n          }\r\n        };\r\n      }\r\n    }\r\n\r\n    socket.emit(\"signin\", {\r\n      player: {...$player.value, wallet, last_nonce},\r\n      friends: friendsView,\r\n      lobby,\r\n      game: gameView\r\n    });\r\n  });\r\n};\r\n","import {PlayerStatus} from \"@som/shared/enums\";\r\nimport type {App} from \"models\";\r\n\r\nexport const signup = (app: App): void => {\r\n  const {services} = app;\r\n  const {eosService, mongoService, socketService} = services;\r\n  const {$players} = mongoService;\r\n  const {socket} = socketService;\r\n\r\n  socket.on(\"signup\", async (params) => {\r\n    const {username, publicKey, privateKeyHash} = params;\r\n    const $player = await $players.findOne({username});\r\n\r\n    if ($player) {\r\n      socket.emit(\"notification\", \"Username taken.\");\r\n      return;\r\n    }\r\n\r\n    const [transaction, insertPlayer] = await Promise.all([\r\n      eosService.transact(\"signup\", {\r\n        username,\r\n        public_key: publicKey\r\n      }),\r\n      $players.insertOne({\r\n        socketId: \"\",\r\n        username,\r\n        publicKey,\r\n        privateKeyHash,\r\n        status: PlayerStatus.OFFLINE,\r\n        xp: 0,\r\n        lv: 1,\r\n        deckId: 0,\r\n        avatarId: 0,\r\n        lobbyId: 0,\r\n        gameId: 0,\r\n        decks: [\r\n          {id: 0, klass: 1, name: \"Deck 1\", cards: []},\r\n          {id: 1, klass: 2, name: \"Deck 2\", cards: []},\r\n          {id: 2, klass: 3, name: \"Deck 3\", cards: []},\r\n          {id: 3, klass: 4, name: \"Deck 4\", cards: []}\r\n        ],\r\n        social: {\r\n          friends: [],\r\n          requests: [],\r\n          blocked: []\r\n        }\r\n      })\r\n    ]);\r\n\r\n    if (!transaction || !insertPlayer.insertedId) {\r\n      socket.emit(\"notification\", \"Error creating account.\");\r\n      return;\r\n      // if signup fails on-chain, should we check whether it passed off-chain\r\n      // and remove the document from mongodb?\r\n    }\r\n\r\n    socket.emit(\"notification\", \"Account created successfully.\");\r\n  });\r\n};\r\n","import {PlayerStatus} from \"@som/shared/enums\";\r\nimport type {App} from \"models\";\r\n\r\nexport const destroyLobby = (app: App): void => {\r\n  const {services} = app;\r\n  const {mongoService, socketService} = services;\r\n  const {$lobbies, $players} = mongoService;\r\n  const {io, socket, socketId} = socketService;\r\n\r\n  socket.on(\"destroyLobby\", async () => {\r\n    const $player = await $players.findOne({socketId});\r\n\r\n    if (!$player) { return; }\r\n\r\n    const {username, lobbyId} = $player;\r\n\r\n    if (!lobbyId) {\r\n      socket.emit(\"notification\", \"You are not in a lobby.\");\r\n      return;\r\n    }\r\n\r\n    const lobby = await $lobbies.findOne({lobbyId});\r\n\r\n    if (!lobby) { return; }\r\n\r\n    if (username !== lobby.host.username) {\r\n      socket.emit(\"notification\", \"You are not the lobby host.\");\r\n      return;\r\n    }\r\n\r\n    const [deleteLobby, updatePlayer] = await Promise.all([\r\n      $lobbies.deleteOne({lobbyId}),\r\n      $players.updateOne({socketId}, {\r\n        $set: {\r\n          lobbyId: 0,\r\n          status: PlayerStatus.ONLINE\r\n        }\r\n      })\r\n    ]);\r\n\r\n    if (!deleteLobby.deletedCount || !updatePlayer.modifiedCount) { return; }\r\n\r\n    if (lobby.challengee.username) {\r\n      const challengee = await $players.findOneAndUpdate({\r\n        username: lobby.challengee.username\r\n      }, {\r\n        $set: {\r\n          lobbyId: 0,\r\n          status: PlayerStatus.ONLINE\r\n        }\r\n      }, {\r\n        returnDocument: \"after\"\r\n      });\r\n\r\n      if (!challengee.value) { return; }\r\n    }\r\n\r\n    socket.emit(\"destroyLobby\");\r\n    io.to(lobby.challengee.socketId).emit(\"destroyLobby\");\r\n  });\r\n};\r\n","import {PlayerStatus} from \"@som/shared/enums\";\r\nimport type {App} from \"models\";\r\n\r\nexport const joinLobby = (app: App): void => {\r\n  const {controllers, services} = app;\r\n  const {gameController} = controllers;\r\n  const {mongoService, socketService} = services;\r\n  const {$lobbies, $players} = mongoService;\r\n  const {io, socket, socketId} = socketService;\r\n\r\n  socket.on(\"joinLobby\", async (params) => {\r\n    const {lobbyId} = params;\r\n    const [$player, $lobby] = await Promise.all([\r\n      $players.findOne({socketId}),\r\n      $lobbies.findOne({lobbyId})\r\n    ]);\r\n\r\n    if (!$player) {\r\n      socket.emit(\"notification\", \"Player not found.\");\r\n      return;\r\n    }\r\n    if (!$lobby) {\r\n      socket.emit(\"notification\", \"Lobby not found.\");\r\n      return;\r\n    }\r\n    if ($player.lobbyId) {\r\n      socket.emit(\"notification\", \"You are already in a lobby.\");\r\n      return;\r\n    }\r\n    if ($player.gameId) {\r\n      socket.emit(\"notification\", \"You can't join a lobby while in game.\");\r\n      return;\r\n    }\r\n    if ($lobby.challengee.username) {\r\n      socket.emit(\"notification\", \"Lobby is full.\");\r\n      return;\r\n    }\r\n    if (!gameController.checkPlayersDeck($player.decks[$player.deckId])) {\r\n      socket.emit(\"notification\", \"Invalid deck.\");\r\n      return;\r\n    }\r\n\r\n    const {username, avatarId} = $player;\r\n    const [modifiedLobby, updatedPlayer] = await Promise.all([\r\n      $lobbies.findOneAndUpdate({lobbyId}, {\r\n        $set: {\r\n          challengee: {username, socketId, avatarId}\r\n        }\r\n      }, {\r\n        returnDocument: \"after\"\r\n      }),\r\n      $players.updateOne({socketId}, {\r\n        $set: {\r\n          lobbyId,\r\n          status: PlayerStatus.INLOBBY\r\n        }\r\n      })\r\n    ]);\r\n\r\n    if (!modifiedLobby.value || !updatedPlayer.modifiedCount) {\r\n      socket.emit(\"notification\", \"Error joining lobby.\");\r\n      return;\r\n    }\r\n\r\n    const lobby = modifiedLobby.value;\r\n    const {challengee} = modifiedLobby.value;\r\n\r\n    socket.emit(\"joinLobbySender\", {lobby});\r\n    io.to($lobby.host.socketId).emit(\"joinLobbyReceiver\", {challengee});\r\n  });\r\n};\r\n","import {PlayerStatus} from \"@som/shared/enums\";\r\nimport type {App} from \"models\";\r\n\r\nexport const leaveLobby = (app: App): void => {\r\n  const {services} = app;\r\n  const {mongoService, socketService} = services;\r\n  const {$lobbies, $players} = mongoService;\r\n  const {io, socket, socketId} = socketService;\r\n\r\n  socket.on(\"leaveLobby\", async () => {\r\n    const $player = await $players.findOne({socketId});\r\n\r\n    if (!$player) {\r\n      socket.emit(\"notification\", \"Player not found.\");\r\n      return;\r\n    }\r\n    if (!$player.lobbyId) {\r\n      socket.emit(\"notification\", \"You are not in a lobby.\");\r\n      return;\r\n    }\r\n\r\n    const {lobbyId} = $player;\r\n    const $lobby = await $lobbies.findOne({lobbyId});\r\n\r\n    if (!$lobby) {\r\n      socket.emit(\"notification\", \"Lobby not found.\");\r\n      return;\r\n    }\r\n\r\n    const [$updateLobby, $updatePlayer] = await Promise.all([\r\n      $lobbies.updateOne({lobbyId}, {\r\n        $set: {\r\n          challengee: {\r\n            username: \"\",\r\n            socketId: \"\",\r\n            avatarId: 0\r\n          }\r\n        }\r\n      }),\r\n      $players.updateOne({socketId}, {\r\n        $set: {\r\n          lobbyId: 0,\r\n          status: PlayerStatus.ONLINE\r\n        }\r\n      })\r\n    ]);\r\n\r\n    if (!$updateLobby.modifiedCount || !$updatePlayer.modifiedCount) { return; }\r\n\r\n    socket.emit(\"leaveLobbySender\");\r\n    io.to($lobby.host.socketId).emit(\"leaveLobbyReceiver\");\r\n  });\r\n};\r\n","import {randomInt} from \"crypto\";\r\nimport {PlayerStatus} from \"@som/shared/enums\";\r\nimport type {App} from \"models\";\r\n\r\nexport const makeLobby = (app: App): void => {\r\n  const {controllers, services} = app;\r\n  const {gameController} = controllers;\r\n  const {mongoService, socketService} = services;\r\n  const {$lobbies, $players} = mongoService;\r\n  const {socket, socketId} = socketService;\r\n\r\n  socket.on(\"makeLobby\", async () => {\r\n    const player = await $players.findOne({socketId});\r\n\r\n    if (!player) {\r\n      socket.emit(\"notification\", \"Player not found.\");\r\n      return;\r\n    }\r\n    if (player.lobbyId) {\r\n      socket.emit(\"notification\", \"You are already in a lobby.\");\r\n      return;\r\n    }\r\n    if (player.gameId) {\r\n      socket.emit(\"notification\", \"You can't make a lobby while in game.\");\r\n      return;\r\n    }\r\n    if (!gameController.checkPlayersDeck(player.decks[player.deckId])) {\r\n      socket.emit(\"notification\", \"Invalid deck.\");\r\n      return;\r\n    }\r\n\r\n    const {username, avatarId} = player;\r\n    const lobbyId = randomInt(1, 1000000);\r\n    const [insertLobby, updatePlayer] = await Promise.all([\r\n      $lobbies.insertOne({\r\n        lobbyId,\r\n        host: {username, socketId, avatarId},\r\n        challengee: {\r\n          username: \"\",\r\n          socketId: \"\",\r\n          avatarId: 0\r\n        }\r\n      }),\r\n      $players.updateOne({socketId}, {\r\n        $set: {\r\n          lobbyId,\r\n          status: PlayerStatus.INLOBBY\r\n        }\r\n      })\r\n    ]);\r\n\r\n    if (!insertLobby.insertedId || !updatePlayer.modifiedCount) { return; }\r\n\r\n    const lobby = await $lobbies.findOne({lobbyId});\r\n\r\n    if (!lobby) { return; }\r\n\r\n    socket.emit(\"makeLobby\", {lobby});\r\n  });\r\n};\r\n","import type {App} from \"models\";\r\n\r\nexport const saveDeck = (app: App): void => {\r\n  const {services} = app;\r\n  const {mongoService, socketService} = services;\r\n  const {$players} = mongoService;\r\n  const {socket, socketId} = socketService;\r\n\r\n  socket.on(\"saveDeck\", async (params) => {\r\n    const {cards} = params;\r\n    const $player = await $players.findOne({socketId});\r\n\r\n    if (!$player) { return; }\r\n\r\n    const {deckId} = $player;\r\n    const $updatePlayer = await $players.updateOne({\r\n      socketId,\r\n      \"decks.id\": deckId\r\n    }, {\r\n      $set: {\r\n        \"decks.$.cards\": cards\r\n      }\r\n    });\r\n\r\n    if (!$updatePlayer.modifiedCount) { return; }\r\n\r\n    socket.emit(\"saveDeck\", {cards});\r\n  });\r\n};\r\n","import type {App} from \"models\";\r\n\r\nexport const selectDeck = (app: App): void => {\r\n  const {services} = app;\r\n  const {mongoService, socketService} = services;\r\n  const {$players} = mongoService;\r\n  const {socket, socketId} = socketService;\r\n\r\n  socket.on(\"selectDeck\", async (params) => {\r\n    const {deckId} = params;\r\n    const $updatePlayer = await $players.updateOne({socketId}, {\r\n      $set: {deckId}\r\n    });\r\n\r\n    if (!$updatePlayer.modifiedCount) { return; }\r\n\r\n    socket.emit(\"selectDeck\", {deckId});\r\n  });\r\n};\r\n","import type {App} from \"models\";\r\n\r\nexport const sendToken = (app: App): void => {\r\n  const {services} = app;\r\n  const {eosService, socketService} = services;\r\n  const {socket} = socketService;\r\n\r\n  socket.on(\"sendToken\", async (params) => {\r\n    const transaction = await eosService.transact(\"transfer\", params);\r\n\r\n    if (!transaction) {\r\n      socket.emit(\"notification\", \"Error sending token.\");\r\n      return;\r\n    }\r\n  });\r\n};\r\n","import type {App} from \"models\";\r\n\r\nexport const setDeckKlass = (app: App): void => {\r\n  const {services} = app;\r\n  const {mongoService, socketService} = services;\r\n  const {$players} = mongoService;\r\n  const {socket, socketId} = socketService;\r\n\r\n  socket.on(\"setDeckKlass\", async (params) => {\r\n    const {deckId, klass} = params;\r\n    const $updatePlayer = await $players.updateOne({\r\n      socketId,\r\n      \"decks.id\": deckId\r\n    }, {\r\n      $set: {\r\n        \"decks.$.klass\": klass\r\n      }\r\n    });\r\n\r\n    if (!$updatePlayer.modifiedCount) { return; }\r\n\r\n    socket.emit(\"setDeckKlass\", {deckId, klass});\r\n  });\r\n};\r\n","import type {App} from \"models\";\r\n\r\nexport const setDeckName = (app: App): void => {\r\n  const {services} = app;\r\n  const {mongoService, socketService} = services;\r\n  const {$players} = mongoService;\r\n  const {socket, socketId} = socketService;\r\n\r\n  socket.on(\"setDeckName\", async (params) => {\r\n    const {id, name} = params;\r\n    const $updatePlayer = await $players.updateOne({\r\n      socketId,\r\n      \"decks.id\": id\r\n    }, {\r\n      $set: {\r\n        \"decks.$.name\": name\r\n      }\r\n    });\r\n\r\n    if (!$updatePlayer.modifiedCount) { return; }\r\n\r\n    socket.emit(\"setDeckName\", {id, name});\r\n  });\r\n};\r\n","import {cards} from \"@som/shared/data\";\r\nimport { GameMagic, GameMinion, GameTrap } from \"@som/shared/dist/interfaces/mongo/Game\";\r\nimport {CardKlass, CardType, PlayerStatus} from \"@som/shared/enums\";\r\nimport type {Game, GameCards} from \"@som/shared/interfaces/mongo\";\r\nimport type {App} from \"models\";\r\n\r\nexport const startGame = (app: App): void => {\r\n  const {controllers, services} = app;\r\n  const {gameController} = controllers;\r\n  const {mongoService, socketService} = services;\r\n  const {$games, $lobbies, $players} = mongoService;\r\n  const {io, socket} = socketService;\r\n\r\n  socket.on(\"startGame\", async (params) => {\r\n    const {lobbyId} = params;\r\n    const $lobby = await $lobbies.findOne({lobbyId});\r\n    const $deleteLobby = await $lobbies.deleteOne({lobbyId});\r\n\r\n    if (!$lobby || !$deleteLobby.deletedCount) { return; }\r\n\r\n    const [playerA, playerB] = await Promise.all([\r\n      $players.findOneAndUpdate({\r\n        username: $lobby.host.username\r\n      }, {\r\n        $set: {\r\n          lobbyId: 0,\r\n          gameId: lobbyId,\r\n          status: PlayerStatus.INGAME\r\n        }\r\n      }, {\r\n        returnDocument: \"after\"\r\n      }),\r\n      $players.findOneAndUpdate({\r\n        username: $lobby.challengee.username\r\n      }, {\r\n        $set: {\r\n          lobbyId: 0,\r\n          gameId: lobbyId,\r\n          status: PlayerStatus.INGAME\r\n        }\r\n      }, {\r\n        returnDocument: \"after\"\r\n      })\r\n    ]);\r\n\r\n    if (!playerA.value || !playerB.value) return;\r\n\r\n    let gid = 1;\r\n    let playerADeck: GameCards = [];\r\n    const playerAHand: GameCards = [];\r\n    let playerBDeck: GameCards = [];\r\n    const playerBHand: GameCards = [];\r\n\r\n    for (let i = 0; i < playerA.value.decks[playerA.value.deckId].cards.length; i += 1) {\r\n      let id = playerA.value.decks[playerA.value.deckId].cards[i].id;\r\n      const card = cards.find((card) => card.id === id);\r\n\r\n      if (!card) return;\r\n\r\n      if (card.health) {\r\n        playerADeck.push({gid, ...card, maxHealth: card.health, hasAttacked: false, hasTriggeredEffect: false} as GameMinion);\r\n      } else {\r\n        playerADeck.push({gid, ...card} as any);\r\n      }\r\n\r\n      gid += 1;\r\n\r\n      if (playerA.value.decks[playerA.value.deckId].cards[i].amount > 1) {\r\n        if (card.health) {\r\n          playerADeck.push({gid, ...card, maxHealth: card.health, hasAttacked: false, hasTriggeredEffect: false} as GameMinion);\r\n        } else {\r\n          playerADeck.push({gid, ...card} as any);\r\n        }\r\n\r\n        gid += 1;\r\n      }\r\n    }\r\n\r\n    for (let i = 0; i < playerB.value.decks[playerB.value.deckId].cards.length; i += 1) {\r\n      let id = playerB.value.decks[playerB.value.deckId].cards[i].id;\r\n      const card = cards.find((card) => card.id === id);\r\n\r\n      if (!card) return;\r\n\r\n      if (card.health) {\r\n        playerBDeck.push({gid, ...card, maxHealth: card.health, hasAttacked: false, hasTriggeredEffect: false} as GameMinion);\r\n      } else {\r\n        playerBDeck.push({gid, ...card} as any);\r\n      }\r\n\r\n      gid += 1;\r\n\r\n      if (playerB.value.decks[playerB.value.deckId].cards[i].amount > 1) {\r\n        if (card.health) {\r\n          playerBDeck.push({gid, ...card, maxHealth: card.health, hasAttacked: false, hasTriggeredEffect: false} as GameMinion);\r\n        } else {\r\n          playerBDeck.push({gid, ...card} as any);\r\n        }\r\n\r\n        gid += 1;\r\n      }\r\n    }\r\n\r\n    gameController.shuffleDeck(playerADeck);\r\n    gameController.shuffleDeck(playerBDeck);\r\n\r\n    playerAHand.push(...playerADeck.slice(-5));\r\n    playerBHand.push(...playerBDeck.slice(-5));\r\n\r\n    playerADeck = playerADeck.slice(0, -5);\r\n    playerBDeck = playerBDeck.slice(0, -5);\r\n\r\n    const game: Game = {\r\n      gameId: $lobby.lobbyId,\r\n      currentPlayer: $lobby.host.username,\r\n      playerA: {\r\n        username: $lobby.host.username,\r\n        hero: {\r\n          id: 2, // should be deck.klass\r\n          health: 600,\r\n          maxHealth: 600,\r\n          mana: 100,\r\n          maxMana: 100,\r\n          effects: []\r\n        },\r\n        minion: {a: undefined, b: undefined, c: undefined, d: undefined},\r\n        trap: undefined,\r\n        hand: playerAHand,\r\n        deck: playerADeck,\r\n        graveyard: []\r\n      },\r\n      playerB: {\r\n        username: $lobby.challengee.username,\r\n        hero: {\r\n          id: 4, // should be deck.klass\r\n          health: 600,\r\n          maxHealth: 600,\r\n          mana: 100,\r\n          maxMana: 100,\r\n          effects: []\r\n        },\r\n        minion: {a: undefined, b: undefined, c: undefined, d: undefined},\r\n        trap: undefined,\r\n        hand: playerBHand,\r\n        deck: playerBDeck,\r\n        graveyard: []\r\n      },\r\n    };\r\n\r\n    const isInserted = await $games.insertOne(game);\r\n\r\n    if (!isInserted.insertedId) { return; }\r\n\r\n    const gameSender = {\r\n      gameId: $lobby.lobbyId,\r\n      currentPlayer: $lobby.host.username,\r\n      player: {\r\n        username: $lobby.host.username,\r\n        fields: {\r\n          hero: {\r\n            id: 2, // should be deck.klass\r\n            type: CardType.HERO,\r\n            health: 600,\r\n            maxHealth: 600,\r\n            mana: 100,\r\n            maxMana: 100\r\n          },\r\n          minionA: undefined,\r\n          minionB: undefined,\r\n          minionC: undefined,\r\n          minionD: undefined,\r\n          minionE: undefined,\r\n          minionF: undefined,\r\n          magic: undefined,\r\n          trap: undefined\r\n        },\r\n        hand: playerAHand,\r\n        deck: playerADeck,\r\n        graveyard: []\r\n      },\r\n      opponent: {\r\n        username: $lobby.challengee.username,\r\n        fields: {\r\n          hero: {\r\n            id: 4, // should be deck.klass\r\n            type: CardType.HERO,\r\n            health: 600,\r\n            maxHealth: 600,\r\n            mana: 100,\r\n            maxMana: 100\r\n          },\r\n          minionA: undefined,\r\n          minionB: undefined,\r\n          minionC: undefined,\r\n          minionD: undefined,\r\n          minionE: undefined,\r\n          minionF: undefined,\r\n          magic: undefined,\r\n          trap: undefined\r\n        },\r\n        hand: playerBHand.length,\r\n        deck: playerBDeck.length,\r\n        graveyard: []\r\n      }\r\n    };\r\n\r\n    const gameReceiver = {\r\n      gameId: $lobby.lobbyId,\r\n      currentPlayer: $lobby.host.username,\r\n      player: {\r\n        username: $lobby.challengee.username,\r\n        fields: {\r\n          hero: {\r\n            id: 4, // should be deck.klass\r\n            type: CardType.HERO,\r\n            health: 600,\r\n            maxHealth: 600,\r\n            mana: 100,\r\n            maxMana: 100,\r\n            damage: 20,\r\n            passive: 25\r\n          },\r\n          minionA: undefined,\r\n          minionB: undefined,\r\n          minionC: undefined,\r\n          minionD: undefined,\r\n          minionE: undefined,\r\n          minionF: undefined,\r\n          magic: undefined,\r\n          trap: undefined,\r\n        },\r\n        hand: playerBHand,\r\n        deck: playerBDeck,\r\n        graveyard: []\r\n      },\r\n      opponent: {\r\n        username: $lobby.host.username,\r\n        fields: {\r\n          hero: {\r\n            id: 2, // should be deck.klass\r\n            type: CardType.HERO,\r\n            health: 600,\r\n            maxHealth: 600,\r\n            mana: 100,\r\n            maxMana: 100,\r\n            damage: 30,\r\n            passive: 25\r\n          },\r\n          minionA: undefined,\r\n          minionB: undefined,\r\n          minionC: undefined,\r\n          minionD: undefined,\r\n          minionE: undefined,\r\n          minionF: undefined,\r\n          magic: undefined,\r\n          trap: undefined,\r\n        },\r\n        hand: playerAHand.length,\r\n        deck: playerADeck.length,\r\n        graveyard: []\r\n      }\r\n    };\r\n\r\n    socket.emit(\"startGame\", {game: gameSender});\r\n\r\n    const {username} = $lobby.challengee;\r\n    const challengee = await $players.findOne({username});\r\n\r\n    if (!challengee || !challengee.socketId) { return; }\r\n\r\n    io.to(challengee.socketId).emit(\"startGame\", {game: gameReceiver});\r\n  });\r\n};\r\n","import {Effect} from \"@som/shared/enums\";\r\nimport type {App} from \"models\";\r\n\r\nexport const attackHero = (app: App): void => {\r\n  const {controllers, services} = app;\r\n  const {gameController} = controllers;\r\n  const {mongoService, socketService} = services;\r\n  const {$games, $players} = mongoService;\r\n  const {socket, socketId} = socketService;\r\n\r\n  socket.on(\"attackHero\", async (params) => {\r\n    const {attacker} = params;\r\n    const $player = await $players.findOne({socketId});\r\n\r\n    if (!$player) { return; }\r\n\r\n    const {username, gameId} = $player;\r\n    const $game = await $games.findOne({gameId});\r\n\r\n    if (!$game) { return; }\r\n\r\n    const {player, opponent} = gameController.getPlayers($game, username);\r\n    const playerMinion = player.minion[attacker];\r\n    const opponentHero = opponent.hero;\r\n\r\n    if (!playerMinion) { return; }\r\n    if (playerMinion.hasAttacked) { return; }\r\n\r\n    opponentHero.health -= playerMinion.damage;\r\n    playerMinion.hasAttacked = true;\r\n\r\n    if (await gameController.isGameOver($game)) { return; }\r\n\r\n    if (!playerMinion.hasTriggeredEffect) {\r\n      if (playerMinion.effects.includes(Effect.CHARGE)) {\r\n        playerMinion.hasAttacked = false;\r\n        playerMinion.hasTriggeredEffect = true;\r\n        console.log(\"triggered\")\r\n      }\r\n    }\r\n\r\n    await gameController.saveGame($game);\r\n  });\r\n};\r\n","import {Effect} from \"@som/shared/enums\";\r\nimport type {App} from \"models\";\r\n\r\nexport const attackMinion = (app: App): void => {\r\n  const {controllers, services} = app;\r\n  const {gameController} = controllers;\r\n  const {mongoService, socketService} = services;\r\n  const {$games, $players} = mongoService;\r\n  const {socket, socketId} = socketService;\r\n\r\n  socket.on(\"attackMinion\", async (params) => {\r\n    const {attacked, attacker} = params;\r\n    const $player = await $players.findOne({socketId});\r\n\r\n    if (!$player) { return; }\r\n\r\n    const {username, gameId} = $player;\r\n    const $game = await $games.findOne({gameId});\r\n\r\n    if (!$game) { return; }\r\n\r\n    const {player, opponent} = gameController.getPlayers($game, username);\r\n    const playerMinion = player.minion[attacker];\r\n    const opponentMinion = opponent.minion[attacked];\r\n\r\n    if (!playerMinion || !opponentMinion) { return; }\r\n    if (playerMinion.hasAttacked) { return; }\r\n\r\n    playerMinion.health -= opponentMinion.damage;\r\n    opponentMinion.health -= playerMinion.damage;\r\n    playerMinion.hasAttacked = true;\r\n\r\n    if (!playerMinion.hasTriggeredEffect) {\r\n      if (playerMinion.effects.includes(Effect.CHARGE)) {\r\n        playerMinion.hasAttacked = false;\r\n        playerMinion.hasTriggeredEffect = true;\r\n        console.log(\"triggered\")\r\n      }\r\n    }\r\n\r\n    if (playerMinion.health <= 0) {\r\n      if (playerMinion.effects.includes(Effect.GREED)) {\r\n        await gameController.drawCard(gameId, player);\r\n      }\r\n\r\n      playerMinion.health = playerMinion.maxHealth;\r\n\r\n      player.graveyard.push(playerMinion);\r\n      player.minion[attacker] = undefined;\r\n    }\r\n\r\n    if (opponentMinion.health <= 0) {\r\n      opponentMinion.health = opponentMinion.maxHealth;\r\n\r\n      opponent.graveyard.push(opponentMinion);\r\n      opponent.minion[attacked] = undefined;\r\n    }\r\n\r\n    await gameController.saveGame($game);\r\n  });\r\n};\r\n","import type {App} from \"models\";\r\n\r\nexport const endTurn = (app: App): void => {\r\n  const {controllers, services} = app;\r\n  const {gameController} = controllers;\r\n  const {mongoService, socketService} = services;\r\n  const {$games, $players} = mongoService;\r\n  const {socket, socketId} = socketService;\r\n\r\n  socket.on(\"endTurn\", async () => {\r\n    const $player = await $players.findOne({socketId});\r\n\r\n    if (!$player) { return; }\r\n\r\n    const {username, gameId} = $player;\r\n    const $game = await $games.findOne({gameId});\r\n\r\n    if (!$game) { return; }\r\n\r\n    if ($game.currentPlayer !== username) { return; }\r\n\r\n    const {opponent} = gameController.getPlayers($game, username);\r\n    const {hero, minion} = opponent;\r\n\r\n    await gameController.drawCard(gameId, opponent);\r\n\r\n    hero.mana = 100;\r\n\r\n    const minionKeys = Object.keys(minion) as Array<keyof typeof minion>;\r\n\r\n    minionKeys.forEach((key) => {\r\n      const Minion = minion[key];\r\n      if (!Minion) { return; }\r\n      Minion.hasAttacked = false;\r\n      Minion.hasTriggeredEffect = false;\r\n    });\r\n\r\n    $game.currentPlayer = opponent.username;\r\n\r\n    await gameController.saveGame($game);\r\n  });\r\n};\r\n","import {App} from \"models\";\r\n\r\nexport const hoverCard = (app: App): void => {\r\n  const {controllers, services} = app;\r\n  const {gameController} = controllers;\r\n  const {mongoService, socketService} = services;\r\n  const {$games, $players} = mongoService;\r\n  const {io, socket, socketId} = socketService;\r\n\r\n  socket.on(\"hoverCard\", async (params) => {\r\n    const $player = await $players.findOne({socketId});\r\n\r\n    if (!$player) { return; }\r\n\r\n    const {username, gameId} = $player;\r\n    const $game = await $games.findOne({gameId});\r\n\r\n    if (!$game) { return; }\r\n\r\n    const {opponent} = gameController.getPlayers($game, username);\r\n    const $opponent = await $players.findOne({\r\n      username: opponent.username\r\n    });\r\n\r\n    if (!$opponent || !$opponent.socketId) { return; }\r\n\r\n    io.to($opponent.socketId).emit(\"hoverCard\", params);\r\n  });\r\n};\r\n","import {CardType} from \"@som/shared/enums\";\nimport type {App} from \"models\";\n\nexport const playMinion = (app: App): void => {\n  const {controllers, services} = app;\n  const {gameController} = controllers;\n  const {mongoService, socketService} = services;\n  const {$games, $players} = mongoService;\n  const {socket, socketId} = socketService;\n\n  socket.on(\"playMinion\", async (params) => {\n    const {field, gid} = params;\n    const $player = await $players.findOne({socketId});\n\n    if (!$player) { return; }\n\n    const {username, gameId} = $player;\n    const $game = await $games.findOne({gameId});\n\n    if (!$game) { return; }\n\n    const {player} = gameController.getPlayers($game, username);\n    const {hand, minion, hero} = player;\n    const handCard = hand.find((card) => card.gid === gid);\n\n    if (!handCard) { return; }\n    if (handCard.type !== CardType.MINION) { return; }\n    if (minion[field]) { return; }\n    if (!handCard.manaCost || handCard.manaCost > hero.mana) { return; }\n\n    hero.mana -= handCard.manaCost;\n    minion[field] = handCard;\n    hand.splice(hand.indexOf(handCard), 1);\n\n    await gameController.saveGame($game);\n  });\n};\n","import type {App} from \"models\";\r\n\r\nexport const unhoverCard = (app: App): void => {\r\n  const {controllers, services} = app;\r\n  const {gameController} = controllers;\r\n  const {mongoService, socketService} = services;\r\n  const {$games, $players} = mongoService;\r\n  const {io, socket, socketId} = socketService;\r\n\r\n  socket.on(\"unhoverCard\", async () => {\r\n    const $player = await $players.findOne({socketId});\r\n\r\n    if (!$player) { return; }\r\n\r\n    const {username, gameId} = $player;\r\n    const $game = await $games.findOne({gameId});\r\n\r\n    if (!$game) { return; }\r\n\r\n    const {opponent} = gameController.getPlayers($game, username);\r\n    const $opponent = await $players.findOne({\r\n      username: opponent.username\r\n    });\r\n\r\n    if (!$opponent || !$opponent.socketId) { return; }\r\n\r\n    io.to($opponent.socketId).emit(\"unhoverCard\");\r\n  });\r\n};\r\n","import type {App} from \"models\";\r\n\r\nexport const sendChatMsg = (app: App): void => {\r\n  const {services} = app;\r\n  const {mongoService, socketService} = services;\r\n  const {$chats, $players} = mongoService;\r\n  const {io, socket} = socketService;\r\n\r\n  socket.on(\"sendChatMsg\", async (params) => {\r\n    const {sender, receiver, text, date} = params;\r\n    const $updateChat = await $chats.updateOne({\r\n      players: {$all: [sender, receiver]}\r\n    }, {\r\n      $push: {\r\n        messages: {sender, text, date}\r\n      }\r\n    });\r\n\r\n    if (!$updateChat.modifiedCount) { return; }\r\n\r\n    socket.emit(\"sendChatMsgSender\", {sender, receiver, text, date});\r\n\r\n    const $receiver = await $players.findOne({\r\n      username: receiver\r\n    });\r\n\r\n    if (!$receiver || !$receiver.socketId) { return; }\r\n\r\n    io.to($receiver.socketId).emit(\"sendChatMsgReceiver\", {sender, text, date});\r\n  });\r\n};\r\n","import type {App} from \"models\";\r\n\r\nexport const updateStatus = (app: App): void => {\r\n  const {services} = app;\r\n  const {mongoService, socketService} = services;\r\n  const {$players} = mongoService;\r\n  const {io, socket, socketId} = socketService;\r\n\r\n  socket.on(\"updateStatus\", async () => {\r\n    const $player = await $players.findOne({socketId});\r\n\r\n    if (!$player) { return; }\r\n\r\n    const {username, status, social} = $player;\r\n    const socketIds = await mongoService.getSocketIds(social.friends);\r\n\r\n    io.to(socketIds).emit(\"updateStatus\", {username, status});\r\n  });\r\n};\r\n","import type {UpdateFilter} from \"mongodb\";\r\nimport type {App} from \"models\";\r\nimport type {Player} from \"services/MongoService/PlayerService.models\";\r\n\r\nexport const acceptFriend = (app: App): void => {\r\n  const {services} = app;\r\n  const {mongoService, socketService} = services;\r\n  const {$chats, $players} = mongoService;\r\n  const {io, socket, socketId} = socketService;\r\n\r\n  socket.on(\"acceptFriend\", async (params) => {\r\n    const {username} = params;\r\n    const $sender = await $players.findOneAndUpdate({socketId}, {\r\n      $pull: {\r\n        \"social.requests\": username\r\n      },\r\n      $push: {\r\n        \"social.friends\": username\r\n      }\r\n    } as UpdateFilter<Player> | Partial<Player>, { // bug: https://github.com/Automattic/mongoose/issues/10075\r\n      returnDocument: \"after\"\r\n    });\r\n\r\n    if (!$sender.value) { return; }\r\n\r\n    const receiver = await $players.findOneAndUpdate({username}, {\r\n      $push: {\r\n        \"social.friends\": $sender.value.username\r\n      }\r\n    } as UpdateFilter<Player> | Partial<Player>, {\r\n      returnDocument: \"after\"\r\n    });\r\n\r\n    if (!receiver.value) { return; }\r\n\r\n    const insertChat = await $chats.insertOne({\r\n      players: [$sender.value.username, receiver.value.username],\r\n      messages: []\r\n    });\r\n\r\n    if (!insertChat.insertedId) { return; }\r\n\r\n    socket.emit(\"acceptFriendSender\", {\r\n      username: receiver.value.username,\r\n      avatarId: receiver.value.avatarId,\r\n      status: receiver.value.status\r\n    });\r\n\r\n    io.to(receiver.value.socketId).emit(\"acceptFriendReceiver\", {\r\n      username: $sender.value.username,\r\n      avatarId: $sender.value.avatarId,\r\n      status: $sender.value.status\r\n    });\r\n  });\r\n};\r\n","import type {App} from \"models\";\r\n\r\nexport const addFriend = (app: App): void => {\r\n  const {services} = app;\r\n  const {mongoService, socketService} = services;\r\n  const {$players} = mongoService;\r\n  const {io, socket, socketId} = socketService;\r\n\r\n  socket.on(\"addFriend\", async (params) => {\r\n    const {username} = params;\r\n    const [sender, receiver] = await Promise.all([\r\n      $players.findOne({socketId}),\r\n      $players.findOne({username})\r\n    ]);\r\n\r\n    if (!sender || !receiver) { return; }\r\n\r\n    if (sender.username === username) {\r\n      socket.emit(\"notification\", \"You can't add yourself as a friend.\");\r\n      return;\r\n    }\r\n    if (receiver.social.blocked.includes(sender.username)) {\r\n      socket.emit(\"notification\", \"This player has blocked you.\");\r\n      return;\r\n    }\r\n    if (sender.social.blocked.includes(username)) {\r\n      socket.emit(\"notification\", \"You have blocked this player.\");\r\n      return;\r\n    }\r\n    if (receiver.social.requests.includes(sender.username)) {\r\n      socket.emit(\"notification\", \"You have already sent the request to this player.\");\r\n      return;\r\n    }\r\n    if (sender.social.requests.includes(username)) {\r\n      socket.emit(\"notification\", \"This player has already sent you the request.\");\r\n      return;\r\n    }\r\n    if (sender.social.friends.includes(username)) {\r\n      socket.emit(\"notification\", \"This player is already your friend.\");\r\n      return;\r\n    }\r\n\r\n    const updatePlayer = await $players.updateOne({username}, {\r\n      $push: {\r\n        \"social.requests\": sender.username\r\n      }\r\n    });\r\n\r\n    if (!updatePlayer.modifiedCount) { return; }\r\n\r\n    socket.emit(\"notification\", \"Friend request sent.\");\r\n    io.to(receiver.socketId).emit(\"addFriend\", {\r\n      username: sender.username\r\n    });\r\n  });\r\n};\r\n","import type {App} from \"models\";\r\n\r\nexport const block = (app: App): void => {\r\n  const {services} = app;\r\n  const {mongoService, socketService} = services;\r\n  const {$chats, $players} = mongoService;\r\n  const {io, socket, socketId} = socketService;\r\n\r\n  socket.on(\"block\", async (params) => {\r\n    const {username} = params;\r\n    const [sender, receiver] = await Promise.all([\r\n      $players.findOne({socketId}),\r\n      $players.findOne({username})\r\n    ]);\r\n\r\n    if (!sender || !receiver) { return; }\r\n\r\n    const [isUpdatedSender, isUpdatedReceiver, isDeletedChat] = await Promise.all([\r\n      $players.updateOne({socketId}, {\r\n        $pull: {\r\n          \"social.friends\": username\r\n        },\r\n        $push: {\r\n          \"social.blocked\": username\r\n        }\r\n      }),\r\n      $players.updateOne({username}, {\r\n        $pull: {\r\n          \"social.friends\": sender.username\r\n        }\r\n      }),\r\n      $chats.deleteOne({\r\n        players: {\r\n          $all: [receiver.username, sender.username]\r\n        }\r\n      })\r\n    ]);\r\n\r\n    if (\r\n      !isUpdatedSender.modifiedCount ||\r\n      !isUpdatedReceiver.modifiedCount ||\r\n      !isDeletedChat.deletedCount\r\n    ) { return; }\r\n\r\n    socket.emit(\"blockSender\", {username});\r\n    io.to(receiver.socketId).emit(\"blockReceiver\", {\r\n      username: sender.username\r\n    });\r\n  });\r\n};\r\n","import type {App} from \"models\";\r\n\r\nexport const declineFriend = (app: App): void => {\r\n  const {services} = app;\r\n  const {mongoService, socketService} = services;\r\n  const {$players} = mongoService;\r\n  const {socket, socketId} = socketService;\r\n\r\n  socket.on(\"declineFriend\", async (params) => {\r\n    const {username} = params;\r\n    const $updatedPlayer = await $players.updateOne({socketId}, {\r\n      $pull: {\r\n        \"social.requests\": username\r\n      }\r\n    });\r\n\r\n    if (!$updatedPlayer.modifiedCount) { return; }\r\n\r\n    socket.emit(\"declineFriend\", {username});\r\n  });\r\n};\r\n","import type {App} from \"models\";\r\n\r\nexport const setAvatar = (app: App): void => {\r\n  const {services} = app;\r\n  const {mongoService, socketService} = services;\r\n  const {$players} = mongoService;\r\n  const {io, socket, socketId} = socketService;\r\n\r\n  socket.on(\"setAvatar\", async (params) => {\r\n    const {avatarId} = params;\r\n    const player = await $players.findOneAndUpdate({socketId}, {\r\n      $set: {avatarId}\r\n    }, {\r\n      returnDocument: \"after\"\r\n    });\r\n\r\n    if (!player.value) { return; }\r\n\r\n    const {username, social: {friends}} = player.value;\r\n    const socketIds = await mongoService.getSocketIds(friends);\r\n\r\n    socket.emit(\"setAvatarSender\", {avatarId});\r\n    io.to(socketIds).emit(\"setAvatarReceiver\", {username, avatarId});\r\n  });\r\n};\r\n","import type {App} from \"models\";\r\n\r\nexport const signout = (app: App): void => {};\r\n","import type {App} from \"models\";\r\n\r\nexport const unblock = (app: App): void => {\r\n  const {services} = app;\r\n  const {mongoService, socketService} = services;\r\n  const {$players} = mongoService;\r\n  const {socket, socketId} = socketService;\r\n\r\n  socket.on(\"unblock\", async (params) => {\r\n    const {username} = params;\r\n    const updatePlayer = await $players.updateOne({socketId}, {\r\n      $pull: {\r\n        \"social.blocked\": username\r\n      }\r\n    });\r\n\r\n    if (!updatePlayer.modifiedCount) { return; }\r\n\r\n    socket.emit(\"unblock\", {\r\n      friendname: username\r\n    });\r\n  });\r\n};\r\n","import type {App} from \"models\";\r\nimport type {Player} from \"services/MongoService/PlayerService.models\";\r\n\r\nexport const unfriend = (app: App): void => {\r\n  const {services} = app;\r\n  const {mongoService, socketService} = services;\r\n  const {$chats, $players} = mongoService;\r\n  const {io, socket, socketId} = socketService;\r\n\r\n  socket.on(\"unfriend\", async (params) => {\r\n    const {username} = params;\r\n    const sender = await $players.findOneAndUpdate({socketId}, {\r\n      $pull: {\r\n        \"social.friends\": username\r\n      } as Partial<Player>\r\n    }, {\r\n      returnDocument: \"after\"\r\n    });\r\n\r\n    if (!sender.value) { return; }\r\n\r\n    const receiver = await $players.findOneAndUpdate({username}, [{\r\n      $pull: {\r\n        \"social.friends\": sender.value.username\r\n      }\r\n    }], {\r\n      returnDocument: \"after\"\r\n    });\r\n\r\n    if (!receiver.value) { return; }\r\n\r\n    const deleteChat = await $chats.deleteOne({\r\n      players: {\r\n        $all: [username, sender.value.username]\r\n      }\r\n    });\r\n\r\n    if (!deleteChat.deletedCount) { return; }\r\n\r\n    socket.emit(\"unfriendSender\", {username});\r\n    io.to(receiver.value.socketId).emit(\"unfriendReceiver\", {\r\n      username: sender.value.username\r\n    });\r\n  });\r\n};\r\n","import {disconnect, getPrivateKeyHash, signin, signup} from \"./auth\";\r\n\r\nimport {\r\n  destroyLobby,\r\n  joinLobby,\r\n  leaveLobby,\r\n  makeLobby,\r\n  saveDeck,\r\n  selectDeck,\r\n  sendToken,\r\n  setDeckKlass,\r\n  setDeckName,\r\n  startGame\r\n} from \"./client\";\r\n\r\nimport {\r\n  attackHero,\r\n  attackMinion,\r\n  endTurn,\r\n  hoverCard,\r\n  playMinion,\r\n  unhoverCard\r\n} from \"./game\";\r\n\r\nimport {sendChatMsg, updateStatus} from \"./global\";\r\n\r\nimport {\r\n  acceptFriend,\r\n  addFriend,\r\n  block,\r\n  declineFriend,\r\n  setAvatar,\r\n  signout,\r\n  unblock,\r\n  unfriend\r\n} from \"./sidenav\";\r\n\r\nexport const requests = [\r\n  sendChatMsg,\r\n  updateStatus,\r\n\r\n  disconnect,\r\n  getPrivateKeyHash,\r\n  signin,\r\n  signup,\r\n\r\n  destroyLobby,\r\n  joinLobby,\r\n  leaveLobby,\r\n  makeLobby,\r\n  saveDeck,\r\n  selectDeck,\r\n  sendToken,\r\n  setDeckKlass,\r\n  setDeckName,\r\n  startGame,\r\n\r\n  attackHero,\r\n  attackMinion,\r\n  endTurn,\r\n  hoverCard,\r\n  playMinion,\r\n  unhoverCard,\r\n\r\n  acceptFriend,\r\n  addFriend,\r\n  block,\r\n  declineFriend,\r\n  setAvatar,\r\n  signout,\r\n  unblock,\r\n  unfriend\r\n];\r\n","import settings from \"settings\";\n\nimport type {\n  GetTableRowsResult,\n  PushTransactionArgs,\n  ReadOnlyTransactResult,\n} from \"eosjs/dist/eosjs-rpc-interfaces\";\n\nimport type {TransactResult} from \"eosjs/dist/eosjs-api-interfaces\";\nimport type {Api} from \"eosjs\";\n// import type {Game, Lobby, Player} from \"models\"\n\nexport class EosService {\n  private readonly _api: Api\n\n  constructor (api: Api) {\n    this._api = api;\n  }\n\n  public async findPlayer (username: string): Promise<any | undefined> {\n    const {contractAccount} = settings.eos;\n    let table!: GetTableRowsResult;\n\n    try {\n      table = await this._api.rpc.get_table_rows({\n        code: contractAccount,\n        scope: contractAccount,\n        table: \"players\",\n        lower_bound: username,\n        upper_bound: username,\n        limit: 1\n      });\n    } catch (error) {\n      console.error(error);\n    }\n\n    return table.rows[0];\n  }\n\n  // public async findLobby (lobby_id: number): Promise<Lobby | undefined> {\n  //   const {contractAccount} = settings.eos;\n  //   let table!: GetTableRowsResult;\n\n  //   try {\n  //     table = await this._apis.eos.rpc.get_table_rows({\n  //       code: contractAccount,\n  //       scope: contractAccount,\n  //       table: \"lobbies\",\n  //       lower_bound: lobby_id,\n  //       upper_bound: lobby_id\n  //     });\n  //   } catch (error) {\n  //     this._handleError(error);\n  //   }\n\n  //   return table.rows[0];\n  // }\n\n  // public async findGame (game_id: number): Promise<Game | undefined> {\n  //   const {contractAccount} = settings.eos;\n  //   let table!: GetTableRowsResult;\n\n  //   try {\n  //     table = await this._apis.eos.rpc.get_table_rows({\n  //       code: contractAccount,\n  //       scope: contractAccount,\n  //       table: \"games\",\n  //       lower_bound: game_id,\n  //       upper_bound: game_id\n  //     });\n  //   } catch (error) {\n  //     this._handleError(error);\n  //   }\n\n  //   return table.rows[0];\n  // }\n\n  public async transact (\n    action: string,\n    data: object\n  ): Promise<TransactResult | ReadOnlyTransactResult | PushTransactionArgs> {\n    const {contractAccount} = settings.eos;\n    let transaction!: TransactResult | ReadOnlyTransactResult | PushTransactionArgs;\n\n    try {\n      transaction = await this._api.transact({\n        actions: [{\n          account: contractAccount,\n          name: action,\n          authorization: [{\n            actor: contractAccount,\n            permission: \"active\"\n          }],\n          data\n        }]\n      }, {\n        blocksBehind: 3,\n        expireSeconds: 30\n      });\n    } catch (error) {\n      console.error(error);\n    }\n\n    return transaction;\n  }\n}\n","import type {Collection, Db} from \"mongodb\";\r\nimport type {SocketIds, Usernames} from \"./MongoService.types\";\r\nimport type {Chat} from \"./ChatService.models\";\r\nimport type {Game} from \"@som/shared/interfaces/mongo\";\r\nimport type {Lobby} from \"./LobbyService.models\";\r\nimport type {Player} from \"./PlayerService.models\";\r\n\r\nexport class MongoService {\r\n  readonly $chats: Collection<Chat>;\r\n  readonly $games: Collection<Game>;\r\n  readonly $lobbies: Collection<Lobby>;\r\n  readonly $players: Collection<Player>;\r\n\r\n  constructor (mongoDb: Db) {\r\n    this.$chats = mongoDb.collection(\"chats\");\r\n    this.$games = mongoDb.collection(\"games\");\r\n    this.$lobbies = mongoDb.collection(\"lobbies\");\r\n    this.$players = mongoDb.collection(\"players\");\r\n  }\r\n\r\n  async getSocketIds (usernames: Usernames): Promise<SocketIds> {\r\n    return await this\r\n      .$players\r\n      .find({username: {$in: usernames}})\r\n      .project({_id: 0, socketId: 1})\r\n      .map(({socketId}) => socketId)\r\n      .toArray();\r\n  }\r\n}\r\n","import type {Server, Socket} from \"socket.io\";\r\nimport type {SocketResponses} from \"@som/shared/interfaces/responses\";\r\nimport type {SocketRequests} from \"@som/shared/interfaces/requests\";\r\n\r\nexport class SocketService {\r\n  public readonly io: Server<SocketRequests, SocketResponses>;\r\n  public readonly socket: Socket<SocketRequests, SocketResponses>;\r\n  public readonly socketId: string;\r\n\r\n  constructor (io: Server, socket: Socket) {\r\n    this.io = io;\r\n    this.socket = socket;\r\n    this.socketId = socket.id;\r\n  }\r\n}\r\n","import {createServer} from \"http\";\r\nimport process from \"process\";\r\n\r\nimport {Api, JsonRpc} from \"eosjs\";\r\nimport {JsSignatureProvider} from \"eosjs/dist/eosjs-jssig.js\";\r\nimport {MongoClient} from \"mongodb\";\r\nimport fetch from \"node-fetch\";\r\nimport {Server} from \"socket.io\";\r\n\r\nimport settings from \"settings\";\r\nimport {GameController} from \"controllers\";\r\nimport {requests} from \"requests\";\r\nimport {EosService, MongoService, SocketService} from \"services\";\r\nimport type {Controllers, Services} from \"models\";\r\n\r\nconst {\r\n  mongo: {uri},\r\n  eos: {endpoint, contractKey},\r\n  socket: {opts},\r\n  server: {port}\r\n} = settings;\r\n\r\nconst httpServer = createServer();\r\nconst ioServer = new Server(httpServer, opts);\r\n\r\nconst mongoClient = await MongoClient.connect(uri);\r\nconst mongoDb = mongoClient.db(\"som\");\r\n\r\nconst eosApi = new Api({\r\n  rpc: new JsonRpc(endpoint, {fetch}),\r\n  signatureProvider: new JsSignatureProvider([contractKey]),\r\n  textDecoder: new TextDecoder(),\r\n  textEncoder: new TextEncoder()\r\n});\r\n\r\nconst eosService = new EosService(eosApi);\r\nconst mongoService = new MongoService(mongoDb);\r\n\r\nioServer.on(\"connection\", (socket): void => {\r\n  const socketService = new SocketService(ioServer, socket);\r\n  const services: Services = {eosService, mongoService, socketService};\r\n\r\n  const gameController = new GameController(services);\r\n  const controllers: Controllers = {gameController};\r\n\r\n  requests.forEach((request): void => request({services, controllers}));\r\n});\r\n\r\nprocess.on(\"unhandledRejection\", async (reason, promise) => {\r\n  const occuredAt = Date.now();\r\n\r\n  await mongoDb.collection(\"errors\").insertOne({occuredAt, promise, reason});\r\n\r\n  console.log(\"Error!\\n\", {reason, promise});\r\n});\r\n\r\nhttpServer.listen(port);\r\n"],"names":["process"],"mappings":"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"}