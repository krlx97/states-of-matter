{"version":3,"file":"index.js","sources":["../src/settings.ts","../src/requests/global/sendChatMsg.ts","../src/requests/global/updateFriend.ts","../src/requests/auth/disconnect.ts","../src/requests/auth/getPrivateKeyHash.ts","../src/requests/auth/signin.ts","../src/requests/auth/signup.ts","../src/requests/client/destroyLobby.ts","../src/requests/client/joinLobby.ts","../src/requests/client/leaveLobby.ts","../src/requests/client/makeLobby.ts","../src/requests/client/saveDeck.ts","../src/requests/client/selectDeck.ts","../src/requests/client/sendToken.ts","../src/requests/client/setDeckKlass.ts","../src/requests/client/setDeckName.ts","../src/requests/client/startGame.ts","../src/requests/game/attackCard.ts","../src/requests/game/endTurn.ts","../src/requests/game/hoverCard.ts","../src/requests/game/playCard.ts","../src/requests/game/unhoverCard.ts","../src/requests/sidenav/acceptFriend.ts","../src/requests/sidenav/addFriend.ts","../src/requests/sidenav/block.ts","../src/requests/sidenav/declineFriend.ts","../src/requests/sidenav/setAvatar.ts","../src/requests/sidenav/signout.ts","../src/requests/sidenav/unblock.ts","../src/requests/sidenav/unfriend.ts","../src/requests/index.ts","../src/services/EosService/EosService.ts","../src/services/MongoService/MongoService.ts","../src/services/SocketService/SocketService.ts","../src/services/GameEngine.ts","../src/index.ts"],"sourcesContent":["const production = false;\r\n\r\nconst settings = {\r\n  mongo: {\r\n    uri: \"mongodb://localhost:27017\"\r\n  },\r\n  eos: {\r\n    endpoint: \"https://testnet.telos.net\",\r\n    contractAccount: \"telosgamesbp\",\r\n    contractKey: process.env.EOS_CONTRACT_KEY || \"5K2rKojEWKC1UmmiyWKvvXcVeS1Devq2LQEgDyKejyFNJAX2AX2\"\r\n  },\r\n  socket: {\r\n    opts: production ? {} : {\r\n      cors: {\r\n        origin: \"*\"\r\n      }\r\n    }\r\n  },\r\n  server: {\r\n    port: process.env.PORT || 4200\r\n  }\r\n};\r\n\r\nexport default settings;\r\n","import type {Services} from \"models\";\r\n\r\nexport const sendChatMsg = (services: Services): void => {\r\n  const {mongoService, socketService} = services;\r\n  const {$chats, $players} = mongoService;\r\n  const {io, socket} = socketService;\r\n\r\n  socket.on(\"sendChatMsg\", async (params) => {\r\n    const {sender, receiver, text, date} = params;\r\n    const updateChat = await $chats.updateOne({\r\n      players: {$all: [sender, receiver]}\r\n    }, {\r\n      $push: {\r\n        messages: {sender, text, date}\r\n      }\r\n    });\r\n\r\n    if (!updateChat.modifiedCount) { return; }\r\n\r\n    socket.emit(\"sendChatMsgSender\", {sender, receiver, text, date});\r\n\r\n    const player = await $players.findOne({\r\n      username: receiver\r\n    });\r\n\r\n    if (!player || !player.socketId) { return; }\r\n\r\n    io.to(player.socketId).emit(\"sendChatMsgReceiver\", {sender, text, date});\r\n  });\r\n};\r\n","import type {Services} from \"models\";\r\n\r\nexport const updateFriend = (services: Services): void => {\r\n  const {mongoService, socketService} = services;\r\n  const {$players} = mongoService;\r\n  const {io, socket, socketId} = socketService;\r\n\r\n  socket.on(\"updateStatus\", async () => {\r\n    const player = await $players.findOne({socketId});\r\n\r\n    if (!player) { return; }\r\n\r\n    const {username, status, social: {friends}} = player;\r\n    const socketIds = await mongoService.getSocketIds(friends);\r\n\r\n    io.to(socketIds).emit(\"updateStatus\", {username, status});\r\n  });\r\n};\r\n","import {PlayerStatus} from \"@som/shared/enums\";\r\nimport type {SocketRequest} from \"models\";\r\n\r\nexport const disconnect: SocketRequest = (services) => {\r\n  const {mongoService, socketService} = services;\r\n  const {$players} = mongoService;\r\n  const {io, socket, socketId} = socketService;\r\n\r\n  socket.on(\"disconnect\", async (reason) => {\r\n    const $player = await $players.findOneAndUpdate({socketId}, {\r\n      $set: {\r\n        socketId: \"\",\r\n        status: PlayerStatus.OFFLINE\r\n      }\r\n    }, {\r\n      returnDocument: \"after\"\r\n    });\r\n\r\n    if (!$player.value) { return; }\r\n\r\n    const {username, status, social} = $player.value;\r\n    const socketIds = await mongoService.getSocketIds(social.friends);\r\n\r\n    io.to(socketIds).emit(\"updateStatus\", {username, status});\r\n  });\r\n};\r\n","import type {SocketRequest} from \"models\";\r\n\r\nexport const getPrivateKeyHash: SocketRequest = (services) => {\r\n  const {mongoService, socketService} = services;\r\n  const {$players} = mongoService;\r\n  const {socket} = socketService;\r\n\r\n  socket.on(\"getPrivateKeyHash\", async (params) => {\r\n    const {username} = params;\r\n    const $player = await $players.findOne({username});\r\n\r\n    if (!$player) {\r\n      socket.emit(\"notification\", \"Player not found.\");\r\n      return;\r\n    }\r\n\r\n    const {privateKeyHash} = $player;\r\n    socket.emit(\"getPrivateKeyHash\", {privateKeyHash});\r\n  });\r\n};\r\n","import {PlayerStatus} from \"@som/shared/enums\";\r\nimport type {SocketRequest} from \"models\";\r\n\r\n// this needs refactoring...\r\nexport const signin: SocketRequest = (services) => {\r\n  const {eosService, mongoService, socketService} = services;\r\n  const {$chats, $games, $lobbies, $players} = mongoService;\r\n  const {socket, socketId} = socketService;\r\n\r\n  socket.on(\"signin\", async (params) => {\r\n    const {username, publicKey, signature} = params;\r\n    let lobby, game;\r\n\r\n    // const transaction = await blockchainService.transact(\"signin\", {publicKey, signature});\r\n\r\n    // if (!transaction) { return; }\r\n\r\n    const $player = await $players.findOneAndUpdate({username}, [{\r\n      $set: {\r\n        socketId,\r\n        status: {\r\n          $switch: {\r\n            branches: [{\r\n              case: {\r\n                $gt: [\"$lobbyId\", 0]\r\n              },\r\n              then: PlayerStatus.INLOBBY\r\n            }, {\r\n              case: {\r\n                $gt: [\"$gameId\", 0]\r\n              },\r\n              then: PlayerStatus.INGAME\r\n            }],\r\n            default: PlayerStatus.ONLINE\r\n          }\r\n        }\r\n      }\r\n    }], {\r\n      returnDocument: \"after\"\r\n    });\r\n\r\n    const player$ = await eosService.findPlayer(username);\r\n\r\n    if (!$player.value || !player$) { return; }\r\n\r\n    const {wallet, last_nonce} = player$;\r\n    const {friends} = $player.value.social;\r\n    const friendsView: Array<any> = [];\r\n\r\n    for (const friendname of friends) {\r\n      const [friend, chat] = await Promise.all([\r\n        $players.findOne({\r\n          username: friendname\r\n        }),\r\n        $chats.findOne({\r\n          players: {\r\n            $all: [username, friendname]\r\n          }\r\n        })\r\n      ]);\r\n\r\n      if (!friend || !chat) { return; }\r\n\r\n      const {status, avatarId} = friend;\r\n      const {messages} = chat;\r\n\r\n      friendsView.push({username: friendname, status, avatarId, messages});\r\n    }\r\n\r\n    const {lobbyId, gameId} = $player.value;\r\n    let gameView;\r\n\r\n    if (lobbyId) {\r\n      lobby = await $lobbies.findOne({lobbyId});\r\n\r\n      if (!lobby) { return; }\r\n    } else if (gameId) {\r\n      game = await $games.findOne({gameId});\r\n\r\n      if (!game) { return; }\r\n\r\n      if ($player.value.username === game.playerA.username) {\r\n        gameView = {\r\n          gameId: game.gameId,\r\n          currentPlayer: game.currentPlayer,\r\n          player: game.playerA,\r\n          opponent: {\r\n            ...game.playerB,\r\n            deck: game.playerB.deck.length,\r\n            hand: game.playerB.hand.length\r\n          }\r\n        };\r\n      } else {\r\n        gameView = {\r\n          gameId: game.gameId,\r\n          currentPlayer: game.currentPlayer,\r\n          player: game.playerB,\r\n          opponent: {\r\n            ...game.playerA,\r\n            deck: game.playerA.deck.length,\r\n            hand: game.playerA.hand.length\r\n          }\r\n        };\r\n      }\r\n    }\r\n\r\n    socket.emit(\"signin\", {\r\n      player: {...$player.value, wallet, last_nonce},\r\n      friends: friendsView,\r\n      lobby,\r\n      game: gameView\r\n    });\r\n  });\r\n};\r\n","import {PlayerStatus} from \"@som/shared/enums\";\r\nimport type {SocketRequest} from \"models\";\r\n\r\nexport const signup: SocketRequest = (services) => {\r\n  const {eosService, mongoService, socketService} = services;\r\n  const {$players} = mongoService;\r\n  const {socket} = socketService;\r\n\r\n  socket.on(\"signup\", async (params) => {\r\n    const {username, publicKey, privateKeyHash} = params;\r\n    const $player = await $players.findOne({username});\r\n\r\n    if ($player) {\r\n      socket.emit(\"notification\", \"Username taken.\");\r\n      return;\r\n    }\r\n\r\n    const [transaction, insertPlayer] = await Promise.all([\r\n      eosService.transact(\"signup\", {\r\n        username,\r\n        public_key: publicKey\r\n      }),\r\n      $players.insertOne({\r\n        socketId: \"\",\r\n        username,\r\n        publicKey,\r\n        privateKeyHash,\r\n        status: PlayerStatus.OFFLINE,\r\n        xp: 0,\r\n        lv: 1,\r\n        deckId: 0,\r\n        avatarId: 0,\r\n        lobbyId: 0,\r\n        gameId: 0,\r\n        decks: [\r\n          {id: 0, klass: 1, name: \"Deck 1\", cards: []},\r\n          {id: 1, klass: 2, name: \"Deck 2\", cards: []},\r\n          {id: 2, klass: 3, name: \"Deck 3\", cards: []},\r\n          {id: 3, klass: 4, name: \"Deck 4\", cards: []}\r\n        ],\r\n        social: {\r\n          friends: [],\r\n          requests: [],\r\n          blocked: []\r\n        }\r\n      })\r\n    ]);\r\n\r\n    if (!transaction || !insertPlayer.insertedId) {\r\n      socket.emit(\"notification\", \"Error creating account.\");\r\n      return;\r\n      // if signup fails on-chain, should we check whether it passed off-chain\r\n      // and remove the document from mongodb?\r\n    }\r\n\r\n    socket.emit(\"notification\", \"Account created successfully.\");\r\n  });\r\n};\r\n","import {PlayerStatus} from \"@som/shared/enums\";\r\nimport type {SocketRequest} from \"models\";\r\n\r\nexport const destroyLobby: SocketRequest = (services) => {\r\n  const {mongoService, socketService} = services;\r\n  const {$lobbies, $players} = mongoService;\r\n  const {io, socket, socketId} = socketService;\r\n\r\n  socket.on(\"destroyLobby\", async () => {\r\n    const $player = await $players.findOne({socketId});\r\n\r\n    if (!$player) { return; }\r\n\r\n    const {username, lobbyId} = $player;\r\n\r\n    if (!lobbyId) {\r\n      socket.emit(\"notification\", \"You are not in a lobby.\");\r\n      return;\r\n    }\r\n\r\n    const lobby = await $lobbies.findOne({lobbyId});\r\n\r\n    if (!lobby) { return; }\r\n\r\n    if (username !== lobby.host.username) {\r\n      socket.emit(\"notification\", \"You are not the lobby host.\");\r\n      return;\r\n    }\r\n\r\n    const [deleteLobby, updatePlayer] = await Promise.all([\r\n      $lobbies.deleteOne({lobbyId}),\r\n      $players.updateOne({socketId}, {\r\n        $set: {\r\n          lobbyId: 0,\r\n          status: PlayerStatus.ONLINE\r\n        }\r\n      })\r\n    ]);\r\n\r\n    if (!deleteLobby.deletedCount || !updatePlayer.modifiedCount) { return; }\r\n\r\n    if (lobby.challengee.username) {\r\n      const challengee = await $players.findOneAndUpdate({\r\n        username: lobby.challengee.username\r\n      }, {\r\n        $set: {\r\n          lobbyId: 0,\r\n          status: PlayerStatus.ONLINE\r\n        }\r\n      }, {\r\n        returnDocument: \"after\"\r\n      });\r\n\r\n      if (!challengee.value) { return; }\r\n    }\r\n\r\n    socket.emit(\"destroyLobby\");\r\n    io.to(lobby.challengee.socketId).emit(\"destroyLobby\");\r\n  });\r\n};\r\n","import {PlayerStatus} from \"@som/shared/enums\";\r\nimport type {SocketRequest} from \"models\";\r\n\r\nexport const joinLobby: SocketRequest = (services) => {\r\n  const {mongoService, socketService} = services;\r\n  const {$lobbies, $players} = mongoService;\r\n  const {io, socket, socketId} = socketService;\r\n\r\n  socket.on(\"joinLobby\", async (params) => {\r\n    const {lobbyId} = params;\r\n    const [$player, $lobby] = await Promise.all([\r\n      $players.findOne({socketId}),\r\n      $lobbies.findOne({lobbyId})\r\n    ]);\r\n\r\n    if (!$player) {\r\n      socket.emit(\"notification\", \"Player not found.\");\r\n      return;\r\n    }\r\n    if (!$lobby) {\r\n      socket.emit(\"notification\", \"Lobby not found.\");\r\n      return;\r\n    }\r\n    if ($player.lobbyId) {\r\n      socket.emit(\"notification\", \"You are already in a lobby.\");\r\n      return;\r\n    }\r\n    if ($player.gameId) {\r\n      socket.emit(\"notification\", \"You can't join a lobby while in game.\");\r\n      return;\r\n    }\r\n    if ($lobby.challengee.username) {\r\n      socket.emit(\"notification\", \"Lobby is full.\");\r\n      return;\r\n    }\r\n\r\n    const {username, avatarId} = $player;\r\n    const [modifiedLobby, updatedPlayer] = await Promise.all([\r\n      $lobbies.findOneAndUpdate({lobbyId}, {\r\n        $set: {\r\n          challengee: {username, socketId, avatarId}\r\n        }\r\n      }, {\r\n        returnDocument: \"after\"\r\n      }),\r\n      $players.updateOne({socketId}, {\r\n        $set: {\r\n          lobbyId,\r\n          status: PlayerStatus.INLOBBY\r\n        }\r\n      })\r\n    ]);\r\n\r\n    if (!modifiedLobby.value || !updatedPlayer.modifiedCount) {\r\n      socket.emit(\"notification\", \"Error joining lobby.\");\r\n      return;\r\n    }\r\n\r\n    const lobby = modifiedLobby.value;\r\n    const {challengee} = modifiedLobby.value;\r\n\r\n    socket.emit(\"joinLobbySender\", {lobby});\r\n    io.to($lobby.host.socketId).emit(\"joinLobbyReceiver\", {challengee});\r\n  });\r\n};\r\n","import {PlayerStatus} from \"@som/shared/enums\";\r\nimport type {SocketRequest} from \"models\";\r\n\r\nexport const leaveLobby: SocketRequest = (services) => {\r\n  const {mongoService, socketService} = services;\r\n  const {$lobbies, $players} = mongoService;\r\n  const {io, socket, socketId} = socketService;\r\n\r\n  socket.on(\"leaveLobby\", async () => {\r\n    const $player = await $players.findOne({socketId});\r\n\r\n    if (!$player) {\r\n      socket.emit(\"notification\", \"Player not found.\");\r\n      return;\r\n    }\r\n    if (!$player.lobbyId) {\r\n      socket.emit(\"notification\", \"You are not in a lobby.\");\r\n      return;\r\n    }\r\n\r\n    const {lobbyId} = $player;\r\n    const $lobby = await $lobbies.findOne({lobbyId});\r\n\r\n    if (!$lobby) {\r\n      socket.emit(\"notification\", \"Lobby not found.\");\r\n      return;\r\n    }\r\n\r\n    const [$updateLobby, $updatePlayer] = await Promise.all([\r\n      $lobbies.updateOne({lobbyId}, {\r\n        $set: {\r\n          challengee: {\r\n            username: \"\",\r\n            socketId: \"\",\r\n            avatarId: 0\r\n          }\r\n        }\r\n      }),\r\n      $players.updateOne({socketId}, {\r\n        $set: {\r\n          lobbyId: 0,\r\n          status: PlayerStatus.ONLINE\r\n        }\r\n      })\r\n    ]);\r\n\r\n    if (!$updateLobby.modifiedCount || !$updatePlayer.modifiedCount) { return; }\r\n\r\n    socket.emit(\"leaveLobbySender\");\r\n    io.to($lobby.host.socketId).emit(\"leaveLobbyReceiver\");\r\n  });\r\n};\r\n","import {randomInt} from \"crypto\";\r\nimport {PlayerStatus} from \"@som/shared/enums\";\r\nimport type {SocketRequest} from \"models\";\r\n\r\nexport const makeLobby: SocketRequest = (services) => {\r\n  const {mongoService, socketService} = services;\r\n  const {$lobbies, $players} = mongoService;\r\n  const {socket, socketId} = socketService;\r\n\r\n  socket.on(\"makeLobby\", async () => {\r\n    const player = await $players.findOne({socketId});\r\n\r\n    if (!player) {\r\n      socket.emit(\"notification\", \"Player not found.\");\r\n      return;\r\n    }\r\n    if (player.lobbyId) {\r\n      socket.emit(\"notification\", \"You are already in a lobby.\");\r\n      return;\r\n    }\r\n    if (player.gameId) {\r\n      socket.emit(\"notification\", \"You can't make a lobby while in game.\");\r\n      return;\r\n    }\r\n\r\n    const {username, avatarId} = player;\r\n    const lobbyId = randomInt(1, 1000000);\r\n    const [insertLobby, updatePlayer] = await Promise.all([\r\n      $lobbies.insertOne({\r\n        lobbyId,\r\n        host: {username, socketId, avatarId},\r\n        challengee: {\r\n          username: \"\",\r\n          socketId: \"\",\r\n          avatarId: 0\r\n        }\r\n      }),\r\n      $players.updateOne({socketId}, {\r\n        $set: {\r\n          lobbyId,\r\n          status: PlayerStatus.INLOBBY\r\n        }\r\n      })\r\n    ]);\r\n\r\n    if (!insertLobby.insertedId || !updatePlayer.modifiedCount) { return; }\r\n\r\n    const lobby = await $lobbies.findOne({lobbyId});\r\n\r\n    if (!lobby) { return; }\r\n\r\n    socket.emit(\"makeLobby\", {lobby});\r\n  });\r\n};\r\n","import type {SocketRequest} from \"models\";\r\n\r\nexport const saveDeck: SocketRequest = (services) => {\r\n  const {mongoService, socketService} = services;\r\n  const {$players} = mongoService;\r\n  const {socket, socketId} = socketService;\r\n\r\n  socket.on(\"saveDeck\", async (params) => {\r\n    const {cards} = params;\r\n    const player = await $players.findOne({socketId});\r\n\r\n    if (!player) { return; }\r\n\r\n    const {deckId} = player;\r\n    const updatePlayer = await $players.updateOne({\r\n      socketId,\r\n      \"decks.id\": deckId\r\n    }, {\r\n      $set: {\r\n        \"decks.$.cards\": cards\r\n      }\r\n    });\r\n\r\n    if (!updatePlayer.modifiedCount) { return; }\r\n\r\n    socket.emit(\"saveDeck\", {cards});\r\n  });\r\n};\r\n","import type {SocketRequest} from \"models\";\r\n\r\nexport const selectDeck: SocketRequest = (services) => {\r\n  const {mongoService, socketService} = services;\r\n  const {$players} = mongoService;\r\n  const {socket, socketId} = socketService;\r\n\r\n  socket.on(\"selectDeck\", async (params) => {\r\n    const {deckId} = params;\r\n    const updatePlayer = await $players.updateOne({socketId}, {\r\n      $set: {deckId}\r\n    });\r\n\r\n    if (!updatePlayer.modifiedCount) { return; }\r\n\r\n    socket.emit(\"selectDeck\", {deckId});\r\n  });\r\n};\r\n","import type {SocketRequest} from \"models\";\r\n\r\nexport const sendToken: SocketRequest = (services) => {\r\n  const {eosService, socketService} = services;\r\n  const {socket} = socketService;\r\n\r\n  socket.on(\"sendToken\", async (params) => {\r\n    const transaction = await eosService.transact(\"transfer\", params);\r\n\r\n    if (!transaction) {\r\n      socket.emit(\"notification\", \"Error sending token.\");\r\n      return;\r\n    }\r\n  });\r\n};\r\n","import type {SocketRequest} from \"models\";\r\n\r\nexport const setDeckKlass: SocketRequest = (services) => {\r\n  const {mongoService, socketService} = services;\r\n  const {$players} = mongoService;\r\n  const {socket, socketId} = socketService;\r\n\r\n  socket.on(\"setDeckKlass\", async (params) => {\r\n    const {deckId, klass} = params;\r\n    const updatePlayer = await $players.updateOne({\r\n      socketId,\r\n      \"decks.id\": deckId\r\n    }, {\r\n      $set: {\r\n        \"decks.$.klass\": klass\r\n      }\r\n    });\r\n\r\n    if (!updatePlayer.modifiedCount) { return; }\r\n\r\n    socket.emit(\"setDeckKlass\", {deckId, klass});\r\n  });\r\n};\r\n","import type {SocketRequest} from \"models\";\r\n\r\nexport const setDeckName: SocketRequest = (services) => {\r\n  const {mongoService, socketService} = services;\r\n  const {$players} = mongoService;\r\n  const {socket, socketId} = socketService;\r\n\r\n  socket.on(\"setDeckName\", async (params) => {\r\n    const {id, name} = params;\r\n    const $updatePlayer = await $players.updateOne({\r\n      socketId,\r\n      \"decks.id\": id\r\n    }, {\r\n      $set: {\r\n        \"decks.$.name\": name\r\n      }\r\n    });\r\n\r\n    if (!$updatePlayer.modifiedCount) { return; }\r\n\r\n    socket.emit(\"setDeckName\", {id, name});\r\n  });\r\n};\r\n","import {randomInt} from \"crypto\";\r\nimport {cards} from \"@som/shared/data\";\r\nimport {CardType, PlayerStatus} from \"@som/shared/enums\";\r\nimport type {GamePlayerMinion, GamePlayerMagic, GamePlayerTrap, Game} from \"@som/shared/interfaces/mongo\";\r\nimport type {SocketRequest} from \"models\";\r\n\r\nfunction shuffleArray (array: Array<GamePlayerMinion | GamePlayerMagic | GamePlayerTrap>): void {\r\n  for (let i = array.length - 1; i > 0; i--) {\r\n    const j = randomInt(0, i + 1);\r\n    const temp = array[i];\r\n    array[i] = array[j];\r\n    array[j] = temp;\r\n  }\r\n}\r\n\r\nexport const startGame: SocketRequest = (services) => {\r\n  const {mongoService, socketService} = services;\r\n  const {$games, $lobbies, $players} = mongoService;\r\n  const {io, socket} = socketService;\r\n\r\n  socket.on(\"startGame\", async (params) => {\r\n    const {lobbyId} = params;\r\n    const $lobby = await $lobbies.findOne({lobbyId});\r\n    const $deleteLobby = await $lobbies.deleteOne({lobbyId});\r\n\r\n    if (!$lobby || !$deleteLobby.deletedCount) { return; }\r\n\r\n    const [playerA, playerB] = await Promise.all([\r\n      $players.findOneAndUpdate({\r\n        username: $lobby.host.username\r\n      }, {\r\n        $set: {\r\n          lobbyId: 0,\r\n          gameId: lobbyId,\r\n          status: PlayerStatus.INGAME\r\n        }\r\n      }, {\r\n        returnDocument: \"after\"\r\n      }),\r\n      $players.findOneAndUpdate({\r\n        username: $lobby.challengee.username\r\n      }, {\r\n        $set: {\r\n          lobbyId: 0,\r\n          gameId: lobbyId,\r\n          status: PlayerStatus.INGAME\r\n        }\r\n      }, {\r\n        returnDocument: \"after\"\r\n      })\r\n    ]);\r\n\r\n    if (!playerA.value || !playerB.value) return;\r\n\r\n    let gid = 1;\r\n    let playerADeck: Array<GamePlayerMinion | GamePlayerMagic | GamePlayerTrap> = [];\r\n    const playerAHand: Array<GamePlayerMinion | GamePlayerMagic | GamePlayerTrap> = [];\r\n    let playerBDeck: Array<GamePlayerMinion | GamePlayerMagic | GamePlayerTrap> = [];\r\n    const playerBHand: Array<GamePlayerMinion | GamePlayerMagic | GamePlayerTrap> = [];\r\n\r\n    for (let i = 0; i < playerA.value.decks[playerA.value.deckId].cards.length; i += 1) {\r\n      let id = playerA.value.decks[playerA.value.deckId].cards[i].id;\r\n      const card = cards.find((card) => card.id === id);\r\n\r\n      if (!card) return;\r\n\r\n      if (card.health) {\r\n        playerADeck.push({gid, ...card, maxHealth: card.health});\r\n      } else {\r\n        playerADeck.push({gid, ...card});\r\n      }\r\n\r\n      gid += 1;\r\n\r\n      if (playerA.value.decks[playerA.value.deckId].cards[i].amount > 1) {\r\n        if (card.health) {\r\n          playerADeck.push({gid, ...card, maxHealth: card.health});\r\n        } else {\r\n          playerADeck.push({gid, ...card});\r\n        }\r\n\r\n        gid += 1;\r\n      }\r\n    }\r\n\r\n    for (let i = 0; i < playerB.value.decks[playerB.value.deckId].cards.length; i += 1) {\r\n      let id = playerB.value.decks[playerB.value.deckId].cards[i].id;\r\n      const card = cards.find((card) => card.id === id);\r\n\r\n      if (!card) return;\r\n\r\n      if (card.health) {\r\n        playerBDeck.push({gid, ...card, maxHealth: card.health});\r\n      } else {\r\n        playerBDeck.push({gid, ...card});\r\n      }\r\n\r\n      gid += 1;\r\n\r\n      if (playerB.value.decks[playerB.value.deckId].cards[i].amount > 1) {\r\n        if (card.health) {\r\n          playerBDeck.push({gid, ...card, maxHealth: card.health});\r\n        } else {\r\n          playerBDeck.push({gid, ...card});\r\n        }\r\n\r\n        gid += 1;\r\n      }\r\n    }\r\n\r\n    // playerB.decks[playerB.deckId].cards.\r\n    shuffleArray(playerADeck)\r\n    shuffleArray(playerBDeck)\r\n\r\n    playerAHand.push(...playerADeck.slice(-5));\r\n    playerBHand.push(...playerBDeck.slice(-5));\r\n\r\n    playerADeck = playerADeck.slice(0, -5);\r\n    playerBDeck = playerBDeck.slice(0, -5);\r\n\r\n    const game: Game = {\r\n      gameId: $lobby.lobbyId,\r\n      currentPlayer: $lobby.host.username,\r\n      playerA: {\r\n        username: $lobby.host.username,\r\n        fields: {\r\n          hero: {\r\n            id: 2, // should be deck.klass\r\n            type: CardType.HERO,\r\n            health: 600,\r\n            maxHealth: 600,\r\n            mana: 100,\r\n            maxMana: 100,\r\n            damage: 30,\r\n            passive: 25\r\n          },\r\n          minionA: undefined,\r\n          minionB: undefined,\r\n          minionC: undefined,\r\n          minionD: undefined,\r\n          minionE: undefined,\r\n          minionF: undefined,\r\n          magic: undefined,\r\n          trap: undefined\r\n        },\r\n        hand: playerAHand,\r\n        deck: playerADeck,\r\n        graveyard: []\r\n      },\r\n      playerB: {\r\n        username: $lobby.challengee.username,\r\n        fields: {\r\n          hero: {\r\n            id: 4, // should be deck.klass\r\n            type: CardType.HERO,\r\n            health: 600,\r\n            maxHealth: 600,\r\n            mana: 100,\r\n            maxMana: 100,\r\n            damage: 20,\r\n            passive: 25\r\n          },\r\n          minionA: undefined,\r\n          minionB: undefined,\r\n          minionC: undefined,\r\n          minionD: undefined,\r\n          minionE: undefined,\r\n          minionF: undefined,\r\n          magic: undefined,\r\n          trap: undefined\r\n        },\r\n        hand: playerBHand,\r\n        deck: playerBDeck,\r\n        graveyard: []\r\n      },\r\n    };\r\n\r\n    const isInserted = await $games.insertOne(game);\r\n\r\n    if (!isInserted.insertedId) { return; }\r\n\r\n    const gameSender = {\r\n      gameId: $lobby.lobbyId,\r\n      currentPlayer: $lobby.host.username,\r\n      player: {\r\n        username: $lobby.host.username,\r\n        fields: {\r\n          hero: {\r\n            id: 2, // should be deck.klass\r\n            type: CardType.HERO,\r\n            health: 600,\r\n            maxHealth: 600,\r\n            mana: 100,\r\n            maxMana: 100,\r\n            damage: 30,\r\n            passive: 25\r\n          },\r\n          minionA: undefined,\r\n          minionB: undefined,\r\n          minionC: undefined,\r\n          minionD: undefined,\r\n          minionE: undefined,\r\n          minionF: undefined,\r\n          magic: undefined,\r\n          trap: undefined\r\n        },\r\n        hand: playerAHand,\r\n        deck: playerADeck,\r\n        graveyard: []\r\n      },\r\n      opponent: {\r\n        username: $lobby.challengee.username,\r\n        fields: {\r\n          hero: {\r\n            id: 4, // should be deck.klass\r\n            type: CardType.HERO,\r\n            health: 600,\r\n            maxHealth: 600,\r\n            mana: 100,\r\n            maxMana: 100,\r\n            damage: 20,\r\n            passive: 25\r\n          },\r\n          minionA: undefined,\r\n          minionB: undefined,\r\n          minionC: undefined,\r\n          minionD: undefined,\r\n          minionE: undefined,\r\n          minionF: undefined,\r\n          magic: undefined,\r\n          trap: undefined\r\n        },\r\n        hand: playerBHand.length,\r\n        deck: playerBDeck.length,\r\n        graveyard: []\r\n      }\r\n    };\r\n\r\n    const gameReceiver = {\r\n      gameId: $lobby.lobbyId,\r\n      currentPlayer: $lobby.host.username,\r\n      player: {\r\n        username: $lobby.challengee.username,\r\n        fields: {\r\n          hero: {\r\n            id: 4, // should be deck.klass\r\n            type: CardType.HERO,\r\n            health: 600,\r\n            maxHealth: 600,\r\n            mana: 100,\r\n            maxMana: 100,\r\n            damage: 20,\r\n            passive: 25\r\n          },\r\n          minionA: undefined,\r\n          minionB: undefined,\r\n          minionC: undefined,\r\n          minionD: undefined,\r\n          minionE: undefined,\r\n          minionF: undefined,\r\n          magic: undefined,\r\n          trap: undefined,\r\n        },\r\n        hand: playerBHand,\r\n        deck: playerBDeck,\r\n        graveyard: []\r\n      },\r\n      opponent: {\r\n        username: $lobby.host.username,\r\n        fields: {\r\n          hero: {\r\n            id: 2, // should be deck.klass\r\n            type: CardType.HERO,\r\n            health: 600,\r\n            maxHealth: 600,\r\n            mana: 100,\r\n            maxMana: 100,\r\n            damage: 30,\r\n            passive: 25\r\n          },\r\n          minionA: undefined,\r\n          minionB: undefined,\r\n          minionC: undefined,\r\n          minionD: undefined,\r\n          minionE: undefined,\r\n          minionF: undefined,\r\n          magic: undefined,\r\n          trap: undefined,\r\n        },\r\n        hand: playerAHand.length,\r\n        deck: playerADeck.length,\r\n        graveyard: []\r\n      }\r\n    };\r\n\r\n    socket.emit(\"startGame\", {game: gameSender});\r\n\r\n    const {username} = $lobby.challengee;\r\n    const challengee = await $players.findOne({username});\r\n\r\n    if (!challengee || !challengee.socketId) { return; }\r\n\r\n    io.to(challengee.socketId).emit(\"startGame\", {game: gameReceiver});\r\n  });\r\n};\r\n","import {CardType, PlayerStatus} from \"@som/shared/enums\";\r\nimport {GameHeroCard, GameMinionCard} from \"@som/shared/interfaces/mongo\";\r\nimport type {SocketRequest} from \"models\";\r\n\r\nexport const attackCard: SocketRequest = (services) => {\r\n  const {mongoService, socketService, gameEngine} = services;\r\n  const {$games, $players} = mongoService;\r\n  const {io, socket, socketId} = socketService;\r\n\r\n  socket.on(\"attackCard\", async (params) => {\r\n    const {attacked, attacker} = params;\r\n    const player = await $players.findOne({socketId});\r\n\r\n    if (!player) { return; }\r\n\r\n    const {gameId} = player;\r\n    const game = await $games.findOne({gameId});\r\n\r\n    if (!game) { return; }\r\n\r\n    const {playerA, playerB} = game;\r\n    let opponentUsername: string;\r\n    let _attacker: GameHeroCard | GameMinionCard | undefined;\r\n    let _attacked: GameHeroCard | GameMinionCard | undefined;\r\n\r\n    if (player.username === playerA.username) {\r\n      opponentUsername = playerB.username;\r\n      _attacker = playerA.fields[attacker];\r\n      _attacked = playerB.fields[attacked];\r\n    } else {\r\n      opponentUsername = playerA.username;\r\n      _attacker = playerB.fields[attacker];\r\n      _attacked = playerA.fields[attacked];\r\n    }\r\n\r\n    if (!_attacker || !_attacked) { return; }\r\n\r\n    _attacker.health -= _attacked.damage;\r\n    _attacked.health -= _attacker.damage;\r\n\r\n    if (_attacker.health <= 0 && attacker === \"hero\") {\r\n      await gameEngine.endGame(services, gameId, \"B\");\r\n      return;\r\n    }\r\n\r\n    if (_attacked.health <= 0 && attacked === \"hero\") {\r\n      await gameEngine.endGame(services, gameId, \"A\");\r\n      return;\r\n    }\r\n\r\n    if (_attacker.health <= 0 && attacker !== \"hero\") {\r\n      playerA.graveyard.push(playerA.fields[attacker] as any);\r\n      playerA.fields[attacker] = undefined;\r\n    } else if (_attacked.health <= 0 && attacked !== \"hero\") {\r\n      playerB.graveyard.push(playerB.fields[attacked] as any);\r\n      playerB.fields[attacked] = undefined;\r\n    }\r\n\r\n    await $games.updateOne({gameId}, {$set: {playerA, playerB}});\r\n\r\n    socket.emit(\"attackCardSender\", {attacked, attacker});\r\n\r\n    const opponent = await $players.findOne({\r\n      username: opponentUsername\r\n    });\r\n\r\n    if (!opponent || !opponent.socketId) { return; }\r\n\r\n    io.to(opponent.socketId).emit(\"attackCardReceiver\", {attacked, attacker});\r\n  });\r\n};\r\n","import {PlayerStatus} from \"@som/shared/enums\";\r\nimport type {SocketRequest} from \"models\";\r\n\r\nexport const endTurn: SocketRequest = (services) => {\r\n  const {mongoService, socketService} = services;\r\n  const {$games, $players} = mongoService;\r\n  const {io, socket, socketId} = socketService;\r\n\r\n  socket.on(\"endTurn\", async () => {\r\n    const player = await $players.findOne({socketId});\r\n\r\n    if (!player) { return; }\r\n\r\n    const {gameId} = player;\r\n    const game = await $games.findOne({gameId});\r\n\r\n    if (!game) { return; }\r\n\r\n    let opponentUsername: string;\r\n\r\n    if (player.username === game.playerA.username) {\r\n      const {playerA, playerB} = game;\r\n\r\n      if (playerA.username !== game.currentPlayer) { return; }\r\n\r\n      const {username, hand, deck, hero} = playerB;\r\n      const card = deck.pop();\r\n\r\n      opponentUsername = username;\r\n\r\n      if (!card) {\r\n        const [A, B] = await Promise.all([\r\n          $players.findOneAndUpdate({\r\n            username: playerA.username\r\n          }, {\r\n            $set: {\r\n              gameId: 0,\r\n              status: PlayerStatus.ONLINE\r\n            }\r\n          }, {\r\n            returnDocument: \"after\"\r\n          }),\r\n          $players.findOneAndUpdate({\r\n            username: playerB.username\r\n          }, {\r\n            $set: {\r\n              gameId: 0,\r\n              status: PlayerStatus.ONLINE\r\n            }\r\n          }, {\r\n            returnDocument: \"after\"\r\n          })\r\n        ]);\r\n\r\n        if (!A.value || !B.value) { return; }\r\n\r\n        io.to(A.value.socketId).emit(\"notification\", \"You won!\");\r\n        io.to(B.value.socketId).emit(\"notification\", \"You lost...\");\r\n        io.to([A.value.socketId, B.value.socketId]).emit(\"endGame\");\r\n\r\n        const isDeletedGame = await $games.deleteOne({gameId});\r\n\r\n        if (!isDeletedGame.deletedCount) { return; }\r\n\r\n        return;\r\n      }\r\n\r\n      hand.push(card);\r\n      hero.mana = 100;\r\n\r\n      const currentPlayer = username;\r\n\r\n      await $games.updateOne({gameId}, {$set: {currentPlayer, playerB}});\r\n    } else {\r\n      const {playerA, playerB} = game;\r\n\r\n      if (playerB.username !== game.currentPlayer) { return; }\r\n\r\n      const {username, hand, deck, hero} = playerA;\r\n\r\n      opponentUsername = username;\r\n\r\n      const card = deck.pop();\r\n\r\n      if (!card) {\r\n        const [A, B] = await Promise.all([\r\n          $players.findOneAndUpdate({\r\n            username: playerA.username\r\n          }, {\r\n            $set: {\r\n              gameId: 0,\r\n              status: PlayerStatus.ONLINE\r\n            }\r\n          }, {\r\n            returnDocument: \"after\"\r\n          }),\r\n          $players.findOneAndUpdate({\r\n            username: playerB.username\r\n          }, {\r\n            $set: {\r\n              gameId: 0,\r\n              status: PlayerStatus.ONLINE\r\n            }\r\n          }, {\r\n            returnDocument: \"after\"\r\n          })\r\n        ]);\r\n\r\n        if (!A.value || !B.value) { return; }\r\n\r\n        io.to(A.value.socketId).emit(\"notification\", \"You lost...\");\r\n        io.to(B.value.socketId).emit(\"notification\", \"You won!\");\r\n        io.to([A.value.socketId, B.value.socketId]).emit(\"endGame\");\r\n\r\n        const isDeletedGame = await $games.deleteOne({gameId});\r\n\r\n        if (!isDeletedGame.deletedCount) { return; }\r\n\r\n        return;\r\n      }\r\n\r\n      hand.push(card);\r\n      hero.mana = 100;\r\n\r\n      const currentPlayer = username;\r\n\r\n      await $games.updateOne({gameId}, {$set: {currentPlayer, playerA}});\r\n    }\r\n\r\n    socket.emit(\"endTurnPlayer\");\r\n\r\n    const opponent = await $players.findOne({\r\n      username: opponentUsername\r\n    });\r\n\r\n    if (!opponent || !opponent.socketId) { return; }\r\n\r\n    io.to(opponent.socketId).emit(\"endTurnOpponent\");\r\n  });\r\n};\r\n","import {SocketRequest} from \"models\";\r\n\r\nexport const hoverCard: SocketRequest = (services) => {\r\n  const {mongoService, socketService} = services;\r\n  const {$games, $players} = mongoService;\r\n  const {io, socket, socketId} = socketService;\r\n\r\n  socket.on(\"hoverCard\", async (params) => {\r\n    const $player = await $players.findOne({socketId});\r\n\r\n    if (!$player) { return; }\r\n\r\n    const {gameId} = $player;\r\n    const $game = await $games.findOne({gameId});\r\n\r\n    if (!$game) { return; }\r\n\r\n    let opponentName: string;\r\n\r\n    if ($game.playerA.username === $player.username) {\r\n      opponentName = $game.playerB.username;\r\n    } else {\r\n      opponentName = $game.playerA.username;\r\n    }\r\n\r\n    const opponent = await $players.findOne({\r\n      username: opponentName\r\n    });\r\n\r\n    if (!opponent || !opponent.socketId) { return; }\r\n\r\n    io.to(opponent.socketId).emit(\"hoverCard\", params);\r\n  });\r\n};\r\n","import type {SocketRequest} from \"models\";\nimport type {GamePlayerCard} from \"../../services/MongoService/GameService.models\"\n\nexport const playCard: SocketRequest = (services) => {\n  const {mongoService, socketService} = services;\n  const {$games, $players} = mongoService;\n  const {io, socket, socketId} = socketService;\n\n  socket.on(\"playCard\", async (params) => {\n    const {field, gid, id} = params;\n    const $player = await $players.findOne({socketId});\n\n    if (!$player) { return; }\n\n    const {gameId} = $player;\n    const $game = await $games.findOne({gameId});\n\n    if (!$game) { return; }\n\n    let opponentUsername = \"\";\n    let card: GamePlayerCard;\n\n    if ($player.username === $game.playerA.username) {\n      opponentUsername = $game.playerB.username;\n\n      const {playerA} = $game;\n      const {hand, fields, hero} = playerA;\n      const handCard = hand.find((card) => card.gid === gid);\n\n      if (!handCard) { return; }\n      if (fields[field]) { return; }\n      if (!handCard.manaCost || handCard.manaCost > hero.mana) { return; }\n\n      hero.mana -= handCard.manaCost;\n      fields[field] = handCard;\n      hand.splice(hand.indexOf(handCard), 1);\n      card = handCard;\n\n      await $games.updateOne({gameId}, {$set: {playerA}});\n    } else {\n      opponentUsername = $game.playerA.username;\n\n      const {playerB} = $game;\n      const {hand, fields, hero} = playerB;\n      const handCard = hand.find((card) => card.gid === gid);\n\n      if (!handCard) { return; }\n      if (fields[field]) { return; }\n      if (!handCard.manaCost || handCard.manaCost > hero.mana) { return; }\n\n      hero.mana -= handCard.manaCost;\n      fields[field] = handCard;\n      hand.splice(hand.indexOf(handCard), 1);\n      card = handCard;\n\n      await $games.updateOne({gameId}, {$set: {playerB}});\n    }\n\n    socket.emit(\"playCardPlayer\", {field, gid});\n\n    const opponent = await $players.findOne({\n      username: opponentUsername\n    });\n\n    if (!opponent || !opponent.socketId) { return; }\n\n    io.to(opponent.socketId).emit(\"playCardOpponent\", {field, card});\n  });\n};\n","import {SocketRequest} from \"models\";\r\n\r\nexport const unhoverCard: SocketRequest = (services) => {\r\n  const {mongoService, socketService} = services;\r\n  const {$games, $players} = mongoService;\r\n  const {io, socket, socketId} = socketService;\r\n\r\n  socket.on(\"unhoverCard\", async () => {\r\n    const $player = await $players.findOne({socketId});\r\n\r\n    if (!$player) { return; }\r\n\r\n    const {gameId} = $player;\r\n    const $game = await $games.findOne({gameId});\r\n\r\n    if (!$game) { return; }\r\n\r\n    let opponentName: string;\r\n\r\n    if ($game.playerA.username === $player.username) {\r\n      opponentName = $game.playerB.username;\r\n    } else {\r\n      opponentName = $game.playerA.username;\r\n    }\r\n\r\n    const opponent = await $players.findOne({\r\n      username: opponentName\r\n    });\r\n\r\n    if (!opponent || !opponent.socketId) { return; }\r\n\r\n    io.to(opponent.socketId).emit(\"unhoverCard\");\r\n  });\r\n};\r\n","import type {SocketRequest} from \"models\";\r\nimport { UpdateFilter } from \"mongodb\";\r\nimport { Player } from \"services/MongoService/PlayerService.models\";\r\n\r\nexport const acceptFriend: SocketRequest = (services) => {\r\n  const {mongoService, socketService} = services;\r\n  const {$chats, $players} = mongoService;\r\n  const {io, socket, socketId} = socketService;\r\n\r\n  socket.on(\"acceptFriend\", async (params) => {\r\n    const {username} = params;\r\n    const $sender = await $players.findOneAndUpdate({socketId}, {\r\n      $pull: {\r\n        \"social.requests\": username\r\n      },\r\n      $push: {\r\n        \"social.friends\": username\r\n      }\r\n    } as UpdateFilter<Player> | Partial<Player>, { // bug: https://github.com/Automattic/mongoose/issues/10075\r\n      returnDocument: \"after\"\r\n    });\r\n\r\n    if (!$sender.value) { return; }\r\n\r\n    const receiver = await $players.findOneAndUpdate({username}, {\r\n      $push: {\r\n        \"social.friends\": $sender.value.username\r\n      }\r\n    } as UpdateFilter<Player> | Partial<Player>, {\r\n      returnDocument: \"after\"\r\n    });\r\n\r\n    if (!receiver.value) { return; }\r\n\r\n    const insertChat = await $chats.insertOne({\r\n      players: [$sender.value.username, receiver.value.username],\r\n      messages: []\r\n    });\r\n\r\n    if (!insertChat.insertedId) { return; }\r\n\r\n    socket.emit(\"acceptFriendSender\", {\r\n      username: receiver.value.username,\r\n      avatarId: receiver.value.avatarId,\r\n      status: receiver.value.status\r\n    });\r\n\r\n    io.to(receiver.value.socketId).emit(\"acceptFriendReceiver\", {\r\n      username: $sender.value.username,\r\n      avatarId: $sender.value.avatarId,\r\n      status: $sender.value.status\r\n    });\r\n  });\r\n};\r\n","import type {SocketRequest} from \"models\";\r\n\r\nexport const addFriend: SocketRequest = (services) => {\r\n  const {mongoService, socketService} = services;\r\n  const {$players} = mongoService;\r\n  const {io, socket, socketId} = socketService;\r\n\r\n  socket.on(\"addFriend\", async (params) => {\r\n    const {username} = params;\r\n    const [sender, receiver] = await Promise.all([\r\n      $players.findOne({socketId}),\r\n      $players.findOne({username})\r\n    ]);\r\n\r\n    if (!sender || !receiver) { return; }\r\n\r\n    if (sender.username === username) {\r\n      socket.emit(\"notification\", \"You can't add yourself as a friend.\");\r\n      return;\r\n    }\r\n    if (receiver.social.blocked.includes(sender.username)) {\r\n      socket.emit(\"notification\", \"This player has blocked you.\");\r\n      return;\r\n    }\r\n    if (sender.social.blocked.includes(username)) {\r\n      socket.emit(\"notification\", \"You have blocked this player.\");\r\n      return;\r\n    }\r\n    if (receiver.social.requests.includes(sender.username)) {\r\n      socket.emit(\"notification\", \"You have already sent the request to this player.\");\r\n      return;\r\n    }\r\n    if (sender.social.requests.includes(username)) {\r\n      socket.emit(\"notification\", \"This player has already sent you the request.\");\r\n      return;\r\n    }\r\n    if (sender.social.friends.includes(username)) {\r\n      socket.emit(\"notification\", \"This player is already your friend.\");\r\n      return;\r\n    }\r\n\r\n    const updatePlayer = await $players.updateOne({username}, {\r\n      $push: {\r\n        \"social.requests\": sender.username\r\n      }\r\n    });\r\n\r\n    if (!updatePlayer.modifiedCount) { return; }\r\n\r\n    socket.emit(\"notification\", \"Friend request sent.\");\r\n    io.to(receiver.socketId).emit(\"addFriend\", {\r\n      username: sender.username\r\n    });\r\n  });\r\n};\r\n","import type {SocketRequest} from \"models\";\r\n\r\nexport const block: SocketRequest = (services) => {\r\n  const {mongoService, socketService} = services;\r\n  const {$chats, $players} = mongoService;\r\n  const {io, socket, socketId} = socketService;\r\n\r\n  socket.on(\"block\", async (params) => {\r\n    const {username} = params;\r\n    const [sender, receiver] = await Promise.all([\r\n      $players.findOne({socketId}),\r\n      $players.findOne({username})\r\n    ]);\r\n\r\n    if (!sender || !receiver) { return; }\r\n\r\n    const [isUpdatedSender, isUpdatedReceiver, isDeletedChat] = await Promise.all([\r\n      $players.updateOne({socketId}, {\r\n        $pull: {\r\n          \"social.friends\": username\r\n        },\r\n        $push: {\r\n          \"social.blocked\": username\r\n        }\r\n      }),\r\n      $players.updateOne({username}, {\r\n        $pull: {\r\n          \"social.friends\": sender.username\r\n        }\r\n      }),\r\n      $chats.deleteOne({\r\n        players: {\r\n          $all: [receiver.username, sender.username]\r\n        }\r\n      })\r\n    ]);\r\n\r\n    if (\r\n      !isUpdatedSender.modifiedCount ||\r\n      !isUpdatedReceiver.modifiedCount ||\r\n      !isDeletedChat.deletedCount\r\n    ) { return; }\r\n\r\n    socket.emit(\"blockSender\", {username});\r\n    io.to(receiver.socketId).emit(\"blockReceiver\", {\r\n      username: sender.username\r\n    });\r\n  });\r\n};\r\n","import type {SocketRequest} from \"models\";\r\n\r\nexport const declineFriend: SocketRequest = (services) => {\r\n  const {mongoService, socketService} = services;\r\n  const {$players} = mongoService;\r\n  const {socket, socketId} = socketService;\r\n\r\n  socket.on(\"declineFriend\", async (params) => {\r\n    const {username} = params;\r\n    const updatedPlayer = await $players.updateOne({socketId}, {\r\n      $pull: {\r\n        \"social.requests\": username\r\n      }\r\n    });\r\n\r\n    if (!updatedPlayer.modifiedCount) { return; }\r\n\r\n    socket.emit(\"declineFriend\", {username});\r\n  });\r\n};\r\n","import type {Services} from \"models\";\r\n\r\nexport const setAvatar = (services: Services): void => {\r\n  const {mongoService, socketService} = services;\r\n  const {$players} = mongoService;\r\n  const {io, socket, socketId} = socketService;\r\n\r\n  socket.on(\"setAvatar\", async (params) => {\r\n    const {avatarId} = params;\r\n    const player = await $players.findOneAndUpdate({socketId}, {\r\n      $set: {avatarId}\r\n    }, {\r\n      returnDocument: \"after\"\r\n    });\r\n\r\n    if (!player.value) { return; }\r\n\r\n    const {username, social: {friends}} = player.value;\r\n    const socketIds = await mongoService.getSocketIds(friends);\r\n\r\n    socket.emit(\"setAvatarSender\", {avatarId});\r\n    io.to(socketIds).emit(\"setAvatarReceiver\", {username, avatarId});\r\n  });\r\n};\r\n","import type {Services} from \"models\";\r\n\r\nexport const signout = (services: Services) => {};\r\n","import type {Services} from \"models\";\r\n\r\nexport const unblock = (services: Services): void => {\r\n  const {mongoService, socketService} = services;\r\n  const {$players} = mongoService;\r\n  const {socket, socketId} = socketService;\r\n\r\n  socket.on(\"unblock\", async (params) => {\r\n    const {username} = params;\r\n    const updatePlayer = await $players.updateOne({socketId}, {\r\n      $pull: {\r\n        \"social.blocked\": username\r\n      }\r\n    });\r\n\r\n    if (!updatePlayer.modifiedCount) { return; }\r\n\r\n    socket.emit(\"unblock\", {\r\n      friendname: username\r\n    });\r\n  });\r\n};\r\n","import type {Services} from \"models\";\r\nimport type {Player} from \"services/MongoService/PlayerService.models\";\r\n\r\nexport const unfriend = (services: Services): void => {\r\n  const {mongoService, socketService} = services;\r\n  const {$chats, $players} = mongoService;\r\n  const {io, socket, socketId} = socketService;\r\n\r\n  socket.on(\"unfriend\", async (params) => {\r\n    const {username} = params;\r\n    const sender = await $players.findOneAndUpdate({socketId}, {\r\n      $pull: {\r\n        \"social.friends\": username\r\n      } as Partial<Player>\r\n    }, {\r\n      returnDocument: \"after\"\r\n    });\r\n\r\n    if (!sender.value) { return; }\r\n\r\n    const receiver = await $players.findOneAndUpdate({username}, [{\r\n      $pull: {\r\n        \"social.friends\": sender.value.username\r\n      }\r\n    }], {\r\n      returnDocument: \"after\"\r\n    });\r\n\r\n    if (!receiver.value) { return; }\r\n\r\n    const deleteChat = await $chats.deleteOne({\r\n      players: {\r\n        $all: [username, sender.value.username]\r\n      }\r\n    });\r\n\r\n    if (!deleteChat.deletedCount) { return; }\r\n\r\n    socket.emit(\"unfriendSender\", {username});\r\n    io.to(receiver.value.socketId).emit(\"unfriendReceiver\", {\r\n      username: sender.value.username\r\n    });\r\n  });\r\n};\r\n","import {sendChatMsg, updateFriend} from \"./global\";\r\nimport {disconnect, getPrivateKeyHash, signin, signup} from \"./auth\";\r\n\r\nimport {\r\n  destroyLobby,\r\n  joinLobby,\r\n  leaveLobby,\r\n  makeLobby,\r\n  saveDeck,\r\n  selectDeck,\r\n  sendToken,\r\n  setDeckKlass,\r\n  setDeckName,\r\n  startGame\r\n} from \"./client\";\r\n\r\nimport {attackCard, endTurn, hoverCard, playCard, unhoverCard} from \"./game\";\r\n\r\nimport {\r\n  acceptFriend,\r\n  addFriend,\r\n  block,\r\n  declineFriend,\r\n  setAvatar,\r\n  signout,\r\n  unblock,\r\n  unfriend\r\n} from \"./sidenav\";\r\n\r\nexport const requests = [\r\n  sendChatMsg,\r\n  updateFriend,\r\n  disconnect,\r\n  getPrivateKeyHash,\r\n  signin,\r\n  signup,\r\n  destroyLobby,\r\n  joinLobby,\r\n  leaveLobby,\r\n  makeLobby,\r\n  saveDeck,\r\n  selectDeck,\r\n  sendToken,\r\n  setDeckKlass,\r\n  setDeckName,\r\n  startGame,\r\n  attackCard,\r\n  endTurn,\r\n  hoverCard,\r\n  playCard,\r\n  unhoverCard,\r\n  acceptFriend,\r\n  addFriend,\r\n  block,\r\n  declineFriend,\r\n  setAvatar,\r\n  signout,\r\n  unblock,\r\n  unfriend\r\n];\r\n","import settings from \"settings\";\n\nimport type {\n  GetTableRowsResult,\n  PushTransactionArgs,\n  ReadOnlyTransactResult,\n} from \"eosjs/dist/eosjs-rpc-interfaces\";\n\nimport type {TransactResult} from \"eosjs/dist/eosjs-api-interfaces\";\nimport type {Api} from \"eosjs\";\n// import type {Game, Lobby, Player} from \"models\"\n\nexport class EosService {\n  private readonly _api: Api\n\n  constructor (api: Api) {\n    this._api = api;\n  }\n\n  public async findPlayer (username: string): Promise<any | undefined> {\n    const {contractAccount} = settings.eos;\n    let table!: GetTableRowsResult;\n\n    try {\n      table = await this._api.rpc.get_table_rows({\n        code: contractAccount,\n        scope: contractAccount,\n        table: \"players\",\n        lower_bound: username,\n        upper_bound: username,\n        limit: 1\n      });\n    } catch (error) {\n      console.error(error);\n    }\n\n    return table.rows[0];\n  }\n\n  // public async findLobby (lobby_id: number): Promise<Lobby | undefined> {\n  //   const {contractAccount} = settings.eos;\n  //   let table!: GetTableRowsResult;\n\n  //   try {\n  //     table = await this._apis.eos.rpc.get_table_rows({\n  //       code: contractAccount,\n  //       scope: contractAccount,\n  //       table: \"lobbies\",\n  //       lower_bound: lobby_id,\n  //       upper_bound: lobby_id\n  //     });\n  //   } catch (error) {\n  //     this._handleError(error);\n  //   }\n\n  //   return table.rows[0];\n  // }\n\n  // public async findGame (game_id: number): Promise<Game | undefined> {\n  //   const {contractAccount} = settings.eos;\n  //   let table!: GetTableRowsResult;\n\n  //   try {\n  //     table = await this._apis.eos.rpc.get_table_rows({\n  //       code: contractAccount,\n  //       scope: contractAccount,\n  //       table: \"games\",\n  //       lower_bound: game_id,\n  //       upper_bound: game_id\n  //     });\n  //   } catch (error) {\n  //     this._handleError(error);\n  //   }\n\n  //   return table.rows[0];\n  // }\n\n  public async transact (\n    action: string,\n    data: object\n  ): Promise<TransactResult | ReadOnlyTransactResult | PushTransactionArgs> {\n    const {contractAccount} = settings.eos;\n    let transaction!: TransactResult | ReadOnlyTransactResult | PushTransactionArgs;\n\n    try {\n      transaction = await this._api.transact({\n        actions: [{\n          account: contractAccount,\n          name: action,\n          authorization: [{\n            actor: contractAccount,\n            permission: \"active\"\n          }],\n          data\n        }]\n      }, {\n        blocksBehind: 3,\n        expireSeconds: 30\n      });\n    } catch (error) {\n      console.error(error);\n    }\n\n    return transaction;\n  }\n}\n","import type {Collection, Db} from \"mongodb\";\r\nimport type {SocketIds, Usernames} from \"./MongoService.types\";\r\nimport type {Chat} from \"./ChatService.models\";\r\nimport type {Game} from \"@som/shared/interfaces/mongo\";\r\nimport type {Lobby} from \"./LobbyService.models\";\r\nimport type {Player} from \"./PlayerService.models\";\r\n\r\nexport class MongoService {\r\n  readonly $chats: Collection<Chat>;\r\n  readonly $games: Collection<Game>;\r\n  readonly $lobbies: Collection<Lobby>;\r\n  readonly $players: Collection<Player>;\r\n\r\n  constructor (mongoDb: Db) {\r\n    this.$chats = mongoDb.collection(\"chats\");\r\n    this.$games = mongoDb.collection(\"games\");\r\n    this.$lobbies = mongoDb.collection(\"lobbies\");\r\n    this.$players = mongoDb.collection(\"players\");\r\n  }\r\n\r\n  async getSocketIds (usernames: Usernames): Promise<SocketIds> {\r\n    return await this\r\n      .$players\r\n      .find({username: {$in: usernames}})\r\n      .project({_id: 0, socketId: 1})\r\n      .map(({socketId}) => socketId)\r\n      .toArray();\r\n  }\r\n}\r\n","import type {Server, Socket} from \"socket.io\";\r\nimport type {SocketResponses} from \"@som/shared/interfaces/responses\";\r\nimport type {SocketRequests} from \"@som/shared/interfaces/requests\";\r\n\r\nexport class SocketService {\r\n  public readonly io: Server<SocketRequests, SocketResponses>;\r\n  public readonly socket: Socket<SocketRequests, SocketResponses>;\r\n  public readonly socketId: string;\r\n\r\n  constructor (io: Server, socket: Socket) {\r\n    this.io = io;\r\n    this.socket = socket;\r\n    this.socketId = socket.id;\r\n  }\r\n}\r\n","import {PlayerStatus} from \"@som/shared/enums\";\r\nimport type {Services} from \"models\";\r\n\r\nexport class GameEngine {\r\n  async endGame (services: Services, gameId: number, winner: \"A\" | \"B\") {\r\n    const {mongoService, socketService} = services;\r\n    const {$games, $players} = mongoService;\r\n    const {io, socket} = socketService;\r\n    const game = await $games.findOne({gameId});\r\n\r\n    if (!game) { return; }\r\n\r\n    const {playerA, playerB} = game;\r\n\r\n    const [A, B] = await Promise.all([\r\n      $players.findOneAndUpdate({\r\n        username: playerA.username\r\n      }, {\r\n        $set: {\r\n          gameId: 0,\r\n          status: PlayerStatus.ONLINE\r\n        }\r\n      }, {\r\n        returnDocument: \"after\"\r\n      }),\r\n      $players.findOneAndUpdate({\r\n        username: playerB.username\r\n      }, {\r\n        $set: {\r\n          gameId: 0,\r\n          status: PlayerStatus.ONLINE\r\n        }\r\n      }, {\r\n        returnDocument: \"after\"\r\n      })\r\n    ]);\r\n\r\n    if (!A.value || !B.value) { return; }\r\n\r\n    const isDeletedGame = await $games.deleteOne({gameId});\r\n\r\n    if (!isDeletedGame.deletedCount) { return; }\r\n\r\n    if (winner === \"A\") {\r\n      io.to(A.value.socketId).emit(\"notification\", \"You won!\");\r\n      io.to(B.value.socketId).emit(\"notification\", \"You lost...\");\r\n    } else if (winner === \"B\") {\r\n      io.to(B.value.socketId).emit(\"notification\", \"You won!\");\r\n      io.to(A.value.socketId).emit(\"notification\", \"You lost...\");\r\n    }\r\n\r\n    io.to([A.value.socketId, B.value.socketId]).emit(\"endGame\");\r\n  }\r\n}\r\n","import {createServer} from \"http\";\r\nimport process from \"process\";\r\n\r\nimport {Api, JsonRpc} from \"eosjs\";\r\nimport {JsSignatureProvider} from \"eosjs/dist/eosjs-jssig.js\";\r\nimport {MongoClient} from \"mongodb\";\r\nimport fetch from \"node-fetch\";\r\nimport {Server} from \"socket.io\";\r\n\r\nimport settings from \"settings\";\r\nimport {requests} from \"requests\";\r\nimport {EosService, MongoService, SocketService, GameEngine} from \"services\";\r\nimport type {Services} from \"models\";\r\n\r\nconst {\r\n  mongo: {uri},\r\n  eos: {endpoint, contractKey},\r\n  socket: {opts},\r\n  server: {port}\r\n} = settings;\r\n\r\nconst httpServer = createServer();\r\nconst ioServer = new Server(httpServer, opts);\r\n\r\nconst mongoClient = await MongoClient.connect(uri);\r\nconst mongoDb = mongoClient.db(\"som\");\r\n\r\nconst eosApi = new Api({\r\n  rpc: new JsonRpc(endpoint, {fetch}),\r\n  signatureProvider: new JsSignatureProvider([contractKey]),\r\n  textDecoder: new TextDecoder(),\r\n  textEncoder: new TextEncoder()\r\n});\r\n\r\nconst eosService = new EosService(eosApi);\r\nconst mongoService = new MongoService(mongoDb);\r\nconst gameEngine = new GameEngine();\r\n\r\nioServer.on(\"connection\", (socket) => {\r\n  const socketService = new SocketService(ioServer, socket);\r\n  const services: Services = {eosService, mongoService, socketService,  gameEngine};\r\n\r\n  requests.forEach((request) => { request(services); });\r\n});\r\n\r\nprocess.on(\"unhandledRejection\", async (reason, promise) => {\r\n  const occuredAt = Date.now();\r\n\r\n  await mongoDb.collection(\"errors\").insertOne({occuredAt, promise, reason});\r\n\r\n  console.log(\"Error!\\n\", {reason, promise});\r\n});\r\n\r\nhttpServer.listen(port);\r\n"],"names":["process"],"mappings":"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"}