{"version":3,"file":"index.js","sources":["../src/settings.ts","../src/apis/server/index.ts","../src/apis/mongo/index.ts","../src/helpers/player/getXpRequired.ts","../src/helpers/player/checkLevelUp.ts","../src/helpers/player/generateFungible.ts","../src/helpers/player/getSocketIds.ts","../src/helpers/player/isDeckValid.ts","../src/requests/auth/disconnect.ts","../src/requests/auth/getPrivateKeyHash.ts","../src/apis/eos/index.ts","../src/helpers/game/generateGameFe.ts","../src/requests/auth/signin.ts","../src/requests/auth/signup.ts","../src/requests/auth/index.ts","../src/models/game/index.ts","../src/helpers/game/battleLog.ts","../src/helpers/game/buildDeck.ts","../src/helpers/game/endGame.ts","../src/helpers/game/drawCard.ts","../src/helpers/game/floatingText.ts","../src/helpers/game/generateGame.ts","../src/helpers/game/getGame.ts","../src/helpers/game/getPlayers.ts","../src/helpers/game/isGameOver.ts","../src/helpers/game/playMinion.ts","../src/helpers/game/gamePopup.ts","../src/helpers/game/saveGame.ts","../src/helpers/game/startGame.ts","../src/helpers/game/triggerEffect/charge.ts","../src/helpers/game/triggerEffect/mirrorsEdge.ts","../src/helpers/game/triggerEffect/multiStrike.ts","../src/helpers/game/triggerEffect/necro.ts","../src/helpers/game/triggerEffect/quickShot.ts","../src/helpers/game/triggerEffect/smite.ts","../src/helpers/game/triggerEffect/spellweave.ts","../src/helpers/game/triggerEffect/index.ts","../src/helpers/game/index.ts","../src/requests/client/acceptGame.ts","../src/requests/client/deselectSkin.ts","../src/requests/client/destroyLobby.ts","../src/requests/client/getLeaderboardsByLevel.ts","../src/requests/client/joinCasualQueue.ts","../src/requests/client/joinLobby.ts","../src/requests/client/joinRankedQueue.ts","../src/requests/client/leaveCasualQueue.ts","../src/requests/client/leaveLobby.ts","../src/requests/client/leaveRankedQueue.ts","../src/requests/client/makeLobby.ts","../src/requests/client/saveDeck.ts","../src/requests/client/selectDeck.ts","../src/requests/client/selectSkin.ts","../src/requests/client/sendToken.ts","../src/requests/client/setDeckKlass.ts","../src/requests/client/setDeckName.ts","../src/requests/client/startCustomGame.ts","../src/requests/client/index.ts","../src/requests/game/attackHero.ts","../src/requests/game/attackMinion.ts","../src/requests/game/endTurn.ts","../src/requests/game/hoverCard.ts","../src/requests/game/hoverHandCard.ts","../src/requests/game/playMagic.ts","../src/requests/game/playMinion.ts","../src/requests/game/playTrap.ts","../src/requests/game/unhoverCard.ts","../src/requests/game/unhoverHandCard.ts","../src/requests/game/index.ts","../src/requests/sidenav/acceptFriend.ts","../src/requests/sidenav/addFriend.ts","../src/requests/sidenav/block.ts","../src/requests/sidenav/declineFriend.ts","../src/requests/sidenav/sendChatMsg.ts","../src/requests/sidenav/setAvatar.ts","../src/requests/sidenav/signout.ts","../src/requests/sidenav/unblock.ts","../src/requests/sidenav/unfriend.ts","../src/requests/sidenav/updateStatus.ts","../src/requests/sidenav/index.ts","../src/requests/sidenav/wallet/airdrop.ts","../src/requests/sidenav/wallet/mint.ts","../src/requests/sidenav/wallet/stake.ts","../src/requests/sidenav/wallet/transferToken.ts","../src/requests/sidenav/wallet/unstakeToken.ts","../src/requests/sidenav/wallet/index.ts","../src/requests/index.ts","../src/index.ts"],"sourcesContent":["const production = false;\n\nconst settings = {\n  mongo: {\n    uri: \"mongodb://127.0.0.1:27017\"\n  },\n  eos: {\n    endpoint: \"https://testnet.telos.net\",\n    contractAccount: \"eternisvm131\",\n    contractKey: \"5J9QDGDDjK7H4tUdChmfANqWGrXvKDRK1KXB5dXcjActcs5E9wD\"\n  },\n  socket: {\n    opts: production ? {} : {\n      cors: {\n        origin: \"*\"\n      }\n    }\n  },\n  server: {\n    port: 4201\n  }\n};\n\nexport default settings;\n","import {createServer} from \"http\";\r\nimport {Server} from \"socket.io\";\r\nimport type {SocketResponses} from \"@som/shared/types/responses\";\r\nimport type {SocketRequests} from \"@som/shared/types/requests\";\r\n\r\nconst httpServer = createServer();\r\nconst ioServer = new Server<SocketRequests, SocketResponses>(httpServer, {\r\n  cors: {\r\n    origin: \"*\"\r\n  },\r\n  serveClient: false,\r\n  transports: [\"websocket\"],\r\n  allowUpgrades: false\r\n});\r\n\r\nexport {httpServer, ioServer};\r\n","import {MongoClient, type Document} from \"mongodb\";\r\nimport settings from \"settings\";\r\nimport type {Game} from \"models/game\";\r\nimport type {Player} from \"models/Player\";\r\nimport type {CasualQueuePlayers} from \"./casual-queue-players-db/casual-queue-players-db.types\";\r\nimport type {Chat} from \"./chats-db/chats-db.models\";\r\nimport type {Account} from \"models/Account\";\r\nimport type {Lobby} from \"models/Lobby\";\r\n\r\nconst {\r\n  mongo: {uri}\r\n} = settings;\r\n\r\ninterface RankedQueuePlayers extends Document {\r\n  username: string;\r\n  elo: number;\r\n}\r\n\r\nconst mongoClient = await MongoClient.connect(uri);\r\nconst eternitasDb = mongoClient.db(\"eternitas\");\r\nconst mongoDb = mongoClient.db(\"som\");\r\n\r\nconst accountsDb = eternitasDb.collection<Account>(\"accounts\");\r\nconst chatsDb = eternitasDb.collection<Chat>(\"chats\");\r\n\r\nconst casualQueuePlayersDb = mongoDb.collection<CasualQueuePlayers>(\"casualQueuePlayers\");\r\nconst rankedQueuePlayersDb = mongoDb.collection<RankedQueuePlayers>(\"rankedQueuePlayers\");\r\nconst gamesDb = mongoDb.collection<Game>(\"games\");\r\nconst preGamesDb = mongoDb.collection<any>(\"preGames\");\r\nconst lobbiesDb = mongoDb.collection<Lobby>(\"lobbies\");\r\nconst playersDb = mongoDb.collection<Player>(\"players\");\r\n\r\nconst db = {\r\n  accounts: eternitasDb.collection<Account>(\"accounts\")\r\n}\r\n\r\nexport {\r\n  accountsDb,\r\n  casualQueuePlayersDb,\r\n  rankedQueuePlayersDb,\r\n  chatsDb,\r\n  preGamesDb,\r\n  gamesDb,\r\n  lobbiesDb,\r\n  playersDb\r\n};\r\n","const getXpRequired = (lv: number): number => 1000 + (lv % 10) * 100;\r\n\r\nexport {getXpRequired};\r\n","import {playersDb} from \"apis/mongo\";\r\nimport {ioServer} from \"apis/server\";\r\nimport {getXpRequired} from \"./getXpRequired\";\r\nimport type {Player} from \"models/Player\";\r\nimport { eosApi } from \"apis/eos\";\r\n\r\nconst checkLevelUp = async (player: Player): Promise<void> => {\r\n  const {name, socketId} = player;\r\n  const xpRequired = getXpRequired(player.lv);\r\n\r\n  if (player.xp <= xpRequired) { return; }\r\n\r\n  const xp = player.xp - xpRequired;\r\n\r\n  await playersDb.updateOne({name}, {\r\n    $inc: {\r\n      lv: 1\r\n    },\r\n    $set: {xp}\r\n  });\r\n\r\n  // await eosApi.transact({\r\n  //   actions: [{\r\n  //     account: \"somgame11111\",\r\n  //     name: \"flushtoken\",\r\n  //     authorization: [{\r\n  //       actor: \"somgame11111\",\r\n  //       permission: \"active\"\r\n  //     }],\r\n  //     data: {\r\n  //       name, quantity: \"1 DMTTEST\"\r\n  //     }\r\n  //   }]\r\n  // }, {\r\n  //   blocksBehind: 3,\r\n  //   expireSeconds: 30\r\n  // })\r\n\r\n  ioServer.to(socketId).emit(\"levelUp\", {xp});\r\n};\r\n\r\nexport {checkLevelUp};\r\n","const generateFungible = (fungible: any): any => {\n  const symbols = [\"TLOS\", \"VMT\", \"SPT\"];\n  const tokens: any[] = [];\n\n  const getTotal = (token: any): string => {\n    const liquid = parseFloat(token.value.liquid);\n    const staked = parseFloat(token.value.staked);\n    const unstaking = parseFloat(token.value.unstaking);\n    const total = liquid + staked + unstaking;\n\n    return `${total} ${token.key.sym.slice(2)}`;\n  };\n\n  fungible.forEach((token: any): void => {\n    const {sym, contract} = token.key;\n    const {liquid, staked, unstaking, claimable} = token.value;\n    const symbol = sym.slice(2);\n    const total = getTotal(token);\n\n    tokens.push({symbol, contract, total, liquid, staked, unstaking, claimable});\n    symbols.splice(symbols.indexOf(symbol), 1);\n  });\n\n  symbols.forEach((symbol): void => {\n    tokens.push({\n      symbol,\n      contract: \"\",\n      total: `0.0000 ${symbol}`,\n      liquid: `0.0000 ${symbol}`,\n      staked: `0.0000 ${symbol}`,\n      unstaking: `0.0000 ${symbol}`,\n      claimable: []\n    });\n  });\n\n  return tokens.sort((a, b) => {\n    if (a.symbol === \"TLOS\") {\n      return -1;\n    } else {\n      return 1;\n    }\n  });\n};\n\nexport {generateFungible};\n","import {playersDb} from \"apis/mongo\";\r\n\r\nconst getSocketIds = async (players: string[]): Promise<string[]> => {\r\n  return await playersDb\r\n    .find({username: {$in: players}})\r\n    .project({_id: 0, socketId: 1})\r\n    .map(({socketId}) => socketId)\r\n    .toArray();\r\n};\r\n\r\nexport {getSocketIds};\r\n","import type {PlayerDeck} from \"models/Player\";\r\n\r\nconst isDeckValid = (playerDeck: PlayerDeck): boolean => {\r\n  const numberOfCards = playerDeck\r\n    .cards\r\n    .reduce((value, {amount}) => value += amount, 0);\r\n\r\n  if (numberOfCards !== 30) {\r\n    return false;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nexport {isDeckValid};\r\n","import {PlayerStatus} from \"@som/shared/enums\";\r\nimport {accountsDb, playersDb} from \"apis/mongo\";\r\nimport {ioServer} from \"apis/server\";\r\nimport {getSocketIds} from \"helpers/player\";\r\nimport type {SocketEvent} from \"models\";\r\n\r\nconst disconnect: SocketEvent = (socket): void => {\r\n  socket.on(\"disconnect\", async (reason) => {\r\n    const socketId = socket.id;\r\n    const player = await playersDb.findOneAndUpdate({socketId}, {\r\n      $set: {\r\n        socketId: \"\",\r\n        status: PlayerStatus.OFFLINE\r\n      }\r\n    }, {\r\n      returnDocument: \"after\"\r\n    });\r\n\r\n    if (!player.value) { return; }\r\n\r\n    const {name, status} = player.value;\r\n    const account = await accountsDb.findOne({name});\r\n\r\n    if (!account) { return; }\r\n\r\n    const socketIds = await getSocketIds(account.socials.friends);\r\n\r\n    ioServer.to(socketIds).emit(\"updateStatus\", {username: name, status});\r\n  });\r\n};\r\n\r\nexport {disconnect};\r\n","import {accountsDb} from \"apis/mongo\";\r\nimport type {SocketEvent} from \"models\";\r\n\r\nconst getPrivateKeyHash: SocketEvent = (socket): void => {\r\n  socket.on(\"getPrivateKeyHash\", async (params) => {\r\n    const {name} = params;\r\n    const account = await accountsDb.findOne({name});\r\n\r\n    if (!account) {\r\n      socket.emit(\"notification\", \"Account not found.\");\r\n      return;\r\n    }\r\n\r\n    const {privateKeyHash} = account;\r\n    socket.emit(\"getPrivateKeyHash\", {privateKeyHash});\r\n  });\r\n};\r\n\r\nexport {getPrivateKeyHash};\r\n","import {Api, JsonRpc} from \"eosjs\";\r\nimport {JsSignatureProvider} from \"eosjs/dist/eosjs-jssig.js\";\r\nimport fetch from \"node-fetch\";\r\nimport settings from \"settings\";\r\n\r\nimport type {\r\n  GetTableRowsResult,\r\n  PushTransactionArgs,\r\n  ReadOnlyTransactResult\r\n} from \"eosjs/dist/eosjs-rpc-interfaces\";\r\n\r\nimport type {TransactResult} from \"eosjs/dist/eosjs-api-interfaces\";\r\n\r\nconst {\r\n  eos: {endpoint, contractKey}\r\n} = settings;\r\n\r\nexport const eosApi = new Api({\r\n  rpc: new JsonRpc(endpoint, {fetch}),\r\n  signatureProvider: new JsSignatureProvider([contractKey, \"5JwPpzMAXT3PR1tZLMgXfNMVYdQ8EiwPsyseobU6VEY3Qp6djbE\"]),\r\n  textDecoder: new TextDecoder(),\r\n  textEncoder: new TextEncoder()\r\n});\r\n\r\nenum Contract {\r\n  wallet = \"eternisvm131\",\r\n  som = \"eternisom141\"\r\n}\r\n\r\ninterface TransactParams {\r\n  contract: string;\r\n  permission: string;\r\n  action: string;\r\n  data: any;\r\n}\r\n\r\nclass Leap {\r\n  // async find () {\r\n  //   let table!: GetTableRowsResult;\r\n\r\n  //   try {\r\n  //     table = await eosApi.rpc.get_table_rows({\r\n  //       code: contractAccount,\r\n  //       scope: contractAccount,\r\n  //       table: \"accounts\",\r\n  //       lower_bound: username,\r\n  //       upper_bound: username,\r\n  //       limit: 1\r\n  //     });\r\n  //   } catch (error) {\r\n  //     console.error(error);\r\n  //   }\r\n\r\n  //   return table.rows[0];\r\n  // }\r\n\r\n  async transact (params: TransactParams) {\r\n    const {contract, permission, action, data} = params;\r\n\r\n    return await eosApi.transact({\r\n      actions: [{\r\n        account: contract,\r\n        name: action,\r\n        authorization: [{\r\n          actor: contract,\r\n          permission\r\n        }],\r\n        data\r\n      }]\r\n    }, {\r\n      blocksBehind: 3,\r\n      expireSeconds: 30\r\n    });\r\n  }\r\n}\r\n\r\nexport const leap = new Leap();\r\n\r\nconst findNFT = async (serial: number): Promise<any> => {\r\n  const nft = await eosApi.rpc.get_table_rows({\r\n    code: \"eterninft131\",\r\n    scope: \"eterninft131\",\r\n    table: \"items\",\r\n    lower_bound: serial,\r\n    upper_bound: serial\r\n  }).catch(console.log);\r\n\r\n  if (!nft) { return; }\r\n\r\n  const nfttags = await eosApi.rpc.get_table_rows({\r\n    code: \"eterninft131\",\r\n    scope: nft.rows[0].group,\r\n    table: \"sharedtags\",\r\n  }).catch(console.log);\r\n\r\n  const nftattrs = await eosApi.rpc.get_table_rows({\r\n    code: \"eterninft131\",\r\n    scope: nft.rows[0].group,\r\n    table: \"sharedattrs\",\r\n  }).catch(console.log);\r\n\r\n  if (!nfttags || !nftattrs) { return; }\r\n\r\n  const tags: any = {};\r\n  const attrs: any = [];\r\n\r\n  nfttags.rows.forEach((row) => {\r\n    tags[row.tag_name] = row.content;\r\n  });\r\n\r\n  nftattrs.rows.forEach((row) => attrs.push(row));\r\n\r\n  return {serial, tags, attrs};\r\n};\r\n\r\nconst findGame = async (game_id: number): Promise<any | undefined> => {\r\n  const {contractAccount} = settings.eos;\r\n  let table!: GetTableRowsResult;\r\n\r\n  try {\r\n    table = await eosApi.rpc.get_table_rows({\r\n      code: contractAccount,\r\n      scope: contractAccount,\r\n      table: \"games\",\r\n      lower_bound: game_id,\r\n      upper_bound: game_id,\r\n      limit: 1\r\n    });\r\n  } catch (error) {\r\n    console.error(error);\r\n  }\r\n\r\n  return table.rows[0];\r\n};\r\n\r\nconst findLobby = async (lobby_id: number): Promise<any | undefined> => {\r\n  const {contractAccount} = settings.eos;\r\n  let table!: GetTableRowsResult;\r\n\r\n  try {\r\n    table = await eosApi.rpc.get_table_rows({\r\n      code: contractAccount,\r\n      scope: contractAccount,\r\n      table: \"lobbies\",\r\n      lower_bound: lobby_id,\r\n      upper_bound: lobby_id,\r\n      limit: 1\r\n    });\r\n  } catch (error) {\r\n    console.error(error);\r\n  }\r\n\r\n  return table.rows[0];\r\n};\r\n\r\ninterface EternitasAccountProfile {\r\n  nonce: number;\r\n  publicKey: string;\r\n  name: string;\r\n  joinedAt: number;\r\n  avatarId: number;\r\n  isActivated: number;\r\n}\r\n\r\ninterface EternitasAccountTokensFungible {\r\n  key: {\r\n    sym: string;\r\n    contract: string;\r\n  };\r\n  value: {\r\n    total: string;\r\n    liquid: string;\r\n    staked: string;\r\n    unstaking: string;\r\n    claimable: Array<{key: number, value: string}>;\r\n  };\r\n}\r\n\r\ninterface EternitasAccount {\r\n  profile: EternitasAccountProfile;\r\n  tokens: {\r\n    fungible: Array<EternitasAccountTokensFungible>;\r\n    nonFungible: {\r\n      serials: Array<number>;\r\n    }\r\n  }\r\n}\r\n\r\nexport const findAccount = async (name: string): Promise<EternitasAccount | undefined> => {\r\n  let table!: GetTableRowsResult;\r\n\r\n  try {\r\n    table = await eosApi.rpc.get_table_rows({\r\n      code: \"eternisvm131\",\r\n      scope: \"eternisvm131\",\r\n      table: \"accounts\",\r\n      lower_bound: name,\r\n      upper_bound: name,\r\n      limit: 1\r\n    });\r\n  } catch (error) {\r\n    console.error(error);\r\n  }\r\n\r\n  if (!table.rows.length) {\r\n    return undefined;\r\n  }\r\n\r\n  return table.rows[0];\r\n};\r\nexport const findSOM = async (name: string): Promise<any | undefined> => {\r\n  let table!: GetTableRowsResult;\r\n\r\n  try {\r\n    table = await eosApi.rpc.get_table_rows({\r\n      code: \"eternisom141\",\r\n      scope: \"eternisom141\",\r\n      table: \"players\",\r\n      lower_bound: name,\r\n      upper_bound: name,\r\n      limit: 1\r\n    });\r\n  } catch (error) {\r\n    console.error(error);\r\n  }\r\n\r\n  if (!table.rows.length) { return; }\r\n\r\n  return table.rows[0];\r\n};\r\n\r\nconst findPlayer = async (username: string): Promise<any | undefined> => {\r\n  const {contractAccount} = settings.eos;\r\n  let table!: GetTableRowsResult;\r\n\r\n  try {\r\n    table = await eosApi.rpc.get_table_rows({\r\n      code: \"eternisvm131\",\r\n      scope: \"eternisvm131\",\r\n      table: \"accounts\",\r\n      lower_bound: username,\r\n      upper_bound: username,\r\n      limit: 1\r\n    });\r\n  } catch (error) {\r\n    console.error(error);\r\n  }\r\n\r\n  return table.rows[0];\r\n};\r\n\r\nconst transact = async (action: string, data: object): Promise<TransactResult | ReadOnlyTransactResult | PushTransactionArgs> => {\r\n  const {contractAccount} = settings.eos;\r\n\r\n  return await eosApi.transact({\r\n    actions: [{\r\n      account: contractAccount,\r\n      name: action,\r\n      authorization: [{\r\n        actor: contractAccount,\r\n        permission: \"active\"\r\n      }],\r\n      data\r\n    }]\r\n  }, {\r\n    blocksBehind: 3,\r\n    expireSeconds: 30\r\n  });\r\n};\r\n\r\nexport {findNFT, findGame, findLobby, findPlayer, transact};\r\n","import type {GameFrontend} from \"@som/shared/types/frontend\";\r\nimport type {Game} from \"models/game\";\r\n\r\nconst generateGameFrontend = (game: Game, name: string): GameFrontend => {\r\n  const {gameId, currentPlayer, currentTurn, battleLogs, selectedSkins, playerA, playerB} = game;\r\n\r\n  return {\r\n    gameId,\r\n    currentPlayer,\r\n    currentTurn,\r\n    battleLogs,\r\n    selectedSkins: {\r\n      player: selectedSkins.playerA.name === name ? selectedSkins.playerA.list : selectedSkins.playerB.list,\r\n      opponent: selectedSkins.playerA.name === name ? selectedSkins.playerB.list : selectedSkins.playerA.list\r\n    },\r\n    player: playerA.name === name ? {\r\n      name: playerA.name,\r\n      hero: playerA.hero,\r\n      minion: playerA.minion,\r\n      trap: playerA.trap,\r\n      deck: playerA.deck,\r\n      hand: playerA.hand,\r\n      graveyard: playerA.graveyard\r\n    } : {\r\n      name: playerB.name,\r\n      hero: playerB.hero,\r\n      minion: playerB.minion,\r\n      trap: playerB.trap,\r\n      deck: playerB.deck,\r\n      hand: playerB.hand,\r\n      graveyard: playerB.graveyard\r\n    },\r\n    opponent: playerA.name === name ? {\r\n      name: playerB.name,\r\n      hero: playerB.hero,\r\n      minion: playerB.minion,\r\n      trap: playerB.trap ? true : false,\r\n      deck: playerB.deck.length,\r\n      hand: playerB.hand.length,\r\n      graveyard: playerB.graveyard\r\n    } : {\r\n      name: playerA.name,\r\n      hero: playerA.hero,\r\n      minion: playerA.minion,\r\n      trap: playerA.trap ? true : false,\r\n      deck: playerA.deck.length,\r\n      hand: playerA.hand.length,\r\n      graveyard: playerA.graveyard\r\n    }\r\n  };\r\n};\r\n\r\nexport {generateGameFrontend};\r\n","import {PlayerStatus} from \"@som/shared/enums\";\r\nimport {eosApi, findNFT, findAccount} from \"apis/eos\";\r\nimport {accountsDb, chatsDb, gamesDb, lobbiesDb, playersDb} from \"apis/mongo\";\r\nimport type {AccountFrontend, GameFrontend, LobbyFrontend, PlayerFrontend} from \"@som/shared/types/frontend\";\r\nimport type {SocketEvent} from \"models\";\r\nimport { generateFungible } from \"helpers/player\";\r\nimport { generateGameFrontend } from \"helpers/game/generateGameFe\";\r\n\r\nconst signin: SocketEvent = (socket): void => {\r\n  const socketId = socket.id;\r\n\r\n  socket.on(\"signin\", async (params) => {\r\n    const {name} = params;\r\n    let lobby, game: any;\r\n\r\n    const $player = await playersDb.findOneAndUpdate({name}, [{\r\n      $set: {\r\n        socketId,\r\n        status: {\r\n          $switch: {\r\n            branches: [{\r\n              case: {\r\n                $gt: [\"$lobbyId\", 0]\r\n              },\r\n              then: PlayerStatus.INLOBBY\r\n            }, {\r\n              case: {\r\n                $gt: [\"$gameId\", 0]\r\n              },\r\n              then: PlayerStatus.INGAME\r\n            }],\r\n            default: PlayerStatus.ONLINE\r\n          }\r\n        }\r\n      }\r\n    }], {\r\n      returnDocument: \"after\"\r\n    });\r\n\r\n    const playerChain = await findAccount(name);\r\n\r\n    if (!$player.value || !playerChain) { return; }\r\n\r\n    const acc = await accountsDb.findOne({name});\r\n\r\n    if (!acc) { return; }\r\n\r\n    const {friends} = acc.social;\r\n    const friendsView: Array<any> = [];\r\n\r\n    for (const friendname of friends) {\r\n      const [friend, chat] = await Promise.all([\r\n        playersDb.findOne({\r\n          name: friendname\r\n        }),\r\n        chatsDb.findOne({\r\n          players: {\r\n            $all: [name, friendname]\r\n          }\r\n        })\r\n      ]);\r\n\r\n      if (!friend || !chat) { return; }\r\n\r\n      const {status} = friend;\r\n      const {messages} = chat;\r\n\r\n      friendsView.push({username: friendname, status, avatarId: 1, messages});\r\n    }\r\n\r\n    const social = {\r\n      friends: friendsView,\r\n      requests: acc.social.requests,\r\n      blocked: acc.social.blocked,\r\n      chat: {\r\n        username: \"\",\r\n        avatarId: 0,\r\n        status: 0,\r\n        isOpen: false,\r\n        messages: []\r\n      }\r\n    };\r\n\r\n    const {lobbyId, gameId} = $player.value;\r\n    let gameFrontend: GameFrontend | undefined;\r\n\r\n    if (lobbyId) {\r\n      lobby = await lobbiesDb.findOne({lobbyId});\r\n\r\n      if (!lobby) {\r\n        socket.emit(\"notification\", \"You are currently in a lobby that cannot be found. (Contact dev)\");\r\n        return;\r\n      }\r\n    } else if (gameId) {\r\n      game = await gamesDb.findOne({gameId});\r\n\r\n      console.log(name);\r\n\r\n      if (!game) {\r\n        socket.emit(\"notification\", \"You are currently in a game that cannot be found. (Contact dev)\");\r\n        return;\r\n      }\r\n\r\n      gameFrontend = generateGameFrontend(game, name);\r\n    }\r\n\r\n    const nftss: any[] = [];\r\n\r\n    for (const serial of playerChain.tokens.nonFungible.serials) {\r\n      nftss.push(await findNFT(serial));\r\n    }\r\n\r\n    const table = await eosApi.rpc.get_table_rows({\r\n      code: \"eternisom141\",\r\n      scope: \"eternisom141\",\r\n      table: \"players\",\r\n      lower_bound: name,\r\n      upper_bound: name,\r\n      limit: 1\r\n    });\r\n\r\n    const accountFrontend: AccountFrontend = {\r\n      profile: {\r\n        name: playerChain.profile.name,\r\n        publicKey: \"\",\r\n        privateKey: \"\",\r\n        privateKeyHash: acc.privateKeyHash,\r\n        nonce: playerChain.profile.nonce,\r\n        joinedAt: playerChain.profile.joinedAt,\r\n        avatarId: playerChain.profile.avatarId,\r\n        isActivated: playerChain.profile.isActivated ? true : false\r\n      },\r\n      social,\r\n      wallet: {\r\n        fungible: generateFungible(playerChain.tokens.fungible),\r\n        nonFungible: nftss\r\n      }\r\n    };\r\n\r\n    const playerFrontend: PlayerFrontend = {\r\n      name: $player.value.name,\r\n      status: $player.value.status,\r\n      xp: $player.value.xp,\r\n      lv: $player.value.lv,\r\n      deckId: $player.value.deckId,\r\n      lobbyId: $player.value.lobbyId,\r\n      gameId: $player.value.gameId,\r\n      games: $player.value.games,\r\n      decks: $player.value.decks,\r\n      selectedSkins: table.rows[0].selectedSkins\r\n    };\r\n\r\n    socket.emit(\"signin\", {\r\n      accountFrontend,\r\n      playerFrontend,\r\n      lobbyFrontend: lobby as any,\r\n      gameFrontend\r\n    });\r\n  });\r\n};\r\n\r\nexport {signin};\r\n","import {PlayerStatus} from \"@som/shared/enums\";\r\nimport {leap} from \"apis/eos\";\r\nimport {accountsDb, playersDb} from \"apis/mongo\";\r\nimport type {SocketEvent} from \"models\";\r\n\r\nconst signup: SocketEvent = (socket): void => {\r\n  socket.on(\"signup\", async (params) => {\r\n    const {name, publicKey, privateKeyHash} = params;\r\n    const $account = await accountsDb.findOne({name});\r\n\r\n    if ($account) {\r\n      socket.emit(\"notification\", \"Username taken.\");\r\n      return;\r\n    }\r\n\r\n    const promises = await Promise.all([\r\n      leap.transact({\r\n        contract: \"eternisvm131\",\r\n        permission: \"active\",\r\n        action: \"signup\",\r\n        data: {name, publicKey}\r\n      }),\r\n      leap.transact({\r\n        contract: \"eternisom141\",\r\n        permission: \"active\",\r\n        action: \"signin\",\r\n        data: {name, signature: \"SIG_K1_K3qcmTeUz4sGZjaKVEpHsniCoCmubWXUCUEYTpUkvV9XnoXpn2LA7v8PxsigK8U9oERcboFYQrwqcfseWpm5scuy9cKJyC\"}\r\n      }),\r\n      accountsDb.insertOne({\r\n        name,\r\n        privateKeyHash,\r\n        social: {\r\n          friends: [],\r\n          requests: [],\r\n          blocked: []\r\n        }\r\n      }),\r\n      playersDb.insertOne({\r\n        socketId: \"\",\r\n        name,\r\n        status: PlayerStatus.OFFLINE,\r\n        xp: 0,\r\n        lv: 1,\r\n        deckId: 0,\r\n        lobbyId: 0,\r\n        gameId: 0,\r\n        decks: [\r\n          {id: 0, klass: 1, name: \"Deck 1\", cards: []},\r\n          {id: 1, klass: 2, name: \"Deck 2\", cards: []},\r\n          {id: 2, klass: 3, name: \"Deck 3\", cards: []},\r\n          {id: 3, klass: 4, name: \"Deck 4\", cards: []}\r\n        ],\r\n        games: {\r\n          casual: {won: 0, lost: 0},\r\n          ranked: {won: 0, lost: 0, elo: 1000}\r\n        }\r\n      })\r\n    ]);\r\n\r\n    const [transaction, transaction2, insertAccount, insertPlayer] = promises;\r\n\r\n    if (!transaction || !transaction2 || !insertAccount.insertedId || !insertPlayer.insertedId) {\r\n      socket.emit(\"notification\", \"Error creating account.\");\r\n      return;\r\n      // clear successfull inserts to avoid bugs.\r\n    }\r\n\r\n    socket.emit(\"notification\", \"Account created successfully.\");\r\n  });\r\n};\r\n\r\nexport {signup};\r\n","import {disconnect} from \"./disconnect\";\r\nimport {getPrivateKeyHash} from \"./getPrivateKeyHash\";\r\nimport {signin} from \"./signin\";\r\nimport {signup} from \"./signup\";\r\n\r\nconst auth = [disconnect, getPrivateKeyHash, signin, signup];\r\n\r\nexport {auth};\r\n","import {Ability, CardId, CardKlass, CardType} from \"@som/shared/enums\";\r\nimport type {Document} from \"mongodb\";\r\n\r\ntype GameType = \"casual\" | \"ranked\" | \"custom\";\r\n\r\ntype SelectedSkins = Array<any>;\r\n\r\nenum LogType {ATTACK, SUMMON};\r\n\r\ninterface AttackLog {\r\n  type: LogType.ATTACK;\r\n  playerAtk: string;\r\n  playerDef: string;\r\n  with: number;\r\n  target: number;\r\n  attacked: string;\r\n  attacker: string;\r\n}\r\n\r\ninterface SummonLog {\r\n  type: LogType.SUMMON;\r\n  player: string;\r\n  field: string;\r\n  minionKlass: number;\r\n  minionId: number;\r\n}\r\n\r\ntype BattleLogs = Array<AttackLog | SummonLog>;\r\n\r\ninterface Game extends Document {\r\n  gameId: number;\r\n  type: GameType;\r\n  currentPlayer: string;\r\n  currentTurn: number;\r\n  battleLogs: BattleLogs;\r\n  selectedSkins: {\r\n    playerA: {\r\n      name: string;\r\n      list: Array<{\r\n        key: number;\r\n        value: number;\r\n      }>;\r\n    };\r\n    playerB: {\r\n      name: string;\r\n      list: Array<{\r\n        key: number;\r\n        value: number;\r\n      }>;\r\n    };\r\n  };\r\n  playerA: GamePlayer;\r\n  playerB: GamePlayer;\r\n}\r\n\r\ninterface GameCard {\r\n  id: number;\r\n  gid: number;\r\n  klass: number;\r\n  type: number;\r\n  name: string;\r\n  manaCost: number;\r\n  effect: {\r\n    id: number;\r\n    type: number;\r\n  };\r\n}\r\n\r\ntype GameCards = Array<GameMagic | GameMinion | GameTrap>;\r\n\r\ninterface GameHero {\r\n  id: CardId;\r\n  name: string;\r\n  klass: CardKlass;\r\n  type: CardType;\r\n  health: number;\r\n  mana: number;\r\n  ability: Ability;\r\n  maxHealth: number;\r\n  maxMana: number;\r\n}\r\n\r\ninterface GameMagic extends GameCard {}\r\n\r\ninterface GameMinion extends GameCard {\r\n  damage: number;\r\n  health: number;\r\n  maxHealth: number;\r\n  canAttack: boolean;\r\n  hasTriggeredEffect: boolean;\r\n}\r\n\r\ninterface GamePlayer {\r\n  name: string;\r\n  hero: GameHero;\r\n  minion: {\r\n    a: GameMinion | undefined;\r\n    b: GameMinion | undefined;\r\n    c: GameMinion | undefined;\r\n    d: GameMinion | undefined;\r\n  };\r\n  trap: GameTrap | undefined;\r\n  hand: GameCards;\r\n  deck: GameCards;\r\n  graveyard: GameCards;\r\n  selectedSkins: SelectedSkins;\r\n}\r\n\r\ninterface GameTrap extends GameCard {}\r\n\r\nexport {LogType};\r\n\r\nexport type {\r\n  AttackLog,\r\n  SummonLog,\r\n  Game,\r\n  GameType,\r\n  GameCard,\r\n  GameCards,\r\n  GameHero,\r\n  GameMagic,\r\n  GameMinion,\r\n  GamePlayer,\r\n  GameTrap\r\n};\r\n","import {LogType, type Game, AttackLog} from \"models/game\";\n\nconst battleLog = (\n  game: Game,\n  player: any,\n  opponent: any,\n  attacked: any,\n  attacker: any,\n  playerMinionId: number,\n  opponentMinionId: number,\n): void => {\n  const attackLog: AttackLog = {\n    type: LogType.ATTACK,\n    playerAtk: player.username,\n    playerDef: opponent.username,\n    with: playerMinionId,\n    target: opponentMinionId,\n    attacked,\n    attacker\n  };\n\n  game.battleLogs.push(attackLog);\n};\n\nexport {battleLog};\n","import {randomInt} from \"crypto\";\r\nimport {cards} from \"@som/shared/data\";\r\nimport {CardType} from \"@som/shared/enums\";\r\nimport type {Player} from \"models/Player\";\r\nimport type {GameCards, GameMagic, GameMinion, GameTrap} from \"models/game\";\r\n\r\nconst buildDeck = (player: Player): GameCards => {\r\n  let deck: GameCards = [];\r\n  let gid = 1;\r\n\r\n  player.decks[player.deckId].cards.forEach((deckCard) => {\r\n    const card = cards.find((card) => card.id === deckCard.id);\r\n\r\n    if (!card || card.type === CardType.HERO) { return; }\r\n\r\n    const {id, klass, name, type, manaCost, effect} = card;\r\n    let builtCard: GameMinion | GameMagic | GameTrap;\r\n\r\n    if (card.type === CardType.MINION) {\r\n      const {damage, health} = card;\r\n\r\n      builtCard = {\r\n        gid,\r\n        id,\r\n        klass,\r\n        name,\r\n        type,\r\n        manaCost,\r\n        effect,\r\n        damage,\r\n        health,\r\n        maxHealth: health,\r\n        canAttack: false,\r\n        hasTriggeredEffect: false,\r\n        buffs: [],\r\n        debuffs: []\r\n      };\r\n    } else {\r\n      builtCard = {gid, id, klass, name, type, manaCost, effect,buffs: [],\r\n        debuffs: []};\r\n    }\r\n\r\n    deck.push(builtCard);\r\n    deckCard.amount > 1 && deck.push(builtCard);\r\n\r\n    gid += 1;\r\n  });\r\n\r\n  for (let i = deck.length - 1; i > 0; i -= 1) {\r\n    const j = randomInt(0, i + 1);\r\n    const temp = deck[i];\r\n\r\n    deck[i] = deck[j];\r\n    deck[j] = temp;\r\n  }\r\n\r\n  return deck;\r\n};\r\n\r\nexport {buildDeck};\r\n","import {PlayerStatus} from \"@som/shared/enums\";\r\nimport {gamesDb, playersDb} from \"apis/mongo\";\r\nimport {ioServer} from \"apis/server\";\r\nimport {checkLevelUp} from \"helpers/player\";\r\nimport type {Game} from \"models/game\";\r\n\r\nconst endGame = async (game: Game, winner: \"A\" | \"B\"): Promise<void> => {\r\n  const {gameId} = game;\r\n  const $game = await gamesDb.findOne({gameId});\r\n\r\n  if (!$game) { return; }\r\n\r\n  const {playerA, playerB} = $game;\r\n\r\n  const [A, B] = await Promise.all([\r\n    playersDb.findOneAndUpdate({\r\n      name: playerA.name\r\n    }, {\r\n      $set: {\r\n        gameId: 0,\r\n        status: PlayerStatus.ONLINE\r\n      },\r\n      $inc: {\r\n        xp: winner === \"A\" ? 110 + game.currentTurn : 90 + game.currentTurn,\r\n        \"games.ranked.elo\": $game.type === \"ranked\" ? winner === \"A\" ? 20 : -20 : 0\r\n      }\r\n    }, {\r\n      returnDocument: \"after\"\r\n    }),\r\n    playersDb.findOneAndUpdate({\r\n      name: playerB.name\r\n    }, {\r\n      $set: {\r\n        gameId: 0,\r\n        status: PlayerStatus.ONLINE\r\n      },\r\n      $inc: {\r\n        xp: winner === \"B\" ? 110 + game.currentTurn : 90 + game.currentTurn,\r\n        \"games.ranked.elo\": $game.type === \"ranked\" ? winner === \"B\" ? 20 : -20 : 0\r\n      }\r\n    }, {\r\n      returnDocument: \"after\"\r\n    })\r\n  ]);\r\n\r\n  if (!A.value || !B.value) { return; }\r\n\r\n  await checkLevelUp(A.value);\r\n  await checkLevelUp(B.value);\r\n\r\n  const isDeletedGame = await gamesDb.deleteOne({gameId});\r\n\r\n  if (!isDeletedGame.deletedCount) { return; }\r\n\r\n  if (winner === \"A\") {\r\n    ioServer.to(A.value.socketId).emit(\"notification\", \"You won!\");\r\n    ioServer.to(B.value.socketId).emit(\"notification\", \"You lost...\");\r\n  } else if (winner === \"B\") {\r\n    ioServer.to(B.value.socketId).emit(\"notification\", \"You won!\");\r\n    ioServer.to(A.value.socketId).emit(\"notification\", \"You lost...\");\r\n  }\r\n\r\n  ioServer.to([A.value.socketId, B.value.socketId]).emit(\"endGame\");\r\n};\r\n\r\nexport {endGame};\r\n","import {endGame} from \"./endGame\";\r\nimport type {Game, GamePlayer} from \"models/game\";\r\n\r\nconst drawCard = async (game: Game, player: GamePlayer): Promise<void> => {\r\n  const {hand, deck} = player;\r\n  const card = deck.pop();\r\n\r\n  if (!card) {\r\n    return await endGame(game, \"A\");\r\n  }\r\n\r\n  hand.push(card);\r\n};\r\n\r\nexport {drawCard};\r\n","import {playersDb} from \"apis/mongo\";\nimport {ioServer} from \"apis/server\";\nimport type {Game} from \"models/game\";\n\nconst floatingText = async (\n  game: Game,\n  username: string,\n  attacked: any,\n  attacker: any,\n  attackedDamage: number,\n  attackerDamage: number\n): Promise<void> => {\n  const {playerA, playerB} = game;\n  const [$playerA, $playerB] = await Promise.all([\n    playersDb.findOne({\n      name: playerA.name\n    }),\n    playersDb.findOne({\n      name: playerB.name\n    })\n  ]);\n\n  if (!$playerA || !$playerB) { return; }\n\n  if ($playerA.name === username) {\n    ioServer.to($playerA.socketId).emit(\"floatingText\", {\n      attacked,\n      attacker,\n      attackedDamage,\n      attackerDamage\n    } as any);\n\n    ioServer.to($playerB.socketId).emit(\"floatingText\", {\n      attacked: attacker,\n      attacker: attacked,\n      attackedDamage: attackerDamage,\n      attackerDamage: attackedDamage\n    } as any);\n  } else {\n    ioServer.to($playerA.socketId).emit(\"floatingText\", {\n      attacked: attacker,\n      attacker: attacked,\n      attackedDamage: attackerDamage,\n      attackerDamage: attackedDamage\n    } as any);\n\n    ioServer.to($playerB.socketId).emit(\"floatingText\", {\n      attacked,\n      attacker,\n      attackedDamage,\n      attackerDamage\n    } as any);\n  }\n};\n\nexport {floatingText};\n","import {cards} from \"@som/shared/data\";\r\nimport {CardType} from \"@som/shared/enums\";\r\nimport {buildDeck} from \"./buildDeck\";\r\nimport type {Player} from \"models/Player\";\r\nimport type {Game, GameHero, GameCards} from \"models/game\";\r\n\r\nconst generateGame = (type: \"casual\" | \"ranked\" | \"custom\", gameId: number, playerA: Player, playerB: Player, \r\nplayerASkins: any, playerBSkins: any): Game => {\r\n  const playerAHand: GameCards = [];\r\n  const playerBHand: GameCards = [];\r\n  let playerADeck = buildDeck(playerA);\r\n  let playerBDeck = buildDeck(playerB);\r\n\r\n  playerAHand.push(...playerADeck.slice(-5));\r\n  playerBHand.push(...playerBDeck.slice(-5));\r\n\r\n  playerADeck = playerADeck.slice(0, -5);\r\n  playerBDeck = playerBDeck.slice(0, -5);\r\n\r\n  const playerASelectedDeck = playerA.decks.find(({id}) => id === playerA.deckId);\r\n  const playerBSelectedDeck = playerB.decks.find(({id}) => id === playerB.deckId);\r\n\r\n  if (!playerASelectedDeck || !playerBSelectedDeck) { return {} as Game; }\r\n\r\n  const playerAHero: GameHero = cards.find(({type, klass}) => klass === playerASelectedDeck.klass && type === CardType.HERO) as any;\r\n  const playerBHero: GameHero = cards.find(({type, klass}) => klass === playerBSelectedDeck.klass && type === CardType.HERO) as any;\r\n\r\n  if (!playerAHero || !playerBHero) {\r\n    return {} as Game;\r\n  }\r\n\r\n  return {\r\n    gameId,\r\n    type,\r\n    currentPlayer: playerA.name,\r\n    currentTurn: 0,\r\n    battleLogs: [],\r\n    selectedSkins: {\r\n      playerA: {\r\n        name: playerA.name,\r\n        list: playerASkins\r\n      },\r\n      playerB: {\r\n        name: playerB.name,\r\n        list: playerBSkins\r\n      }\r\n    },\r\n    playerA: {\r\n      name: playerA.name,\r\n      hero: {\r\n        ...playerAHero,\r\n        maxHealth: 20,\r\n        maxMana: 10,\r\n      },\r\n      minion: {\r\n        a: undefined,\r\n        b: undefined,\r\n        c: undefined,\r\n        d: undefined\r\n      },\r\n      trap: undefined,\r\n      hand: playerAHand,\r\n      deck: playerADeck,\r\n      graveyard: [],\r\n      selectedSkins: []\r\n    },\r\n    playerB: {\r\n      name: playerB.name,\r\n      hero: {...playerBHero, maxHealth: 100, maxMana: 20},\r\n      minion: {\r\n        a: undefined,\r\n        b: undefined,\r\n        c: undefined,\r\n        d: undefined\r\n      },\r\n      trap: undefined,\r\n      hand: playerBHand,\r\n      deck: playerBDeck,\r\n      graveyard: [],\r\n      selectedSkins: []\r\n    },\r\n  };\r\n};\r\n\r\nexport {generateGame};\r\n","import {gamesDb, playersDb} from \"apis/mongo\";\r\n\r\nconst getGame = async (socketId: string) => {\r\n  const $player = await playersDb.findOne({socketId});\r\n\r\n  if (!$player) { return; }\r\n\r\n  const {name, gameId} = $player;\r\n  const $game = await gamesDb.findOne({gameId});\r\n\r\n  if (!$game) { return; }\r\n\r\n  const {playerA, playerB} = $game;\r\n  const player = playerA.name === name ? playerA : playerB;\r\n  const opponent = playerA.name === name ? playerB : playerA;\r\n\r\n  return {$game, player, opponent};\r\n};\r\n\r\nexport {getGame};\r\n","import type {Game} from \"models/game\";\r\n\r\nconst getPlayers = (game: Game, name: string) => {\r\n  const {playerA, playerB} = game;\r\n  const player = playerA.name === name ? playerA : playerB;\r\n  const opponent = playerA.name === name ? playerB : playerA;\r\n\r\n  return {player, opponent};\r\n};\r\n\r\nexport {getPlayers};\r\n","import {endGame} from \"./endGame\";\r\nimport type {Game} from \"models/game\";\r\n\r\nconst isGameOver = async (game: Game): Promise<boolean> => {\r\n  if (game.playerA.hero.health <= 0) {\r\n    await endGame(game, \"B\");\r\n    return true;\r\n  } else if (game.playerB.hero.health <= 0) {\r\n    await endGame(game, \"A\");\r\n    return true;\r\n  }\r\n\r\n  return false;\r\n};\r\n\r\nexport {isGameOver};\r\n","import {CardType} from \"@som/shared/enums\";\r\nimport type {GameMinion, GamePlayer} from \"models/game\";\r\n\r\nconst playMinion = (player: GamePlayer, gid: number, field: \"a\" | \"b\" | \"c\" | \"d\"): GameMinion | undefined => {\r\n  const {hand, minion, hero} = player;\r\n  const handCard = hand.find((card) => card.gid === gid) as GameMinion;\r\n\r\n  if (!handCard) { return; } // hand card not found by gid\r\n  if (handCard.type !== CardType.MINION) { return; } // hand card isn't minion\r\n  if (minion[field]) { return; } // field already inhibits a minion\r\n  if (handCard.manaCost > hero.mana) { return; } // hero doesn't have enough mana\r\n\r\n  hero.mana -= handCard.manaCost;\r\n  minion[field] = handCard;\r\n  minion[field]?.buffs.push(minion[field]?.effect.id as number); // wtf? o.O\r\n  hand.splice(hand.indexOf(handCard), 1);\r\n\r\n  return minion[field];\r\n};\r\n\r\nexport {playMinion};\r\n","import {playersDb, preGamesDb} from \"apis/mongo\";\nimport {ioServer} from \"apis/server\";\nimport {randomInt} from \"crypto\";\n\nconst gamePopup = async (playerA: string, playerB: string): Promise<void> => {\n  const [a, b] = await Promise.all([\n    playersDb.findOne({name: playerA}),\n    playersDb.findOne({name: playerB}),\n  ]);\n\n  if (!a || !b) { return; }\n\n  const gameId = randomInt(0, 2_147_483_647);\n\n  // const acceptTimeout = setTimeout(async () => {\n  //   await preGamesDb.deleteOne({gameId});\n  // }, 30_000);\n\n  const preGame = {\n    gameId,\n    acceptTimeout: 0,\n    playerA: {name: playerA, hasAccepted: false},\n    playerB: {name: playerB, hasAccepted: false}\n  };\n\n  const inserted = await preGamesDb.insertOne(preGame);\n\n  if (!inserted.insertedId) { return; }\n\n  console.log(\"succ\");\n\n  ioServer.to(a.socketId).emit(\"gamePopup\", {...preGame});\n  ioServer.to(b.socketId).emit(\"gamePopup\", {...preGame});\n};\n\nexport {gamePopup};\n","import {gamesDb, playersDb} from \"apis/mongo\";\r\nimport {ioServer} from \"apis/server\";\r\nimport {generateGameFrontend} from \"./generateGameFe\";\r\nimport type {Game} from \"models/game\";\r\n\r\nconst saveGame = async (game: Game): Promise<void> => {\r\n  const {gameId, playerA, playerB} = game;\r\n\r\n  const [$updateGame, $playerA, $playerB] = await Promise.all([\r\n    gamesDb.replaceOne({gameId}, game),\r\n    playersDb.findOne({\r\n      name: playerA.name\r\n    }),\r\n    playersDb.findOne({\r\n      name: playerB.name\r\n    })\r\n  ]);\r\n\r\n  if (!$updateGame.modifiedCount || !$playerA || !$playerB) { return; }\r\n\r\n  ioServer.to($playerA.socketId).emit(\"reloadGameState\", {\r\n    game: generateGameFrontend(game, $playerA.name)\r\n  });\r\n\r\n  ioServer.to($playerB.socketId).emit(\"reloadGameState\", {\r\n    game: generateGameFrontend(game, $playerB.name)\r\n  });\r\n};\r\n\r\nexport {saveGame};\r\n","import {PlayerStatus} from \"@som/shared/enums\";\r\nimport {randomInt} from \"crypto\";\r\nimport {ioServer} from \"apis/server\";\r\nimport {gamesDb, playersDb} from \"apis/mongo\";\r\nimport {generateGame} from \"./generateGame\";\r\nimport {generateGameFrontend} from \"./generateGameFe\";\r\nimport type {GameType} from \"models/game\";\r\nimport {findSOM} from \"apis/eos\";\r\n\r\nconst startGame = async (type: GameType, playerA: string, playerB: string, gameId2 = 0): Promise<void> => {\r\n  const gameId = randomInt(0, 2_147_483_647);\r\n\r\n  const [$playerA, $playerB, playerAChain, playerBChain] = await Promise.all([\r\n    playersDb.findOneAndUpdate({\r\n      name: playerA\r\n    }, {\r\n      $set: {\r\n        status: PlayerStatus.INGAME,\r\n        gameId: gameId2\r\n      }\r\n    }),\r\n    playersDb.findOneAndUpdate({\r\n      name: playerB\r\n    }, {\r\n      $set: {\r\n        status: PlayerStatus.INGAME,\r\n        gameId: gameId2\r\n      }\r\n    }),\r\n    findSOM(playerA),\r\n    findSOM(playerB)\r\n  ]);\r\n\r\n  if (!$playerA.value || !$playerB.value || !playerAChain || !playerBChain) { return; }\r\n\r\n  const game = generateGame(type, gameId2, $playerA.value, $playerB.value, playerAChain.selectedSkins, playerBChain.selectedSkins);\r\n  const isInserted = await gamesDb.insertOne(game);\r\n\r\n  if (!isInserted.insertedId) { return; }\r\n\r\n  ioServer.to($playerA.value.socketId).emit(\"startGame\", {\r\n    game: generateGameFrontend(game, $playerA.value.name)\r\n  });\r\n\r\n  ioServer.to($playerB.value.socketId).emit(\"startGame\", {\r\n    game: generateGameFrontend(game, $playerB.value.name)\r\n  });\r\n};\r\n\r\nexport {startGame};\r\n","import {EffectId} from \"@som/shared/enums\";\r\nimport type {GameMinion} from \"models/game\";\r\n\r\nconst charge = (minion: GameMinion): void => {\r\n  if (!minion.hasTriggeredEffect && minion.effect.id === EffectId.CHARGE) {\r\n    minion.canAttack = true;\r\n    minion.hasTriggeredEffect = true;\r\n  }\r\n};\r\n\r\nexport {charge};\r\n","import {EffectId} from \"@som/shared/enums\";\r\nimport type {GamePlayer} from \"models/game\";\r\n\r\nconst mirrorsEdge = (player: GamePlayer, opponent: GamePlayer, damage: number): boolean => {\r\n  if (opponent.trap && opponent.trap.effect.id === EffectId.MIRRORS_EDGE) {\r\n    player.hero.health -= damage;\r\n\r\n    opponent.graveyard.push(opponent.trap);\r\n    opponent.trap = undefined;\r\n\r\n    return true;\r\n  }\r\n\r\n  return false;\r\n};\r\n\r\nexport {mirrorsEdge};\r\n","import {EffectId} from \"@som/shared/enums\";\r\nimport type {GameMinion} from \"models/game\";\r\n\r\nconst multiStrike = (minion: GameMinion): void => {\r\n  if (minion.effect.id === EffectId.MULTI_STRIKE && !minion.hasTriggeredEffect) {\r\n    minion.canAttack = true;\r\n    minion.hasTriggeredEffect = true;\r\n  }\r\n};\r\n\r\nexport {multiStrike};\r\n","import {EffectId} from \"@som/shared/enums\";\r\nimport type {GameMinion} from \"models/game\";\r\n\r\nconst necro = (minion: GameMinion): void => {\r\n  if (minion.effect === EffectId.NECRO && !minion.hasTriggeredEffect) {\r\n    minion.health -= 2;\r\n    minion.damage -= 2;\r\n    minion.hasTriggeredEffect = true;\r\n  }\r\n};\r\n\r\nexport {necro};\r\n","import {EffectId} from \"@som/shared/enums\";\r\nimport {randomInt} from \"crypto\";\r\nimport type {GameMinion, GamePlayer} from \"models/game\";\r\n\r\nconst quickShot = (minion: GameMinion, opponent: GamePlayer): void => {\r\n  if (minion.effect === EffectId.QUICK_SHOT && !minion.hasTriggeredEffect) {\r\n    const possibleMinions: Array<GameMinion> = [];\r\n    const minionKeys = Object.keys(opponent.minion) as Array<keyof typeof opponent.minion>;\r\n\r\n    minionKeys.forEach((key) => {\r\n      const minion = opponent.minion[key];\r\n\r\n      if (!minion) { return; }\r\n\r\n      possibleMinions.push(minion);\r\n    });\r\n\r\n    if (possibleMinions.length < 1) { return; }\r\n\r\n    let randomMinion = 0;\r\n\r\n    if (possibleMinions.length > 1) {\r\n      randomMinion = randomInt(possibleMinions.length);\r\n    }\r\n\r\n    possibleMinions[randomMinion].health -= 2;\r\n    minion.hasTriggeredEffect = true;\r\n  }\r\n};\r\n\r\nexport {quickShot};\r\n","import {EffectId} from \"@som/shared/enums\";\r\nimport type {GameMinion, GamePlayer} from \"models/game\";\r\n\r\nconst smite = (player: GamePlayer, opponent: GamePlayer, minion: GameMinion, field: \"a\" | \"b\" | \"c\" | \"d\"): boolean => {\r\n  if (opponent.trap && opponent.trap.effect === EffectId.SMITE) {\r\n    minion.health = minion.maxHealth;\r\n\r\n    player.graveyard.push(minion);\r\n    player.minion[field] = undefined;\r\n\r\n    opponent.graveyard.push(opponent.trap);\r\n    opponent.trap = undefined;\r\n\r\n    return true;\r\n  }\r\n\r\n  return false;\r\n};\r\n\r\nexport {smite};\r\n","import {CardType, EffectId} from \"@som/shared/enums\";\r\nimport type {GameMinion, GamePlayer} from \"models/game\";\r\n\r\nconst spellweave = (minion: GameMinion, player: GamePlayer): void => {\r\n  if (minion.effect === EffectId.SPELLWEAVE && !minion.hasTriggeredEffect) {\r\n    const bonus = player.graveyard.reduce((sum, card): number => {\r\n      if (card.type === CardType.MAGIC || card.type === CardType.TRAP) {\r\n        return sum += 1;\r\n      }\r\n\r\n      return sum\r\n    }, 0);\r\n\r\n    minion.damage += bonus;\r\n    minion.hasTriggeredEffect = true;\r\n  }\r\n};\r\n\r\nexport {spellweave};\r\n","import {charge} from \"./charge\";\r\nimport {mirrorsEdge} from \"./mirrorsEdge\";\r\nimport {multiStrike} from \"./multiStrike\";\r\nimport {necro} from \"./necro\";\r\nimport {quickShot} from \"./quickShot\";\r\nimport {smite} from \"./smite\";\r\nimport {spellweave} from \"./spellweave\";\r\n\r\nconst triggerEffect = {\r\n  charge,\r\n  mirrorsEdge,\r\n  multiStrike,\r\n  necro,\r\n  quickShot,\r\n  smite,\r\n  spellweave\r\n};\r\n\r\nexport default triggerEffect;\r\n","import {battleLog} from \"./battleLog\";\r\nimport {buildDeck} from \"./buildDeck\";\r\nimport {drawCard} from \"./drawCard\";\r\nimport {endGame} from \"./endGame\";\r\nimport {floatingText} from \"./floatingText\";\r\nimport {generateGame} from \"./generateGame\";\r\nimport {generateGameFrontend} from \"./generateGameFe\";\r\nimport {getGame} from \"./getGame\";\r\nimport {getPlayers} from \"./getPlayers\";\r\nimport {isGameOver} from \"./isGameOver\";\r\nimport {playMinion} from \"./playMinion\";\r\nimport {gamePopup} from \"./gamePopup\";\r\nimport {saveGame} from \"./saveGame\";\r\nimport {startGame} from \"./startGame\";\r\nimport triggerEffect from \"./triggerEffect\";\r\n\r\nconst gameEngine = {\r\n  battleLog,\r\n  buildDeck,\r\n  drawCard,\r\n  endGame,\r\n  floatingText,\r\n  generateGame,\r\n  generateGameFrontend,\r\n  getGame,\r\n  getPlayers,\r\n  isGameOver,\r\n  playMinion,\r\n  gamePopup,\r\n  saveGame,\r\n  startGame,\r\n  triggerEffect\r\n};\r\n\r\nexport default gameEngine;\r\n","import {playersDb, preGamesDb} from \"apis/mongo\";\nimport { ioServer } from \"apis/server\";\nimport gameEngine from \"helpers/game\";\nimport {SocketEvent} from \"models\";\n\nconst acceptGame: SocketEvent = (socket): void => {\n  const socketId = socket.id;\n\n  socket.on(\"acceptGame\", async (params) => {\n    const {gameId} = params;\n    const gamePopup = await preGamesDb.findOne({gameId});\n\n    if (!gamePopup) {\n      socket.emit(\"notification\", \"Game popup not found.\");\n      return;\n    }\n\n    const [playerA, playerB, player] = await Promise.all([\n      playersDb.findOne({name: gamePopup.playerA.name}),\n      playersDb.findOne({name: gamePopup.playerB.name}),\n      playersDb.findOne({socketId})\n    ]);\n\n    if (!playerA || !playerB || !player) {\n      socket.emit(\"notification\", \"Player not found.\");\n      return;\n    }\n\n    if (gamePopup.playerA.name === player.name) {\n      if (gamePopup.playerB.hasAccepted) {\n        await gameEngine.startGame(\"casual\", gamePopup.playerA.name, gamePopup.playerB.name, gamePopup.gameId);\n        // remove the game popup before starting the game\n        return;\n      }\n\n      gamePopup.playerA.hasAccepted = true;\n    } else if (gamePopup.playerB.name === player.name) {\n      if (gamePopup.playerA.hasAccepted) {\n        await gameEngine.startGame(\"casual\", gamePopup.playerB.name, gamePopup.playerA.name, gamePopup.gameId);\n        // remove the game popup before starting the game\n        return;\n      }\n\n      gamePopup.playerB.hasAccepted = true;\n    }\n\n    const repl = await preGamesDb.replaceOne({gameId: gamePopup.gameId}, gamePopup);\n\n    if (!repl.modifiedCount) {\n      socket.emit(\"notification\", \"Error replacing game popup.\");\n      return;\n    }\n\n    ioServer.to(playerA.socketId).emit(\"acceptGame\");\n    ioServer.to(playerB.socketId).emit(\"acceptGame\");\n  });\n};\n\nexport {acceptGame};\n","import {leap} from \"apis/eos\";\nimport type {SocketEvent} from \"models\";\n\nconst deselectSkin: SocketEvent = (socket): void => {\n  socket.on(\"deselectSkin\", async (params) => {\n    const {id, username, signature} = params;\n\n    const transaction = await leap.transact({\n      contract: \"eternisom141\",\n      action: \"deselectskin\",\n      permission: \"active\",\n      data: {\n        cardId: id,\n        name: username,\n        signature\n      }\n    });\n\n    socket.emit(\"deselectSkin\", {id});\n  });\n};\n\nexport {deselectSkin};\n","import {PlayerStatus} from \"@som/shared/enums\";\r\nimport {lobbiesDb, playersDb} from \"apis/mongo\";\r\nimport {ioServer} from \"apis/server\";\r\nimport type {SocketEvent} from \"models\";\r\n\r\nconst destroyLobby: SocketEvent = (socket): void => {\r\n  const socketId = socket.id;\r\n\r\n  socket.on(\"destroyLobby\", async () => {\r\n    const player = await playersDb.findOne({socketId});\r\n\r\n    if (!player) { return; }\r\n\r\n    const {name, lobbyId} = player;\r\n\r\n    if (!lobbyId) {\r\n      socket.emit(\"notification\", \"You are not in a lobby.\");\r\n      return;\r\n    }\r\n\r\n    const lobby = await lobbiesDb.findOne({lobbyId});\r\n\r\n    if (!lobby) { return; }\r\n\r\n    if (name !== lobby.host.name) {\r\n      socket.emit(\"notification\", \"You are not the lobby host.\");\r\n      return;\r\n    }\r\n\r\n    const [deleteLobby, updatePlayer] = await Promise.all([\r\n      lobbiesDb.deleteOne({lobbyId}),\r\n      playersDb.updateOne({socketId}, {\r\n        $set: {\r\n          lobbyId: 0,\r\n          status: PlayerStatus.ONLINE\r\n        }\r\n      })\r\n    ]);\r\n\r\n    if (!deleteLobby.deletedCount || !updatePlayer.modifiedCount) { return; }\r\n\r\n    if (lobby.challengee.name) {\r\n      const challengee = await playersDb.findOneAndUpdate({\r\n        name: lobby.challengee.name\r\n      }, {\r\n        $set: {\r\n          lobbyId: 0,\r\n          status: PlayerStatus.ONLINE\r\n        }\r\n      }, {\r\n        returnDocument: \"after\"\r\n      });\r\n\r\n      if (!challengee.value) { return; }\r\n    }\r\n\r\n    socket.emit(\"destroyLobby\");\r\n    ioServer.to(lobby.challengee.socketId).emit(\"destroyLobby\");\r\n  });\r\n};\r\n\r\nexport {destroyLobby};\r\n","import {eosApi} from \"apis/eos\";\r\nimport {playersDb} from \"apis/mongo\";\r\nimport type {SocketEvent} from \"models\";\r\n\r\nconst getLeaderboardsByLevel: SocketEvent = (socket): void => {\r\n  socket.on(\"getLeaderboardsByLevel\", async () => {\r\n    const byLevel = (await playersDb\r\n      .find()\r\n      .limit(100)\r\n      .sort({\r\n        lv: -1\r\n      })\r\n      .toArray()\r\n    ).map(({name: username, lv, avatarId}) => ({username, lv, avatarId: 1}));\r\n\r\n    const byElo = (await playersDb\r\n      .find()\r\n      .limit(100)\r\n      .sort({\r\n        \"games.ranked.elo\": -1\r\n      })\r\n      .toArray()\r\n    ).map(({name: username, games: {\r\n      ranked: {elo}\r\n    }, avatarId}) => ({username, elo, avatarId: 1}));\r\n\r\n    const byDMT = (await eosApi.rpc.get_table_rows({\r\n      code: \"eternisvm131\",\r\n      scope: \"eternisvm131\",\r\n      table: \"accounts\",\r\n      limit: 100\r\n    })).rows.sort((a, b) => {\r\n      // console.log(a);\r\n      let aStake: any = a.tokens.fungible.find((token: any) => token.key.sym.includes(\"VMT\"));\r\n      let bStake: any = b.tokens.fungible.find((token: any) => token.key.sym.includes(\"VMT\"));\r\n\r\n      let aVal = \"0.0000 VMT\";\r\n      let bVal = \"0.0000 VMT\";\r\n\r\n      console.log(aStake);\r\n\r\n      if (aStake) {\r\n        aVal = aStake.value.staked;\r\n      }\r\n\r\n      if (bStake) {\r\n        bVal = bStake.value.staked;\r\n      }\r\n      // if (!aVal) { aVal = \"0.0000 VMT\"; }\r\n      // if (!bVal) { bVal = \"0.0000 VMT\"; }\r\n\r\n\r\n      return parseInt(bVal) - parseInt(aVal);\r\n    }).map((player) => {\r\n      const {name} = player.profile;\r\n      const dmt = player.tokens.fungible.find((token: any) => token.key.sym.includes(\"VMT\"));\r\n\r\n      let val = \"0.0000 VMT\";\r\n\r\n      if (dmt) {\r\n        val = dmt.value.staked;\r\n      }\r\n\r\n      return {username: name, dmt: val};\r\n    });\r\n\r\n    socket.emit(\"getLeaderboardsByLevel\", {byLevel, byElo, byDMT} as any);\r\n  });\r\n};\r\n\r\nexport {getLeaderboardsByLevel};\r\n","import {PlayerStatus} from \"@som/shared/enums\";\r\nimport {casualQueuePlayersDb, playersDb} from \"apis/mongo\";\r\nimport gameEngine from \"helpers/game\";\r\nimport type {SocketEvent} from \"models\";\r\n\r\nconst joinCasualQueue: SocketEvent = (socket): void => {\r\n  const socketId = socket.id;\r\n\r\n  socket.on(\"joinCasualQueue\", async () => {\r\n    const player = await playersDb.findOne({socketId});\r\n\r\n    if (!player) { return; }\r\n\r\n    const {name, lv} = player;\r\n    const casualQueuePlayers = await casualQueuePlayersDb.find().toArray();\r\n\r\n    for (const opponent of casualQueuePlayers) {\r\n      if (opponent.lv < lv - 100 || opponent.lv < lv + 100) {\r\n        const deleteCasualQueuePlayer = await casualQueuePlayersDb.deleteOne({\r\n          username: opponent.username\r\n        });\r\n\r\n        if (!deleteCasualQueuePlayer.deletedCount) { return; }\r\n\r\n        // await gameEngine.startGame(\"casual\", opponent.username, name);\r\n        await gameEngine.gamePopup(opponent.username, name);\r\n\r\n        return;\r\n      }\r\n    }\r\n\r\n    const insertCasualQueuePlayer = await casualQueuePlayersDb.insertOne({username: name, lv});\r\n    const updatedPlayer = await playersDb.findOneAndUpdate({socketId}, {\r\n      $set: {\r\n        status: PlayerStatus.IN_CASUAL_QUEUE\r\n      }\r\n    }, {\r\n      returnDocument: \"after\"\r\n    });\r\n\r\n    if (!insertCasualQueuePlayer.insertedId || !updatedPlayer.value) { return; }\r\n\r\n    socket.emit(\"joinCasualQueue\");\r\n  });\r\n};\r\n\r\nexport {joinCasualQueue};\r\n","import {PlayerStatus} from \"@som/shared/enums\";\r\nimport { ioServer } from \"apis/server\";\r\nimport {lobbiesDb, playersDb} from \"apis/mongo\";\r\nimport {isDeckValid} from \"helpers/player\";\r\nimport type {SocketEvent} from \"models\";\r\n\r\nconst joinLobby: SocketEvent = (socket): void => {\r\n  const socketId = socket.id;\r\n\r\n  socket.on(\"joinLobby\", async (params) => {\r\n    const {lobbyId} = params;\r\n    const [player, lobby] = await Promise.all([\r\n      playersDb.findOne({socketId}),\r\n      lobbiesDb.findOne({lobbyId})\r\n    ]);\r\n\r\n    if (!player) {\r\n      socket.emit(\"notification\", \"Player not found.\");\r\n      return;\r\n    }\r\n    if (!lobby) {\r\n      socket.emit(\"notification\", \"Lobby not found.\");\r\n      return;\r\n    }\r\n    if (player.lobbyId) {\r\n      socket.emit(\"notification\", \"You are already in a lobby.\");\r\n      return;\r\n    }\r\n    if (player.gameId) {\r\n      socket.emit(\"notification\", \"You can't join a lobby while in game.\");\r\n      return;\r\n    }\r\n    if (lobby.challengee.name) {\r\n      socket.emit(\"notification\", \"Lobby is full.\");\r\n      return;\r\n    }\r\n    if (!isDeckValid(player.decks[player.deckId])) {\r\n      socket.emit(\"notification\", \"Invalid deck.\");\r\n      return;\r\n    }\r\n\r\n    const {name, avatarId} = player;\r\n    const [modifiedLobby, updatedPlayer] = await Promise.all([\r\n      lobbiesDb.findOneAndUpdate({lobbyId}, {\r\n        $set: {\r\n          challengee: {name, socketId, avatarId}\r\n        }\r\n      }, {\r\n        returnDocument: \"after\"\r\n      }),\r\n      playersDb.updateOne({socketId}, {\r\n        $set: {\r\n          lobbyId,\r\n          status: PlayerStatus.INLOBBY\r\n        }\r\n      })\r\n    ]);\r\n\r\n    if (!modifiedLobby.value || !updatedPlayer.modifiedCount) {\r\n      socket.emit(\"notification\", \"Error joining lobby.\");\r\n      return;\r\n    }\r\n\r\n    const {challengee} = modifiedLobby.value;\r\n\r\n    socket.emit(\"joinLobbySender\", {lobby});\r\n    ioServer\r\n      .to(modifiedLobby.value.host.socketId)\r\n      .emit(\"joinLobbyReceiver\", {challengee});\r\n  });\r\n};\r\n\r\nexport {joinLobby};\r\n","import { PlayerStatus } from \"@som/shared/enums\";\r\nimport {rankedQueuePlayersDb, playersDb} from \"apis/mongo\";\r\nimport gameEngine from \"helpers/game\";\r\nimport type {SocketEvent} from \"models\";\r\n\r\nconst joinRankedQueue: SocketEvent = (socket): void => {\r\n  const socketId = socket.id;\r\n\r\n  socket.on(\"joinRankedQueue\", async () => {\r\n    const player = await playersDb.findOne({socketId});\r\n\r\n    if (!player) { return; }\r\n\r\n    const {name, games} = player;\r\n    const {elo} = games.ranked;\r\n    const rankedQueuePlayers = await rankedQueuePlayersDb.find().toArray();\r\n\r\n    for (const opponent of rankedQueuePlayers) {\r\n      if (opponent.elo < elo - 1000 || opponent.elo < elo + 1000) {\r\n        const deleteRankedQueuePlayer = await rankedQueuePlayersDb.deleteOne({\r\n          username: opponent.username\r\n        });\r\n\r\n        if (!deleteRankedQueuePlayer.deletedCount) { return; }\r\n\r\n        await gameEngine.startGame(\"ranked\", opponent.username, name);\r\n\r\n        return;\r\n      }\r\n    }\r\n\r\n    const insertRankedQueuePlayer = await rankedQueuePlayersDb\r\n      .insertOne({username: name, elo});\r\n\r\n    const updatedPlayer = await playersDb.findOneAndUpdate({socketId}, {\r\n      $set: {\r\n        status: PlayerStatus.IN_RANKED_QUEUE\r\n      }\r\n    }, {\r\n      returnDocument: \"after\"\r\n    });\r\n\r\n    if (!insertRankedQueuePlayer.insertedId || !updatedPlayer.value) { return; }\r\n\r\n    socket.emit(\"joinRankedQueue\");\r\n  });\r\n};\r\n\r\nexport {joinRankedQueue};\r\n","import {PlayerStatus} from \"@som/shared/enums\";\r\nimport {casualQueuePlayersDb, playersDb} from \"apis/mongo\";\r\nimport type {SocketEvent} from \"models\";\r\n\r\nconst leaveCasualQueue: SocketEvent = (socket): void => {\r\n  const socketId = socket.id;\r\n\r\n  socket.on(\"leaveCasualQueue\", async () => {\r\n    const player = await playersDb.findOne({socketId});\r\n\r\n    if (!player) { return; }\r\n\r\n    const {name} = player;\r\n    const [deleteCasualQueuePlayer, updatePlayer] = await Promise.all([\r\n      casualQueuePlayersDb.deleteOne({username: name}),\r\n      playersDb.updateOne({name}, {\r\n        $set: {\r\n          status: PlayerStatus.ONLINE\r\n        }\r\n      })\r\n    ]);\r\n\r\n    if (!deleteCasualQueuePlayer.deletedCount || !updatePlayer.modifiedCount) { return; }\r\n\r\n    socket.emit(\"leaveCasualQueue\");\r\n  });\r\n};\r\n\r\nexport {leaveCasualQueue};\r\n","import {PlayerStatus} from \"@som/shared/enums\";\r\nimport { ioServer } from \"apis/server\";\r\nimport {lobbiesDb, playersDb} from \"apis/mongo\";\r\nimport type {SocketEvent} from \"models\";\r\n\r\nconst leaveLobby: SocketEvent = (socket): void => {\r\n  const socketId = socket.id;\r\n\r\n  socket.on(\"leaveLobby\", async () => {\r\n    const $player = await playersDb.findOne({socketId});\r\n\r\n    if (!$player) {\r\n      socket.emit(\"notification\", \"Player not found.\");\r\n      return;\r\n    }\r\n    if (!$player.lobbyId) {\r\n      socket.emit(\"notification\", \"You are not in a lobby.\");\r\n      return;\r\n    }\r\n\r\n    const {lobbyId} = $player;\r\n    const $lobby = await lobbiesDb.findOne({lobbyId});\r\n\r\n    if (!$lobby) {\r\n      socket.emit(\"notification\", \"Lobby not found.\");\r\n      return;\r\n    }\r\n\r\n    const [$updateLobby, $updatePlayer] = await Promise.all([\r\n      lobbiesDb.updateOne({lobbyId}, {\r\n        $set: {\r\n          challengee: {\r\n            name: \"\",\r\n            socketId: \"\",\r\n            avatarId: 0\r\n          }\r\n        }\r\n      }),\r\n      playersDb.updateOne({socketId}, {\r\n        $set: {\r\n          lobbyId: 0,\r\n          status: PlayerStatus.ONLINE\r\n        }\r\n      })\r\n    ]);\r\n\r\n    if (!$updateLobby.modifiedCount || !$updatePlayer.modifiedCount) { return; }\r\n\r\n    socket.emit(\"leaveLobbySender\");\r\n    ioServer.to($lobby.host.socketId).emit(\"leaveLobbyReceiver\");\r\n  });\r\n};\r\n\r\nexport {leaveLobby};\r\n","import {PlayerStatus} from \"@som/shared/enums\";\r\nimport {rankedQueuePlayersDb, playersDb} from \"apis/mongo\";\r\nimport type {SocketEvent} from \"models\";\r\n\r\nconst leaveRankedQueue: SocketEvent = (socket): void => {\r\n  const socketId = socket.id;\r\n\r\n  socket.on(\"leaveRankedQueue\", async () => {\r\n    const player = await playersDb.findOne({socketId});\r\n\r\n    if (!player) { return; }\r\n\r\n    const {name} = player;\r\n    const [deleteRankedQueuePlayer, updatePlayer] = await Promise.all([\r\n      rankedQueuePlayersDb.deleteOne({username: name}),\r\n      playersDb.updateOne({name}, {\r\n        $set: {\r\n          status: PlayerStatus.ONLINE\r\n        }\r\n      })\r\n    ]);\r\n\r\n    if (\r\n      !deleteRankedQueuePlayer.deletedCount ||\r\n      !updatePlayer.modifiedCount\r\n    ) { return; }\r\n\r\n    socket.emit(\"leaveRankedQueue\");\r\n  });\r\n};\r\n\r\nexport {leaveRankedQueue};\r\n","import {randomInt} from \"crypto\";\r\nimport {PlayerStatus} from \"@som/shared/enums\";\r\nimport {lobbiesDb, playersDb} from \"apis/mongo\";\r\nimport {isDeckValid} from \"helpers/player\";\r\nimport type {SocketEvent} from \"models\";\r\n\r\nconst makeLobby: SocketEvent = (socket): void => {\r\n  const socketId = socket.id;\r\n\r\n  socket.on(\"makeLobby\", async () => {\r\n    const player = await playersDb.findOne({socketId});\r\n\r\n    if (!player) {\r\n      socket.emit(\"notification\", \"Player not found.\");\r\n      return;\r\n    }\r\n\r\n    if (player.lobbyId) {\r\n      socket.emit(\"notification\", \"You are already in a lobby.\");\r\n      return;\r\n    }\r\n\r\n    if (player.gameId) {\r\n      socket.emit(\"notification\", \"You can't make a lobby while in game.\");\r\n      return;\r\n    }\r\n\r\n    if (!isDeckValid(player.decks[player.deckId])) {\r\n      socket.emit(\"notification\", \"Invalid deck.\");\r\n      return;\r\n    }\r\n\r\n    const {name, avatarId} = player;\r\n    const lobbyId = randomInt(1, 1000000);\r\n\r\n    const [insertLobby, updatePlayer] = await Promise.all([\r\n      lobbiesDb.insertOne({\r\n        lobbyId,\r\n        host: {name, socketId, avatarId},\r\n        challengee: {\r\n          name: \"\",\r\n          socketId: \"\",\r\n          avatarId: 0\r\n        }\r\n      }),\r\n      playersDb.updateOne({socketId}, {\r\n        $set: {\r\n          lobbyId,\r\n          status: PlayerStatus.INLOBBY\r\n        }\r\n      })\r\n    ]);\r\n\r\n    if (!insertLobby.insertedId || !updatePlayer.modifiedCount) {\r\n      socket.emit(\"notification\", \"Error creating lobby.\");\r\n      return;\r\n    }\r\n\r\n    const lobby = await lobbiesDb.findOne({lobbyId});\r\n\r\n    if (!lobby) { return; }\r\n\r\n    socket.emit(\"makeLobby\", {lobby});\r\n  });\r\n};\r\n\r\nexport {makeLobby};\r\n","import {playersDb} from \"apis/mongo\";\r\nimport type {SocketEvent} from \"models\";\r\n\r\nconst saveDeck: SocketEvent = (socket): void => {\r\n  const socketId = socket.id;\r\n\r\n  socket.on(\"saveDeck\", async (params) => {\r\n    const {cards} = params;\r\n    const player = await playersDb.findOne({socketId});\r\n\r\n    if (!player) { return; }\r\n\r\n    const {deckId} = player;\r\n    const $updatePlayer = await playersDb.updateOne({\r\n      socketId,\r\n      \"decks.id\": deckId\r\n    }, {\r\n      $set: {\r\n        \"decks.$.cards\": cards\r\n      }\r\n    });\r\n\r\n    if (!$updatePlayer.modifiedCount) { return; }\r\n\r\n    socket.emit(\"saveDeck\", {cards});\r\n  });\r\n};\r\n\r\nexport {saveDeck};\r\n","import {playersDb} from \"apis/mongo\";\r\nimport type {SocketEvent} from \"models\";\r\n\r\nconst selectDeck: SocketEvent = (socket): void => {\r\n  const socketId = socket.id;\r\n\r\n  socket.on(\"selectDeck\", async (params) => {\r\n    const {deckId} = params;\r\n    const $updatePlayer = await playersDb.updateOne({socketId}, {\r\n      $set: {deckId}\r\n    });\r\n\r\n    if (!$updatePlayer.modifiedCount) { return; }\r\n\r\n    socket.emit(\"selectDeck\", {deckId});\r\n  });\r\n};\r\n\r\nexport {selectDeck};\r\n","import {leap} from \"apis/eos\";\nimport type {SocketEvent} from \"models\";\n\nconst selectSkin: SocketEvent = (socket): void => {\n  const socketId = socket.id;\n\n  socket.on(\"selectSkin\", async (params) => {\n    const {serial, username, signature} = params;\n\n    const transaction = await leap.transact({\n      contract: \"eternisom141\",\n      action: \"selectskin\",\n      permission: \"active\",\n      data: {\n        name: username,\n        signature,\n        serial\n      }\n    });\n\n    socket.emit(\"selectSkin\", {serial});\n  });\n};\n\nexport {selectSkin};\n","import {leap} from \"apis/eos\";\r\nimport type {SocketEvent} from \"models\";\r\n\r\nconst sendToken: SocketEvent = (socket): void => {\r\n  socket.on(\"sendToken\", async (params) => {\r\n    const transaction = await leap.transact({\r\n      contract: \"eternisvm131\",\r\n      action: \"transfer\",\r\n      permission: \"active\",\r\n      data: params\r\n    });\r\n\r\n    if (!transaction) {\r\n      socket.emit(\"notification\", \"Error sending token.\");\r\n      return;\r\n    }\r\n  });\r\n};\r\n\r\nexport {sendToken};\r\n","import {playersDb} from \"apis/mongo\";\r\nimport type {SocketEvent} from \"models\";\r\n\r\nconst setDeckKlass: SocketEvent = (socket): void => {\r\n  const socketId = socket.id;\r\n\r\n  socket.on(\"setDeckKlass\", async (params) => {\r\n    const {deckId, klass} = params;\r\n    const $updatePlayer = await playersDb.updateOne({\r\n      socketId,\r\n      \"decks.id\": deckId\r\n    }, {\r\n      $set: {\r\n        \"decks.$.klass\": klass\r\n      }\r\n    });\r\n\r\n    if (!$updatePlayer.modifiedCount) { return; }\r\n\r\n    socket.emit(\"setDeckKlass\", {deckId, klass});\r\n  });\r\n};\r\n\r\nexport {setDeckKlass};\r\n","import {playersDb} from \"apis/mongo\";\r\nimport type {SocketEvent} from \"models\";\r\n\r\nconst setDeckName: SocketEvent = (socket): void => {\r\n  const socketId = socket;\r\n\r\n  socket.on(\"setDeckName\", async (params) => {\r\n    const {id, name} = params;\r\n    const $updatePlayer = await playersDb.updateOne({\r\n      socketId,\r\n      \"decks.id\": id\r\n    }, {\r\n      $set: {\r\n        \"decks.$.name\": name\r\n      }\r\n    });\r\n\r\n    if (!$updatePlayer.modifiedCount) { return; }\r\n\r\n    socket.emit(\"setDeckName\", {id, name});\r\n  });\r\n};\r\n\r\nexport {setDeckName};\r\n","import {lobbiesDb} from \"apis/mongo\";\r\nimport gameEngine from \"helpers/game\";\r\nimport type {SocketEvent} from \"models\";\r\n\r\nconst startCustomGame: SocketEvent = (socket): void => {\r\n  socket.on(\"startGame\", async (params) => {\r\n    const {lobbyId} = params;\r\n    const lobby = await lobbiesDb.findOne({lobbyId});\r\n    const deleteLobby = await lobbiesDb.deleteOne({lobbyId});\r\n\r\n    if (!lobby || !deleteLobby.deletedCount) { return; }\r\n\r\n    const {host, challengee} = lobby;\r\n\r\n    await gameEngine.startGame(\"custom\", host.name, challengee.name);\r\n  });\r\n};\r\n\r\nexport {startCustomGame};\r\n","import {acceptGame} from \"./acceptGame\";\r\nimport {deselectSkin} from \"./deselectSkin\";\r\nimport {destroyLobby} from \"./destroyLobby\";\r\nimport {getLeaderboardsByLevel} from \"./getLeaderboardsByLevel\";\r\nimport {joinCasualQueue} from \"./joinCasualQueue\";\r\nimport {joinLobby} from \"./joinLobby\";\r\nimport {joinRankedQueue} from \"./joinRankedQueue\";\r\nimport {leaveCasualQueue} from \"./leaveCasualQueue\";\r\nimport {leaveLobby} from \"./leaveLobby\";\r\nimport {leaveRankedQueue} from \"./leaveRankedQueue\";\r\nimport {makeLobby} from \"./makeLobby\";\r\nimport {saveDeck} from \"./saveDeck\";\r\nimport {selectDeck} from \"./selectDeck\";\r\nimport {selectSkin} from \"./selectSkin\";\r\nimport {sendToken} from \"./sendToken\";\r\nimport {setDeckKlass} from \"./setDeckKlass\";\r\nimport {setDeckName} from \"./setDeckName\";\r\nimport {startCustomGame} from \"./startCustomGame\";\r\n\r\nconst client = [\r\n  acceptGame,\r\n  deselectSkin,\r\n  destroyLobby,\r\n  getLeaderboardsByLevel,\r\n  joinCasualQueue,\r\n  joinLobby,\r\n  joinRankedQueue,\r\n  leaveCasualQueue,\r\n  leaveLobby,\r\n  leaveRankedQueue,\r\n  makeLobby,\r\n  saveDeck,\r\n  selectDeck,\r\n  selectSkin,\r\n  sendToken,\r\n  setDeckKlass,\r\n  setDeckName,\r\n  startCustomGame\r\n];\r\n\r\nexport {client};\r\n","import {gamesDb, playersDb} from \"apis/mongo\";\r\nimport gameEngine from \"helpers/game\";\r\nimport type {SocketEvent} from \"models\";\r\n\r\nconst attackHero: SocketEvent = (socket): void => {\r\n  const socketId = socket.id;\r\n  const {triggerEffect} = gameEngine;\r\n\r\n  socket.on(\"attackHero\", async (params) => {\r\n    const $player = await playersDb.findOne({socketId});\r\n\r\n    if (!$player) { return; }\r\n\r\n    const {name, gameId} = $player;\r\n    const game = await gamesDb.findOne({gameId});\r\n\r\n    if (!game) { return; }\r\n    if (game.currentPlayer !== name) { return; }\r\n\r\n    const {attacker} = params;\r\n    const {player, opponent} = gameEngine.getPlayers(game, name);\r\n    const playerMinion = player.minion[attacker];\r\n    const opponentHero = opponent.hero;\r\n\r\n    if (!playerMinion) { return; }\r\n    if (!playerMinion.canAttack) { return; }\r\n\r\n    playerMinion.canAttack = false;\r\n    triggerEffect.multiStrike(playerMinion);\r\n\r\n    const isTriggered = triggerEffect.mirrorsEdge(player, opponent, playerMinion.damage);\r\n\r\n    if (isTriggered) {\r\n      if (await gameEngine.isGameOver(game)) { return; }\r\n    }\r\n\r\n    opponentHero.health -= playerMinion.damage;\r\n\r\n    if (await gameEngine.isGameOver(game)) { return; }\r\n\r\n    await gameEngine.saveGame(game);\r\n  });\r\n};\r\n\r\nexport {attackHero};\r\n","import {EffectId} from \"@som/shared/enums\";\r\nimport {gamesDb, playersDb} from \"apis/mongo\";\r\nimport gameEngine from \"helpers/game\";\r\nimport type {SocketEvent} from \"models\";\r\n\r\nconst attackMinion: SocketEvent = (socket): void => {\r\n  const socketId = socket.id;\r\n  const {triggerEffect} = gameEngine;\r\n\r\n  socket.on(\"attackMinion\", async (params) => {\r\n    const {attacked, attacker} = params;\r\n    const $player = await playersDb.findOne({socketId});\r\n\r\n    if (!$player) { return; }\r\n\r\n    const {name, gameId} = $player;\r\n    const $game = await gamesDb.findOne({gameId});\r\n\r\n    if (!$game) { return; }\r\n    if ($game.currentPlayer !== name) { return; }\r\n\r\n    const {player, opponent} = gameEngine.getPlayers($game, name);\r\n    const playerMinion = player.minion[attacker];\r\n    const opponentMinion = opponent.minion[attacked];\r\n\r\n    if (!playerMinion || !opponentMinion) { return; }\r\n    if (!playerMinion.canAttack) { return; }\r\n\r\n    playerMinion.canAttack = false;\r\n    triggerEffect.multiStrike(playerMinion);\r\n\r\n    if (opponent.trap && opponent.trap.effect.id === EffectId.MIRRORS_EDGE) {\r\n      player.hero.health -= playerMinion.damage;\r\n\r\n      if (await gameEngine.isGameOver($game)) { return; }\r\n\r\n      opponent.graveyard.push(opponent.trap);\r\n      opponent.trap = undefined;\r\n\r\n      return await gameEngine.saveGame($game);\r\n    }\r\n\r\n    playerMinion.health -= opponentMinion.damage;\r\n    opponentMinion.health -= playerMinion.damage;\r\n\r\n    await gameEngine.floatingText($game, player.name, attacked, attacker, opponentMinion.damage, playerMinion.damage);\r\n    gameEngine.battleLog($game, player, opponent, attacked, attacker, playerMinion.id, opponentMinion.id);\r\n\r\n    if (playerMinion.health <= 0) {\r\n      playerMinion.health = playerMinion.maxHealth;\r\n\r\n      player.graveyard.push(playerMinion);\r\n      player.minion[attacker] = undefined;\r\n    }\r\n\r\n    if (opponentMinion.health <= 0) {\r\n      opponentMinion.health = opponentMinion.maxHealth;\r\n\r\n      opponent.graveyard.push(opponentMinion);\r\n      opponent.minion[attacked] = undefined;\r\n    }\r\n\r\n    await gameEngine.saveGame($game);\r\n  });\r\n};\r\n\r\nexport {attackMinion};\r\n","import {gamesDb, playersDb} from \"apis/mongo\";\r\nimport gameEngine from \"helpers/game\";\r\nimport type {SocketEvent} from \"models\";\r\n\r\nconst endTurn: SocketEvent = (socket): void => {\r\n  const socketId = socket.id;\r\n\r\n  socket.on(\"endTurn\", async () => {\r\n    const $player = await playersDb.findOne({socketId});\r\n\r\n    if (!$player) { return; }\r\n\r\n    const {name, gameId} = $player;\r\n    const $game = await gamesDb.findOne({gameId});\r\n\r\n    if (!$game) { return; }\r\n    if ($game.currentPlayer !== name) { return; }\r\n\r\n    const {opponent} = gameEngine.getPlayers($game, name);\r\n    const {hero, minion} = opponent;\r\n\r\n    await gameEngine.drawCard($game, opponent);\r\n\r\n    hero.mana = 20;\r\n\r\n    const minionKeys = Object.keys(minion) as Array<keyof typeof minion>;\r\n\r\n    minionKeys.forEach((key) => {\r\n      const Minion = minion[key];\r\n      if (!Minion) { return; }\r\n      Minion.canAttack = true;\r\n      Minion.hasTriggeredEffect = false;\r\n    });\r\n\r\n    $game.currentPlayer = opponent.name;\r\n    $game.currentTurn += 1;\r\n\r\n    await gameEngine.saveGame($game);\r\n  });\r\n};\r\n\r\nexport {endTurn};\r\n","import {gamesDb, playersDb} from \"apis/mongo\";\r\nimport gameEngine from \"helpers/game\";\r\nimport { ioServer } from \"apis/server\";\r\nimport type {SocketEvent} from \"models\";\r\n\r\nconst hoverCard: SocketEvent = (socket): void => {\r\n  const socketId = socket.id;\r\n\r\n  socket.on(\"hoverCard\", async (params) => {\r\n    const $player = await playersDb.findOne({socketId});\r\n\r\n    if (!$player) { return; }\r\n\r\n    const {name, gameId} = $player;\r\n    const $game = await gamesDb.findOne({gameId});\r\n\r\n    if (!$game) { return; }\r\n    if ($game.currentPlayer !== name) { return; }\r\n\r\n    const {opponent} = gameEngine.getPlayers($game, name);\r\n    const $opponent = await playersDb.findOne({\r\n      name: opponent.name\r\n    });\r\n\r\n    if (!$opponent || !$opponent.socketId) { return; }\r\n\r\n    ioServer.to($opponent.socketId).emit(\"hoverCard\", params);\r\n  });\r\n};\r\n\r\nexport {hoverCard};\r\n","import {gamesDb, playersDb} from \"apis/mongo\";\r\nimport {ioServer} from \"apis/server\";\r\nimport gameEngine from \"helpers/game\";\r\nimport type {SocketEvent} from \"models\";\r\n\r\nconst hoverHandCard: SocketEvent = (socket): void => {\r\n  const socketId = socket.id;\r\n\r\n  socket.on(\"hoverHandCard\", async (params) => {\r\n    const $player = await playersDb.findOne({socketId});\r\n\r\n    if (!$player) { return; }\r\n\r\n    const {name, gameId} = $player;\r\n    const $game = await gamesDb.findOne({gameId});\r\n\r\n    if (!$game) { return; }\r\n    if ($game.currentPlayer !== name) { return; }\r\n\r\n    const {opponent} = gameEngine.getPlayers($game, name);\r\n    const $opponent = await playersDb.findOne({\r\n      name: opponent.name\r\n    });\r\n\r\n    if (!$opponent || !$opponent.socketId) { return; }\r\n\r\n    ioServer.to($opponent.socketId).emit(\"hoverHandCard\", params);\r\n  });\r\n};\r\n\r\nexport {hoverHandCard};\r\n","import {CardType, EffectId} from \"@som/shared/enums\";\r\nimport {gamesDb, playersDb} from \"apis/mongo\";\r\nimport gameEngine from \"helpers/game\";\r\nimport type {SocketEvent} from \"models\";\r\nimport type {GameTrap} from \"models/game\";\r\n\r\nconst playMagic: SocketEvent = (socket): void => {\r\n  const socketId = socket.id;\r\n  const {triggerEffect} = gameEngine;\r\n\r\n  socket.on(\"playMagic\", async (params) => {\r\n    const {gid} = params;\r\n    const $player = await playersDb.findOne({socketId});\r\n\r\n    if (!$player) { return; }\r\n\r\n    const {name, gameId} = $player;\r\n    const $game = await gamesDb.findOne({gameId});\r\n\r\n    if (!$game) { return; }\r\n    if ($game.currentPlayer !== name) { return; }\r\n\r\n    const {player} = gameEngine.getPlayers($game, name);\r\n    const {hand, hero} = player;\r\n    const handCard = hand.find((card) => card.gid === gid);\r\n\r\n    if (!handCard) { return; }\r\n    if (handCard.type !== CardType.MAGIC) { return; }\r\n    if (handCard.manaCost > hero.mana) { return; }\r\n\r\n    if (handCard.effect.id === EffectId.RELOAD) {\r\n      hero.mana -= handCard.manaCost;\r\n      await gameEngine.drawCard($game, player);\r\n      hand.splice(hand.indexOf(handCard), 1);\r\n      player.graveyard.push(handCard);\r\n    }\r\n\r\n    await gameEngine.saveGame($game);\r\n  });\r\n};\r\n\r\nexport {playMagic};\r\n","import gameEngine from \"helpers/game\";\nimport type {SocketEvent} from \"models\";\nimport { SummonLog } from \"models/game\";\n\nconst playMinion: SocketEvent = (socket): void => {\n  const socketId = socket.id;\n  const {triggerEffect} = gameEngine;\n\n  socket.on(\"playMinion\", async (params) => {\n    const {field, gid} = params;\n    const data = await gameEngine.getGame(socketId);\n\n    if (!data) { return; }\n\n    const {$game, player, opponent} = data;\n\n    if ($game.currentPlayer !== player.name) { return; }\n\n    const summonedMinion = gameEngine.playMinion(player, gid, field);\n\n    if (!summonedMinion) { return; }\n\n    const isSmiteTriggered = triggerEffect.smite(player, opponent, summonedMinion, field);\n\n    if (!isSmiteTriggered) {\n      triggerEffect.charge(summonedMinion);\n      triggerEffect.quickShot(summonedMinion, opponent);\n      triggerEffect.necro(summonedMinion);\n      triggerEffect.spellweave(summonedMinion, player);\n    }\n\n    const battleLog: SummonLog = {\n      type: 1,\n      field,\n      player: player.name,\n      minionKlass: summonedMinion.klass,\n      minionId: summonedMinion.id\n    };\n    $game.battleLogs.push(battleLog);\n\n    await gameEngine.saveGame($game);\n  });\n};\n\nexport {playMinion};\n","import {CardType} from \"@som/shared/enums\";\r\nimport {gamesDb, playersDb} from \"apis/mongo\";\r\nimport gameEngine from \"helpers/game\";\r\nimport type {SocketEvent} from \"models\";\r\nimport type {GameTrap} from \"models/game\";\r\n\r\nconst playTrap: SocketEvent = (socket): void => {\r\n  const socketId = socket.id;\r\n  const {triggerEffect} = gameEngine;\r\n\r\n  socket.on(\"playTrap\", async (params) => {\r\n    const {gid} = params;\r\n    const $player = await playersDb.findOne({socketId});\r\n\r\n    if (!$player) { return; }\r\n\r\n    const {name, gameId} = $player;\r\n    const $game = await gamesDb.findOne({gameId});\r\n\r\n    if (!$game) { return; }\r\n    if ($game.currentPlayer !== name) { return; }\r\n\r\n    const {player} = gameEngine.getPlayers($game, name);\r\n\r\n    if (player.trap) { return; }\r\n\r\n    const {hand, hero} = player;\r\n    const handCard = hand.find((card) => card.gid === gid);\r\n\r\n    if (!handCard) { return; }\r\n    if (handCard.type !== CardType.TRAP) { return; }\r\n    if (handCard.manaCost > hero.mana) { return; }\r\n\r\n    hero.mana -= handCard.manaCost;\r\n    player.trap = handCard as GameTrap;\r\n    hand.splice(hand.indexOf(handCard), 1);\r\n\r\n    await gameEngine.saveGame($game);\r\n  });\r\n};\r\n\r\nexport {playTrap};\r\n","import {gamesDb, playersDb} from \"apis/mongo\";\r\nimport gameEngine from \"helpers/game\";\r\nimport { ioServer } from \"apis/server\";\r\nimport type {SocketEvent} from \"models\";\r\n\r\nconst unhoverCard: SocketEvent = (socket): void => {\r\n  const socketId = socket.id;\r\n\r\n  socket.on(\"unhoverCard\", async () => {\r\n    const $player = await playersDb.findOne({socketId});\r\n\r\n    if (!$player) { return; }\r\n\r\n    const {name, gameId} = $player;\r\n    const $game = await gamesDb.findOne({gameId});\r\n\r\n    if (!$game) { return; }\r\n    if ($game.currentPlayer !== name) { return; }\r\n\r\n    const {opponent} = gameEngine.getPlayers($game, name);\r\n    const $opponent = await playersDb.findOne({\r\n      name: opponent.name\r\n    });\r\n\r\n    if (!$opponent || !$opponent.socketId) { return; }\r\n\r\n    ioServer.to($opponent.socketId).emit(\"unhoverCard\");\r\n  });\r\n};\r\n\r\nexport {unhoverCard};\r\n","import {gamesDb, playersDb} from \"apis/mongo\";\r\nimport gameEngine from \"helpers/game\";\r\nimport { ioServer } from \"apis/server\";\r\nimport type {SocketEvent} from \"models\";\r\n\r\nconst unhoverHandCard: SocketEvent = (socket): void => {\r\n  const socketId = socket.id;\r\n\r\n  socket.on(\"unhoverHandCard\", async () => {\r\n    const $player = await playersDb.findOne({socketId});\r\n\r\n    if (!$player) { return; }\r\n\r\n    const {name, gameId} = $player;\r\n    const $game = await gamesDb.findOne({gameId});\r\n\r\n    if (!$game) { return; }\r\n    if ($game.currentPlayer !== name) { return; }\r\n\r\n    const {opponent} = gameEngine.getPlayers($game, name);\r\n    const $opponent = await playersDb.findOne({\r\n      name: opponent.name\r\n    });\r\n\r\n    if (!$opponent || !$opponent.socketId) { return; }\r\n\r\n    ioServer.to($opponent.socketId).emit(\"unhoverHandCard\");\r\n  });\r\n};\r\n\r\nexport {unhoverHandCard};\r\n","import {attackHero} from \"./attackHero\";\r\nimport {attackMinion} from \"./attackMinion\";\r\nimport {endTurn} from \"./endTurn\";\r\nimport {hoverCard} from \"./hoverCard\";\r\nimport {hoverHandCard} from \"./hoverHandCard\";\r\nimport {playMagic} from \"./playMagic\";\r\nimport {playMinion} from \"./playMinion\";\r\nimport {playTrap} from \"./playTrap\";\r\nimport {unhoverCard} from \"./unhoverCard\";\r\nimport {unhoverHandCard} from \"./unhoverHandCard\";\r\n\r\nconst game = [\r\n  attackHero,\r\n  attackMinion,\r\n  endTurn,\r\n  hoverCard,\r\n  hoverHandCard,\r\n  playMagic,\r\n  playMinion,\r\n  playTrap,\r\n  unhoverCard,\r\n  unhoverHandCard\r\n];\r\n\r\nexport {game};\r\n","import type {UpdateFilter} from \"mongodb\";\r\nimport type {SocketEvent} from \"models\";\r\nimport { accountsDb, chatsDb, playersDb } from \"apis/mongo\";\r\nimport { Player } from \"@som/shared/types/mongo\";\r\nimport { ioServer } from \"apis/server\";\r\n\r\nconst acceptFriend: SocketEvent = (socket): void => {\r\n  const socketId = socket.id;\r\n\r\n  socket.on(\"acceptFriend\", async (params) => {\r\n    const {username} = params;\r\n\r\n    const $player = await playersDb.findOne({socketId});\r\n    const $receiverP = await playersDb.findOne({name: username});\r\n\r\n    if (!$player || ! $receiverP) { return; }\r\n\r\n    const $sender = await accountsDb.findOneAndUpdate({name: $player.name}, {\r\n      $pull: {\r\n        \"social.requests\": username\r\n      },\r\n      $push: {\r\n        \"social.friends\": username\r\n      }\r\n    } as UpdateFilter<Player> | Partial<Player>, { // bug: https://github.com/Automattic/mongoose/issues/10075\r\n      returnDocument: \"after\"\r\n    });\r\n\r\n    if (!$sender.value) { return; }\r\n\r\n    const receiver = await accountsDb.findOneAndUpdate({name: username}, {\r\n      $push: {\r\n        \"social.friends\": $sender.value.name\r\n      }\r\n    } as UpdateFilter<Player> | Partial<Player>, {\r\n      returnDocument: \"after\"\r\n    });\r\n\r\n    if (!receiver.value) { return; }\r\n\r\n    const insertChat = await chatsDb.insertOne({\r\n      players: [$sender.value.name, receiver.value.name],\r\n      messages: []\r\n    });\r\n\r\n    if (!insertChat.insertedId) { return; }\r\n\r\n    socket.emit(\"acceptFriendSender\", {\r\n      username: receiver.value.name,\r\n      avatarId: 1, // fetch from chain\r\n      status: 1\r\n    });\r\n\r\n    ioServer.to($receiverP.socketId).emit(\"acceptFriendReceiver\", {\r\n      username: $sender.value.name,\r\n      avatarId: 1, // fetch from chain\r\n      status: $player.status // fetch from accountsDb\r\n    });\r\n  });\r\n};\r\n\r\nexport {acceptFriend};\r\n","import {accountsDb, playersDb} from \"apis/mongo\";\r\nimport { ioServer } from \"apis/server\";\r\nimport type {SocketEvent} from \"models\";\r\n\r\nconst addFriend: SocketEvent = (socket): void => {\r\n  const socketId = socket.id;\r\n\r\n  socket.on(\"addFriend\", async (params) => {\r\n    const {username} = params;\r\n    const [senderP, receiverP] = await Promise.all([\r\n      playersDb.findOne({socketId}),\r\n      playersDb.findOne({name: username})\r\n    ]);\r\n\r\n    if (!senderP || !receiverP) { return; }\r\n\r\n    const [sender, receiver] = await Promise.all([\r\n      accountsDb.findOne({name: senderP.name}),\r\n      accountsDb.findOne({name: receiverP.name})\r\n    ]);\r\n\r\n    if (!sender || !receiver) { return; }\r\n\r\n    if (sender.name === username) {\r\n      socket.emit(\"notification\", \"You can't add yourself as a friend.\");\r\n      return;\r\n    }\r\n    if (receiver.social.blocked.includes(sender.name)) {\r\n      socket.emit(\"notification\", \"This player has blocked you.\");\r\n      return;\r\n    }\r\n    if (sender.social.blocked.includes(username)) {\r\n      socket.emit(\"notification\", \"You have blocked this player.\");\r\n      return;\r\n    }\r\n    if (receiver.social.requests.includes(sender.name)) {\r\n      socket.emit(\"notification\", \"You have already sent the request to this player.\");\r\n      return;\r\n    }\r\n    if (sender.social.requests.includes(username)) {\r\n      socket.emit(\"notification\", \"This player has already sent you the request.\");\r\n      return;\r\n    }\r\n    if (sender.social.friends.includes(username)) {\r\n      socket.emit(\"notification\", \"This player is already your friend.\");\r\n      return;\r\n    }\r\n\r\n    const updatePlayer = await accountsDb.updateOne({name: username}, {\r\n      $push: {\r\n        \"social.requests\": sender.name\r\n      }\r\n    });\r\n\r\n    if (!updatePlayer.modifiedCount) { return; }\r\n\r\n    socket.emit(\"notification\", \"Friend request sent.\");\r\n    ioServer.to(receiverP.socketId).emit(\"addFriend\", {\r\n      username: sender.name\r\n    });\r\n  });\r\n};\r\n\r\nexport {addFriend};\r\n","import { accountsDb, chatsDb, playersDb } from \"apis/mongo\";\r\nimport { ioServer } from \"apis/server\";\r\nimport type {SocketEvent} from \"models\";\r\n\r\nconst block: SocketEvent = (socket): void => {\r\n  const socketId = socket.id;\r\n\r\n  socket.on(\"block\", async (params) => {\r\n    console.log(\"init\");\r\n\r\n    const {username} = params;\r\n    const [sender, receiver] = await Promise.all([\r\n      playersDb.findOne({socketId}),\r\n      playersDb.findOne({name: username})\r\n    ]);\r\n\r\n    if (!sender || !receiver) { return; }\r\n\r\n    console.log(\"found them\");\r\n\r\n    const [isUpdatedSender, isUpdatedReceiver, isDeletedChat] = await Promise.all([\r\n      accountsDb.updateOne({name: sender.name}, {\r\n        $pull: {\r\n          \"social.friends\": receiver.name\r\n        },\r\n        $push: {\r\n          \"social.blocked\": receiver.name\r\n        }\r\n      }),\r\n      accountsDb.updateOne({name: receiver.name}, {\r\n        $pull: {\r\n          \"social.friends\": sender.name\r\n        }\r\n      }),\r\n      chatsDb.deleteOne({\r\n        players: {\r\n          $all: [receiver.name, sender.name]\r\n        }\r\n      })\r\n    ]);\r\n\r\n    console.log(\"tried to delet all.\");\r\n\r\n    if (\r\n      !isUpdatedSender.modifiedCount ||\r\n      !isUpdatedReceiver.modifiedCount ||\r\n      !isDeletedChat.deletedCount\r\n    ) { return; }\r\n\r\n    console.log(\"deleted all and updating ui\");\r\n\r\n    socket.emit(\"blockSender\", {username});\r\n    ioServer.to(receiver.socketId).emit(\"blockReceiver\", {\r\n      username: sender.username\r\n    });\r\n  });\r\n};\r\n\r\nexport {block};\r\n","import { accountsDb, playersDb } from \"apis/mongo\";\r\nimport type {SocketEvent} from \"models\";\r\n\r\nconst declineFriend: SocketEvent = (socket): void => {\r\n  const socketId = socket.id;\r\n\r\n  socket.on(\"declineFriend\", async (params) => {\r\n    const {username} = params;\r\n\r\n    const $asd = await playersDb.findOne({socketId});\r\n\r\n    if (!$asd) { return; }\r\n\r\n    const $updatedPlayer = await accountsDb.updateOne({name: $asd.name}, {\r\n      $pull: {\r\n        \"social.requests\": username\r\n      }\r\n    });\r\n\r\n    if (!$updatedPlayer.modifiedCount) { return; }\r\n\r\n    socket.emit(\"declineFriend\", {username});\r\n  });\r\n};\r\n\r\nexport {declineFriend};\r\n","import {chatsDb, playersDb} from \"apis/mongo\";\r\nimport { ioServer } from \"apis/server\";\r\nimport type {SocketEvent} from \"models\";\r\n\r\nconst sendChatMsg: SocketEvent = (socket): void => {\r\n  socket.on(\"sendChatMsg\", async (params) => {\r\n    const {sender, receiver, text, date} = params;\r\n    const $updateChat = await chatsDb.updateOne({\r\n      players: {$all: [sender, receiver]}\r\n    }, {\r\n      $push: {\r\n        messages: {sender, text, date}\r\n      }\r\n    });\r\n\r\n    if (!$updateChat.modifiedCount) { return; }\r\n\r\n    socket.emit(\"sendChatMsgSender\", {sender, receiver, text, date});\r\n\r\n    const $receiver = await playersDb.findOne({\r\n      name: receiver\r\n    });\r\n\r\n    if (!$receiver || !$receiver.socketId) { return; }\r\n\r\n    ioServer.to($receiver.socketId).emit(\"sendChatMsgReceiver\", {sender, text, date});\r\n  });\r\n};\r\n\r\nexport {sendChatMsg};\r\n","import { accountsDb, playersDb } from \"apis/mongo\";\r\nimport { getSocketIds } from \"helpers/player\";\r\nimport { ioServer } from \"apis/server\";\r\nimport type {SocketEvent} from \"models\";\r\n\r\nconst setAvatar: SocketEvent = (socket): void => {\r\n  const socketId = socket.id;\r\n\r\n  socket.on(\"setAvatar\", async (params) => {\r\n    const {avatarId} = params;\r\n\r\n    const $asd = await playersDb.findOne({socketId});\r\n\r\n    if (!$asd) { return; }\r\n\r\n    const player = await accountsDb.findOneAndUpdate({name: $asd.name}, {\r\n      $set: {\r\n        \"profile.avatarId\": avatarId\r\n      }\r\n    }, {\r\n      returnDocument: \"after\"\r\n    });\r\n\r\n    if (!player.value) { return; }\r\n\r\n    const {name, social: {friends}} = player.value;\r\n    const socketIds = await getSocketIds(friends);\r\n\r\n    socket.emit(\"setAvatarSender\", {avatarId});\r\n    ioServer.to(socketIds).emit(\"setAvatarReceiver\", {username: name, avatarId});\r\n  });\r\n};\r\n\r\nexport {setAvatar};\r\n","import type {SocketEvent} from \"models\";\r\n\r\nconst signout: SocketEvent = (socket): void => {};\r\n\r\nexport {signout};\r\n","import {accountsDb, playersDb} from \"apis/mongo\";\r\nimport type {SocketEvent} from \"models\";\r\n\r\nconst unblock: SocketEvent = (socket): void => {\r\n  const socketId = socket.id;\r\n\r\n  socket.on(\"unblock\", async (params) => {\r\n    const {username} = params;\r\n\r\n    const $asd = await playersDb.findOne({socketId});\r\n\r\n    if (!$asd) { return; }\r\n\r\n    const updatePlayer = await accountsDb.updateOne({name: $asd.name}, {\r\n      $pull: {\r\n        \"social.blocked\": username\r\n      }\r\n    });\r\n\r\n    if (!updatePlayer.modifiedCount) { return; }\r\n\r\n    socket.emit(\"unblock\", {\r\n      friendname: username\r\n    });\r\n  });\r\n};\r\n\r\nexport {unblock};\r\n","import { accountsDb, chatsDb, playersDb } from \"apis/mongo\";\r\nimport { Player } from \"@som/shared/types/mongo\";\r\nimport { ioServer } from \"apis/server\";\r\nimport type {SocketEvent} from \"models\";\r\n\r\nconst unfriend: SocketEvent = (socket): void => {\r\n  const socketId = socket.id;\r\n\r\n  socket.on(\"unfriend\", async (params) => {\r\n    const {username} = params;\r\n\r\n    const asd = await playersDb.findOne({socketId});\r\n\r\n    if (!asd) { return; }\r\n\r\n    const sender = await accountsDb.findOneAndUpdate({name: asd.name}, {\r\n      $pull: {\r\n        \"social.friends\": username\r\n      } as any\r\n    }, {\r\n      returnDocument: \"after\"\r\n    });\r\n\r\n    if (!sender.value) { return; }\r\n\r\n    const receiver = await accountsDb.findOneAndUpdate({name: username}, {\r\n      $pull: {\r\n        \"social.friends\": sender.value.name\r\n      } as any // ??????\r\n    }, {\r\n      returnDocument: \"after\"\r\n    });\r\n\r\n    if (!receiver.value) { return; }\r\n\r\n    const $receiverP = await playersDb.findOne({name: username});\r\n\r\n    if (!$receiverP) return;\r\n\r\n    const deleteChat = await chatsDb.deleteOne({\r\n      players: {\r\n        $all: [username, sender.value.name]\r\n      }\r\n    });\r\n\r\n    if (!deleteChat.deletedCount) { return; }\r\n\r\n    socket.emit(\"unfriendSender\", {username});\r\n    ioServer.to($receiverP.socketId).emit(\"unfriendReceiver\", {\r\n      username: sender.value.name\r\n    });\r\n  });\r\n};\r\n\r\nexport {unfriend};\r\n","import {accountsDb, playersDb} from \"apis/mongo\";\r\nimport {getSocketIds} from \"helpers/player\";\r\nimport {ioServer} from \"apis/server\";\r\nimport type {SocketEvent} from \"models\";\r\n\r\nconst updateStatus: SocketEvent = (socket): void => {\r\n  const socketId = socket.id;\r\n\r\n  socket.on(\"updateStatus\", async () => {\r\n    const $player = await playersDb.findOne({socketId});\r\n\r\n    if (!$player) { return; }\r\n\r\n    const $account = await accountsDb.findOne({name: $player.name});\r\n\r\n    if (!$account) { return; }\r\n\r\n    const {status} = $player;\r\n    const {name, social} = $account;\r\n    const socketIds = await getSocketIds(social.friends);\r\n\r\n    if (socketIds.length) {\r\n      ioServer.to(socketIds).emit(\"updateStatus\", {username: name, status});\r\n    }\r\n  });\r\n};\r\n\r\nexport {updateStatus};\r\n","import {acceptFriend} from \"./acceptFriend\";\r\nimport {addFriend} from \"./addFriend\";\r\nimport {block} from \"./block\";\r\nimport {declineFriend} from \"./declineFriend\";\r\nimport {sendChatMsg} from \"../sidenav/sendChatMsg\";\r\nimport {setAvatar} from \"./setAvatar\";\r\nimport {signout} from \"./signout\";\r\nimport {unblock} from \"./unblock\";\r\nimport {unfriend} from \"./unfriend\";\r\nimport {updateStatus} from \"../sidenav/updateStatus\";\r\n\r\nconst sidenav = [\r\n  acceptFriend,\r\n  addFriend,\r\n  block,\r\n  declineFriend,\r\n  sendChatMsg,\r\n  setAvatar,\r\n  signout,\r\n  unblock,\r\n  unfriend,\r\n  updateStatus\r\n];\r\n\r\nexport {sidenav};\r\n","import {leap} from \"apis/eos\";\nimport type {SocketEvent} from \"models\";\n\nconst airdrop: SocketEvent = (socket): void => {\n  socket.on(\"airdrop\", async (params) => {\n    const transaction = await leap.transact({\n      contract: \"eternisvm131\",\n      action: \"tokenairdrop\",\n      permission: \"active\",\n      data: params\n    });\n\n    if (!transaction) {\n      socket.emit(\"notification\", \"Error while signing airdrop action.\");\n      return;\n    }\n\n    socket.emit(\"airdrop\");\n  });\n};\n\nexport {airdrop};\n","import {eosApi, findNFT, leap} from \"apis/eos\";\nimport { randomInt } from \"crypto\";\nimport type {SocketEvent} from \"models\";\n\nconst mint: SocketEvent = (socket): void => {\n  socket.on(\"mint\", async (params) => {\n    const rand = randomInt(1, 4);\n\n    const transaction = await leap.transact({\n      contract: \"eternisvm131\",\n      action: \"mint\",\n      permission: \"active\",\n      data: {\n        i: rand,\n        ...params\n      }\n    });\n\n    if (!transaction) {\n      socket.emit(\"notification\", \"Error while signing mint action.\");\n      return;\n    }\n\n    const table = await eosApi.rpc.get_table_rows({\n      code: \"eterninft131\",\n      scope: \"eterninft131\",\n      table: \"config\"\n    });\n\n    if (!table.rows.length) {\n      socket.emit(\"notification\", \"NFT was minted, but there was an error updating your UI. Please relog.\");\n    }\n\n    const nft = await findNFT(table.rows[0].last_serial);\n\n    socket.emit(\"mint\", {nft});\n  });\n};\n\nexport {mint};\n","import {leap} from \"apis/eos\";\nimport type {SocketEvent} from \"models\";\n\nconst stake: SocketEvent = (socket): void => {\n  socket.on(\"stake\", async (params) => {\n    const transaction = await leap.transact({\n      contract: \"eternisvm131\",\n      action: \"stake\",\n      permission: \"active\",\n      data: params\n    });\n\n    if (!transaction) { return; }\n\n    socket.emit(\"stakeToken\", {\n      token: params.token\n    });\n  });\n};\n\nexport {stake};\n","import {leap} from \"apis/eos\";\nimport {playersDb} from \"apis/mongo\";\nimport {ioServer} from \"apis/server\";\nimport type {SocketEvent} from \"models\";\n\nconst transferToken: SocketEvent = (socket): void => {\n  socket.on(\"transferToken\", async (params) => {\n    const transaction = await leap.transact({\n      contract: \"eternisvm131\",\n      action: \"transfer\",\n      permission: \"active\",\n      data: params\n    });\n\n    if (!transaction) { return; }\n\n    const {from, to, quantity} = params;\n\n    socket.emit(\"transferTokenSender\", {to, quantity});\n\n    const receiver = await playersDb.findOne({\n      name: to\n    });\n\n    if (!receiver || !receiver.socketId) { return; }\n\n    ioServer.to(receiver.socketId).emit(\"transferTokenReceiver\", {from, quantity});\n  });\n};\n\nexport {transferToken};\n","import {leap} from \"apis/eos\";\nimport type {SocketEvent} from \"models\";\n\nconst unstakeToken: SocketEvent = (socket): void => {\n  socket.on(\"unstakeToken\", async (params) => {\n    const transaction = await leap.transact({\n      contract: \"eternisvm131\",\n      action: \"unstake\",\n      permission: \"active\",\n      data: params\n    });\n\n    if (!transaction) { return; }\n\n    socket.emit(\"unstakeToken\", {\n      token: params.token\n    });\n  });\n};\n\nexport {unstakeToken};\n","import {airdrop} from \"./airdrop\";\nimport {mint} from \"./mint\";\nimport {stake} from \"./stake\";\nimport {transferToken} from \"./transferToken\";\nimport {unstakeToken} from \"./unstakeToken\";\n\nconst wallet = [airdrop, mint, stake, transferToken, unstakeToken];\n\nexport {wallet};\n","import {auth} from \"./auth\";\r\nimport {client} from \"./client\";\r\nimport {game} from \"./game\";\r\nimport {sidenav} from \"./sidenav\";\r\nimport { wallet } from \"./sidenav/wallet\";\r\n\r\nconst requests = [...auth, ...client, ...game, ...sidenav, ...wallet];\r\n\r\nexport {requests};\r\n","import settings from \"settings\";\r\nimport {httpServer, ioServer} from \"apis/server\";\r\nimport {requests} from \"requests\";\r\n\r\nprocess.on(\"unhandledRejection\", (reason, promise): void => {\r\n  console.log(`Unhandled rejection: ${reason}`);\r\n});\r\n\r\nprocess.on(\"uncaughtException\", (error, origin): void => {\r\n  console.log(`Uncaught Exception: ${error}`);\r\n});\r\n\r\nioServer.on(\"connection\", (socket): void => {\r\n  console.log(\"Connected\");\r\n  requests.forEach((request): void => {\r\n    request(socket);\r\n  });\r\n});\r\n\r\nhttpServer.listen(settings.server.port);\r\n"],"names":["playMinion"],"mappings":"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"}