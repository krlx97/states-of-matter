{"version":3,"file":"index.js","sources":["../src/app/ethers.ts","../src/app/mongo.ts","../src/app/server.ts","../src/helpers/gameHelpers/effect/lastStand.ts","../src/helpers/gameHelpers/effect/selfDestruct.ts","../src/helpers/gameHelpers/effect/revenge.ts","../src/helpers/gameHelpers/insertBuff.ts","../src/helpers/gameHelpers/effect/unity.ts","../src/helpers/gameHelpers/moveToGraveyard.ts","../src/helpers/gameHelpers/effect/heartOfSteel.ts","../src/helpers/gameHelpers/deductHealth.ts","../src/helpers/gameHelpers/effect/acidicDeath.ts","../src/helpers/gameHelpers/effect/banish.ts","../src/helpers/gameHelpers/effect/shadowSurge.ts","../src/helpers/gameHelpers/effect/diminish.ts","../src/helpers/gameHelpers/effect/frostbite.ts","../src/helpers/gameHelpers/effect/glory.ts","../src/helpers/gameHelpers/effect/mirrorsEdge.ts","../src/helpers/gameHelpers/effect/risingFury.ts","../src/helpers/gameHelpers/effect/blaze.ts","../src/helpers/gameHelpers/insertDebuff.ts","../src/helpers/gameHelpers/effect/necromancy.ts","../src/helpers/gameHelpers/effect/quickShot.ts","../src/helpers/gameHelpers/effect/rebirth.ts","../src/helpers/gameHelpers/effect/reload.ts","../src/helpers/gameHelpers/effect/ricochet.ts","../src/helpers/gameHelpers/effect/shell.ts","../src/helpers/gameHelpers/getAdjacentMinions.ts","../src/helpers/gameHelpers/effect/shieldwall.ts","../src/helpers/gameHelpers/effect/silence.ts","../src/helpers/gameHelpers/effect/smite.ts","../src/helpers/gameHelpers/effect/spellweave.ts","../src/helpers/gameHelpers/effect/toxicSpray.ts","../src/helpers/gameHelpers/effect/valor.ts","../src/helpers/gameHelpers/effect/fortitude.ts","../src/helpers/gameHelpers/effect/regeneration.ts","../src/helpers/gameHelpers/effect/leech.ts","../src/helpers/gameHelpers/effect/electroShock.ts","../src/helpers/gameHelpers/effect/cleanse.ts","../src/helpers/gameHelpers/effect/tidalWave.ts","../src/helpers/gameHelpers/effect/retribution.ts","../src/helpers/gameHelpers/effect/corrosiveTouch.ts","../src/helpers/gameHelpers/effect/toxicGas.ts","../src/helpers/gameHelpers/effect/acidRain.ts","../src/helpers/gameHelpers/effect/smokeBomb.ts","../src/helpers/gameHelpers/effect/contaminatedAir.ts","../src/helpers/gameHelpers/effect/noxiousFumes.ts","../src/helpers/gameHelpers/effect/poisonedGround.ts","../src/helpers/gameHelpers/effect/rampage.ts","../src/helpers/gameHelpers/effect/backstab.ts","../src/helpers/gameHelpers/effect/overpower.ts","../src/helpers/gameHelpers/effect/ignite.ts","../src/helpers/gameHelpers/effect/corruption.ts","../src/helpers/gameHelpers/effect/hysteria.ts","../src/helpers/gameHelpers/effect/explosive.ts","../src/helpers/gameHelpers/effect/reflection.ts","../src/helpers/gameHelpers/effect/constriction.ts","../src/helpers/gameHelpers/effect/index.ts","../src/helpers/gameHelpers/generateGameView.ts","../src/helpers/gameHelpers/attackMinionSave.ts","../src/helpers/gameHelpers/buildDeck.ts","../src/helpers/gameHelpers/endGame.ts","../src/helpers/gameHelpers/gamePopup.ts","../src/helpers/gameHelpers/generateGame.ts","../src/helpers/gameHelpers/getGame.ts","../src/helpers/gameHelpers/getRandomMinion.ts","../src/helpers/gameHelpers/isGameOver.ts","../src/helpers/gameHelpers/saveGame.ts","../src/helpers/gameHelpers/startGame.ts","../src/helpers/gameHelpers/index.ts","../src/helpers/playerHelpers/authenticate.ts","../src/helpers/playerHelpers/getSocketIds.ts","../src/helpers/playerHelpers/isDeckValid.ts","../src/helpers/playerHelpers/playerTemplate.ts","../src/helpers/playerHelpers/index.ts","../src/requests/auth/authenticate.ts","../src/requests/auth/disconnect.ts","../src/requests/auth/getNonce.ts","../src/requests/auth/signinMetamask.ts","../src/requests/auth/signinPassword.ts","../src/requests/auth/signupMetamask.ts","../src/requests/auth/signupPassword.ts","../src/requests/auth/index.ts","../src/requests/client/acceptGame.ts","../src/requests/client/closeLobby.ts","../src/requests/client/createLobby.ts","../src/requests/client/declineGame.ts","../src/requests/client/defaultSkin.ts","../src/requests/client/finishTutorial.ts","../src/requests/client/getLeaderboards.ts","../src/requests/client/joinLobby.ts","../src/requests/client/joinQueue.ts","../src/requests/client/leaveLobby.ts","../src/requests/client/leaveQueue.ts","../src/requests/client/saveDeck.ts","../src/requests/client/selectDeck.ts","../src/requests/client/selectSkin.ts","../src/requests/client/startCustomGame.ts","../src/requests/client/index.ts","../src/requests/game/attackHero.ts","../src/requests/game/attackMinion.ts","../src/requests/game/endTurn.ts","../src/requests/game/playMagic.ts","../src/requests/game/playMinion.ts","../src/requests/game/playTrap.ts","../src/requests/game/index.ts","../src/requests/sidenav/acceptFriend.ts","../src/requests/sidenav/addFriend.ts","../src/requests/sidenav/blockFriend.ts","../src/requests/sidenav/declineFriend.ts","../src/requests/sidenav/readChatMessages.ts","../src/requests/sidenav/removeFriend.ts","../src/requests/sidenav/sendChatMessage.ts","../src/requests/sidenav/setAvatar.ts","../src/requests/sidenav/setBanner.ts","../src/requests/sidenav/unblockFriend.ts","../src/requests/sidenav/updateFriend.ts","../src/requests/sidenav/index.ts","../src/requests/index.ts","../src/index.ts"],"sourcesContent":["import {Wallet, Contract, JsonRpcProvider} from \"ethers\";\r\n\r\nimport EthericEssence from \"@som/contracts/EthericEssence/artifacts/EthericEssence.json\" assert {\r\n  type: \"json\"\r\n};\r\n\r\nimport EthericCrystals from \"@som/contracts/EthericCrystals/artifacts/EthericCrystals.json\" assert {\r\n  type: \"json\"\r\n};\r\n\r\nimport EthericEnergy from \"@som/contracts/EthericEnergy/artifacts/EthericEnergy.json\" assert {\r\n  type: \"json\"\r\n};\r\n\r\nimport SomGame from \"@som/contracts/Game/artifacts/Game.json\" assert {\r\n  type: \"json\"\r\n};\r\n\r\nimport SomTokens from \"@som/contracts/Items/artifacts/Items.json\" assert {\r\n  type: \"json\"\r\n};\r\n\r\nconst provider = new JsonRpcProvider(\"https://testnet.telos.net/evm\");\r\nconst signer = new Wallet(\"0xc5ebf1171e9f76c728795be3fb75620e9e7888404e461099f6b4b916283b540b\", provider);\r\n\r\nconst keys = {\r\n  ethericEssence: \"0xDeCD7574fa58b52Dc87dDDB3BD376228D54E78a1\",\r\n  ethericCrystals: \"0xf811f1AB4bfE4f58a703a0E32654a7789e7A9469\",\r\n  ethericEnergy: \"0x51d94d7F370DAD3971f54baAb4911acFedbCf984\",\r\n  somTokens: \"0xdF735A6a29a85E144623F8c6197b11134d4C11ae\",\r\n  somGame: \"0x3BDCc313b07cAeA90Fc5323749D13F086a4b62e0\"\r\n};\r\n\r\nconst ethericEssence = new Contract(keys.ethericEssence, EthericEssence.abi, signer);\r\nconst ethericCrystals = new Contract(keys.ethericCrystals, EthericCrystals.abi, signer);\r\nconst ethericEnergy = new Contract(keys.ethericEnergy, EthericEnergy.abi, signer);\r\nconst somTokens = new Contract(keys.somTokens, SomTokens.abi, signer);\r\nconst somGame = new Contract(keys.somGame, SomGame.abi, signer);\r\n\r\nconst contracts = {\r\n  ethericEssence,\r\n  ethericCrystals,\r\n  ethericEnergy,\r\n  somTokens,\r\n  somGame\r\n};\r\n\r\nexport {contracts};\r\n","import {MongoClient} from \"mongodb\";\n\nimport type {\n  CasualQueuePlayer,\n  Chat,\n  Game,\n  GamePopup,\n  Lobby,\n  Player,\n  RankedQueuePlayer\n} from \"@som/shared/types/mongo\";\n\nconst client = await MongoClient.connect(\"mongodb://127.0.0.1:27017\");\nconst som = client.db(\"som\");\n\nconst mongo = {\n  $chats: som.collection<Chat>(\"chats\"),\n  $casualQueuePlayers: som.collection<CasualQueuePlayer>(\"casualQueuePlayers\"),\n  $games: som.collection<Game>(\"games\"),\n  $gamePopups: som.collection<GamePopup>(\"gamePopups\"),\n  $lobbies: som.collection<Lobby>(\"lobbies\"),\n  $players: som.collection<Player>(\"players\"),\n  $rankedQueuePlayers: som.collection<RankedQueuePlayer>(\"rankedQueuePlayers\"),\n  $supplySnapshots: som.collection<any>(\"supplySnapshots\"),\n  $leaderboards: som.collection<any>(\"leaderboards\"),\n};\n\nexport {mongo};\n","import {createServer} from \"http\";\r\nimport express from \"express\";\r\nimport {Server} from \"socket.io\";\r\nimport type {Responses} from \"@som/shared/types/responses\";\r\nimport type {Requests} from \"@som/shared/types/requests\";\r\n\r\nconst app = express();\r\nconst http = createServer(app);\r\n\r\nconst io = new Server<Requests, Responses>(http, {\r\n  cors: {\r\n    origin: \"*\"\r\n  },\r\n  serveClient: false,\r\n  transports: [\"websocket\"],\r\n  allowUpgrades: false\r\n});\r\n\r\nconst server = {app, http, io};\r\n\r\nexport {server};\r\n","import {EffectId} from \"@som/shared/enums\";\r\nimport type {Animations} from \"@som/shared/types/game\";\r\nimport type {GameMinionCard, GamePlayer, GameTrapCard, MinionField} from \"@som/shared/types/mongo\";\r\n\r\ninterface LastStand {\r\n  opponent: GamePlayer;\r\n  opponentMinion: GameMinionCard;\r\n  opponentMinionField: MinionField;\r\n  opponentTrap: GameTrapCard;\r\n}\r\n\r\nconst lastStand = (params: LastStand): Animations => {\r\n  const {opponent, opponentMinion, opponentMinionField, opponentTrap} = params;\r\n  const animations: Animations = [];\r\n\r\n  opponentMinion.buffs.push({\r\n    id: EffectId.TAUNT,\r\n    data: {}\r\n  });\r\n\r\n  animations.push({\r\n    type: \"TRAP\",\r\n    name: opponent.name,\r\n    card: opponentTrap\r\n  });\r\n\r\n  animations.push({\r\n    type: \"HEALTH\",\r\n    field: opponentMinionField,\r\n    name: opponent.name,\r\n    increment: 1 - opponentMinion.health.current\r\n  }, {\r\n    type: \"FLOATING_TEXT\",\r\n    field: opponentMinionField,\r\n    name: opponent.name,\r\n    text: `Last stand`\r\n  }, {\r\n    type: \"FLOATING_TEXT\",\r\n    field: opponentMinionField,\r\n    name: opponent.name,\r\n    text: `+ Taunt`\r\n  });\r\n\r\n  opponentMinion.health.current = 1;\r\n\r\n  opponent.graveyard.push(opponentTrap);\r\n  opponent.trap = undefined;\r\n\r\n  return animations;\r\n};\r\n\r\nexport {lastStand};\r\n","import type {GamePlayer} from \"@som/shared/types/mongo\";\r\n\r\ninterface SelfDesctruct {\r\n  player: GamePlayer;\r\n}\r\n\r\nconst selfDestruct = (params: SelfDesctruct) => {\r\n  params.player.field.hero.health -= 3;\r\n  return [true, \"\"];\r\n};\r\n\r\nexport {selfDestruct};\r\n","import {EffectId} from \"@som/shared/enums\";\r\nimport type {Animations} from \"@som/shared/types/game\";\r\nimport type {GameMinionCard, GamePlayer, MinionField} from \"@som/shared/types/mongo\";\r\n\r\ninterface Revenge {\r\n  player: GamePlayer;\r\n  field: MinionField;\r\n}\r\n\r\nconst revenge = (params: Revenge): Animations => {\r\n  const {player, field} = params;\r\n\r\n  const handCard = player.hand.find((card) => card.effect === EffectId.REVENGE) as GameMinionCard | undefined;\r\n  const deckCard = player.deck.find((card) => card.effect === EffectId.REVENGE) as GameMinionCard | undefined;\r\n\r\n  if (!handCard && !deckCard) {\r\n    return [];\r\n  }\r\n\r\n  if (handCard) {\r\n    const index = player.hand.indexOf(handCard);\r\n    player.field[field] = handCard;\r\n    player.hand.splice(index, 1);\r\n  } else if (deckCard) {\r\n    const index = player.deck.indexOf(deckCard);\r\n    player.field[field] = deckCard;\r\n    player.deck.splice(index, 1);\r\n  }\r\n\r\n  return [{\r\n    type: \"SUMMON\",\r\n    name: player.name,\r\n    field,\r\n    minion: player.field[field]\r\n  }];\r\n};\r\n\r\nexport {revenge};\r\n","import {EffectId} from \"@som/shared/enums\";\r\nimport type {Animations} from \"@som/shared/types/game\";\r\nimport type {GameMinionCard, GameHeroCard} from \"@som/shared/types/mongo\";\r\n\r\n// remove this?\r\nconst insertBuff = (\r\n  card: GameMinionCard | GameHeroCard,\r\n  id: EffectId,\r\n  data: any = {}\r\n): Animations => {\r\n  card.buffs.push({id, data});\r\n  return [];\r\n};\r\n\r\nexport {insertBuff};\r\n","import {EffectId} from \"@som/shared/enums\";\nimport {insertBuff} from \"../insertBuff\";\nimport type {GameMinionCard, GamePlayer} from \"@som/shared/types/mongo\";\nimport type { Animations } from \"@som/shared/types/game\";\n\ninterface Unity {\n  player: GamePlayer;\n}\n\nconst unity = (params: Unity): Animations => {\n  const {player: {name, hand, deck}} = params;\n\n  const handCard = hand.find(\n    (card): boolean => card.effect === EffectId.UNITY\n  ) as GameMinionCard | undefined;\n\n  const deckCard = deck.find(\n    (card): boolean => card.effect === EffectId.UNITY\n  ) as GameMinionCard | undefined;\n\n  if (handCard) {\n    insertBuff(handCard, EffectId.TAUNT);\n  } else if (deckCard) {\n    insertBuff(deckCard, EffectId.TAUNT);\n  }\n\n  return [{\n    type: \"FLOATING_TEXT\",\n    name: name,\n    field: \"hero\",\n    text: \"UNITY\"\n  }];\n};\n\nexport {unity};\n","import {EffectId} from \"@som/shared/enums\";\r\nimport {revenge} from \"./effect/revenge\";\r\nimport {unity} from \"./effect/unity\";\r\nimport type {Field, GameMinionCard, GamePlayer, MinionField} from \"@som/shared/types/mongo\";\r\nimport type {Animations} from \"@som/shared/types/game\";\r\n\r\nconst moveToGraveyard = (player: GamePlayer, minion: GameMinionCard, field: MinionField): Animations => {\r\n  const hasRevengeBuff = minion.buffs.find((buff) => buff.id === EffectId.REVENGE) !== undefined;\r\n  const hasUnityBuff = minion.buffs.find((buff) => buff.id === EffectId.UNITY) !== undefined;\r\n  const animations: Animations = [];\r\n\r\n  minion.health.current = minion.health.default;\r\n  minion.damage.current = minion.damage.default;\r\n  minion.buffs = [];\r\n  minion.debuffs = [];\r\n\r\n  player.graveyard.push(minion);\r\n  player.field[field] = undefined;\r\n\r\n  animations.push({\r\n    type: \"DEATH\",\r\n    field,\r\n    name: player.name\r\n  });\r\n\r\n  if (hasRevengeBuff) {\r\n    animations.push(...revenge({player, field}));\r\n  }\r\n\r\n  if (hasUnityBuff) {\r\n    animations.push(...unity({player}));\r\n  }\r\n\r\n  return animations;\r\n};\r\n\r\nexport {moveToGraveyard};\r\n","import type {Animations} from \"@som/shared/types/game\";\r\nimport type {GameMinionCard, GamePlayer, GameTrapCard} from \"@som/shared/types/mongo\";\r\n\r\ninterface HeartOfSteel {\r\n  opponent: GamePlayer;\r\n  opponentMinion: GameMinionCard;\r\n  opponentTrap: GameTrapCard;\r\n  field: any;\r\n}\r\n\r\nconst heartOfSteel = (params: HeartOfSteel): Animations => {\r\n  const {opponent, opponentMinion, opponentTrap, field} = params;\r\n\r\n  opponentMinion.damage.current += 3;\r\n\r\n  opponent.graveyard.push(opponentTrap);\r\n  opponent.trap = undefined;\r\n\r\n  return [{\r\n    type: \"TRAP\",\r\n    name: opponent.name,\r\n    card: opponentTrap\r\n  }, {\r\n    type: \"DAMAGE\",\r\n    field,\r\n    name: opponent.name,\r\n    increment: 3\r\n  }];\r\n};\r\n\r\nexport {heartOfSteel};\r\n","import {EffectId} from \"@som/shared/enums\";\r\nimport {heartOfSteel} from \"./effect/heartOfSteel\";\r\nimport type {Field, GameMinionCard, GamePlayer} from \"@som/shared/types/mongo\";\r\nimport type {Animations} from \"@som/shared/types/game\";\r\n\r\nconst deductHealth = (\r\n  player: GamePlayer,\r\n  minion: GameMinionCard,\r\n  damage: number,\r\n  field: Field\r\n): Animations => {\r\n  const shieldBuff = minion.buffs.find(\r\n    (buff): boolean => buff.id === EffectId.SHIELD\r\n  );\r\n\r\n  const animations: Animations = [];\r\n\r\n  if (shieldBuff) { // has shield\r\n    const amt = shieldBuff.data.amount;\r\n\r\n    if (amt > damage) { // shield reduced\r\n      shieldBuff.data.amount -= damage\r\n      animations.push({\r\n        type: \"FLOATING_TEXT\",\r\n        field: field,\r\n        name: player.name,\r\n        text: `-${damage} Shield`\r\n      });\r\n    } else if (amt <= damage) { // shield broken\r\n      if (player.trap && player.trap.effect === EffectId.HEART_OF_STEEL) {\r\n        animations.push(...heartOfSteel({opponentMinion: minion, opponent: player, opponentTrap: player.trap, field}));\r\n      }\r\n\r\n      const remaining = shieldBuff.data.amount - damage;\r\n\r\n      if (remaining < 0) {\r\n        if (minion.buffs.find((buff) => buff.id === EffectId.RESILIENT)) {\r\n          minion.health.current -= 1;\r\n        } else {\r\n          minion.health.current -= remaining;\r\n        }\r\n      }\r\n\r\n      animations.push({\r\n        type: \"FLOATING_TEXT\",\r\n        field: field,\r\n        name: player.name,\r\n        text: `-${shieldBuff.data.amount} Shield`\r\n      }, {\r\n        type: \"HEALTH\",\r\n        field: field,\r\n        name: player.name,\r\n        increment: -remaining\r\n      });\r\n\r\n      minion.buffs.splice(minion.buffs.indexOf(shieldBuff), 1);\r\n    }\r\n  } else { // no shield\r\n    if (minion.buffs.find((buff) => buff.id === EffectId.RESILIENT)) {\r\n      minion.health.current -= 1;\r\n    } else {\r\n      minion.health.current -= damage;\r\n    }\r\n\r\n    animations.push({\r\n      type: \"HEALTH\",\r\n      field: field,\r\n      name: player.name,\r\n      increment: -damage\r\n    });\r\n  }\r\n\r\n  return animations;\r\n};\r\n\r\nexport {deductHealth};\r\n","import {CardType, EffectId} from \"@som/shared/enums\";\r\nimport {lastStand} from \"./lastStand\";\r\nimport {selfDestruct} from \"./selfDestruct\";\r\nimport {moveToGraveyard} from \"../moveToGraveyard\";\r\nimport {deductHealth} from \"../deductHealth\";\r\nimport type {Animations} from \"@som/shared/types/game\";\r\nimport type {GamePlayer} from \"@som/shared/types/mongo\";\r\n\r\ninterface AcidicDeath {\r\n  player: GamePlayer;\r\n  opponent: GamePlayer;\r\n}\r\n\r\nconst acidicDeath = (params: AcidicDeath): Animations => {\r\n  const {player, opponent} = params;\r\n\r\n  type PlayerFields = Array<keyof typeof player.field>;\r\n  type OpponentFields = Array<keyof typeof opponent.field>;\r\n\r\n  const playerMinionKeys = Object.keys(player.field) as PlayerFields;\r\n  const opponentMinionKeys = Object.keys(opponent.field) as OpponentFields;\r\n  const animations: Animations = [];\r\n\r\n  playerMinionKeys.forEach((key): void => {\r\n    const minion = player.field[key];\r\n\r\n    if (!minion || minion.type === CardType.HERO) {\r\n      return;\r\n    }\r\n\r\n    animations.push(...deductHealth(player, minion, 1, key));\r\n\r\n    if (minion.health.current <= 0) {\r\n      const {trap} = player;\r\n\r\n      if (trap && trap.effect === EffectId.LAST_STAND) {\r\n        animations.push(...lastStand({minion, opponent: player, trap}));\r\n      } else {\r\n        const hasAcidicDeathBuff = minion.buffs.find((buff) => buff.id === EffectId.ACIDIC_DEATH);\r\n\r\n        animations.push(...moveToGraveyard(player, minion, key));\r\n\r\n        if (hasAcidicDeathBuff) {\r\n          animations.push(...acidicDeath({player, opponent}));\r\n        }\r\n      }\r\n    }\r\n  });\r\n\r\n  opponentMinionKeys.forEach((key) => {\r\n    const minion = opponent.field[key];\r\n\r\n    if (!minion || minion.type === CardType.HERO) { return; }\r\n\r\n    animations.push(...deductHealth(opponent, minion, 1, key));\r\n\r\n    if (minion.health.current <= 0) {\r\n      const {trap} = opponent;\r\n\r\n      if (trap && trap.effect === EffectId.LAST_STAND) {\r\n        animations.push(...lastStand({minion, opponent, trap}));\r\n      } else {\r\n        const hasAcidicDeathBuff = minion.buffs.find((buff) => buff.id === EffectId.ACIDIC_DEATH);\r\n        const hasSelfDescturctDebuff = minion.debuffs.find((debuff) => debuff.id === EffectId.SELF_DESTRUCT);\r\n\r\n        animations.push(...moveToGraveyard(opponent, minion, key));\r\n\r\n        if (hasSelfDescturctDebuff) {\r\n          // check for endgame? find a better way to call onDeath effects?\r\n          animations.push(...selfDestruct({player}));\r\n        }\r\n\r\n        if (hasAcidicDeathBuff) {\r\n          animations.push(...acidicDeath({player, opponent}));\r\n        }\r\n      }\r\n    }\r\n  });\r\n\r\n  return animations;\r\n};\r\n\r\nexport {acidicDeath};\r\n","import type {Animations} from \"@som/shared/types/game\";\r\nimport type {GameMinionCard, GamePlayer, GameTrapCard, MinionField} from \"@som/shared/types/mongo\";\r\n\r\ninterface Banish {\r\n  player: GamePlayer;\r\n  opponent: GamePlayer;\r\n  playerMinion: GameMinionCard;\r\n  opponentTrap: GameTrapCard;\r\n  playerMinionField: MinionField;\r\n}\r\n\r\nconst banish = (params: Banish): Animations => {\r\n  const {player, opponent, playerMinion, opponentTrap, playerMinionField} = params;\r\n\r\n  player.field[playerMinionField] = undefined;\r\n  player.hand.push(playerMinion);\r\n  opponent.graveyard.push(opponentTrap);\r\n  opponent.trap = undefined;\r\n\r\n  return [{\r\n    type: \"TRAP\",\r\n    name: opponent.name,\r\n    card: opponentTrap\r\n  }, {\r\n    type: \"FLOATING_TEXT\",\r\n    field: playerMinionField,\r\n    name: player.name,\r\n    text: \"BANISH\"\r\n  }];\r\n};\r\n\r\nexport {banish};\r\n","import type {Animations} from \"@som/shared/types/game\";\r\n\r\nimport type {\r\n  GameMinionCard,\r\n  GamePlayer,\r\n  MinionField\r\n} from \"@som/shared/types/mongo\";\r\n\r\ninterface ShadowSurge {\r\n  player: GamePlayer;\r\n  playerMinion: GameMinionCard;\r\n  playerMinionField: MinionField;\r\n}\r\n\r\nconst shadowSurge = {\r\n  onNormalSummon (params: ShadowSurge): Animations {\r\n    const {player, playerMinion, playerMinionField} = params;\r\n\r\n    playerMinion.canAttack = true;\r\n\r\n    return [{\r\n      type: \"FLOATING_TEXT\",\r\n      name: player.name,\r\n      field: playerMinionField,\r\n      text: \"SHADOW SURGE\"\r\n    }];\r\n  }\r\n};\r\n\r\nexport {shadowSurge};\r\n","import {EffectId} from \"@som/shared/enums\";\nimport type {Animations} from \"@som/shared/types/game\";\nimport type {GameMinionCard, GamePlayer, MinionField} from \"@som/shared/types/mongo\";\n\ninterface Diminish {\n  opponent: GamePlayer;\n  opponentMinion: GameMinionCard;\n  opponentMinionField: MinionField;\n}\n\nconst diminish = (params: Diminish): Animations => {\n  const {opponent, opponentMinion, opponentMinionField} = params;\n  const animations: Animations = [];\n\n  if (opponentMinion.damage.current > 2) {\n    opponentMinion.damage.current -= 2;\n\n    opponentMinion.debuffs.push({\n      id: EffectId.DIMINISH,\n      data: {\n        damage: -2\n      }\n    });\n\n    animations.push({\n      type: \"FLOATING_TEXT\",\n      name: opponent.name,\n      field: opponentMinionField,\n      text: \"DIMINISH\"\n    }, {\n      type: \"DAMAGE\",\n      name: opponent.name,\n      field: opponentMinionField,\n      increment: (-2)\n    });\n  } else {\n    const val = opponentMinion.damage.current;\n    opponentMinion.damage.current = 0;\n\n    opponentMinion.debuffs.push({\n      id: EffectId.DIMINISH,\n      data: {\n        damage: -val\n      }\n    });\n\n    animations.push({\n      type: \"FLOATING_TEXT\",\n      name: opponent.name,\n      field: opponentMinionField,\n      text: \"DIMINISH\"\n    }, {\n      type: \"DAMAGE\",\n      name: opponent.name,\n      field: opponentMinionField,\n      increment: -val\n    });\n  }\n\n  return animations;\n};\n\nexport {diminish};\n","import type {Field, GameMinionCard, GamePlayer, GameTrapCard} from \"@som/shared/types/mongo\";\r\nimport type {Animations} from \"@som/shared/types/game\";\r\n\r\ninterface Frostbite {\r\n  player: GamePlayer;\r\n  playerMinion: GameMinionCard;\r\n  playerMinionField: Field;\r\n  opponent: GamePlayer;\r\n  opponentTrap: GameTrapCard;\r\n}\r\n\r\nconst frostbite = (params: Frostbite): Animations => {\r\n  const {player, playerMinion, playerMinionField, opponent, opponentTrap} = params;\r\n\r\n  playerMinion.damage = 1;\r\n  opponent.graveyard.push(opponentTrap);\r\n  opponent.trap = undefined;\r\n\r\n  return [{\r\n    type: \"FLOATING_TEXT\",\r\n    field: playerMinionField,\r\n    name: player.name,\r\n    text: \"+Frostbite\",\r\n  }];\r\n};\r\n\r\nexport {frostbite};\r\n","import {randomInt} from \"crypto\";\r\nimport {CardType, EffectId} from \"@som/shared/enums\";\r\nimport type {GameMinionCard, GamePlayer, MinionField} from \"@som/shared/types/mongo\";\r\nimport { moveToGraveyard } from \"../moveToGraveyard\";\r\nimport { deductHealth } from \"../deductHealth\";\r\nimport { insertBuff } from \"../insertBuff\";\r\nimport { Animations } from \"@som/shared/types/game\";\r\n\r\ninterface Glory {\r\n  player: GamePlayer;\r\n  opponent: GamePlayer;\r\n  minion: GameMinionCard;\r\n  playerMinionField: MinionField;\r\n}\r\n\r\nconst glory = (params: Glory): Animations => {\r\n  const {player, opponent, minion, playerMinionField} = params;\r\n  const animations: Animations = [];\r\n  const possibleMinions: Array<{Minion: GameMinionCard, key: MinionField}> = [];\r\n  const minionKeys = Object.keys(opponent.field) as Array<keyof typeof opponent.field>;\r\n\r\n  minionKeys.forEach((key) => {\r\n    const Minion = opponent.field[key];\r\n\r\n    if (Minion && Minion.type !== CardType.HERO && key !== \"hero\") {\r\n      const hasElusiveBuff = Minion.buffs.find((buff) => buff.id === EffectId.ELUSIVE);\r\n\r\n      if (!hasElusiveBuff) {\r\n        possibleMinions.push({Minion, key});\r\n      }\r\n    }\r\n  });\r\n\r\n  if (possibleMinions.length) {\r\n    let randomMinion = randomInt(possibleMinions.length);\r\n    let {Minion, key} = possibleMinions[randomMinion];\r\n\r\n    animations.push({\r\n      type: \"FLOATING_TEXT\",\r\n      name: opponent.name,\r\n      field: key,\r\n      text: \"GLORY\"\r\n    });\r\n    animations.push(...deductHealth(opponent, Minion, 1, key));\r\n\r\n    if (Minion.health.current <= 0) {\r\n      animations.push(...moveToGraveyard(opponent, Minion, key));\r\n      minion.buffs.push({id: EffectId.TAUNT, data: {}})\r\n      animations.push({\r\n        type: \"FLOATING_TEXT\",\r\n        name: player.name,\r\n        field: playerMinionField,\r\n        text: \"TAUNT\"\r\n      });\r\n    }\r\n  }\r\n\r\n  return animations;\r\n};\r\n\r\nexport {glory};\r\n","import type {\r\n  GameMinionCard,\r\n  GamePlayer,\r\n  GameTrapCard\r\n} from \"@som/shared/types/mongo\";\r\n\r\nimport type {Animations} from \"@som/shared/types/game\";\r\n\r\ninterface MirrorsEdge {\r\n  player: GamePlayer;\r\n  playerMinion: GameMinionCard;\r\n  opponent: GamePlayer;\r\n  opponentTrap: GameTrapCard;\r\n}\r\n\r\nconst mirrorsEdge = (params: MirrorsEdge): Animations => {\r\n  const {player, playerMinion, opponent, opponentTrap} = params;\r\n\r\n  player.field.hero.health.current -= playerMinion.damage.current;\r\n  opponent.graveyard.push(opponentTrap);\r\n  opponent.trap = undefined;\r\n\r\n  return [{\r\n    type: \"TRAP\",\r\n    name: opponent.name,\r\n    card: opponentTrap\r\n  }, {\r\n    type: \"FLOATING_TEXT\",\r\n    name: player.name,\r\n    field: \"hero\",\r\n    text: \"MIRROR'S EDGE\"\r\n  }, {\r\n    type: \"HEALTH\",\r\n    field: \"hero\",\r\n    increment: -playerMinion.damage.current,\r\n    name: player.name\r\n  }];\r\n};\r\n\r\nexport {mirrorsEdge};\r\n","import type {GameMinionCard, GamePlayer, GameTrapCard} from \"@som/shared/types/mongo\";\r\n\r\ninterface RisingFury {\r\n  minionCard: GameMinionCard;\r\n}\r\n\r\nconst risingFury = (params: RisingFury) => {\r\n  const {minionCard} = params;\r\n\r\n  minionCard.health += 1;\r\n  minionCard.damage += 1;\r\n\r\n  return [true, \"\"];\r\n};\r\n\r\nexport {risingFury};\r\n","import {EffectId} from \"@som/shared/enums\";\r\nimport type {Animations} from \"@som/shared/types/game\";\r\n\r\nimport type {\r\n  GameMinionCard,\r\n  GamePlayer,\r\n  MinionField\r\n} from \"@som/shared/types/mongo\";\r\n\r\ninterface Blaze {\r\n  player: GamePlayer;\r\n  playerMinion: GameMinionCard;\r\n  playerMinionField: MinionField;\r\n}\r\n\r\nconst blaze = (params: Blaze): Animations => {\r\n  const {player, playerMinion, playerMinionField} = params;\r\n\r\n  const blazeBuff = playerMinion.buffs.find(\r\n    (buff): boolean => buff.id === EffectId.BLAZE\r\n  );\r\n\r\n  if (!blazeBuff) {\r\n    return [];\r\n  }\r\n\r\n  blazeBuff.data.hasAttackedTwice = false;\r\n\r\n  return [{\r\n    type: \"FLOATING_TEXT\",\r\n    field: playerMinionField,\r\n    text: \"BLAZE\",\r\n    name: player.name\r\n  }];\r\n};\r\n\r\nexport {blaze};\r\n","import {EffectId} from \"@som/shared/enums\";\r\nimport type {GameMinionCard, GameHeroCard} from \"@som/shared/types/mongo\";\r\n\r\nconst insertDebuff = (card: GameMinionCard | GameHeroCard, id: EffectId, data: any = {}) => {\r\n  card.debuffs.push({id, data});\r\n  return [true, \"Debuff added.\"];\r\n};\r\n\r\nexport {insertDebuff};\r\n","import {EffectId} from \"@som/shared/enums\";\r\nimport {insertDebuff} from \"../insertDebuff\";\r\nimport {insertBuff} from \"../insertBuff\";\r\nimport type {Animations} from \"@som/shared/types/game\";\r\n\r\nimport type {\r\n  GameMinionCard,\r\n  GamePlayer,\r\n  MinionField\r\n} from \"@som/shared/types/mongo\";\r\n\r\ninterface Necromancy {\r\n  player: GamePlayer;\r\n  playerMinion: GameMinionCard;\r\n  playerMinionField: MinionField;\r\n  isPositive: boolean;\r\n}\r\n\r\nconst necromancy = (params: Necromancy): Animations => {\r\n  const {player, playerMinion, playerMinionField, isPositive} = params;\r\n  const animations: Animations = [];\r\n\r\n  if (isPositive) {\r\n    playerMinion.health.current += 2;\r\n    playerMinion.damage.current += 2;\r\n\r\n    insertBuff(playerMinion, EffectId.NECROMANCY, {\r\n      health: 2,\r\n      damage: 2\r\n    });\r\n\r\n    animations.push({\r\n      type: \"FLOATING_TEXT\",\r\n      field: playerMinionField,\r\n      text: \"NECROMANCY\",\r\n      name: player.name\r\n    }, {\r\n      type: \"DAMAGE\",\r\n      name: player.name,\r\n      field: playerMinionField,\r\n      increment: 2\r\n    }, {\r\n      type: \"HEALTH\",\r\n      name: player.name,\r\n      field: playerMinionField,\r\n      increment: 2\r\n    });\r\n  } else {\r\n    playerMinion.health.current -= 2;\r\n    playerMinion.damage.current -= 2;\r\n\r\n    insertDebuff(playerMinion, EffectId.NECROMANCY, {\r\n      health: -2,\r\n      damage: -2\r\n    });\r\n\r\n    animations.push({\r\n      type: \"FLOATING_TEXT\",\r\n      field: playerMinionField,\r\n      text: \"NECROMANCY\",\r\n      name: player.name\r\n    }, {\r\n      type: \"DAMAGE\",\r\n      name: player.name,\r\n      field: playerMinionField,\r\n      increment: -2\r\n    }, {\r\n      type: \"HEALTH\",\r\n      name: player.name,\r\n      field: playerMinionField,\r\n      increment: -2\r\n    });\r\n  }\r\n\r\n  return animations;\r\n};\r\n\r\nexport {necromancy};\r\n","import {randomInt} from \"crypto\";\r\nimport {CardType, EffectId} from \"@som/shared/enums\";\r\nimport {deductHealth} from \"../deductHealth\";\r\nimport {moveToGraveyard} from \"../moveToGraveyard\";\r\nimport type {Animations} from \"@som/shared/types/game\";\r\nimport type {GameMinionCard, GamePlayer} from \"@som/shared/types/mongo\";\r\n\r\ninterface QuickShot {\r\n  opponent: GamePlayer;\r\n}\r\n\r\nconst quickShot = (params: QuickShot): Animations => {\r\n  const {opponent} = params;\r\n\r\n  type PossibleMinionKey = keyof typeof opponent.field;\r\n  type PossibleMinionKeys = Array<PossibleMinionKey>;\r\n\r\n  interface PossibleMinion {\r\n    minion: GameMinionCard;\r\n    key: PossibleMinionKey;\r\n  }\r\n\r\n  type PossibleMinions = Array<PossibleMinion>;\r\n\r\n  const possibleMinions: PossibleMinions = [];\r\n  const minionKeys = Object.keys(opponent.field) as PossibleMinionKeys;\r\n  const animations: Animations = [];\r\n\r\n  minionKeys.forEach((key): void => {\r\n    const minion = opponent.field[key];\r\n\r\n    if (minion && minion.type !== CardType.HERO) {\r\n      const hasElusiveBuff = minion.buffs.find(\r\n        (buff): boolean => buff.id === EffectId.ELUSIVE\r\n      );\r\n\r\n      if (!hasElusiveBuff) {\r\n        possibleMinions.push({minion, key});\r\n      }\r\n    }\r\n  });\r\n\r\n  if (possibleMinions.length) {\r\n    let randomMinion = randomInt(possibleMinions.length);\r\n    let {minion, key} = possibleMinions[randomMinion];\r\n\r\n    animations.push({\r\n      type: \"FLOATING_TEXT\",\r\n      field: key,\r\n      name: opponent.name,\r\n      text: \"QUICK SHOT\"\r\n    })\r\n    animations.push(...deductHealth(opponent, minion, 2, key));\r\n\r\n    if (minion.health.current <= 0) {\r\n      animations.push(...moveToGraveyard(opponent, minion, (key as any)));\r\n    }\r\n  }\r\n\r\n  return animations;\r\n};\r\n\r\nexport {quickShot};\r\n","import {CardType, EffectId} from \"@som/shared/enums\";\nimport type {Animations} from \"@som/shared/types/game\";\nimport type {GameMinionCard, GamePlayer, MinionField} from \"@som/shared/types/mongo\";\n\ninterface Rebirth {\n  player: GamePlayer;\n  minion: GameMinionCard;\n  field: MinionField;\n}\n\nconst rebirth = (params: Rebirth): Animations => {\n  const {player, minion, field} = params;\n  const animations: Animations = [];\n\n  animations.push({\n    type: \"SUMMON\",\n    name: player.name,\n    field,\n    minion,\n    necromancyFixPositive: true\n  }, {\n    type: \"FLOATING_TEXT\",\n    field,\n    text: \"REBIRTH\",\n    name: player.name\n  });\n\n  if (minion.effect === EffectId.NECROMANCY) {\n    minion.damage.current += 2;\n    minion.health.current += 2;\n    minion.buffs.push({\n      id: EffectId.NECROMANCY,\n      data: {damage: 2, health: 2}\n    });\n\n    animations.push({\n      type: \"FLOATING_TEXT\",\n      field,\n      text: \"NECROMANCY\",\n      name: player.name\n    }, {\n      type: \"DAMAGE\",\n      name: player.name,\n      field,\n      increment: 2\n    }, {\n      type: \"HEALTH\",\n      name: player.name,\n      field,\n      increment: 2\n    });\n  }\n\n  if (minion.effect === EffectId.PROTECTOR) {\n    minion.buffs.push({\n      id: EffectId.SHIELD,\n      data: {amount: 3}\n    });\n\n    animations.push({\n      type: \"FLOATING_TEXT\",\n      field,\n      text: \"PROTECTOR\",\n      name: player.name\n    }, {\n     type: \"FLOATING_TEXT\",\n      field,\n      text: \"+3 Shield\",\n      name: player.name\n    });\n  }\n\n  player.field[field] = minion;\n  player.graveyard.splice(player.graveyard.indexOf(minion), 1);\n\n  return animations;\n};\n\nexport {rebirth};\n","import type {Animations} from \"@som/shared/types/game\";\nimport type {GameCard, GamePlayer} from \"@som/shared/types/mongo\";\n\ninterface Reload {\n  player: GamePlayer;\n  drawnCard: GameCard;\n}\n\nconst reload = (params: Reload): Animations => {\n  const {player, drawnCard} = params;\n\n  player.hand.push(drawnCard);\n\n  return [];\n};\n\nexport {reload};\n","import { CardType, EffectId } from \"@som/shared/enums\";\r\nimport { randomInt } from \"crypto\";\r\nimport { moveToGraveyard } from \"../moveToGraveyard\";\r\nimport { deductHealth } from \"../deductHealth\";\r\nimport type { Animations } from \"@som/shared/types/game\";\r\nimport type {FieldKeys, GameMinionCard, GamePlayer, GameTrapCard, MinionField} from \"@som/shared/types/mongo\";\r\n\r\ninterface Ricochet {\r\n  player: GamePlayer;\r\n  playerMinion: GameMinionCard;\r\n  opponent: GamePlayer;\r\n  opponentTrap: GameTrapCard;\r\n}\r\n\r\nconst ricochet = (params: Ricochet): Animations => {\r\n  const {player, playerMinion, opponent, opponentTrap} = params;\r\n  const animations: Animations = [];\r\n\r\n  const possibleMinions: Array<{minion: GameMinionCard, key: MinionField}> = [];\r\n  const fieldKeys = Object.keys(player.field) as FieldKeys;\r\n\r\n  fieldKeys.forEach((key): void => {\r\n    if (key === \"hero\") { return; }\r\n\r\n    const minion = player.field[key];\r\n\r\n    if (!minion) { return; }\r\n\r\n    const hasElusiveBuff = minion.buffs.find(\r\n      ({id}): boolean => id === EffectId.ELUSIVE\r\n    );\r\n\r\n    if (hasElusiveBuff) { return; }\r\n\r\n    possibleMinions.push({minion, key});\r\n  });\r\n\r\n  animations.push({\r\n    type: \"TRAP\",\r\n    name: opponent.name,\r\n    card: opponentTrap\r\n  });\r\n\r\n  if (possibleMinions.length) {\r\n    let randomMinion = randomInt(possibleMinions.length);\r\n    let {minion, key} = possibleMinions[randomMinion];\r\n\r\n    animations.push({\r\n      type: \"FLOATING_TEXT\",\r\n      field: key,\r\n      name: player.name,\r\n      text: \"Ricochet\"\r\n    });\r\n\r\n    animations.push(...deductHealth(player, minion, playerMinion.damage.current, key));\r\n\r\n    if (minion.health.current <= 0) {\r\n      animations.push(...moveToGraveyard(player, minion, key));\r\n    }\r\n  }\r\n\r\n  opponent.graveyard.push(opponentTrap);\r\n  opponent.trap = undefined;\r\n\r\n  return animations;\r\n};\r\n\r\nexport {ricochet};\r\n","import {EffectId} from \"@som/shared/enums\";\r\nimport {insertBuff} from \"../insertBuff\";\r\nimport type { Animations } from \"@som/shared/types/game\";\r\nimport type {FieldKeys, GamePlayer} from \"@som/shared/types/mongo\";\r\n\r\ninterface Shell {\r\n  player: GamePlayer;\r\n}\r\n\r\nconst shell = (params: Shell): Animations => {\r\n  const {player} = params;\r\n  const animations: Animations = [];\r\n  const fieldKeys = Object.keys(player.field) as FieldKeys;\r\n\r\n  fieldKeys.forEach((fieldKey): void => {\r\n    const card = player.field[fieldKey];\r\n\r\n    if (!card) { return; }\r\n\r\n    const shieldBuff = card.buffs.find(\r\n      (buff): boolean => buff.id === EffectId.SHIELD\r\n    );\r\n\r\n    const unbreakableBuff = card.buffs.find(\r\n      (buff): boolean => buff.id === EffectId.UNBREAKABLE\r\n    );\r\n\r\n    const amount = unbreakableBuff ? 2 : 1;\r\n\r\n    if (shieldBuff) {\r\n      shieldBuff.data.amount += amount;\r\n    } else {\r\n      card.buffs.push({\r\n        id: EffectId.SHIELD,\r\n        data: {amount}\r\n      });\r\n    }\r\n\r\n    animations.push({\r\n      type: \"FLOATING_TEXT\",\r\n      field: fieldKey,\r\n      name: player.name,\r\n      text: `+${amount} Shield`\r\n    });\r\n  });\r\n\r\n  return animations;\r\n};\r\n\r\nexport {shell};\r\n","const getAdjacentMinions = (field: \"a\" | \"b\" | \"c\" | \"d\") => {\r\n  const adjacentFields = [];\r\n\r\n  switch (field) {\r\n    case \"a\":\r\n      adjacentFields.push(\"b\");\r\n      break;\r\n    case \"b\":\r\n      adjacentFields.push(\"a\", \"c\");\r\n      break;\r\n    case \"c\":\r\n      adjacentFields.push(\"b\", \"d\");\r\n      break;\r\n    case \"d\":\r\n      adjacentFields.push(\"c\");\r\n      break;\r\n  }\r\n\r\n  return adjacentFields;\r\n};\r\n\r\nexport {getAdjacentMinions};\r\n","import {EffectId} from \"@som/shared/enums\";\nimport {getAdjacentMinions} from \"../getAdjacentMinions\";\nimport type {Animations} from \"@som/shared/types/game\";\nimport type {GamePlayer, MinionField} from \"@som/shared/types/mongo\";\n\ninterface Shieldwall {\n  player: GamePlayer;\n  playerMinionField: MinionField;\n}\n\nconst shieldwall = (params: Shieldwall): Animations => {\n  const {player, playerMinionField} = params;\n  const animations: Animations = [];\n  const fields = getAdjacentMinions(playerMinionField);\n\n  animations.push({\n    type: \"FLOATING_TEXT\",\n    field: playerMinionField,\n    name: player.name,\n    text: `SHIELDWALL`\n  });\n\n  fields.forEach((field): void => {\n    const minion = player.field[field as keyof typeof player.field];\n\n    if (minion) {\n      const shieldBuff = minion.buffs.find(\n        (buff): boolean => buff.id === EffectId.SHIELD\n      );\n\n      const unbreakableBuff = minion.buffs.find(\n        (buff): boolean => buff.id === EffectId.UNBREAKABLE\n      );\n\n      const amount = unbreakableBuff ? 2 : 1;\n\n      if (shieldBuff) {\n        shieldBuff.data.amount += amount;\n      } else {\n        minion.buffs.push({\n          id: EffectId.SHIELD,\n          data: {amount}\n        });\n      }\n\n      animations.push({\n        type: \"FLOATING_TEXT\",\n        field: field as keyof typeof player.field,\n        name: player.name,\n        text: `+${amount} Shield`\n      });\n    }\n  });\n\n  return animations;\n};\n\nexport {shieldwall};\n","import type {Animations} from \"@som/shared/types/game\";\nimport type {GamePlayer, GameTrapCard} from \"@som/shared/types/mongo\";\n\ninterface Silence {\n  opponent: GamePlayer;\n  trap: GameTrapCard;\n}\n\nconst silence = (params: Silence): Animations => {\n  const {opponent, trap} = params;\n\n  opponent.graveyard.push(trap);\n  opponent.trap = undefined;\n\n  return [{\n    type: \"TRAP\",\n    name: opponent.name,\n    card: trap\n  }];\n};\n\nexport {silence};\n","import { Animations } from \"@som/shared/types/game\";\r\nimport {moveToGraveyard} from \"../moveToGraveyard\";\r\nimport type {GameMinionCard, GamePlayer, GameTrapCard, MinionField} from \"@som/shared/types/mongo\";\r\n\r\ninterface Smite {\r\n  player: GamePlayer;\r\n  opponent: GamePlayer;\r\n  minion: GameMinionCard;\r\n  trap: GameTrapCard;\r\n  field: MinionField;\r\n}\r\n\r\nconst smite = (params: Smite): Animations => {\r\n  const {player, opponent, minion, trap, field} = params;\r\n  const animations: Animations = [];\r\n\r\n  animations.push({\r\n    type: \"TRAP\",\r\n    name: opponent.name,\r\n    card: trap\r\n  });\r\n\r\n  animations.push(...moveToGraveyard(player, minion, field));\r\n\r\n  opponent.graveyard.push(trap);\r\n  opponent.trap = undefined;\r\n\r\n  return animations;\r\n};\r\n\r\nexport {smite};\r\n","import {CardType, EffectId} from \"@som/shared/enums\";\r\nimport type {Animations} from \"@som/shared/types/game\";\r\n\r\nimport type {\r\n  GameMinionCard,\r\n  GamePlayer,\r\n  MinionField\r\n} from \"@som/shared/types/mongo\";\r\n\r\ninterface Spellweave {\r\n  player: GamePlayer;\r\n  playerMinion: GameMinionCard;\r\n  playerMinionField: MinionField;\r\n}\r\n\r\nconst spellweave = (params: Spellweave): Animations => {\r\n  const {player, playerMinion, playerMinionField} = params;\r\n  const {name, graveyard} = player;\r\n\r\n  const amount = graveyard.reduce(\r\n    (sum, {type}) => type === CardType.MAGIC ? sum += 1 : sum, 0\r\n  );\r\n\r\n  playerMinion.buffs.push({\r\n    id: EffectId.SHIELD,\r\n    data: {amount}\r\n  });\r\n\r\n  return [{\r\n    type: \"FLOATING_TEXT\",\r\n    field: playerMinionField,\r\n    name,\r\n    text: \"SPELLWEAVE\"\r\n  }, {\r\n    type: \"FLOATING_TEXT\",\r\n    field: playerMinionField,\r\n    name,\r\n    text: `+${amount} Shield`\r\n  }];\r\n};\r\n\r\nexport {spellweave};\r\n","import {randomInt} from \"crypto\";\r\nimport { CardType, EffectId } from \"@som/shared/enums\";\r\nimport { moveToGraveyard } from \"../moveToGraveyard\";\r\nimport { deductHealth } from \"../deductHealth\";\r\nimport { insertDebuff } from \"../insertDebuff\";\r\nimport type {GameMinionCard, GamePlayer} from \"@som/shared/types/mongo\";\r\n\r\ninterface ToxicSpray {\r\n  opponent: GamePlayer;\r\n}\r\n\r\nconst toxicSpray = (params: ToxicSpray) => {\r\n  const {opponent} = params;\r\n  const possibleMinions: Array<{minion: GameMinionCard, key: keyof typeof opponent.field}> = [];\r\n  const minionKeys = Object.keys(opponent.field) as Array<keyof typeof opponent.field>;\r\n\r\n  minionKeys.forEach((key) => {\r\n    const minion = opponent.field[key];\r\n\r\n    if (minion && minion.type !== CardType.HERO) {\r\n      const hasElusiveBuff = minion.buffs.find((buff) => buff.id === EffectId.ELUSIVE);\r\n\r\n      if (!hasElusiveBuff) {\r\n        possibleMinions.push({minion, key});\r\n      }\r\n    }\r\n  });\r\n\r\n  if (possibleMinions.length) {\r\n    let randomMinion = randomInt(possibleMinions.length);\r\n    let {minion, key} = possibleMinions[randomMinion];\r\n\r\n    deductHealth(opponent, minion, 1, key);\r\n    insertDebuff(minion, EffectId.NEUROTOXIN);\r\n\r\n    if (minion.health.current <= 0) {\r\n      moveToGraveyard(opponent, minion, key);\r\n    }\r\n  }\r\n\r\n  return [true, \"\"];\r\n};\r\n\r\nexport {toxicSpray};\r\n","import {EffectId} from \"@som/shared/enums\";\r\nimport type {Animations} from \"@som/shared/types/game\";\r\nimport type {GamePlayer, FieldKeys} from \"@som/shared/types/mongo\";\r\n\r\ninterface Valor {\r\n  player: GamePlayer;\r\n  opponent: GamePlayer;\r\n}\r\n\r\nconst valor = (params: Valor): Animations => {\r\n  const {player, opponent} = params;\r\n  const animations: Animations = [];\r\n  const fieldKeys = Object.keys(player.field) as FieldKeys;\r\n\r\n  const damage = fieldKeys.reduce((acc, fieldKey) => {\r\n    const card = player.field[fieldKey];\r\n\r\n    const shieldBuff = card\r\n      ?.buffs\r\n      .find(({id}): boolean => id === EffectId.SHIELD);\r\n\r\n    if (!card || !shieldBuff) {\r\n      return acc;\r\n    }\r\n\r\n    animations.push({\r\n      type: \"FLOATING_TEXT\",\r\n      field: fieldKey,\r\n      name: player.name,\r\n      text: `-${shieldBuff.data.amount} Shield`\r\n    });\r\n\r\n    acc += shieldBuff.data.amount;\r\n\r\n    card.buffs.splice(card.buffs.indexOf(shieldBuff, 1));\r\n\r\n    return acc;\r\n  }, 0);\r\n\r\n  opponent.field.hero.health.current -= damage;\r\n\r\n  animations.push({\r\n    type: \"HEALTH\",\r\n    field: \"hero\",\r\n    name: opponent.name,\r\n    increment: -damage\r\n  });\r\n\r\n  return animations;\r\n};\r\n\r\nexport {valor};\r\n","import {EffectId} from \"@som/shared/enums\";\r\nimport {deductHealth} from \"../deductHealth\";\r\nimport {moveToGraveyard} from \"../moveToGraveyard\";\r\nimport type {Animations} from \"@som/shared/types/game\";\r\n\r\nimport type {\r\n  GameMinionCard,\r\n  GamePlayer,\r\n  MinionField\r\n} from \"@som/shared/types/mongo\";\r\n\r\ninterface Fortitude {\r\n  player: GamePlayer;\r\n  playerMinion: GameMinionCard;\r\n  playerMinionField: MinionField;\r\n}\r\n\r\nconst fortitude = (params: Fortitude): Animations => {\r\n  const {player, playerMinion, playerMinionField} = params;\r\n  const animations: Animations = [];\r\n\r\n  animations.push(...deductHealth(player, playerMinion, 1, playerMinionField));\r\n\r\n  if (playerMinion.health.current > 0) {\r\n    playerMinion.buffs.push({\r\n      id: EffectId.TAUNT,\r\n      data: {}\r\n    });\r\n\r\n    animations.push({\r\n      type: \"FLOATING_TEXT\",\r\n      field: playerMinionField,\r\n      name: player.name,\r\n      text: `+ Taunt`\r\n    });\r\n  } else {\r\n    animations.push(\r\n      ...moveToGraveyard(player, playerMinion, playerMinionField)\r\n    );\r\n  }\r\n\r\n  return animations;\r\n};\r\n\r\nexport {fortitude};\r\n","import { randomInt } from \"crypto\";\r\nimport { CardType, EffectId } from \"@som/shared/enums\";\r\nimport type {GameMinionCard, GamePlayer, GameTrapCard} from \"@som/shared/types/mongo\";\r\n\r\ninterface Regeneration {\r\n  player: GamePlayer;\r\n}\r\n\r\nconst regeneration = (params: Regeneration) => {\r\n  const {player} = params;\r\n  const minionKeys = Object.keys(player.field) as Array<keyof typeof player.field>;\r\n  const possibleKeys: Array<\"a\" | \"b\" | \"c\" | \"d\"> = [];\r\n\r\n  minionKeys.forEach((key) => {\r\n    const Minion = player.field[key];\r\n    if (!Minion || Minion.type === CardType.HERO) { return; }\r\n\r\n    if (Minion.buffs.find((buff) => buff.id !== EffectId.REGENERATION)) {\r\n      possibleKeys.push(key);\r\n    }\r\n  });\r\n\r\n  if (possibleKeys.length) {\r\n    const rand = randomInt(possibleKeys.length)\r\n    const min = player.field[possibleKeys[rand]];\r\n    if (!min) { return [false, \"\"]; }\r\n    min.health += 2;\r\n  }\r\n\r\n  return [true, \"\"];\r\n};\r\n\r\nexport {regeneration};\r\n","import type {GameMinionCard, GamePlayer} from \"@som/shared/types/mongo\";\r\n\r\ninterface Leech {\r\n  player: GamePlayer;\r\n  minion: GameMinionCard;\r\n}\r\n\r\nconst leech = (params: Leech) => {\r\n  const {player, minion} = params;\r\n  player.field.hero.health += minion.damage;\r\n  return [true, \"\"];\r\n};\r\n\r\nexport {leech};\r\n","import type {GamePlayer} from \"@som/shared/types/mongo\";\r\n\r\ninterface ElectroShock {\r\n  player: GamePlayer;\r\n  opponent: GamePlayer;\r\n}\r\n\r\nconst electroShock = (params: ElectroShock) => {\r\n  const {player, opponent} = params;\r\n  const playerMinionFields = Object.keys(player.field) as Array<keyof typeof player.field>;\r\n  const opponentMinionFields = Object.keys(opponent.field) as Array<keyof typeof opponent.field>;\r\n\r\n  playerMinionFields.forEach((field) => {\r\n    const minion = player.field[field];\r\n\r\n    if (minion) {\r\n      minion.buffs = [];\r\n      minion.debuffs = [];\r\n    }\r\n  });\r\n\r\n  opponentMinionFields.forEach((field) => {\r\n    const minion = opponent.field[field];\r\n\r\n    if (minion) {\r\n      minion.buffs = [];\r\n      minion.debuffs = [];\r\n    }\r\n  });\r\n\r\n  return [true, \"\"];\r\n};\r\n\r\nexport {electroShock};\r\n","import { Animations } from \"@som/shared/types/game\";\r\nimport type {Field, GamePlayer} from \"@som/shared/types/mongo\";\r\n\r\ninterface Cleanse {\r\n  player: GamePlayer;\r\n  field: Field | undefined;\r\n}\r\n\r\nconst cleanse = (params: Cleanse): Animations => {\r\n  const {player, field} = params;\r\n\r\n  if (!field) {\r\n    return [];\r\n  }\r\n\r\n  const minion = player.field[field];\r\n\r\n  if (!minion) {\r\n    return [];\r\n  }\r\n\r\n  minion.debuffs = [];\r\n\r\n  return [{\r\n    type: \"FLOATING_TEXT\",\r\n    field,\r\n    name: player.name,\r\n    text: \"CLEANSE\"\r\n  }];\r\n};\r\n\r\nexport {cleanse};\r\n","import type {GamePlayer} from \"@som/shared/types/mongo\";\r\n\r\ninterface TidalWave {\r\n  player: GamePlayer;\r\n}\r\n\r\nconst tidalWave = (params: TidalWave) => {\r\n  const {player} = params;\r\n  const playerMinionFields = Object.keys(player.field) as Array<keyof typeof player.field>;\r\n\r\n  playerMinionFields.forEach((field) => {\r\n    const minion = player.field[field];\r\n\r\n    if (minion) {\r\n      minion.health += 3;\r\n    }\r\n  });\r\n\r\n  return [true, \"\"];\r\n};\r\n\r\nexport {tidalWave};\r\n","import type {Field, GameMinionCard, GamePlayer, GameTrapCard} from \"@som/shared/types/mongo\";\r\nimport { getAdjacentMinions } from \"../getAdjacentMinions\";\r\n\r\ninterface RisingFury {\r\n  player: GamePlayer;\r\n  field: Field;\r\n}\r\n\r\nconst retribution = (params: RisingFury) => {\r\n  const {player, field} = params;\r\n  const adj = getAdjacentMinions(field);\r\n\r\n  adj.forEach((field) => {\r\n    const minj = player.field[field];\r\n    if (!minj) return;\r\n    minj.damage -= 2;\r\n    if (minj.damage <= 0) {\r\n      minj.damage = 0;\r\n    }\r\n  });\r\n\r\n  return [true, \"\"];\r\n};\r\n\r\nexport {retribution};\r\n","import {EffectId} from \"@som/shared/enums\";\r\nimport type {GamePlayer} from \"@som/shared/types/mongo\";\r\n\r\ninterface CorrosiveTouch {\r\n  opponent: GamePlayer;\r\n}\r\n\r\nconst corrosiveTouch = (params: CorrosiveTouch) => {\r\n  const {opponent} = params;\r\n  const minionKeys = Object.keys(opponent.field) as Array<keyof typeof opponent.field>;\r\n  let damageToHero = 0;\r\n\r\n  minionKeys.forEach((key) => {\r\n    const minion = opponent.field[key];\r\n\r\n    if (minion) {\r\n      const hasElusiveBuff = minion.buffs.find((buff) => buff.id === EffectId.ELUSIVE);\r\n\r\n      if (!hasElusiveBuff) {\r\n        const hasNeurotoxinDebuff = minion.debuffs.find((debuff) => debuff.id === EffectId.NEUROTOXIN);\r\n\r\n        if (hasNeurotoxinDebuff) {\r\n          damageToHero += 1;\r\n        }\r\n      }\r\n    }\r\n  });\r\n\r\n  opponent.field.hero.health.current -= damageToHero;\r\n\r\n  return [true, \"\"];\r\n};\r\n\r\nexport {corrosiveTouch};\r\n","import {EffectId} from \"@som/shared/enums\";\r\nimport {insertBuff} from \"../insertBuff\";\r\nimport type {GamePlayer} from \"@som/shared/types/mongo\";\r\n\r\ninterface ToxicGas {\r\n  opponent: GamePlayer;\r\n}\r\n\r\nconst toxicGas = (params: ToxicGas) => {\r\n  const {opponent} = params;\r\n  const minionKeys = Object.keys(opponent.field) as Array<keyof typeof opponent.field>;\r\n\r\n  minionKeys.forEach((key) => {\r\n    const minion = opponent.field[key];\r\n\r\n    if (minion) {\r\n      const hasElusiveBuff = minion.buffs.find((buff) => buff.id === EffectId.ELUSIVE);\r\n\r\n      if (!hasElusiveBuff) {\r\n        insertBuff(minion, EffectId.NEUROTOXIN);\r\n      }\r\n    }\r\n  });\r\n\r\n  return [true, \"\"];\r\n};\r\n\r\nexport {toxicGas};\r\n","import {CardType, EffectId} from \"@som/shared/enums\";\r\nimport {randomInt} from \"crypto\";\r\nimport {insertDebuff} from \"../insertDebuff\";\r\nimport type {GameMinionCard, GamePlayer} from \"@som/shared/types/mongo\";\r\nimport type {Animations} from \"@som/shared/types/game\";\r\n\r\ninterface AcidRain {\r\n  opponent: GamePlayer;\r\n}\r\n\r\nconst acidRain = (params: AcidRain): Animations => {\r\n  const {opponent} = params;\r\n  const animations: Animations = [];\r\n  const minionKeys = Object.keys(opponent.field) as Array<keyof typeof opponent.field>;\r\n  const possibleMinions: Array<GameMinionCard> = [];\r\n\r\n  minionKeys.forEach((key): void => {\r\n    const minion = opponent.field[key];\r\n\r\n    if (minion && minion.type !== CardType.HERO) {\r\n      const hasElusiveBuff = minion\r\n        .buffs\r\n        .find((buff): boolean => buff.id === EffectId.ELUSIVE);\r\n\r\n      if (!hasElusiveBuff) {\r\n        possibleMinions.push(minion);\r\n      }\r\n    }\r\n  });\r\n\r\n  const minion1 = possibleMinions[randomInt(possibleMinions.length)];\r\n  const minion2 = possibleMinions[randomInt(possibleMinions.length)];\r\n\r\n  insertDebuff(minion1, EffectId.NEUROTOXIN);\r\n  insertDebuff(minion2, EffectId.NEUROTOXIN);\r\n\r\n  return animations;\r\n};\r\n\r\nexport {acidRain};\r\n","import {EffectId} from \"@som/shared/enums\";\r\nimport {insertBuff} from \"../insertBuff\";\r\nimport type {GamePlayer} from \"@som/shared/types/mongo\";\r\n\r\ninterface SmokeBomb {\r\n  player: GamePlayer;\r\n}\r\n\r\nconst smokeBomb = (params: SmokeBomb) => {\r\n  const {player} = params;\r\n  const minionKeys = Object.keys(player.field) as Array<keyof typeof player.field>;\r\n\r\n  minionKeys.forEach((key) => {\r\n    const minion = player.field[key];\r\n\r\n    if (minion) {\r\n      const hasElusiveBuff = minion.buffs.find((buff) => buff.id === EffectId.ELUSIVE);\r\n\r\n      if (!hasElusiveBuff) {\r\n        insertBuff(minion, EffectId.STEALTH);\r\n      }\r\n    }\r\n  });\r\n\r\n  return [true, \"\"];\r\n};\r\n\r\nexport {smokeBomb};\r\n","import {CardType, EffectId} from \"@som/shared/enums\";\r\nimport {insertDebuff} from \"../insertDebuff\";\r\nimport type {GamePlayer} from \"@som/shared/types/mongo\";\r\n\r\ninterface ContaminatedAir {\r\n  player: GamePlayer;\r\n  opponent: GamePlayer;\r\n}\r\n\r\nconst contaminatedAir = (params: ContaminatedAir) => {\r\n  const {player, opponent} = params;\r\n  const minionKeys = Object.keys(player.field) as Array<keyof typeof player.field>;\r\n  const opponentMinionKeys = Object.keys(player.field) as Array<keyof typeof player.field>;\r\n\r\n  minionKeys.forEach((key) => {\r\n    const minion = player.field[key];\r\n\r\n    if (minion && minion.type !== CardType.HERO) {\r\n      const hasElusiveBuff = minion.buffs.find((buff) => buff.id === EffectId.ELUSIVE);\r\n\r\n      if (!hasElusiveBuff) {\r\n        if (minion.damage.current > 0) {\r\n          minion.damage.current -= 1;\r\n        }\r\n\r\n        insertDebuff(minion, EffectId.CONTAMINATED_AIR);\r\n      }\r\n    }\r\n  });\r\n\r\n  opponentMinionKeys.forEach((key) => {\r\n    const minion = opponent.field[key];\r\n\r\n    if (minion && minion.type !== CardType.HERO) {\r\n      const hasElusiveBuff = minion.buffs.find((buff) => buff.id === EffectId.ELUSIVE);\r\n\r\n      if (!hasElusiveBuff) {\r\n        if (minion.damage.current > 0) {\r\n          minion.damage.current -= 1;\r\n        }\r\n\r\n        insertDebuff(minion, EffectId.CONTAMINATED_AIR);\r\n      }\r\n    }\r\n  });\r\n\r\n  return [true, \"\"];\r\n};\r\n\r\nexport {contaminatedAir};\r\n","import {EffectId} from \"@som/shared/enums\";\r\nimport type {Field, GameMinionCard, GamePlayer, GameTrapCard, MinionField} from \"@som/shared/types/mongo\";\r\nimport { deductHealth } from \"../deductHealth\";\r\nimport { moveToGraveyard } from \"../moveToGraveyard\";\r\nimport type { Animations } from \"@som/shared/types/game\";\r\n\r\ninterface NoxiousFumes {\r\n  player: GamePlayer;\r\n  playerMinion: GameMinionCard;\r\n  playerMinionField: MinionField;\r\n  opponent: GamePlayer;\r\n  opponentTrap: GameTrapCard;\r\n}\r\n\r\nconst noxiousFumes = (params: NoxiousFumes): Animations => {\r\n  const {player, opponent, playerMinion, playerMinionField, opponentTrap} = params;\r\n  const animations: Animations = [];\r\n\r\n  const minionKeys = Object.keys(player.field) as Array<keyof typeof player.field>;\r\n  let damage = 0;\r\n\r\n  minionKeys.forEach((key) => {\r\n    const minion = player.field[key];\r\n\r\n    if (minion) {\r\n      const hasElusiveBuff = minion.buffs.find((buff) => buff.id === EffectId.ELUSIVE);\r\n\r\n      if (!hasElusiveBuff) {\r\n        const hasNeurotoxinDebuff = minion.debuffs.find((debuff) => debuff.id === EffectId.NEUROTOXIN);\r\n\r\n        if (hasNeurotoxinDebuff) {\r\n          damage += 1;\r\n        }\r\n      }\r\n    }\r\n  });\r\n\r\n  animations.push(...deductHealth(player, playerMinion, damage, playerMinionField));\r\n\r\n  animations.push({\r\n    type: \"FLOATING_TEXT\",\r\n    field: playerMinionField,\r\n    name: player.name,\r\n    text: \"Noxious Fumes\"\r\n  });\r\n\r\n  if (playerMinion.health.current <= 0) {\r\n    moveToGraveyard(player, playerMinion, playerMinionField);\r\n\r\n    animations.push({\r\n      type: \"DEATH\",\r\n      field: playerMinionField,\r\n      name: player.name\r\n    });\r\n  }\r\n\r\n  opponent.graveyard.push(opponentTrap);\r\n  opponent.trap = undefined;\r\n\r\n  return [];\r\n};\r\n\r\nexport {noxiousFumes};\r\n","import {EffectId} from \"@som/shared/enums\";\r\nimport {insertDebuff} from \"../insertDebuff\";\r\nimport type {GameMinionCard, GamePlayer, GameTrapCard} from \"@som/shared/types/mongo\";\r\n\r\ninterface PoisonedGround {\r\n  player: GamePlayer;\r\n  minion: GameMinionCard;\r\n  trap: GameTrapCard;\r\n}\r\n\r\nconst poisonedGround = (params: PoisonedGround) => {\r\n  const {player, minion, trap} = params;\r\n\r\n  insertDebuff(minion, EffectId.NEUROTOXIN);\r\n  player.graveyard.push(trap);\r\n  player.trap = undefined;\r\n\r\n  return [true, \"\"];\r\n};\r\n\r\nexport {poisonedGround};\r\n","import type {GameMinionCard} from \"@som/shared/types/mongo\";\r\n\r\ninterface Rampage {\r\n  minion: GameMinionCard;\r\n}\r\n\r\nconst rampage = (params: Rampage) => {\r\n  params.minion.damage += 1;\r\n  return [true, \"\"];\r\n};\r\n\r\nexport {rampage};\r\n","import type {Animations} from \"@som/shared/types/game\";\r\nimport type {Field, GameMinionCard, GamePlayer} from \"@som/shared/types/mongo\";\r\n\r\ninterface Backstab {\r\n  player: GamePlayer;\r\n  playerMinion: GameMinionCard;\r\n  playerMinionField: Field;\r\n  opponent: GamePlayer;\r\n}\r\n\r\nconst backstab = (params: Backstab): Animations => {\r\n  const {player, opponent, playerMinion, playerMinionField} = params;\r\n\r\n  opponent.field.hero.mana.current -= 1;\r\n  playerMinion.damage.current += 2;\r\n\r\n  return [{\r\n    type: \"FLOATING_TEXT\",\r\n    field: \"hero\",\r\n    name: opponent.name,\r\n    text: \"BACKSTAB\"\r\n  }, {\r\n    type: \"MANA\",\r\n    increment: -1,\r\n    field: \"hero\",\r\n    name: opponent.name\r\n  }, {\r\n    type: \"DAMAGE\",\r\n    increment: 2,\r\n    field: playerMinionField,\r\n    name: player.name\r\n  }];\r\n};\r\n\r\nexport {backstab};\r\n","import type {GameMinionCard, GamePlayer} from \"@som/shared/types/mongo\";\r\n\r\ninterface Overpower {\r\n  opponent: GamePlayer;\r\n  damage: number;\r\n}\r\n\r\nconst overpower = (params: Overpower) => {\r\n  const {opponent, damage} = params;\r\n  opponent.field.hero.health -= damage;\r\n  return [true, \"\"];\r\n};\r\n\r\nexport {overpower};\r\n","import {CardType, EffectId} from \"@som/shared/enums\";\r\nimport {moveToGraveyard} from \"../moveToGraveyard\";\r\nimport type {Field, GamePlayer} from \"@som/shared/types/mongo\";\r\n\r\ninterface Ignite {\r\n  player: GamePlayer;\r\n  opponent: GamePlayer;\r\n  field?: Field;\r\n}\r\n\r\nconst ignite = (params: Ignite) => {\r\n  const {player, opponent, field} = params;\r\n\r\n  if (!field) {\r\n    return [false, \"Field for Effect not specified.\"];\r\n  }\r\n\r\n  const card = opponent.field[field];\r\n\r\n  if (!card || card.type === CardType.HERO) {\r\n    return [false, `Minion doesn't exist on the field ${field}.`];\r\n  }\r\n\r\n  if (card.buffs.find((buff) => buff.id === EffectId.ELUSIVE)) {\r\n    return [false, \"Ignite negated.\"];\r\n  }\r\n\r\n  card.health -= 2;\r\n\r\n  if (card.health <= 0) {\r\n    moveToGraveyard(opponent, card, field);\r\n\r\n    const drawnCard = player.deck.pop();\r\n\r\n    if (drawnCard) {\r\n      player.hand.push(drawnCard);\r\n    }\r\n  }\r\n\r\n  return [true, \"\"];\r\n};\r\n\r\nexport {ignite};\r\n","import {CardType, EffectId} from \"@som/shared/enums\";\r\nimport {insertBuff} from \"../insertBuff\";\r\nimport {moveToGraveyard} from \"../moveToGraveyard\";\r\nimport type {Field, GamePlayer, MinionField} from \"@som/shared/types/mongo\";\r\n\r\ninterface Corruption {\r\n  player: GamePlayer;\r\n  field?: MinionField;\r\n}\r\n\r\nconst corruption = (params: Corruption) => {\r\n  const {player, field} = params;\r\n\r\n  if (!field) {\r\n    return [false, \"Field for Effect not specified.\"];\r\n  }\r\n\r\n  const card = player.field[field];\r\n\r\n  if (!card) {\r\n    return [false, `Minion doesn't exist on the field ${field}.`];\r\n  }\r\n\r\n  if (card.buffs.find((buff) => buff.id === EffectId.ELUSIVE)) {\r\n    return [false, \"Corruption negated.\"];\r\n  }\r\n\r\n  card.health.current -= 2;\r\n\r\n  if (card.health.current <= 0) {\r\n    moveToGraveyard(player, card, field);\r\n  } else {\r\n    insertBuff(card, EffectId.OVERCHARGE);\r\n  }\r\n\r\n  return [true, \"\"];\r\n};\r\n\r\nexport {corruption};\r\n","import {CardType, EffectId} from \"@som/shared/enums\";\r\nimport {insertBuff} from \"../insertBuff\";\r\nimport type {Field, GamePlayer} from \"@som/shared/types/mongo\";\r\n\r\ninterface Hysteria {\r\n  player: GamePlayer;\r\n  field?: Field;\r\n}\r\n\r\nconst hysteria = (params: Hysteria) => {\r\n  const {player, field} = params;\r\n\r\n  if (!field) {\r\n    return [false, \"Field for Effect not specified.\"];\r\n  }\r\n\r\n  const card = player.field[field];\r\n\r\n  if (!card || card.type === CardType.HERO) {\r\n    return [false, `Minion doesn't exist on the field ${field}.`];\r\n  }\r\n\r\n  if (card.buffs.find((buff) => buff.id === EffectId.ELUSIVE)) {\r\n    return [false, \"Hysteria negated.\"];\r\n  }\r\n\r\n  card.damage *= 2;\r\n  card.health = 1;\r\n\r\n  insertBuff(card, EffectId.HYSTERIA);\r\n\r\n  return [true, \"\"];\r\n};\r\n\r\nexport {hysteria};\r\n","import {getAdjacentMinions} from \"../getAdjacentMinions\";\r\nimport {moveToGraveyard} from \"../moveToGraveyard\";\r\nimport type {Field, GamePlayer, GameTrapCard, MinionField} from \"@som/shared/types/mongo\";\r\nimport type {Animations} from \"@som/shared/types/game\";\r\n\r\ninterface Explosive {\r\n  player: GamePlayer;\r\n  playerMinionField: MinionField;\r\n  opponent: GamePlayer;\r\n  opponentTrap: GameTrapCard;\r\n}\r\n\r\nconst explosive = (params: Explosive): Animations => {\r\n  const {player, playerMinionField, opponent, opponentTrap} = params;\r\n  const fields = getAdjacentMinions(playerMinionField) as MinionField[];\r\n\r\n  fields.forEach((field) => {\r\n    const minion = player.field[field];\r\n\r\n    if (minion) {\r\n      minion.health -= 2;\r\n\r\n      if (minion.health <= 0) {\r\n        moveToGraveyard(player, minion, field);\r\n      }\r\n    }\r\n  });\r\n\r\n  opponent.graveyard.push(opponentTrap);\r\n  opponent.trap = undefined;\r\n\r\n  return [];\r\n};\r\n\r\nexport {explosive};\r\n","import { CardType, EffectId } from \"@som/shared/enums\";\r\nimport { getAdjacentMinions } from \"../getAdjacentMinions\";\r\nimport { moveToGraveyard } from \"../moveToGraveyard\";\r\nimport { insertBuff } from \"../insertBuff\";\r\nimport type {Field, GamePlayer, GameTrapCard} from \"@som/shared/types/mongo\";\r\n\r\ninterface Reflection {\r\n  player: GamePlayer;\r\n  opponent: GamePlayer;\r\n  trap: GameTrapCard;\r\n}\r\n\r\nconst reflection = (params: Reflection) => {\r\n  const {player, opponent, trap} = params;\r\n  const fields = Object.keys(player.field) as Array<keyof typeof player.field>;\r\n\r\n  fields.forEach((field) => {\r\n    const minion = player.field[field];\r\n\r\n    if (minion && minion.type !== CardType.HERO) {\r\n      insertBuff(minion, EffectId.OVERCHARGE);\r\n    }\r\n  });\r\n\r\n  opponent.graveyard.push(trap);\r\n  opponent.trap = undefined;\r\n\r\n  return [true, \"Last stand triggered\"];\r\n};\r\n\r\nexport {reflection};\r\n","import {EffectId} from \"@som/shared/enums\";\r\nimport type {GameMinionCard, GamePlayer, GameTrapCard, MinionField} from \"@som/shared/types/mongo\";\r\nimport type {Animations} from \"@som/shared/types/game\";\r\n\r\ninterface Constriction {\r\n  player: GamePlayer;\r\n  playerMinion: GameMinionCard;\r\n  opponent: GamePlayer;\r\n  opponentTrap: GameTrapCard;\r\n  playerMinionField: MinionField;\r\n}\r\n\r\nconst constriction = (params: Constriction): Animations => {\r\n  const {player, playerMinion, opponent, opponentTrap, playerMinionField} = params;\r\n  const fields = Object.keys(player.field) as Array<keyof typeof player.field>;\r\n\r\n  const sum = fields.reduce((amount, field) => {\r\n    const minion = player.field[field];\r\n    return minion && minion.buffs.find((buff) => buff.id === EffectId.OVERCHARGE) ? amount + 1 : amount;\r\n  }, 0);\r\n\r\n  if (playerMinion.damage.current >= sum) {\r\n    playerMinion.damage.current -= sum;\r\n  } else {\r\n    playerMinion.damage.current = 0;\r\n  }\r\n\r\n  opponent.graveyard.push(opponentTrap);\r\n  opponent.trap = undefined;\r\n\r\n  return [{\r\n    type: \"TRAP\",\r\n    name: opponent.name,\r\n    card: opponentTrap\r\n  }, {\r\n    type: \"FLOATING_TEXT\",\r\n    field: playerMinionField,\r\n    name: player.name,\r\n    text: \"CONSTRICTION\"\r\n  }, {\r\n    type: \"DAMAGE\",\r\n    field: playerMinionField,\r\n    name: player.name,\r\n    increment: -sum\r\n  }];\r\n};\r\n\r\nexport {constriction};\r\n","import {acidicDeath} from \"./acidicDeath\";\r\nimport {banish} from \"./banish\";\r\nimport {shadowSurge} from \"./shadowSurge\";\r\nimport {diminish} from \"./diminish\";\r\nimport {frostbite} from \"./frostbite\";\r\nimport {glory} from \"./glory\";\r\nimport {heartOfSteel} from \"./heartOfSteel\";\r\nimport {lastStand} from \"./lastStand\";\r\nimport {mirrorsEdge} from \"./mirrorsEdge\";\r\nimport {risingFury} from \"./risingFury\";\r\nimport {blaze} from \"./blaze\";\r\nimport {necromancy} from \"./necromancy\";\r\nimport {unity} from \"./unity\";\r\nimport {quickShot} from \"./quickShot\";\r\nimport {rebirth} from \"./rebirth\";\r\nimport {reload} from \"./reload\";\r\nimport {revenge} from \"./revenge\";\r\nimport {ricochet} from \"./ricochet\";\r\nimport {shell} from \"./shell\";\r\nimport {shieldwall} from \"./shieldwall\";\r\nimport {silence} from \"./silence\";\r\nimport {smite} from \"./smite\";\r\nimport {spellweave} from \"./spellweave\";\r\nimport {toxicSpray} from \"./toxicSpray\";\r\nimport {valor} from \"./valor\";\r\nimport {fortitude} from \"./fortitude\";\r\nimport { regeneration } from \"./regeneration\";\r\nimport { leech } from \"./leech\";\r\nimport { electroShock } from \"./electroShock\";\r\nimport { cleanse } from \"./cleanse\";\r\nimport { tidalWave } from \"./tidalWave\";\r\nimport { retribution } from \"./retribution\";\r\nimport { corrosiveTouch } from \"./corrosiveTouch\";\r\nimport { toxicGas } from \"./toxicGas\";\r\nimport { acidRain } from \"./acidRain\";\r\nimport { smokeBomb } from \"./smokeBomb\";\r\nimport { contaminatedAir } from \"./contaminatedAir\";\r\nimport { noxiousFumes } from \"./noxiousFumes\";\r\nimport { poisonedGround } from \"./poisonedGround\";\r\nimport { selfDestruct } from \"./selfDestruct\";\r\nimport { rampage } from \"./rampage\";\r\nimport { backstab } from \"./backstab\";\r\nimport { overpower } from \"./overpower\";\r\nimport { ignite } from \"./ignite\";\r\nimport { corruption } from \"./corruption\";\r\nimport { hysteria } from \"./hysteria\";\r\nimport { explosive } from \"./explosive\";\r\nimport { reflection } from \"./reflection\";\r\nimport { constriction } from \"./constriction\";\r\n\r\nexport {mirrorsEdge};\r\n\r\nconst effect = {\r\n  acidicDeath,\r\n  acidRain,\r\n  banish,\r\n  backstab,\r\n  cleanse,\r\n  corrosiveTouch,\r\n  contaminatedAir,\r\n  shadowSurge,\r\n  diminish,\r\n  electroShock,\r\n  fortitude,\r\n  frostbite,\r\n  glory,\r\n  heartOfSteel,\r\n  lastStand,\r\n  leech,\r\n  mirrorsEdge,\r\n  risingFury,\r\n  blaze,\r\n  necromancy,\r\n  unity,\r\n  silence,\r\n  quickShot,\r\n  shieldwall,\r\n  smite,\r\n  spellweave,\r\n  rebirth,\r\n  regeneration,\r\n  retribution,\r\n  reload,\r\n  revenge,\r\n  ricochet,\r\n  shell,\r\n  toxicGas,\r\n  toxicSpray,\r\n  tidalWave,\r\n  valor,\r\n  smokeBomb,\r\n  noxiousFumes,\r\n  poisonedGround,\r\n  selfDestruct,\r\n  rampage,\r\n  overpower,\r\n  ignite,\r\n  corruption,\r\n  hysteria,\r\n  explosive,\r\n  reflection,\r\n  constriction,\r\n};\r\n\r\nexport {effect};\r\n","import type {Game} from \"@som/shared/types/mongo\";\r\nimport type {GameView} from \"@som/shared/types/views\";\r\n\r\ntype GenerateGameView = (game: Game, name: string) => GameView;\r\n\r\nconst generateGameView: GenerateGameView = ({\r\n  id,\r\n  type,\r\n  currentPlayer,\r\n  currentTurn,\r\n  gameLogs,\r\n  playerA,\r\n  playerB\r\n}, name) => ({\r\n  id,\r\n  type,\r\n  currentPlayer,\r\n  currentTurn,\r\n  gameLogs,\r\n  player: playerA.name === name ? {\r\n    name: playerA.name,\r\n    // hero: playerA.hero,\r\n    // minion: playerA.minion,\r\n    field: playerA.field,\r\n    trap: playerA.trap,\r\n    deck: playerA.deck.length,\r\n    hand: playerA.hand,\r\n    graveyard: playerA.graveyard,\r\n    skins: playerA.skins\r\n  } : {\r\n    name: playerB.name,\r\n    // hero: playerB.hero,\r\n    // minion: playerB.minion,\r\n    field: playerB.field,\r\n    trap: playerB.trap,\r\n    deck: playerB.deck.length,\r\n    hand: playerB.hand,\r\n    graveyard: playerB.graveyard,\r\n    skins: playerB.skins\r\n  },\r\n  opponent: playerA.name === name ? {\r\n    name: playerB.name,\r\n    // hero: playerB.hero,\r\n    // minion: playerB.minion,\r\n    field: playerB.field,\r\n    trap: playerB.trap ? true : false,\r\n    deck: playerB.deck.length,\r\n    hand: playerB.hand.length,\r\n    graveyard: playerB.graveyard,\r\n    skins: playerB.skins\r\n  } : {\r\n    name: playerA.name,\r\n    // hero: playerA.hero,\r\n    // minion: playerA.minion,\r\n    field: playerA.field,\r\n    trap: playerA.trap ? true : false,\r\n    deck: playerA.deck.length,\r\n    hand: playerA.hand.length,\r\n    graveyard: playerA.graveyard,\r\n    skins: playerA.skins\r\n  }\r\n});\r\n\r\nexport {generateGameView};\r\n","import {mongo, server} from \"app\";\r\nimport {generateGameView} from \"./generateGameView\";\r\nimport type {Animations} from \"@som/shared/types/game\";\r\nimport type {Game} from \"@som/shared/types/mongo\";\r\n\r\nconst attackMinionSave = async ($game: Game, animations: Animations): Promise<void> => {\r\n  const {$players, $games} = mongo;\r\n  const {io} = server;\r\n  const {playerA, playerB} = $game;\r\n\r\n  const [$playerA, $playerB] = await Promise.all([\r\n    $players.findOne({\r\n      name: playerA.name\r\n    }),\r\n    $players.findOne({\r\n      name: playerB.name\r\n    })\r\n  ]);\r\n\r\n  if (!$playerA || !$playerB) {\r\n    return;\r\n  }\r\n\r\n  io.to($playerA.socketId).emit(\"attackMinionSave\", {\r\n    game: generateGameView($game, $playerA.name),\r\n    animations\r\n  });\r\n\r\n  io.to($playerB.socketId).emit(\"attackMinionSave\", {\r\n    game: generateGameView($game, $playerB.name),\r\n    animations\r\n  });\r\n\r\n  await $games.replaceOne({id: $game.id}, $game);\r\n};\r\n\r\nexport {attackMinionSave};\r\n","import {randomInt} from \"crypto\";\r\nimport {cards} from \"@som/shared/data\";\r\nimport {CardType} from \"@som/shared/enums\";\r\n\r\nimport type {\r\n  GameCards,\r\n  GameMagicCard,\r\n  GameMinionCard,\r\n  GameTrapCard,\r\n  PlayerDeck\r\n} from \"@som/shared/types/mongo\";\r\n\r\nconst buildDeck = (deck: PlayerDeck): GameCards => {\r\n  const gameDeck: GameCards = [];\r\n  let gid = 1;\r\n\r\n  deck.cards.forEach((deckCard) => {\r\n    const card = cards.find((card) => card.id === deckCard.id);\r\n\r\n    if (!card) {\r\n      console.error(\"One of the cards in the deck is invalid.\");\r\n      return;\r\n    }\r\n\r\n    if (card.type === CardType.HERO) {\r\n      console.error(\"Hero cannot be a deck card.\")\r\n      return;\r\n    }\r\n\r\n    const {id, klass, effect, manaCost} = card;\r\n    let gameCard: GameMagicCard | GameMinionCard | GameTrapCard;\r\n\r\n    if (card.type === CardType.MINION) {\r\n      const {type, health, damage} = card;\r\n\r\n      gameCard = {\r\n        id,\r\n        gid,\r\n        klass,\r\n        effect,\r\n        type,\r\n        health: {\r\n          current: health,\r\n          default: health\r\n        },\r\n        damage: {\r\n          current: damage,\r\n          default: damage\r\n        },\r\n        manaCost: {\r\n          current: manaCost,\r\n          default: manaCost\r\n        },\r\n        canAttack: false,\r\n        buffs: [],\r\n        debuffs: []\r\n      };\r\n    } else {\r\n      const {type} = card;\r\n      gameCard = {id, gid, klass, effect, type, manaCost: {\r\n        current: manaCost,\r\n        default: manaCost\r\n      }};\r\n    }\r\n\r\n    gameDeck.push(gameCard);\r\n    gid += 1;\r\n\r\n    if (deckCard.amount > 1) {\r\n      gameDeck.push({...gameCard, gid});\r\n      gid += 1;\r\n    }\r\n  });\r\n\r\n  for (let i = gameDeck.length - 1; i > 0; i -= 1) {\r\n    const j = randomInt(0, i + 1);\r\n    const temp = gameDeck[i];\r\n\r\n    gameDeck[i] = gameDeck[j];\r\n    gameDeck[j] = temp;\r\n  }\r\n\r\n  return gameDeck;\r\n};\r\n\r\nexport {buildDeck};\r\n","import {GameType, PlayerStatus} from \"@som/shared/enums\";\r\nimport { Animations } from \"@som/shared/types/game\";\r\nimport {mongo, server} from \"app\";\r\n\r\nconst sleep = (waitTimeInMs: number) => new Promise(resolve => setTimeout(resolve, waitTimeInMs));\r\n\r\nconst endGame = async (gameId: number, winnerName: string, animations: Animations): Promise<void> => {\r\n  const {$games, $players} = mongo;\r\n  const {io} = server;\r\n  const $game = await $games.findOne({id: gameId});\r\n\r\n  if (!$game) { return; }\r\n\r\n  const {playerA, playerB} = $game;\r\n\r\n  if (winnerName === playerA.name) {\r\n\r\n\r\n\r\n    const $playerA = await $players.findOne({\r\n      name: playerA.name\r\n    });\r\n    const $playerB = await $players.findOne({\r\n      name: playerB.name\r\n    });\r\n\r\n    if (!$playerA || !$playerB) { return; }\r\n\r\n    $playerA.status = PlayerStatus.ONLINE;\r\n    $playerA.gameId = 0;\r\n\r\n    $playerB.status = PlayerStatus.ONLINE;\r\n    $playerB.gameId = 0;\r\n\r\n    let playerAEesReward = \"0\";\r\n    let playerADaily = false;\r\n    let playerBEesReward = \"0\";\r\n    let playerBDaily = false;\r\n\r\n    if (!$playerA.tasks.daily) {\r\n      $playerA.tasks.daily = true;\r\n      playerADaily = true;\r\n    }\r\n\r\n    if (!$playerB.tasks.daily && $playerB.tasks.dailyAlternative < 2) {\r\n      $playerB.tasks.dailyAlternative += 1;\r\n    } else if (!$playerB.tasks.daily && $playerB.tasks.dailyAlternative >= 2) {\r\n      $playerB.tasks.daily = true;\r\n      playerBDaily = true\r\n    }\r\n\r\n    if ($game.type === GameType.CASUAL || $game.type === GameType.RANKED) {\r\n      $playerA.experience += 110 + $game.currentTurn;\r\n\r\n      const XP_REQUIRED = 1000;\r\n\r\n      if ($playerA.experience >= XP_REQUIRED) {\r\n        const remaining = $playerA.experience - XP_REQUIRED;\r\n        $playerA.level += 1;\r\n        $playerA.experience = remaining;\r\n\r\n        playerAEesReward = `${BigInt(playerAEesReward) + 1n  * 10n ** 18n}`;\r\n\r\n        if ($playerA.level % 2 === 0) {\r\n          playerAEesReward = `${BigInt(playerAEesReward) + 2n  * 10n ** 18n}`;\r\n        }\r\n        if ($playerA.level % 4 === 0) {\r\n          playerAEesReward = `${BigInt(playerAEesReward) + 4n  * 10n ** 18n}`;\r\n        }\r\n        if ($playerA.level % 8 === 0) {\r\n          playerAEesReward = `${BigInt(playerAEesReward) + 8n  * 10n ** 18n}`;\r\n        }\r\n        if ($playerA.level % 16 === 0) {\r\n          playerAEesReward = `${BigInt(playerAEesReward) + 16n  * 10n ** 18n}`;\r\n        }\r\n        if ($playerA.level % 32 === 0) {\r\n          playerAEesReward = `${BigInt(playerAEesReward) + 32n  * 10n ** 18n}`;\r\n        }\r\n        if ($playerA.level % 64 === 0) {\r\n          playerAEesReward = `${BigInt(playerAEesReward) + 64n  * 10n ** 18n}`;\r\n        }\r\n\r\n        $playerA.rewards.ees = `${BigInt($playerA.rewards.ees) + playerAEesReward}`;\r\n      }\r\n\r\n      $playerB.experience += 90 + $game.currentTurn;\r\n\r\n      if ($playerB.experience >= XP_REQUIRED) {\r\n        const rem = $playerB.experience - XP_REQUIRED;\r\n        $playerB.level += 1;\r\n        $playerB.experience = rem;\r\n\r\n        playerBEesReward = `${BigInt(playerBEesReward) + 1n * 10n ** 18n}`;\r\n\r\n        if ($playerB.level % 2 === 0) {\r\n          playerBEesReward = `${BigInt(playerBEesReward) + 2n * 10n ** 18n}`;\r\n        }\r\n        if ($playerB.level % 4 === 0) {\r\n          playerBEesReward = `${BigInt(playerBEesReward) + 4n * 10n ** 18n}`;\r\n        }\r\n        if ($playerB.level % 8 === 0) {\r\n          playerBEesReward = `${BigInt(playerBEesReward) + 8n * 10n ** 18n}`;\r\n        }\r\n        if ($playerB.level % 16 === 0) {\r\n          playerBEesReward = `${BigInt(playerBEesReward) + 16n * 10n ** 18n}`;\r\n        }\r\n        if ($playerB.level % 32 === 0) {\r\n          playerBEesReward = `${BigInt(playerBEesReward) + 32n * 10n ** 18n}`;\r\n        }\r\n        if ($playerB.level % 64 === 0) {\r\n          playerBEesReward = `${BigInt(playerBEesReward) + 64n * 10n ** 18n}`;\r\n        }\r\n\r\n        $playerB.rewards.ees = `${BigInt($playerB.rewards.ees) + playerBEesReward}`;\r\n      }\r\n    }\r\n\r\n    if ($game.type === GameType.CASUAL) {\r\n      $playerA.games.casual.won += 1;\r\n      $playerB.games.casual.lost += 1;\r\n    }\r\n\r\n    if ($game.type === GameType.RANKED) {\r\n      $playerA.games.ranked.won += 1;\r\n      $playerB.games.ranked.lost += 1;\r\n      $playerA.elo += 20;\r\n      $playerB.elo -= 20;\r\n    }\r\n\r\n    const $playerAReplace = await $players.replaceOne({\r\n      name: playerA.name\r\n    }, $playerA);\r\n\r\n    const $playerBReplace = await $players.replaceOne({\r\n      name: playerB.name\r\n    }, $playerB);\r\n\r\n    io.to($playerA.socketId).emit(\"gameEnded\" as any, {\r\n      isWinner: true,\r\n      gameType: $game.type,\r\n      experience: 110 + $game.currentTurn,\r\n      elo: $game.type === GameType.RANKED ? 20 : 0,\r\n      eesReward: playerAEesReward,\r\n      playerADaily,\r\n      animations\r\n    });\r\n\r\n    io.to($playerB.socketId).emit(\"gameEnded\" as any, {\r\n      isWinner: false,\r\n      gameType: $game.type,\r\n      experience: 90 + $game.currentTurn,\r\n      elo: $game.type === GameType.RANKED ? -20 : 0,\r\n      eesReward: playerBEesReward,\r\n      playerBDaily,\r\n      animations\r\n    });\r\n\r\n\r\n\r\n  } else if (winnerName === playerB.name) {\r\n\r\n\r\n\r\n    const $playerB = await $players.findOne({\r\n      name: playerB.name\r\n    });\r\n    const $playerA = await $players.findOne({\r\n      name: playerA.name\r\n    });\r\n\r\n    if (!$playerB || !$playerA) { return; }\r\n\r\n    $playerB.status = PlayerStatus.ONLINE;\r\n    $playerB.gameId = 0;\r\n    $playerA.status = PlayerStatus.ONLINE;\r\n    $playerA.gameId = 0;\r\n\r\n    let playerADaily = false;\r\n    let playerBDaily = false;\r\n    let playerAEesReward = \"0\";\r\n    let playerBEesReward = \"0\";\r\n\r\n    if (!$playerB.tasks.daily) {\r\n      $playerB.tasks.daily = true;\r\n      playerBDaily = true;\r\n    }\r\n\r\n    if (!$playerA.tasks.daily && $playerA.tasks.dailyAlternative < 2) {\r\n      $playerA.tasks.dailyAlternative += 1;\r\n    } else if (!$playerA.tasks.daily && $playerA.tasks.dailyAlternative >= 2) {\r\n      $playerA.tasks.daily = true;\r\n      playerADaily = true;\r\n    }\r\n\r\n    if ($game.type === GameType.CASUAL || $game.type === GameType.RANKED) {\r\n      $playerB.experience += 110 + $game.currentTurn;\r\n\r\n      const XP_REQUIRED = 1000;\r\n\r\n      if ($playerB.experience >= XP_REQUIRED) {\r\n        const remaining = $playerB.experience - XP_REQUIRED;\r\n        $playerB.level += 1;\r\n        $playerB.experience = remaining;\r\n\r\n        if ($playerB.experience >= XP_REQUIRED) {\r\n          const rem = $playerB.experience - XP_REQUIRED;\r\n          $playerB.level += 1;\r\n          $playerB.experience = rem;\r\n\r\n          playerBEesReward = `${BigInt(playerBEesReward) + 1n * 10n ** 18n}`;\r\n\r\n          if ($playerB.level % 2 === 0) {\r\n            playerBEesReward = `${BigInt(playerBEesReward) + 2n * 10n ** 18n}`;\r\n          }\r\n          if ($playerB.level % 4 === 0) {\r\n            playerBEesReward = `${BigInt(playerBEesReward) + 4n * 10n ** 18n}`;\r\n          }\r\n          if ($playerB.level % 8 === 0) {\r\n            playerBEesReward = `${BigInt(playerBEesReward) + 8n * 10n ** 18n}`;\r\n          }\r\n          if ($playerB.level % 16 === 0) {\r\n            playerBEesReward = `${BigInt(playerBEesReward) + 16n * 10n ** 18n}`;\r\n          }\r\n          if ($playerB.level % 32 === 0) {\r\n            playerBEesReward = `${BigInt(playerBEesReward) + 32n * 10n ** 18n}`;\r\n          }\r\n          if ($playerB.level % 64 === 0) {\r\n            playerBEesReward = `${BigInt(playerBEesReward) + 64n * 10n ** 18n}`;\r\n          }\r\n\r\n          $playerB.rewards.ees = `${BigInt($playerB.rewards.ees) + playerBEesReward}`;\r\n        }\r\n      }\r\n\r\n      $playerA.experience += 90 + $game.currentTurn;\r\n\r\n      if ($playerA.experience >= XP_REQUIRED) {\r\n        const rem = $playerA.experience - XP_REQUIRED;\r\n        $playerA.level += 1;\r\n        $playerA.experience = rem;\r\n\r\n        if ($playerA.level % 2 === 0) {\r\n          playerAEesReward = `${BigInt(playerAEesReward) + 2n * 10n ** 18n}`;\r\n        }\r\n        if ($playerA.level % 4 === 0) {\r\n          playerAEesReward = `${BigInt(playerAEesReward) + 4n * 10n ** 18n}`;\r\n        }\r\n        if ($playerA.level % 8 === 0) {\r\n          playerAEesReward = `${BigInt(playerAEesReward) + 8n * 10n ** 18n}`;\r\n        }\r\n        if ($playerA.level % 16 === 0) {\r\n          playerAEesReward = `${BigInt(playerAEesReward) + 16n * 10n ** 18n}`;\r\n        }\r\n        if ($playerA.level % 32 === 0) {\r\n          playerAEesReward = `${BigInt(playerAEesReward) + 32n * 10n ** 18n}`;\r\n        }\r\n        if ($playerA.level % 64 === 0) {\r\n          playerAEesReward = `${BigInt(playerAEesReward) + 64n * 10n ** 18n}`;\r\n        }\r\n\r\n        $playerA.rewards.ees = `${BigInt($playerA.rewards.ees) + playerAEesReward}`;\r\n      }\r\n    }\r\n\r\n    if ($game.type === GameType.CASUAL) {\r\n      $playerB.games.casual.won += 1;\r\n      $playerA.games.casual.lost += 1;\r\n    }\r\n\r\n    if ($game.type === GameType.RANKED) {\r\n      $playerB.games.ranked.won += 1;\r\n      $playerA.games.ranked.lost += 1;\r\n      $playerB.elo += 20;\r\n      $playerA.elo -= 20;\r\n    }\r\n\r\n    const $playerBeplace = await $players.replaceOne({\r\n      name: playerB.name\r\n    }, $playerB);\r\n\r\n    const $playerAReplace = await $players.replaceOne({\r\n      name: playerA.name\r\n    }, $playerA);\r\n\r\n    io.to($playerB.socketId).emit(\"gameEnded\" as any, {\r\n      isWinner: true,\r\n      gameType: $game.type,\r\n      experience: 110 + $game.currentTurn,\r\n      elo: $game.type === GameType.RANKED ? 20 : 0,\r\n      playerBDaily,\r\n      eesReward: playerBEesReward,\r\n      animations\r\n    });\r\n\r\n    io.to($playerA.socketId).emit(\"gameEnded\" as any, {\r\n      isWinner: false,\r\n      gameType: $game.type,\r\n      experience: 90 + $game.currentTurn,\r\n      elo: $game.type === GameType.RANKED ? -20 : 0,\r\n      playerADaily,\r\n      eesReward: playerAEesReward, animations\r\n    });\r\n  }\r\n\r\n  const isDeletedGame = await $games.deleteOne({id: gameId});\r\n\r\n  if (!isDeletedGame.deletedCount) { return; }\r\n};\r\n\r\nexport {endGame};\r\n","import {randomInt} from \"crypto\";\r\nimport {GameType, PlayerStatus} from \"@som/shared/enums\";\r\nimport {mongo, server} from \"app\";\r\n\r\nconst gamePopup = async (type: GameType, playerA: string, playerB: string) => {\r\n  const {$gamePopups, $players} = mongo;\r\n  const {io} = server;\r\n  const id = randomInt(1, 1000000001);\r\n\r\n  const [a, b] = await Promise.all([\r\n    $players.findOneAndUpdate({\r\n      name: playerA\r\n    }, {\r\n      $set: {\r\n        gamePopupId: id\r\n      }\r\n    }, {\r\n      returnDocument: \"after\"\r\n    }),\r\n    $players.findOneAndUpdate({\r\n      name: playerB\r\n    }, {\r\n      $set: {\r\n        gamePopupId: id\r\n      }\r\n    }, {\r\n      returnDocument: \"after\"\r\n    })\r\n  ]);\r\n\r\n  if (!a || !b) {\r\n    return;\r\n  }\r\n\r\n  const gamePopupp = {\r\n    id,\r\n    type,\r\n    playerA: {\r\n      name: a.name,\r\n      hasAccepted: false\r\n    },\r\n    playerB: {\r\n      name: b.name,\r\n      hasAccepted: false\r\n    }\r\n  };\r\n\r\n  const inserted = await $gamePopups.insertOne(gamePopupp);\r\n\r\n  if (!inserted.insertedId) {\r\n    return;\r\n  }\r\n\r\n  const acceptTimeout = setTimeout(async () => {\r\n    const $gamePopup = await $gamePopups.findOne({id});\r\n    if (!$gamePopup) { return; }\r\n    if (!$gamePopup.playerA.hasAccepted || !$gamePopup.playerB.hasAccepted) {\r\n\r\n      const pa = await $players.findOneAndUpdate({\r\n        name: $gamePopup.playerA.name\r\n      }, {\r\n        $set: {\r\n          status: PlayerStatus.ONLINE,\r\n          gamePopupId: 0\r\n        }\r\n      });\r\n      const pb = await $players.findOneAndUpdate({\r\n        name: $gamePopup.playerB.name\r\n      }, {\r\n        $set: {\r\n          status: PlayerStatus.ONLINE,\r\n          gamePopupId: 0\r\n        }\r\n      });\r\n\r\n      if (!pa || !pb) { return; }\r\n\r\n      await $gamePopups.deleteOne({id});\r\n\r\n      io.to(pa.socketId).emit(\"declineGame\");\r\n      io.to(pb.socketId).emit(\"declineGame\");\r\n    }\r\n  }, 10_000);\r\n\r\n  io.to(a.socketId).emit(\"gamePopup\", {gamePopup: gamePopupp});\r\n  io.to(b.socketId).emit(\"gamePopup\", {gamePopup: gamePopupp});\r\n};\r\n\r\nexport {gamePopup};\r\n","import {cards} from \"@som/shared/data\";\r\nimport {CardType, GameType} from \"@som/shared/enums\";\r\nimport {buildDeck} from \"./buildDeck\";\r\n\r\nimport type {\r\n  Game,\r\n  GameCards,\r\n  GameHeroCard,\r\n  Player\r\n} from \"@som/shared/types/mongo\";\r\n\r\nconst generateGame = (\r\n  id: number,\r\n  type: GameType,\r\n  playerA: Player,\r\n  playerB: Player\r\n): Game => {\r\n  const playerASelectedDeck = playerA.decks.find(({id}) => id === playerA.deckId);\r\n  const playerBSelectedDeck = playerB.decks.find(({id}) => id === playerB.deckId);\r\n\r\n  if (!playerASelectedDeck || !playerBSelectedDeck) { return {} as Game; }\r\n\r\n  const playerAHand: GameCards = [];\r\n  const playerBHand: GameCards = [];\r\n  let playerADeck = buildDeck(playerASelectedDeck);\r\n  let playerBDeck = buildDeck(playerBSelectedDeck);\r\n\r\n  if (playerADeck.length !== 30 || playerBDeck.length !== 30) { return {} as Game; }\r\n\r\n  playerAHand.push(...playerADeck.slice(-5));\r\n  playerADeck = playerADeck.slice(0, -5);\r\n  playerBHand.push(...playerBDeck.slice(-5));\r\n  playerBDeck = playerBDeck.slice(0, -5);\r\n\r\n  const playerAHero = cards.find(({type, klass}) => klass === playerASelectedDeck.klass && type === CardType.HERO) as GameHeroCard;\r\n  const playerBHero = cards.find(({type, klass}) => klass === playerBSelectedDeck.klass && type === CardType.HERO) as GameHeroCard;\r\n\r\n  if (!playerAHero || !playerBHero) {\r\n    return {} as Game;\r\n  }\r\n\r\n  return {\r\n    id,\r\n    type,\r\n    currentPlayer: playerA.name,\r\n    currentTurn: 0,\r\n    gameLogs: [],\r\n    playerA: {\r\n      name: playerA.name,\r\n      field: {\r\n        hero: {\r\n          ...playerAHero,\r\n          health: {\r\n            current: 20,\r\n            default: 20\r\n          },\r\n          mana: {\r\n            current: 20,\r\n            default: 20\r\n          },\r\n          buffs: [],\r\n          debuffs: []\r\n        },\r\n        a: undefined,\r\n        b: undefined,\r\n        c: undefined,\r\n        d: undefined\r\n      },\r\n      trap: undefined,\r\n      hand: playerAHand,\r\n      deck: playerADeck,\r\n      graveyard: [],\r\n      skins: playerA.skins\r\n    },\r\n    playerB: {\r\n      name: playerB.name,\r\n      field: {\r\n        hero: {\r\n          ...playerBHero,\r\n          health: {\r\n            current: 20,\r\n            default: 20\r\n          },\r\n          mana: {\r\n            current: 20,\r\n            default: 20\r\n          },\r\n          buffs: [],\r\n          debuffs: []\r\n        },\r\n        a: undefined,\r\n        b: undefined,\r\n        c: undefined,\r\n        d: undefined\r\n      },\r\n      trap: undefined,\r\n      hand: playerBHand,\r\n      deck: playerBDeck,\r\n      graveyard: [],\r\n      skins: playerB.skins\r\n    },\r\n  };\r\n};\r\n\r\nexport {generateGame};\r\n","import {mongo} from \"app\";\r\nimport type {WithId} from \"mongodb\";\r\nimport type {Game, GamePlayer} from \"@som/shared/types/mongo\";\r\n\r\ninterface Response {\r\n  $game: WithId<Game>;\r\n  player: GamePlayer;\r\n  opponent: GamePlayer;\r\n}\r\n\r\ntype GetGame = (socketId: string) => Promise<[Response | undefined, string]>;\r\n\r\nconst getGame: GetGame = async (socketId) => {\r\n  const {$games, $players} = mongo;\r\n  const $player = await $players.findOne({socketId});\r\n\r\n  if (!$player) {\r\n    return [, \"Player not found, try relogging.\"];\r\n  }\r\n\r\n  const {name} = $player;\r\n  const id = $player.gameId;\r\n  const $game = await $games.findOne({id});\r\n\r\n  if (!$game) {\r\n    return [, \"Game not found.\"];\r\n  }\r\n\r\n  const {playerA, playerB} = $game;\r\n  const player = playerA.name === name ? playerA : playerB;\r\n  const opponent = playerA.name === name ? playerB : playerA;\r\n\r\n  if ($game.currentPlayer !== player.name) {\r\n    return [, \"It's not your turn.\"];\r\n  }\r\n\r\n  return [{$game, player, opponent}, \"\"];\r\n};\r\n\r\nexport {getGame};\r\n","import {CardType} from \"@som/shared/enums\";\r\nimport {randomInt} from \"crypto\";\r\nimport type {GameMinionCard, GamePlayer} from \"@som/shared/types/mongo\";\r\n\r\nconst getRandomMinion = (player: GamePlayer): GameMinionCard | undefined => {\r\n  const list: Array<GameMinionCard> = [];\r\n  const fields = Object.keys(player.field) as Array<keyof typeof player.field>;\r\n\r\n  fields.forEach((field) => {\r\n    const minion = player.field[field];\r\n\r\n    if (minion && minion.type !== CardType.HERO) {\r\n      list.push(minion);\r\n    }\r\n  });\r\n\r\n  return list[randomInt(list.length)];\r\n};\r\n\r\nexport {getRandomMinion};\r\n","import { Animations } from \"@som/shared/types/game\";\r\nimport {endGame} from \"./endGame\";\r\nimport type {Game} from \"@som/shared/types/mongo\";\r\n\r\nconst isGameOver = async (game: Game, animations: Animations): Promise<boolean> => {\r\n  if (game.playerA.field.hero.health.current <= 0) {\r\n    await endGame(game.id, game.playerB.name, animations);\r\n    return true;\r\n  } else if (game.playerB.field.hero.health.current <= 0) {\r\n    await endGame(game.id, game.playerA.name, animations);\r\n    return true;\r\n  }\r\n\r\n  return false;\r\n};\r\n\r\nexport {isGameOver};\r\n","import {mongo, server} from \"app\";\r\nimport {generateGameView} from \"./generateGameView\";\r\nimport type {Game} from \"@som/shared/types/mongo\";\r\nimport { Animations } from \"@som/shared/types/game\";\r\n\r\nconst saveGame = async (game: Game, animations: Animations): Promise<void> => {\r\n  const {$games, $players} = mongo;\r\n  const {io} = server;\r\n  const {id, playerA, playerB} = game;\r\n\r\n  const [$updateGame, $playerA, $playerB] = await Promise.all([\r\n    $games.replaceOne({id}, game),\r\n    $players.findOne({\r\n      name: playerA.name\r\n    }),\r\n    $players.findOne({\r\n      name: playerB.name\r\n    })\r\n  ]);\r\n\r\n  if (!$updateGame.modifiedCount || !$playerA || !$playerB) { return; }\r\n\r\n  io.to($playerA.socketId).emit(\"reloadGameState\", {\r\n    game: generateGameView(game, $playerA.name),\r\n    animations\r\n  });\r\n\r\n  io.to($playerB.socketId).emit(\"reloadGameState\", {\r\n    game: generateGameView(game, $playerB.name),\r\n    animations\r\n  });\r\n};\r\n\r\nexport {saveGame};\r\n","import {GameType, PlayerStatus, QueueId} from \"@som/shared/enums\";\nimport {mongo, server} from \"app\";\nimport {generateGame} from \"./generateGame\";\nimport {generateGameView} from \"./generateGameView\";\n\nconst startGame = async (\n  id: number,\n  type: GameType,\n  playerA: string,\n  playerB: string\n): Promise<void> => {\n  const {$games, $players} = mongo;\n  const {io} = server;\n\n  const [$playerA, $playerB] = await Promise.all([\n    $players.findOneAndUpdate({\n      name: playerA\n    }, {\n      $set: {\n        status: PlayerStatus.IN_GAME,\n        queueId: QueueId.NONE,\n        lobbyId: 0,\n        gamePopupId: 0,\n        gameId: id\n      }\n    }),\n    $players.findOneAndUpdate({\n      name: playerB\n    }, {\n      $set: {\n        status: PlayerStatus.IN_GAME,\n        queueId: QueueId.NONE,\n        lobbyId: 0,\n        gamePopupId: 0,\n        gameId: id\n      }\n    }),\n  ]);\n\n  if (!$playerA || !$playerB) { return; }\n\n  const game = generateGame(id, type, $playerA, $playerB);\n  const isInserted = await $games.insertOne(game);\n\n  if (!isInserted.insertedId) { return; }\n\n  io.to($playerA.socketId).emit(\"startGame\" as any, {\n    playerA: {\n      name: $playerA.name,\n      avatarId: $playerA.avatarId,\n      bannerId: $playerA.bannerId,\n      level: $playerA.level,\n      elo: $playerA.elo,\n      experience: $playerA.experience,\n      games: $playerA.games\n    },\n    playerB: {\n      name: $playerB.name,\n      avatarId: $playerB.avatarId,\n      bannerId: $playerB.bannerId,\n      level: $playerB.level,\n      elo: $playerB.elo,\n      experience: $playerB.experience,\n      games: $playerB.games\n    },\n    game: generateGameView(game, $playerA.name)\n  });\n\n  io.to($playerB.socketId).emit(\"startGame\" as any, {\n    playerA: {\n      name: $playerA.name,\n      avatarId: $playerA.avatarId,\n      bannerId: $playerA.bannerId,\n      level: $playerA.level,\n      elo: $playerA.elo,\n      experience: $playerA.experience,\n      games: $playerA.games\n    },\n    playerB: {\n      name: $playerB.name,\n      avatarId: $playerB.avatarId,\n      bannerId: $playerB.bannerId,\n      level: $playerB.level,\n      elo: $playerB.elo,\n      experience: $playerB.experience,\n      games: $playerB.games\n    },\n    game: generateGameView(game, $playerB.name)\n  });\n};\n\nexport {startGame};\n","import {effect} from \"./effect\";\r\nimport {attackMinionSave} from \"./attackMinionSave\";\r\nimport {buildDeck} from \"./buildDeck\";\r\nimport {deductHealth} from \"./deductHealth\";\r\nimport {endGame} from \"./endGame\";\r\nimport {gamePopup} from \"./gamePopup\";\r\nimport {generateGame} from \"./generateGame\";\r\nimport {generateGameView} from \"./generateGameView\";\r\nimport {getAdjacentMinions} from \"./getAdjacentMinions\";\r\nimport {getGame} from \"./getGame\";\r\nimport {getRandomMinion} from \"./getRandomMinion\";\r\nimport {insertBuff} from \"./insertBuff\";\r\nimport {insertDebuff} from \"./insertDebuff\";\r\nimport {isGameOver} from \"./isGameOver\";\r\nimport {moveToGraveyard} from \"./moveToGraveyard\";\r\nimport {saveGame} from \"./saveGame\";\r\nimport {startGame} from \"./startGame\";\r\n\r\nconst gameHelpers = {\r\n  effect,\r\n  attackMinionSave,\r\n  buildDeck,\r\n  deductHealth,\r\n  endGame,\r\n  gamePopup,\r\n  generateGame,\r\n  generateGameView,\r\n  getAdjacentMinions,\r\n  getGame,\r\n  getRandomMinion,\r\n  insertBuff,\r\n  insertDebuff,\r\n  isGameOver,\r\n  moveToGraveyard,\r\n  saveGame,\r\n  startGame,\r\n};\r\n\r\nexport {gameHelpers};\r\n","import {mongo} from \"app\";\r\nimport {gameHelpers} from \"helpers/gameHelpers\";\r\nimport {cards, cardsView} from \"@som/shared/data\";\r\nimport {CardKlass, CardType, PlayerStatus} from \"@som/shared/enums\";\r\n\r\nimport type {\r\n  GameView,\r\n  LobbyView,\r\n  PlayerSocialFriendsView,\r\n  PlayerView\r\n} from \"@som/shared/types/views\";\r\n\r\ninterface AuthData {\r\n  gameView: GameView | undefined;\r\n  lobbyView: LobbyView | undefined;\r\n  playerView: PlayerView;\r\n}\r\n\r\nconst authenticate = async (\r\n  socketId: string,\r\n  name: string\r\n): Promise<[AuthData | undefined, string]> => {\r\n  const {$chats, $games, $lobbies, $players} = mongo;\r\n\r\n  const $player = await $players.findOneAndUpdate({name}, [{\r\n    $set: {\r\n      socketId,\r\n      status: {\r\n        $switch: {\r\n          branches: [{\r\n            case: {\r\n              $gt: [\"$lobbyId\", 0]\r\n            },\r\n            then: PlayerStatus.IN_LOBBY\r\n          }, {\r\n            case: {\r\n              $gt: [\"$gameId\", 0]\r\n            },\r\n            then: PlayerStatus.IN_GAME\r\n          }],\r\n          default: PlayerStatus.ONLINE\r\n        }\r\n      }\r\n    }\r\n  }], {\r\n    returnDocument: \"after\"\r\n  });\r\n\r\n  if (!$player) {\r\n    return [undefined, \"Error updating player.\"];\r\n  }\r\n\r\n  const {lobbyId, gameId} = $player;\r\n  let lobbyView: LobbyView | undefined;\r\n  let gameView: GameView | undefined;\r\n\r\n  if (lobbyId) {\r\n    const id = lobbyId;\r\n    const $lobby = await $lobbies.findOne({id});\r\n\r\n    if (!$lobby) {\r\n      return [undefined, \"You are currently in a lobby that cannot be found.\"];\r\n    }\r\n\r\n    const {host, challengee} = $lobby;\r\n    lobbyView = {id, host, challengee};\r\n  }\r\n\r\n  if (gameId) {\r\n    const id = gameId;\r\n    const $game = await $games.findOne({id});\r\n\r\n    if (!$game) {\r\n      return [undefined, \"You are currently in a game that cannot be found.\"];\r\n    }\r\n\r\n    gameView = gameHelpers.generateGameView($game, $player.name);\r\n  }\r\n\r\n  const friendsView: PlayerSocialFriendsView = [];\r\n\r\n  for (const name of $player.social.friends) {\r\n    const [friend, chat] = await Promise.all([\r\n      $players.findOne({name}),\r\n      $chats.findOne({\r\n        players: {\r\n          $all: [$player.name, name]\r\n        }\r\n      })\r\n    ]);\r\n\r\n    if (friend && chat) {\r\n      const {avatarId, bannerId, experience, level, elo, status, games} = friend;\r\n      const {lastSender, unseen, messages} = chat;\r\n\r\n      friendsView.push({\r\n        name, avatarId, bannerId, experience, level, elo, status, games, chat: {\r\n          lastSender,\r\n          unseen,\r\n          messages\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  const playerView: PlayerView = {\r\n    name: $player.name,\r\n    address: $player.address,\r\n    nonce: $player.nonce,\r\n    avatarId: $player.avatarId,\r\n    bannerId: $player.bannerId,\r\n    experience: $player.experience,\r\n    level: $player.level,\r\n    elo: $player.elo,\r\n    joinedAt: $player.joinedAt,\r\n    status: $player.status,\r\n    queueId: $player.queueId,\r\n    deckId: $player.deckId,\r\n    lobbyId: $player.lobbyId,\r\n    gameId: $player.gameId,\r\n    gamePopupId: $player.gamePopupId,\r\n    social: {\r\n      friends: friendsView,\r\n      requests: $player.social.requests,\r\n      blocked: $player.social.blocked\r\n    },\r\n    games: $player.games,\r\n    decks: $player.decks.map((deck) => ({\r\n      id: deck.id,\r\n      name: deck.name,\r\n      klass: deck.klass,\r\n      cardsInDeck: deck.cards.reduce((acc, {amount}) => acc += amount, 0),\r\n      average: {\r\n        health: deck.cards.reduce((acc, deckCard) => {\r\n          const card = cards.find((card): boolean => deckCard.id === card.id);\r\n\r\n          if (\r\n            !card ||\r\n            card.type === CardType.HERO ||\r\n            card.type === CardType.MAGIC ||\r\n            card.type === CardType.TRAP\r\n          ) {\r\n            return acc;\r\n          }\r\n\r\n          return acc += card.health * deckCard.amount;\r\n        }, 0) / deck.cards.reduce((acc, deckCard) => acc += deckCard.amount, 0) || 0,\r\n        damage: deck.cards.reduce((acc, deckCard) => {\r\n          const card = cards.find((card): boolean => deckCard.id === card.id);\r\n\r\n          if (\r\n            !card ||\r\n            card.type === CardType.HERO ||\r\n            card.type === CardType.MAGIC ||\r\n            card.type === CardType.TRAP\r\n          ) {\r\n            return acc;\r\n          }\r\n\r\n          return acc += card.damage * deckCard.amount;\r\n        }, 0) / deck.cards.reduce((acc, deckCard) => {\r\n          const card = cards.find((card): boolean => deckCard.id === card.id);\r\n\r\n          if ( !card || card.type !== CardType.MINION) {\r\n            return acc;\r\n          }\r\n\r\n          return acc += deckCard.amount;\r\n        }, 0) || 0,\r\n        manaCost: deck.cards.reduce((acc, deckCard) => {\r\n          const card = cards.find((card): boolean => deckCard.id === card.id);\r\n\r\n          if (!card || card.type === CardType.HERO) {\r\n            return acc;\r\n          }\r\n\r\n          return acc += card.manaCost * deckCard.amount;\r\n        }, 0) / deck.cards.reduce((acc, deckCard) => acc += deckCard.amount, 0) || 0\r\n      },\r\n      attribute: {\r\n        minion: deck.cards.reduce((acc, deckCard) => {\r\n          const card = cards.find((card): boolean => deckCard.id === card.id);\r\n\r\n          if (!card || card.type !== CardType.MINION) {\r\n            return acc;\r\n          }\r\n\r\n          return acc += deckCard.amount;\r\n        }, 0),\r\n        magic: deck.cards.reduce((acc, deckCard) => {\r\n          const card = cards.find((card): boolean => deckCard.id === card.id);\r\n\r\n          if (!card || card.type !== CardType.MAGIC) {\r\n            return acc;\r\n          }\r\n\r\n          return acc += deckCard.amount;\r\n        }, 0),\r\n        trap: deck.cards.reduce((acc, deckCard) => {\r\n          const card = cards.find((card): boolean => deckCard.id === card.id);\r\n\r\n          if (!card || card.type !== CardType.TRAP) {\r\n            return acc;\r\n          }\r\n\r\n          return acc += deckCard.amount;\r\n        }, 0),\r\n        neutral: deck.cards.reduce((acc, deckCard) => {\r\n          const card = cards.find((card): boolean => deckCard.id === card.id);\r\n\r\n          if (!card || card.klass !== CardKlass.NEUTRAL) {\r\n            return acc;\r\n          }\r\n\r\n          return acc += deckCard.amount;\r\n        }, 0),\r\n        solid: deck.cards.reduce((acc, deckCard) => {\r\n          const card = cards.find((card): boolean => deckCard.id === card.id);\r\n\r\n          if (!card || card.klass !== CardKlass.SOLID) {\r\n            return acc;\r\n          }\r\n\r\n          return acc += deckCard.amount;\r\n        }, 0),\r\n        liquid: deck.cards.reduce((acc, deckCard) => {\r\n          const card = cards.find((card): boolean => deckCard.id === card.id);\r\n\r\n          if (!card || card.klass !== CardKlass.LIQUID) {\r\n            return acc;\r\n          }\r\n\r\n          return acc += deckCard.amount;\r\n        }, 0),\r\n        gas: deck.cards.reduce((acc, deckCard) => {\r\n          const card = cards.find((card): boolean => deckCard.id === card.id);\r\n\r\n          if (!card || card.klass !== CardKlass.GAS) {\r\n            return acc;\r\n          }\r\n\r\n          return acc += deckCard.amount;\r\n        }, 0),\r\n        plasma: deck.cards.reduce((acc, deckCard) => {\r\n          const card = cards.find((card): boolean => deckCard.id === card.id);\r\n\r\n          if (!card || card.klass !== CardKlass.PLASMA) {\r\n            return acc;\r\n          }\r\n\r\n          return acc += deckCard.amount;\r\n        }, 0),\r\n      },\r\n      cards: deck.cards.map((deckCard) => {\r\n        const {id, amount} = deckCard;\r\n        const card = cards.find((card): boolean => card.id === id);\r\n        const cardView = cardsView.find((card): boolean => card.id === id);\r\n\r\n        if (!card || !cardView || card.type === CardType.HERO) {\r\n          return {id, name: \"\", type: 1, damage: 0, health: 0, manaCost: 0, amount: 1};\r\n        }\r\n\r\n        const {klass, type, manaCost} = card;\r\n        const {name} = cardView;\r\n\r\n        if (card.type === CardType.MINION) {\r\n          const {health, damage} = card;\r\n          return {id, name, klass, type, health, damage, manaCost, amount};\r\n        } else {\r\n          return {id, name, klass, type, manaCost, amount};\r\n        }\r\n      })\r\n    })),\r\n    skins: $player.skins,\r\n    tutorial: $player.tutorial,\r\n    tasks: $player.tasks,\r\n    rewards: $player.rewards\r\n  }\r\n\r\n  const snapshots = await mongo.$supplySnapshots.find().toArray();\r\n\r\n  return [{lobbyView, gameView, playerView, snapshots}, \"\"];\r\n};\r\n\r\nexport {authenticate};\r\n","import {mongo} from \"app\";\r\n\r\nconst getSocketIds = async (players: string[]): Promise<string[]> => {\r\n  return await mongo\r\n    .$players\r\n    .find({\r\n      name: {\r\n        $in: players\r\n      }\r\n    })\r\n    .project({\r\n      _id: 0,\r\n      socketId: 1\r\n    })\r\n    .map(({socketId}) => socketId)\r\n    .toArray();\r\n};\r\n\r\nexport {getSocketIds};\r\n","import type {PlayerDeck} from \"@som/shared/types/mongo\";\r\n\r\nconst isDeckValid = (playerDeck: PlayerDeck): boolean => {\r\n  // maybe check whether it includes a hero, since that is also invalid?\r\n  // or do this check in saveDeck, and remove this function altogether?\r\n  return playerDeck\r\n    .cards\r\n    .reduce((value, {amount}) => value += amount, 0) === 30;\r\n};\r\n\r\nexport {isDeckValid};\r\n","import {cards} from \"@som/shared/data\";\r\nimport {PlayerStatus, QueueId} from \"@som/shared/enums\";\r\nimport type {Player, PlayerSkin} from \"@som/shared/types/mongo\";\r\n\r\nconst playerTemplate = (\r\n  name: string,\r\n  passwordHash: string,\r\n  address: string\r\n): Player => ({\r\n  socketId: \"\",\r\n  passwordHash,\r\n  address,\r\n  nonce: 0,\r\n  name,\r\n  joinedAt: Date.now(),\r\n  status: PlayerStatus.OFFLINE,\r\n  experience: 0,\r\n  level: 1,\r\n  elo: 500,\r\n  avatarId: 1000,\r\n  bannerId: 2000,\r\n  deckId: 0, // should be called deckIndex, because this is actually index.\r\n  queueId: QueueId.NONE,\r\n  lobbyId: 0,\r\n  gameId: 0,\r\n  gamePopupId: 0,\r\n  games: {\r\n    casual: {won: 0, lost: 0},\r\n    ranked: {won: 0, lost: 0}\r\n  },\r\n  social: {\r\n    friends: [],\r\n    requests: [],\r\n    blocked: []\r\n  },\r\n  tasks: {\r\n    daily: false,\r\n    dailyAlternative: 0,\r\n    weekly: 0,\r\n  },\r\n  rewards: {\r\n    ecr: \"0\",\r\n    ees: \"0\"\r\n  },\r\n  tutorial: {\r\n    deckBuilder: false,\r\n    game: false,\r\n    play: false,\r\n    inventory: false\r\n  },\r\n  decks: [\r\n    {id: 0, klass: 1, name: \"Deck 1\", cards: []},\r\n    {id: 1, klass: 2, name: \"Deck 2\", cards: []},\r\n    {id: 2, klass: 3, name: \"Deck 3\", cards: []},\r\n    {id: 3, klass: 4, name: \"Deck 4\", cards: []}\r\n  ],\r\n  skins: cards.map((card): PlayerSkin => ({\r\n    cardId: card.id,\r\n    skinId: parseInt(`1${card.id > 99 ? `${card.id}` : `0${card.id}`}00`)\r\n  }))\r\n});\r\n\r\nexport {playerTemplate};\r\n","import {authenticate} from \"./authenticate\";\r\nimport {getSocketIds} from \"./getSocketIds\";\r\nimport {isDeckValid} from \"./isDeckValid\";\r\nimport {playerTemplate} from \"./playerTemplate\";\r\n\r\nconst playerHelpers = {authenticate, getSocketIds, isDeckValid, playerTemplate};\r\n\r\nexport {playerHelpers};\r\n","import jsonwebtoken from \"jsonwebtoken\";\r\nimport {playerHelpers} from \"helpers\";\r\nimport type {SocketRequest} from \"@som/shared/types/backend\";\r\n\r\nconst authenticate: SocketRequest = (socket, error): void => {\r\n  const socketId = socket.id;\r\n\r\n  socket.on(\"authenticate\", async (params) => {\r\n    const decoded: any = jsonwebtoken.verify(params.token, \"som\");\r\n    const {name} = decoded;\r\n    const auth = await playerHelpers.authenticate(socketId, name);\r\n    const [data, errorMessage] = auth;\r\n\r\n    if (!data) {\r\n      return error(errorMessage);\r\n    }\r\n\r\n    socket.emit(\"signin\", {...data, token: undefined});\r\n  });\r\n};\r\n\r\nexport {authenticate};\r\n","import {PlayerStatus} from \"@som/shared/enums\";\r\nimport {mongo, server} from \"app\";\r\nimport {playerHelpers} from \"helpers\";\r\nimport type {SocketRequest} from \"@som/shared/types/backend\";\r\n\r\nconst disconnect: SocketRequest = (socket, error): void => {\r\n  const socketId = socket.id;\r\n  const {$players} = mongo;\r\n\r\n  socket.on(\"disconnect\", async () => {\r\n    // console.log(\"DISCONNECT\", socketId);\r\n    const $playerUpdate = await $players.findOneAndUpdate({socketId}, {\r\n      $set: {\r\n        socketId: \"\",\r\n        status: PlayerStatus.OFFLINE\r\n      }\r\n    }, {\r\n      returnDocument: \"after\"\r\n    });\r\n\r\n    console.log($playerUpdate?.status);\r\n\r\n    if (!$playerUpdate) {\r\n      return error(\"Error updating player.\");\r\n    }\r\n\r\n    const {name, status, social} = $playerUpdate;\r\n    const socketIds = await playerHelpers.getSocketIds(social.friends);\r\n    // console.log(name, status);\r\n    server.io.to(socketIds).emit(\"updateFriend\", {name, status});\r\n  });\r\n};\r\n\r\nexport {disconnect};\r\n","import type {SocketRequest} from \"@som/shared/types/backend\";\r\nimport { mongo } from \"app\";\r\nimport { getAddress } from \"ethers\";\r\n\r\nconst getNonce: SocketRequest = (socket, error): void => {\r\n  const {$players} = mongo;\r\n\r\n  socket.on(\"getNonce\", async (params) => {\r\n    const address = getAddress(params.address);\r\n\r\n    if (!address) {\r\n      return error(\"Invalid address.\");\r\n    }\r\n\r\n    const $player = await $players.findOne({address});\r\n\r\n    if (!$player) {\r\n      return error(\"Player not found.\");\r\n    }\r\n\r\n    const {nonce} = $player;\r\n\r\n    socket.emit(\"getNonce\", {nonce});\r\n  })\r\n};\r\n\r\nexport {getNonce};\r\n","import {verifyMessage} from \"ethers\";\r\nimport jsonwebtoken from \"jsonwebtoken\";\r\nimport {mongo} from \"app\";\r\nimport {playerHelpers} from \"helpers\";\r\nimport type {SocketRequest} from \"@som/shared/types/backend\";\r\n\r\nconst signinMetamask: SocketRequest = (socket, error): void => {\r\n  const socketId = socket.id;\r\n  const {$players} = mongo;\r\n\r\n  socket.on(\"signinMetamask\", async (params) => {\r\n    const {address, signature, rememberMe} = params;\r\n    const $player = await $players.findOne({address});\r\n\r\n    if (!$player) {\r\n      return error(\"Account not found.\");\r\n    }\r\n\r\n    const recoveredAddress = verifyMessage(`signin${$player.nonce}`, signature);\r\n\r\n    if (recoveredAddress !== $player.address) {\r\n      return error(\"Invalid signature.\");\r\n    }\r\n\r\n    const $playerUpdate = await $players.updateOne({address}, {\r\n      $set: {\r\n        nonce: $player.nonce + 1\r\n      }\r\n    });\r\n\r\n    if (!$playerUpdate.modifiedCount) {\r\n      return error(\"Error updating account.\");\r\n    }\r\n\r\n    const expiresIn = rememberMe ? \"30d\" : \"2h\";\r\n    const {name} = $player;\r\n    const token = jsonwebtoken.sign({name}, \"som\", {expiresIn});\r\n    const auth = await playerHelpers.authenticate(socketId, $player.name);\r\n    const [data, errorMessage] = auth;\r\n\r\n    if (!data) {\r\n      return error(errorMessage);\r\n    }\r\n\r\n    socket.emit(\"signin\", {...data, token});\r\n  });\r\n};\r\n\r\nexport {signinMetamask};\r\n","import {compare} from \"bcrypt\"\r\nimport jsonwebtoken from \"jsonwebtoken\"\r\nimport {mongo} from \"app\";\r\nimport {playerHelpers} from \"helpers\";\r\nimport type {SocketRequest} from \"@som/shared/types/backend\";\r\n\r\nconst signinPassword: SocketRequest = (socket, error): void => {\r\n  const socketId = socket.id;\r\n  const {$players} = mongo;\r\n\r\n  socket.on(\"signinPassword\", async (params) => {\r\n    const {name, password, rememberMe} = params;\r\n    const $player = await $players.findOne({name});\r\n    console.log($player);\r\n    if (!$player) {\r\n      return error(\"Account not found.\");\r\n    }\r\n\r\n    if (!$player.passwordHash && $player.address) {\r\n      return error(\"Must login through metamask.\");\r\n    }\r\n\r\n    const isCorrectPassword = await compare(password, $player.passwordHash);\r\n\r\n    if (!isCorrectPassword) {\r\n      return error(\"Invalid password.\");\r\n    }\r\n\r\n    const expiresIn = rememberMe ? \"30d\" : \"2h\";\r\n    const token = jsonwebtoken.sign({name}, \"som\", {expiresIn});\r\n    const auth = await playerHelpers.authenticate(socketId, $player.name);\r\n    const [data, errorMessage] = auth;\r\n\r\n    if (!data) {\r\n      return error(errorMessage);\r\n    }\r\n\r\n    socket.emit(\"signin\", {...data, token});\r\n  });\r\n};\r\n\r\nexport {signinPassword};\r\n","import {isAddress, verifyMessage} from \"ethers\";\r\nimport {mongo} from \"app\";\r\nimport {playerHelpers} from \"helpers\";\r\nimport type {SocketRequest} from \"@som/shared/types/backend\";\r\n\r\nconst signupMetamask: SocketRequest = (socket, error): void => {\r\n  const {$players} = mongo;\r\n\r\n  socket.on(\"signupMetamask\", async (params) => {\r\n    const {name, address, signature} = params;\r\n\r\n    if (name.length < 3) {\r\n      return error(\"Name minimum 3 characters.\");\r\n    }\r\n\r\n    if (name.length > 16) {\r\n      return error(\"Name maximum 16 characters.\");\r\n    }\r\n\r\n    if (!isAddress(address)) {\r\n      return error(\"Invalid address\");\r\n    }\r\n\r\n    const $player = await $players.findOne({name});\r\n    const $player2 = await $players.findOne({address});\r\n\r\n    if ($player) {\r\n      return error(\"Name taken.\");\r\n    }\r\n\r\n    if ($player2) {\r\n      return error(\"Address taken.\");\r\n    }\r\n\r\n    const recoveredAddress = verifyMessage(\"signup\", signature);\r\n\r\n    if (recoveredAddress !== address) {\r\n      return error(\"Invalid signature.\");\r\n    }\r\n\r\n    const insertPlayer = await $players.insertOne(\r\n      playerHelpers.playerTemplate(name, \"\", address)\r\n    );\r\n\r\n    if (!insertPlayer.insertedId) {\r\n      return error(\"Error creating account, please try again.\");\r\n    }\r\n\r\n    socket.emit(\"notification\", {\r\n      color: \"success\",\r\n      message: \"Account created successfully.\"\r\n    });\r\n  });\r\n};\r\n\r\nexport {signupMetamask};\r\n","import {hash} from \"bcrypt\";\r\nimport {mongo} from \"app\";\r\nimport {playerHelpers} from \"helpers\";\r\nimport type {SocketRequest} from \"@som/shared/types/backend\";\r\n\r\nconst signupPassword: SocketRequest = (socket, error): void => {\r\n  const {$players} = mongo;\r\n\r\n  socket.on(\"signupPassword\", async (params) => {\r\n    const {name, password} = params;\r\n\r\n    if (name.length < 3) {\r\n      return error(\"Name minimum 3 characters.\");\r\n    }\r\n\r\n    if (name.length > 16) {\r\n      return error(\"Name maximum 16 characters.\");\r\n    }\r\n\r\n    if (password.length < 6) {\r\n      return error(\"Password minimum 6 characters.\");\r\n    }\r\n\r\n    const $player = await $players.findOne({name});\r\n\r\n    if ($player) {\r\n      return error(\"Name taken.\");\r\n    }\r\n\r\n    const passwordHash = await hash(password, 12);\r\n\r\n    const insertPlayer = await $players.insertOne(\r\n      playerHelpers.playerTemplate(name, passwordHash, \"\")\r\n    );\r\n\r\n    if (!insertPlayer.insertedId) {\r\n      return error(\"Error creating player, please try again.\");\r\n    }\r\n\r\n    socket.emit(\"notification\", {\r\n      color: \"success\",\r\n      message: \"Account created successfully.\"\r\n    });\r\n  });\r\n};\r\n\r\nexport {signupPassword};\r\n","import {authenticate} from \"./authenticate\";\r\nimport {disconnect} from \"./disconnect\";\r\nimport {getNonce} from \"./getNonce\";\r\nimport {signinMetamask} from \"./signinMetamask\";\r\nimport {signinPassword} from \"./signinPassword\";\r\nimport {signupMetamask} from \"./signupMetamask\";\r\nimport {signupPassword} from \"./signupPassword\";\r\n\r\nconst auth = [\r\n  authenticate,\r\n  disconnect,\r\n  getNonce,\r\n  signinMetamask,\r\n  signinPassword,\r\n  signupMetamask,\r\n  signupPassword\r\n];\r\n\r\nexport {auth};\r\n","import {mongo, server} from \"app\";\r\nimport {gameHelpers} from \"helpers\";\r\nimport type {SocketRequest} from \"@som/shared/types/backend\";\r\n\r\nconst acceptGame: SocketRequest = (socket, error): void => {\r\n  const socketId = socket.id;\r\n  const {$gamePopups, $players} = mongo;\r\n\r\n  socket.on(\"acceptGame\", async () => {\r\n    const $player = await $players.findOne({socketId});\r\n\r\n    if (!$player) {\r\n      return error(\"Player not found, try relogging.\");\r\n    }\r\n\r\n    const id = $player.gamePopupId;\r\n    const $gamePopup = await $gamePopups.findOne({id});\r\n\r\n    if (!$gamePopup) {\r\n      return error(\"Game popup not found.\");\r\n    }\r\n\r\n    const {type, playerA, playerB} = $gamePopup;\r\n\r\n    if (playerA.name === $player.name) {\r\n      if (playerA.hasAccepted) {\r\n        return error(\"You already accepted this match.\");\r\n      }\r\n\r\n      if (playerB.hasAccepted) {\r\n        const $gamePopupDelete = await $gamePopups.deleteOne({id});\r\n\r\n        if (!$gamePopupDelete.deletedCount) {\r\n          return error(\"Error deleting game popup.\");\r\n        }\r\n\r\n        await gameHelpers.startGame(id, type, playerA.name, playerB.name);\r\n      } else {\r\n        const [$gamePopupUpdate, $playerA, $playerB] = await Promise.all([\r\n          $gamePopups.updateOne({id}, {\r\n            $set: {\r\n              \"playerA.hasAccepted\": true\r\n            }\r\n          }),\r\n          $players.findOne({\r\n            name: playerA.name\r\n          }),\r\n          $players.findOne({\r\n            name: playerB.name\r\n          })\r\n        ]);\r\n\r\n        if (!$gamePopupUpdate.modifiedCount || !$playerA || !$playerB) {\r\n          return error(\"Error fetching players in game popup.\");\r\n        }\r\n\r\n        socket.emit(\"acceptGame\", {who: \"player\"});\r\n        server.io.to($playerB.socketId).emit(\"acceptGame\", {who: \"opponent\"});\r\n      }\r\n    } else if (playerB.name === $player.name) {\r\n      if (playerB.hasAccepted) {\r\n        return error(\"You already accepted this match.\");\r\n      }\r\n\r\n      if (playerA.hasAccepted) {\r\n        const $gamePopupDelete = await $gamePopups.deleteOne({id});\r\n\r\n        if (!$gamePopupDelete.deletedCount) {\r\n          return error(\"Error deleting game popup.\");\r\n        }\r\n\r\n        await gameHelpers.startGame(id, type, playerB.name, playerA.name);\r\n      } else {\r\n        const [$gamePopupUpdate, $playerA, $playerB] = await Promise.all([\r\n          $gamePopups.updateOne({id}, {\r\n            $set: {\r\n              \"playerB.hasAccepted\": true\r\n            }\r\n          }),\r\n          $players.findOne({\r\n            name: playerA.name\r\n          }),\r\n          $players.findOne({\r\n            name: playerB.name\r\n          })\r\n        ]);\r\n\r\n        if (!$gamePopupUpdate.modifiedCount || !$playerA || !$playerB) {\r\n          return error(\"Error fetching players in game popup.\");\r\n        }\r\n\r\n        socket.emit(\"acceptGame\", {who: \"player\"});\r\n        server.io.to($playerA.socketId).emit(\"acceptGame\", {who: \"opponent\"});\r\n      }\r\n    }\r\n  });\r\n};\r\n\r\nexport {acceptGame};\r\n","import {PlayerStatus} from \"@som/shared/enums\";\r\nimport {mongo, server} from \"app\";\r\nimport type {SocketRequest} from \"@som/shared/types/backend\";\r\n\r\nconst closeLobby: SocketRequest = (socket, error): void => {\r\n  const socketId = socket.id;\r\n  const {$players, $lobbies} = mongo;\r\n\r\n  socket.on(\"closeLobby\", async () => {\r\n    const $player = await $players.findOne({socketId});\r\n\r\n    if (!$player) {\r\n      return error(\"Player not found, try relogging.\");\r\n    }\r\n\r\n    const {name, lobbyId} = $player;\r\n\r\n    if (!lobbyId) {\r\n      return error(\"You are not in a lobby.\");\r\n    }\r\n\r\n    const id = lobbyId;\r\n    const $lobby = await $lobbies.findOne({id});\r\n\r\n    if (!$lobby) {\r\n      return error(\"Lobby not found.\");\r\n    }\r\n\r\n    const {host, challengee} = $lobby;\r\n\r\n    if (host.name !== name) {\r\n      return error(\"You are not the lobby host.\");\r\n    }\r\n\r\n    const [$lobbyDelete, $playerUpdate, $challengeeUpdate] = await Promise.all([\r\n      $lobbies.deleteOne({id}),\r\n      $players.updateOne({socketId}, {\r\n        $set: {\r\n          lobbyId: 0,\r\n          status: PlayerStatus.ONLINE\r\n        }\r\n      }),\r\n      challengee && $players.findOneAndUpdate({\r\n        name: challengee.name\r\n      }, {\r\n        $set: {\r\n          lobbyId: 0,\r\n          status: PlayerStatus.ONLINE\r\n        }\r\n      }, {\r\n        returnDocument: \"after\"\r\n      })\r\n    ]);\r\n\r\n    if (!$lobbyDelete.deletedCount) {\r\n      return error(\"Error deleting lobby.\");\r\n    }\r\n\r\n    if (!$playerUpdate.modifiedCount) {\r\n      return error(\"Error updating host.\");\r\n    }\r\n\r\n    if ($challengeeUpdate && !$challengeeUpdate) {\r\n      return error(\"Error updating challengee.\");\r\n    }\r\n\r\n    socket.emit(\"closeLobby\");\r\n\r\n    if (challengee) {\r\n      const $challengee = await $players.findOneAndUpdate({\r\n        name: challengee.name\r\n      }, {\r\n        $set: {\r\n          lobbyId: 0,\r\n          status: PlayerStatus.ONLINE\r\n        }\r\n      }, {\r\n        returnDocument: \"after\"\r\n      });\r\n\r\n      if (!$challengee) {\r\n        return error(\"Error updating challengee.\");\r\n      }\r\n\r\n      server.io.to($challengee.socketId).emit(\"closeLobby\");\r\n    }\r\n  });\r\n};\r\n\r\nexport {closeLobby};\r\n","import {randomInt} from \"crypto\";\r\nimport {PlayerStatus} from \"@som/shared/enums\";\r\nimport {mongo} from \"app\";\r\nimport {playerHelpers} from \"helpers\";\r\nimport type {SocketRequest} from \"@som/shared/types/backend\";\r\nimport type {LobbyView} from \"@som/shared/types/views\";\r\n\r\nconst createLobby: SocketRequest = (socket, error): void => {\r\n  const socketId = socket.id;\r\n  const {$players, $lobbies} = mongo;\r\n\r\n  socket.on(\"createLobby\", async () => {\r\n    const $player = await $players.findOne({socketId});\r\n\r\n    if (!$player) {\r\n      return error(\"Player not found, try relogging.\");\r\n    }\r\n\r\n    if ($player.lobbyId) {\r\n      return error(\"Already in a lobby.\");\r\n    }\r\n\r\n    if ($player.gameId) {\r\n      return error(\"Can't make a lobby while in game.\");\r\n    }\r\n\r\n    if ($player.queueId) {\r\n      return error(\"Can't make a lobby while in queue.\");\r\n    }\r\n\r\n    if (!playerHelpers.isDeckValid($player.decks[$player.deckId])) {\r\n      return error(\"Invalid deck.\");\r\n    }\r\n\r\n    const {name, experience, level, elo, avatarId, bannerId, games} = $player;\r\n    const id = randomInt(1, 1000000001);\r\n\r\n    const lobby: LobbyView = {\r\n      id,\r\n      host: {name, experience, level, elo, avatarId, bannerId, games},\r\n      challengee: undefined\r\n    }\r\n\r\n    const [$lobbyInsert, $playerUpdate] = await Promise.all([\r\n      $lobbies.insertOne(lobby),\r\n      $players.updateOne({socketId}, {\r\n        $set: {\r\n          lobbyId: id,\r\n          status: PlayerStatus.IN_LOBBY\r\n        }\r\n      })\r\n    ]);\r\n\r\n    if (!$lobbyInsert.insertedId) {\r\n      return error(\"Error inserting lobby.\");\r\n    }\r\n\r\n    if (!$playerUpdate.modifiedCount) {\r\n      return error(\"Error updating player.\");\r\n    }\r\n\r\n    socket.emit(\"createLobby\", {lobby});\r\n  });\r\n};\r\n\r\nexport {createLobby};\r\n","import {PlayerStatus} from \"@som/shared/enums\";\r\nimport {mongo, server} from \"app\";\r\nimport type {SocketRequest} from \"@som/shared/types/backend\";\r\n\r\nconst declineGame: SocketRequest = (socket, error): void => {\r\n  const socketId = socket.id;\r\n  const {$gamePopups, $players} = mongo;\r\n  const {io} = server;\r\n\r\n  socket.on(\"declineGame\", async () => {\r\n    const $player = await $players.findOne({socketId});\r\n\r\n    if (!$player) {\r\n      return error(\"Player not found, try relogging.\");\r\n    }\r\n\r\n    const id = $player.gamePopupId;\r\n    const $gamePopup = await $gamePopups.findOne({id});\r\n\r\n    if (!$gamePopup) {\r\n      return error(\"Game popup not found.\");\r\n    }\r\n\r\n    const {playerA, playerB} = $gamePopup;\r\n    const [$gamePopupDelete, $playerA, $playerB] = await Promise.all([\r\n      $gamePopups.deleteOne({id}),\r\n      $players.findOneAndUpdate({\r\n        name: playerA.name\r\n      }, {\r\n        $set: {\r\n          status: PlayerStatus.ONLINE,\r\n          gamePopupId: 0\r\n        }\r\n      }, {\r\n        returnDocument: \"after\"\r\n      }),\r\n      $players.findOneAndUpdate({\r\n        name: playerB.name\r\n      }, {\r\n        $set: {\r\n          status: PlayerStatus.ONLINE,\r\n          gamePopupId: 0\r\n        }\r\n      }, {\r\n        returnDocument: \"after\"\r\n      })\r\n    ]);\r\n\r\n    if (!$gamePopupDelete.deletedCount) {\r\n      return error(\"Failed to delete game popup.\");\r\n    }\r\n\r\n    if (!$playerA) {\r\n      return error(\"Player A in popup not found / updated.\");\r\n    }\r\n\r\n    if (!$playerB) {\r\n      return error(\"Player B in popup not found / updated.\");\r\n    }\r\n\r\n    io.to([\r\n      $playerA.socketId,\r\n      $playerB.socketId\r\n    ]).emit(\"declineGame\");\r\n  });\r\n};\r\n\r\nexport {declineGame};\r\n","import {mongo} from \"app\";\r\nimport type {SocketRequest} from \"@som/shared/types/backend\";\r\n\r\nconst defaultSkin: SocketRequest = (socket, error): void => {\r\n  const socketId = socket.id;\r\n  const {$players} = mongo;\r\n\r\n  socket.on(\"defaultSkin\", async (params) => {\r\n    const $player = await $players.findOne({socketId});\r\n\r\n    if (!$player) {\r\n      return error(\"Player not found, try relogging.\");\r\n    }\r\n\r\n    const {cardId} = params;\r\n    const $playerUpdate = await $players.updateOne({socketId}, {\r\n      $pull: {\r\n        skins: {cardId}\r\n      }\r\n    });\r\n\r\n    if (!$playerUpdate.modifiedCount) {\r\n      return error(\"Failed to set default skin\");\r\n    }\r\n\r\n    socket.emit(\"defaultSkin\", {cardId});\r\n  });\r\n};\r\n\r\nexport {defaultSkin};\r\n","import {mongo} from \"app\";\r\nimport type {SocketRequest} from \"@som/shared/types/backend\";\r\n\r\nconst finishTutorial: SocketRequest = (socket, error): void => {\r\n  const socketId = socket.id;\r\n  const {$players} = mongo;\r\n\r\n  socket.on(\"finishTutorial\", async (params) => {\r\n    const {tutorial} = params;\r\n\r\n    if (\r\n      tutorial !== \"deckBuilder\" &&\r\n      tutorial !== \"inventory\" &&\r\n      tutorial !== \"play\"\r\n    ) {\r\n      return error(\"Invalid tutorial.\");\r\n    }\r\n\r\n    const $playerUpdate = await $players.updateOne({socketId}, {\r\n      $set: {\r\n        [`tutorial.${tutorial}`]: true\r\n      }\r\n    });\r\n\r\n    if (!$playerUpdate.modifiedCount) {\r\n      return error(\"Failed to update player.\");\r\n    }\r\n\r\n    socket.emit(\"finishTutorial\", {tutorial});\r\n  });\r\n};\r\n\r\nexport {finishTutorial};\r\n","import {mongo} from \"app\";\r\nimport type {SocketRequest} from \"@som/shared/types/backend\";\r\n\r\n/**\r\n  * Call the below functionality once per hour / day, sort & store in mongodb.\r\n  * On signin event query the mongodb for sorted leaderboards and emit.\r\n  * Frontend should be able to re-query on leaderboards change (emit to all?).\r\n  * This event should then be removed.\r\n**/\r\n\r\nconst getLeaderboards: SocketRequest = (socket, error): void => {\r\n  const {$leaderboards} = mongo;\r\n\r\n  socket.on(\"getLeaderboards\", async () => {\r\n    const $ = await $leaderboards.findOne({});\r\n\r\n    if (!$) {\r\n      socket.emit(\"getLeaderboards\", {byLevel: [], byElo: []});\r\n    } else {\r\n      const {level, elo} = $;\r\n      socket.emit(\"getLeaderboards\", {byLevel: level, byElo: elo});\r\n    }\r\n  });\r\n};\r\n\r\nexport {getLeaderboards};\r\n","import {PlayerStatus} from \"@som/shared/enums\";\r\nimport {mongo, server} from \"app\";\r\nimport {playerHelpers} from \"helpers\";\r\nimport type {SocketRequest} from \"@som/shared/types/backend\";\r\nimport type {LobbyView} from \"@som/shared/types/views\";\r\n\r\nconst joinLobby: SocketRequest = (socket, error): void => {\r\n  const socketId = socket.id;\r\n  const {$lobbies, $players} = mongo;\r\n\r\n  socket.on(\"joinLobby\", async (params) => {\r\n    const {id} = params;\r\n    const [$player, $lobby] = await Promise.all([\r\n      $players.findOne({socketId}),\r\n      $lobbies.findOne({id})\r\n    ]);\r\n\r\n    if (!$player) {\r\n      return error(\"Player not found.\");\r\n    }\r\n\r\n    if (!$lobby) {\r\n      return error(\"Lobby not found.\");\r\n    }\r\n\r\n    if ($player.lobbyId) {\r\n      return error(\"You are already in a lobby.\");\r\n    }\r\n\r\n    if ($player.gameId) {\r\n      return error(\"You can't join a lobby while in game.\");\r\n    }\r\n\r\n    if ($lobby.challengee) {\r\n      return error(\"Lobby is full.\");\r\n    }\r\n\r\n    if (!playerHelpers.isDeckValid($player.decks[$player.deckId])) {\r\n      return error(\"Invalid deck.\");\r\n    }\r\n\r\n    const {name, experience, level, elo, avatarId, bannerId, games} = $player;\r\n\r\n    const [$lobbyUpdate, $playerUpdate, $playerHost] = await Promise.all([\r\n      $lobbies.findOneAndUpdate({id}, {\r\n        $set: {\r\n          challengee: {name, experience, level, elo, avatarId, bannerId, games}\r\n        }\r\n      }, {\r\n        returnDocument: \"after\"\r\n      }),\r\n      $players.updateOne({socketId}, {\r\n        $set: {\r\n          lobbyId: id,\r\n          status: PlayerStatus.IN_LOBBY\r\n        }\r\n      }),\r\n      $players.findOne({\r\n        name: $lobby.host.name\r\n      })\r\n    ]);\r\n\r\n    if (!$lobbyUpdate) {\r\n      return error(\"Error updating lobby.\");\r\n    }\r\n\r\n    if (!$playerUpdate.modifiedCount) {\r\n     return error(\"Error updating player.\");\r\n    }\r\n\r\n    if (!$playerHost) {\r\n      return error(\"Lobby host not found.\");\r\n    }\r\n\r\n    const {host, challengee} = $lobbyUpdate;\r\n    const lobby: LobbyView = {id, host, challengee};\r\n\r\n    socket.emit(\"joinLobbySender\", {lobby});\r\n    server.io.to($playerHost.socketId).emit(\"joinLobbyReceiver\", {challengee});\r\n  });\r\n};\r\n\r\nexport {joinLobby};\r\n","import {GameType, PlayerStatus, QueueId} from \"@som/shared/enums\";\r\nimport {mongo} from \"app\";\r\nimport {gameHelpers} from \"helpers\";\r\nimport type {SocketRequest} from \"@som/shared/types/backend\";\r\n\r\nconst joinQueue: SocketRequest = (socket, error): void => {\r\n  const {$casualQueuePlayers, $players, $rankedQueuePlayers} = mongo;\r\n  const socketId = socket.id;\r\n\r\n  socket.on(\"joinQueue\", async (params) => {\r\n    const {queueId} = params;\r\n\r\n    if (!(queueId in QueueId) || queueId === QueueId.NONE) {\r\n      return error(\"Invalid queue selected.\");\r\n    }\r\n\r\n    const $player = await $players.findOne({socketId});\r\n\r\n    if (!$player) {\r\n      return error(\"Player not found.\");\r\n    }\r\n\r\n    if ($player.queueId) {\r\n      return error(\"You are already in a queue.\");\r\n    }\r\n\r\n    if ($player.lobbyId) {\r\n      return error(\"Can't join queue while in lobby.\");\r\n    }\r\n\r\n    if ($player.gameId) {\r\n      return error(\"Can't join queue while in game.\");\r\n    }\r\n\r\n    if ($player.gamePopupId) {\r\n      return error(\"Can't join queue while in game popup.\");\r\n    }\r\n\r\n    const {name, level, elo} = $player;\r\n\r\n    if (queueId === QueueId.CASUAL) {\r\n      const opponents = await $casualQueuePlayers.find().toArray();\r\n\r\n      for (const opponent of opponents) { // maybe create an interval and loop every 20 seconds for matchmaking\r\n        if (opponent.level < level - 100 || opponent.level < level + 100) {\r\n          const $casualQueuePlayerDelete = await $casualQueuePlayers.deleteOne({\r\n            name: opponent.name\r\n          });\r\n          const $playerUpdate = await $players.updateOne({\r\n            name: opponent.name\r\n          }, {\r\n            $set: {\r\n              queueId: QueueId.NONE\r\n            }\r\n          });\r\n          const $playerUpdate2 = await $players.updateOne({\r\n            name\r\n          }, {\r\n            $set: {\r\n              queueId: QueueId.NONE\r\n            }\r\n          });\r\n\r\n          if (!$casualQueuePlayerDelete.deletedCount || !$playerUpdate.modifiedCount) {\r\n            return error(\"Failed removing player from queue after match found.\");\r\n          }\r\n\r\n          await gameHelpers.gamePopup(GameType.CASUAL, opponent.name, name);\r\n\r\n          return;\r\n        }\r\n      }\r\n\r\n      const $casualQueuePlayerInsert = await $casualQueuePlayers.insertOne({name, level});\r\n\r\n      if (!$casualQueuePlayerInsert.insertedId) {\r\n        return error(\"Failed to insert player in the queue.\");\r\n      }\r\n    } else if (queueId === QueueId.RANKED) {\r\n      const opponents = await $rankedQueuePlayers.find().toArray();\r\n\r\n      for (const opponent of opponents) {\r\n        if (opponent.elo < elo - 11250 || opponent.elo < elo + 11250) {\r\n          const $casualQueuePlayerDelete = await $rankedQueuePlayers.deleteOne({\r\n            name: opponent.name\r\n          });\r\n          const $playerUpdate = await $players.updateOne({\r\n            name: opponent.name\r\n          }, {\r\n            $set: {\r\n              queueId: QueueId.NONE\r\n            }\r\n          });\r\n          const $playerUpdate2 = await $players.updateOne({\r\n            name\r\n          }, {\r\n            $set: {\r\n              queueId: QueueId.NONE\r\n            }\r\n          });\r\n\r\n          if (!$casualQueuePlayerDelete.deletedCount || !$playerUpdate.modifiedCount) {\r\n            return error(\"Failed removing player from queue after match found.\");\r\n          }\r\n\r\n          await gameHelpers.gamePopup(GameType.RANKED, opponent.name, name);\r\n\r\n          return;\r\n        }\r\n      }\r\n\r\n      const inserted = await $rankedQueuePlayers.insertOne({name, elo});\r\n\r\n      if (!inserted.insertedId) {\r\n        return error(\"Failed to insert player in the queue.\");\r\n      }\r\n    }\r\n\r\n    const $playerUpdate = await $players.updateOne({socketId}, {\r\n      $set: {\r\n        status: PlayerStatus.IN_QUEUE,\r\n        queueId\r\n      }\r\n    })\r\n\r\n    if (!$playerUpdate.modifiedCount) {\r\n      return error(\"Error updating player.\");\r\n    }\r\n\r\n    socket.emit(\"joinQueue\", {queueId});\r\n  });\r\n};\r\n\r\nexport {joinQueue};\r\n","import {PlayerStatus} from \"@som/shared/enums\";\r\nimport {mongo, server} from \"app\";\r\nimport type {SocketRequest} from \"@som/shared/types/backend\";\r\n\r\nconst leaveLobby: SocketRequest = (socket, error): void => {\r\n  const socketId = socket.id;\r\n  const {$lobbies, $players} = mongo;\r\n\r\n  socket.on(\"leaveLobby\", async () => {\r\n    const $player = await $players.findOne({socketId});\r\n\r\n    if (!$player) {\r\n      return error(\"Player not found.\");\r\n    }\r\n\r\n    if (!$player.lobbyId) {\r\n      return error(\"You are not in a lobby.\");\r\n    }\r\n\r\n    const id = $player.lobbyId;\r\n    const $lobby = await $lobbies.findOne({id});\r\n\r\n    if (!$lobby) {\r\n      return error(\"Lobby not found.\");\r\n    }\r\n\r\n    if ($lobby.host.name === $player.name) {\r\n      return error(\"Lobby host can't leave lobby.\");\r\n    }\r\n\r\n    const [$lobbyUpdate, $playerUpdate, $playerHost] = await Promise.all([\r\n      $lobbies.updateOne({id}, {\r\n        $set: {\r\n          challengee: undefined\r\n        }\r\n      }),\r\n      $players.updateOne({socketId}, {\r\n        $set: {\r\n          lobbyId: 0,\r\n          status: PlayerStatus.ONLINE\r\n        }\r\n      }),\r\n      $players.findOne({\r\n        name: $lobby.host.name\r\n      })\r\n    ]);\r\n\r\n    if (!$lobbyUpdate.modifiedCount) {\r\n      return error(\"Error updating lobby.\");\r\n    }\r\n\r\n    if (!$playerUpdate.modifiedCount) {\r\n      return error(\"Error updating player.\");\r\n    }\r\n\r\n    if (!$playerHost) {\r\n      return error(\"Lobby host not found.\");\r\n    }\r\n\r\n    socket.emit(\"leaveLobbySender\");\r\n    server.io.to($playerHost.socketId).emit(\"leaveLobbyReceiver\");\r\n  });\r\n};\r\n\r\nexport {leaveLobby};\r\n","import {PlayerStatus, QueueId} from \"@som/shared/enums\";\r\nimport {mongo} from \"app\";\r\nimport type {SocketRequest} from \"@som/shared/types/backend\";\r\n\r\nconst leaveQueue: SocketRequest = (socket, error): void => {\r\n  const socketId = socket.id;\r\n  const {$casualQueuePlayers, $players, $rankedQueuePlayers} = mongo;\r\n\r\n  socket.on(\"leaveQueue\", async () => {\r\n    const $player = await $players.findOne({socketId});\r\n\r\n    if (!$player) {\r\n      return error(\"Player not found.\");\r\n    }\r\n    if (!$player.queueId) {\r\n      return error(\"You are not in a queue.\");\r\n    }\r\n\r\n    const {name} = $player;\r\n\r\n    if ($player.queueId === QueueId.CASUAL) {\r\n      const [deleteCasualQueuePlayer, updatePlayer] = await Promise.all([\r\n        $casualQueuePlayers.deleteOne({name}),\r\n        $players.updateOne({name}, {\r\n          $set: {\r\n            status: PlayerStatus.ONLINE,\r\n            queueId: 0\r\n          }\r\n        })\r\n      ]);\r\n\r\n      if (!deleteCasualQueuePlayer.deletedCount || !updatePlayer.modifiedCount) {\r\n        return error(\"Error removing player from queue.\");\r\n      }\r\n    } else if ($player.queueId === QueueId.RANKED) {\r\n      const [deleteRankedQueuePlayer, updatePlayer] = await Promise.all([\r\n        $rankedQueuePlayers.deleteOne({name}),\r\n        $players.updateOne({name}, {\r\n          $set: {\r\n            status: PlayerStatus.ONLINE,\r\n            queueId: 0\r\n          }\r\n        })\r\n      ]);\r\n\r\n      if (!deleteRankedQueuePlayer.deletedCount || !updatePlayer.modifiedCount) {\r\n        return error(\"Error removing player from queue.\");\r\n      }\r\n    }\r\n\r\n    socket.emit(\"leaveQueue\");\r\n  });\r\n};\r\n\r\nexport {leaveQueue};\r\n","import {cards} from \"@som/shared/data\";\r\nimport {CardType} from \"@som/shared/enums\";\r\nimport {mongo} from \"app\";\r\nimport type {SocketRequest} from \"@som/shared/types/backend\";\r\n\r\nconst saveDeck: SocketRequest = (socket, error): void => {\r\n  const socketId = socket.id;\r\n  const {$players} = mongo;\r\n\r\n  socket.on(\"saveDeck\", async (params) => {\r\n    const {deck} = params;\r\n\r\n    if (deck.name.length >= 12) {\r\n      return error(\"Maximum 12 characters length allowed for deck name.\");\r\n    }\r\n    if (deck.klass < 1 || deck.klass > 4) { // prevent decimals?\r\n      return error(\"Invalid class.\");\r\n    }\r\n\r\n    const $player = await $players.findOne({socketId});\r\n\r\n    if (!$player) {\r\n      return error(\"Player not found, try relogging.\");\r\n    }\r\n\r\n    for (const deckCard of deck.cards) {\r\n      const card = cards.find((card) => card.id === deckCard.id);\r\n\r\n      if (!card) {\r\n        return error(\"One of the cards in your deck is invalid.\");\r\n      }\r\n\r\n      if (card.type === CardType.HERO) {\r\n        return error(\"Can't add Hero as a deck card.\");\r\n      }\r\n\r\n      if (deckCard.amount > 2 || deckCard.amount < 1) { // prevent decimals?\r\n        return error(\"Invalid amount of same cards added.\");\r\n      }\r\n    }\r\n\r\n    const totalCards = deck.cards.reduce((acc, {amount}) => acc += amount, 0);\r\n\r\n    if (totalCards !== 30) {\r\n      return error(\"Invalid number of cards, should be 30.\");\r\n    }\r\n\r\n    const $playerUpdate = await $players.updateOne({\r\n      socketId,\r\n      \"decks.id\": $player.deckId\r\n    }, {\r\n      $set: {\r\n        \"decks.$\": deck\r\n      }\r\n    });\r\n\r\n    if (!$playerUpdate.modifiedCount) {\r\n      return error(\"Error saving deck (Most likely you made no changes to it).\");\r\n    }\r\n\r\n    socket.emit(\"notification\", {\r\n      color: \"success\",\r\n      message: \"Deck saved successfully.\"\r\n    });\r\n  });\r\n};\r\n\r\nexport {saveDeck};\r\n","import {mongo} from \"app\";\r\nimport type {SocketRequest} from \"@som/shared/types/backend\";\r\n\r\nconst selectDeck: SocketRequest = (socket, error): void => {\r\n  const socketId = socket.id;\r\n  const {$players} = mongo;\r\n\r\n  socket.on(\"selectDeck\", async (params) => {\r\n    const {deckId} = params;\r\n\r\n    if (deckId < 0 || deckId > 3) {\r\n      return error(\"Invalid deck range.\");\r\n    }\r\n\r\n    const $playerUpdate = await $players.updateOne({socketId}, {\r\n      $set: {deckId}\r\n    });\r\n\r\n    if (!$playerUpdate.modifiedCount) {\r\n      return error(\"Failed to set deck id.\");\r\n    }\r\n\r\n    socket.emit(\"selectDeck\", {deckId});\r\n  });\r\n};\r\n\r\nexport {selectDeck};\r\n","import {contracts, mongo} from \"app\";\r\nimport type {SocketRequest} from \"@som/shared/types/backend\";\r\n\r\nconst selectSkin: SocketRequest = (socket, error): void => {\r\n  const socketId = socket.id;\r\n  const {$players} = mongo;\r\n\r\n  socket.on(\"selectSkin\", async (params) => {\r\n    const {cardId, skinId} = params;\r\n\r\n    // if (!item || item.type !== 2) {\r\n    //   return error(\"Selected item isn't a skin.\");\r\n    // }\r\n\r\n    // const balance = await contracts.skins.balanceOf($player.address, id);\r\n\r\n    // if (balance.lte(0)) {\r\n    //   return error(\"You do not own the skin.\");\r\n    // }\r\n\r\n    const $playerUpdate = await $players.updateOne({\r\n      socketId,\r\n      \"skins.cardId\": cardId\r\n    }, {\r\n      $set: {\r\n        \"skins.$\": {cardId, skinId}\r\n      }\r\n    });\r\n\r\n    if (!$playerUpdate.modifiedCount) {\r\n      // most likely failed because skins.$ object not found, in that case add\r\n      // it instead.\r\n      const $playerUpdate2 = await $players.updateOne({socketId}, {\r\n        $addToSet: {\r\n          skins: {cardId, skinId}\r\n        }\r\n      });\r\n\r\n      if (!$playerUpdate2) {\r\n        return error(\"Failed to set the skin.\");\r\n      }\r\n    }\r\n\r\n    socket.emit(\"selectSkin\", {cardId, skinId});\r\n  });\r\n};\r\n\r\nexport {selectSkin};\r\n","import {GameType} from \"@som/shared/enums\";\r\nimport {mongo} from \"app\";\r\nimport {gameHelpers} from \"helpers\";\r\nimport type {SocketRequest} from \"@som/shared/types/backend\";\r\n\r\nconst startCustomGame: SocketRequest = (socket, error): void => {\r\n  const socketId = socket.id;\r\n  const {$lobbies, $players} = mongo;\r\n\r\n  socket.on(\"startCustomGame\", async () => {\r\n    const $player = await $players.findOne({socketId});\r\n\r\n    if (!$player) {\r\n      return error(\"Player not found, please relog.\");\r\n    }\r\n    if (!$player.lobbyId) {\r\n      return error(\"You are not in a lobby.\");\r\n    }\r\n\r\n    const id = $player.lobbyId;\r\n    const $lobby = await $lobbies.findOne({id});\r\n\r\n    if (!$lobby) {\r\n      return error(\"Lobby not found.\");\r\n    }\r\n    if ($player.name !== $lobby.host.name) {\r\n      return error(\"You are not the host.\");\r\n    }\r\n\r\n    const $lobbyDelete = await $lobbies.deleteOne({id});\r\n\r\n    if (!$lobbyDelete.deletedCount) {\r\n      return error(\"Failed to delete lobby.\");\r\n    }\r\n\r\n    const {host, challengee} = $lobby;\r\n\r\n    await gameHelpers.startGame(\r\n      $lobby.id,\r\n      GameType.CUSTOM,\r\n      host.name,\r\n      challengee.name\r\n    );\r\n  });\r\n};\r\n\r\nexport {startCustomGame};\r\n","import {acceptGame} from \"./acceptGame\";\r\nimport {closeLobby} from \"./closeLobby\";\r\nimport {createLobby} from \"./createLobby\";\r\nimport {declineGame} from \"./declineGame\";\r\nimport {defaultSkin} from \"./defaultSkin\";\r\nimport {finishTutorial} from \"./finishTutorial\";\r\nimport {getLeaderboards} from \"./getLeaderboards\";\r\nimport {joinLobby} from \"./joinLobby\";\r\nimport {joinQueue} from \"./joinQueue\";\r\nimport {leaveLobby} from \"./leaveLobby\";\r\nimport {leaveQueue} from \"./leaveQueue\";\r\nimport {saveDeck} from \"./saveDeck\";\r\nimport {selectDeck} from \"./selectDeck\";\r\nimport {selectSkin} from \"./selectSkin\";\r\nimport {startCustomGame} from \"./startCustomGame\";\r\n\r\nconst client = [\r\n  acceptGame,\r\n  closeLobby,\r\n  createLobby,\r\n  declineGame,\r\n  defaultSkin,\r\n  finishTutorial,\r\n  getLeaderboards,\r\n  joinLobby,\r\n  joinQueue,\r\n  leaveLobby,\r\n  leaveQueue,\r\n  saveDeck,\r\n  selectDeck,\r\n  selectSkin,\r\n  startCustomGame\r\n];\r\n\r\nexport {client};\r\n","import {CardType, EffectId} from \"@som/shared/enums\";\r\nimport {gameHelpers} from \"helpers\";\r\nimport type {SocketRequest} from \"@som/shared/types/backend\";\r\nimport type { Animations } from \"@som/shared/types/game\";\r\n\r\nconst attackHero: SocketRequest = (socket, error): void => {\r\n  const socketId = socket.id;\r\n  const {effect} = gameHelpers;\r\n\r\n  socket.on(\"attackHero\", async (params) => {\r\n    const [getGameData, getGameError] = await gameHelpers.getGame(socketId);\r\n\r\n    if (!getGameData) {\r\n      return error(getGameError);\r\n    }\r\n\r\n    const {attacker} = params;\r\n    const {$game, player, opponent} = getGameData;\r\n    const playerMinion = player.field[attacker];\r\n    const opponentHero = opponent.field.hero;\r\n    const animations: Animations = [];\r\n\r\n    if (!playerMinion) {\r\n      return;\r\n    }\r\n\r\n    if (playerMinion.type === CardType.HERO) {\r\n      return error(\"Heroes can't attack\");\r\n    }\r\n\r\n    const fields: [\"hero\", \"a\", \"b\", \"c\", \"d\"] = [\"hero\", \"a\", \"b\", \"c\", \"d\"];\r\n    const selected = fields.find((field) => field === \"hero\");\r\n\r\n    if (!selected) {\r\n      return error(\"Error\");\r\n    }\r\n\r\n    fields.splice(fields.indexOf(selected), 1);\r\n\r\n    for (const field of fields) {\r\n      const fieldCard = opponent.field[field];\r\n\r\n      if (fieldCard) {\r\n        const taunt = fieldCard.buffs.find((buff) => buff.id === EffectId.TAUNT);\r\n        const marksmanship = playerMinion.buffs.find((buff) => buff.id === EffectId.MARKSMANSHIP);\r\n\r\n        if (taunt && !marksmanship) {\r\n          return error(\"Cannot attack this minion, other has taunt.\");\r\n        }\r\n      }\r\n    }\r\n\r\n    if (!playerMinion.canAttack) {\r\n      const blazeBuff = playerMinion.buffs.find(\r\n        (buff): boolean => buff.id === EffectId.BLAZE\r\n      );\r\n\r\n      if (blazeBuff && !blazeBuff.data.hasAttackedTwice) {\r\n        blazeBuff.data.hasAttackedTwice = true;\r\n      } else {\r\n        return error(\"This card can't attack anymore this turn.\");\r\n      }\r\n    } else {\r\n      playerMinion.canAttack = false;\r\n    }\r\n\r\n    let isAttackNegated = false;\r\n\r\n    const {trap} = opponent;\r\n\r\n    const elusiveBuff = playerMinion.buffs.find((buff) => buff.id === EffectId.ELUSIVE);\r\n\r\n    if (trap && trap.effect === EffectId.MIRRORS_EDGE && !elusiveBuff) {\r\n      animations.push(...effect.mirrorsEdge({\r\n        player,\r\n        playerMinion,\r\n        opponent,\r\n        opponentTrap: trap\r\n      }));\r\n\r\n      if (await gameHelpers.isGameOver($game, animations)) { return; }\r\n\r\n      isAttackNegated = true;\r\n    }\r\n\r\n\r\n    if (opponent.trap && opponent.trap.effect === EffectId.RICOCHET && !elusiveBuff) {\r\n      animations.push(...effect.ricochet({\r\n        player,\r\n        playerMinion,\r\n        opponent,\r\n        opponentTrap: opponent.trap\r\n      }));\r\n\r\n      isAttackNegated = true;\r\n    }\r\n\r\n    if (trap && trap.effect === EffectId.RETRIBUTION) {\r\n      gameHelpers.effect.retribution({player, field: attacker});\r\n    }\r\n\r\n    if (trap && trap.effect === EffectId.FROSTBITE) {\r\n      animations.push(...effect.frostbite({\r\n        player,\r\n        playerMinion,\r\n        playerMinionField: attacker,\r\n        opponent,\r\n        opponentTrap: trap\r\n      }));\r\n    }\r\n\r\n    if (trap && trap.effect === EffectId.RUSTY_NEEDLE) {\r\n      gameHelpers.insertDebuff(playerMinion, EffectId.NEUROTOXIN);\r\n    }\r\n\r\n    if (trap && trap.effect === EffectId.NOXIOUS_FUMES) {\r\n      const field = attacker;\r\n      effect.noxiousFumes({opponent: player, minion: playerMinion, field});\r\n    }\r\n\r\n    if (trap && trap.effect === EffectId.EXPLOSIVE) {\r\n      const field = attacker;\r\n      effect.explosive({player, opponent, trap, field});\r\n    }\r\n\r\n    if (playerMinion.health && playerMinion.buffs.find((buff) => buff.id === EffectId.CORROSIVE_TOUCH)) {\r\n      gameHelpers.effect.corrosiveTouch({opponent});\r\n    }\r\n\r\n    if (playerMinion.health && playerMinion.buffs.find((buff) => buff.id === EffectId.RAMPAGE)) {\r\n      effect.rampage({minion: playerMinion});\r\n    }\r\n\r\n    if (playerMinion.health && playerMinion.buffs.find((buff) => buff.id === EffectId.BACKSTAB)) {\r\n      effect.backstab({player, opponent, playerMinion, playerMinionField: attacker});\r\n    }\r\n\r\n    if (!isAttackNegated) {\r\n      animations.push({\r\n        type: \"SHAKE\",\r\n        playerA: player.name,\r\n        playerANumber: 0,\r\n        playerAField: attacker,\r\n        playerB: opponent.name,\r\n        playerBNumber: playerMinion.damage.current,\r\n        playerBField: \"hero\"\r\n      });\r\n\r\n      opponentHero.health.current -= playerMinion.damage.current;\r\n\r\n      animations.push({\r\n        type: \"HEALTH\",\r\n        field: \"hero\",\r\n        name: opponent.name,\r\n        increment: -playerMinion.damage.current\r\n      });\r\n    }\r\n\r\n    if (await gameHelpers.isGameOver($game, animations)) {\r\n      return;\r\n    }\r\n\r\n    await gameHelpers.attackMinionSave($game, animations);\r\n  });\r\n};\r\n\r\nexport {attackHero};\r\n","import {CardKlass, EffectId} from \"@som/shared/enums\";\r\nimport {Animations} from \"@som/shared/types/game\";\r\nimport {gameHelpers} from \"helpers\";\r\nimport type {SocketRequest} from \"@som/shared/types/backend\";\r\nimport { Field } from \"@som/shared/types/mongo\";\r\n\r\nconst attackMinion: SocketRequest = (socket, error): void => {\r\n  const socketId = socket.id;\r\n  const {effect} = gameHelpers;\r\n\r\n  socket.on(\"attackMinion\", async (params) => {\r\n    const [getGameData, getGameError] = await gameHelpers.getGame(socketId);\r\n\r\n    if (!getGameData) {\r\n      return error(getGameError);\r\n    }\r\n\r\n    const {attacked, attacker} = params;\r\n\r\n    if (attacked === \"hero\" || attacker === \"hero\") {\r\n      return error(\"Cannot attack hero.\");\r\n    }\r\n\r\n    const {$game, player, opponent} = getGameData;\r\n    const playerMinion = player.field[attacker];\r\n    const opponentMinion = opponent.field[attacked];\r\n    const opponentTrap = opponent.trap;\r\n    let animations: Animations = [];\r\n\r\n    if (!playerMinion) {\r\n      return error(\"Players minion not found.\");\r\n    }\r\n\r\n    if (!opponentMinion) {\r\n      return error(\"Opponents minion not found.\");\r\n    }\r\n\r\n    // ---------------- TAUNT CHECK ----------------------\r\n    const fields: [\"hero\", \"a\", \"b\", \"c\", \"d\"] = [\"hero\", \"a\", \"b\", \"c\", \"d\"];\r\n    const selected = fields.find((field) => field === attacked);\r\n\r\n    if (!selected) {\r\n      return error(\"Error\");\r\n    }\r\n\r\n    fields.splice(fields.indexOf(selected), 1);\r\n\r\n    let tauntFields = [];\r\n    for (const field of fields) {\r\n      const fieldCard = opponent.field[field];\r\n\r\n      if (fieldCard) {\r\n        const taunt = fieldCard.buffs.find((buff) => buff.id === EffectId.TAUNT);\r\n\r\n        if (taunt) {\r\n          tauntFields.push(field);\r\n        }\r\n      }\r\n    }\r\n\r\n    console.log(!tauntFields.includes(attacked));\r\n    // tauntFields = [a, c]\r\n    if (tauntFields.length) {\r\n      const marksmanship = playerMinion.buffs.find((buff) => buff.id === EffectId.MARKSMANSHIP);\r\n\r\n      if (tauntFields.includes(attacked)) {\r\n        return error(\"Cannot attack this minion, other has taunt.\");\r\n      }\r\n    }\r\n    // -----------------------------------------------------\r\n\r\n    if (\r\n      opponentMinion.buffs.find((buff) => buff.id === EffectId.STEALTH) &&\r\n      !playerMinion.buffs.find((buff) => buff.id === EffectId.SHADOWSTRIKE)\r\n    ) {\r\n      return error(\"Can't attack minion with stealth.\");\r\n    }\r\n\r\n\r\n    if (!playerMinion.canAttack) {\r\n      const blazeBuff = playerMinion.buffs.find(\r\n        (buff): boolean => buff.id === EffectId.BLAZE\r\n      );\r\n\r\n      if (blazeBuff && !blazeBuff.data.hasAttackedTwice) {\r\n        blazeBuff.data.hasAttackedTwice = true;\r\n      } else {\r\n        return error(\"This card can't attack anymore this turn.\");\r\n      }\r\n    } else {\r\n      playerMinion.canAttack = false;\r\n    }\r\n\r\n\r\n    let isAttackNegated = false;\r\n\r\n    const elusiveBuff = playerMinion.buffs.find((buff) => buff.id === EffectId.ELUSIVE);\r\n\r\n    if (opponentTrap && opponentTrap.effect === EffectId.MIRRORS_EDGE && !elusiveBuff) {\r\n      animations.push(\r\n        ...effect.mirrorsEdge({player, playerMinion, opponent, opponentTrap})\r\n      );\r\n\r\n      if (await gameHelpers.isGameOver($game, animations)) { return; }\r\n\r\n      isAttackNegated = true;\r\n    }\r\n\r\n    if (opponentTrap && opponentTrap.effect === EffectId.RICOCHET && !elusiveBuff) {\r\n      animations.push(\r\n        ...effect.ricochet({player, playerMinion, opponent, opponentMinionField: attacked, opponentTrap})\r\n      );\r\n\r\n      isAttackNegated = true;\r\n    }\r\n\r\n    if (opponentTrap && opponentTrap.effect === EffectId.FROSTBITE) {\r\n      animations.push(...effect.frostbite({\r\n        player,\r\n        playerMinion,\r\n        playerMinionField: attacker,\r\n        opponent,\r\n        opponentTrap\r\n      }));\r\n    }\r\n\r\n    if (opponentTrap && opponentTrap.effect === EffectId.RUSTY_NEEDLE) {\r\n      gameHelpers.insertDebuff(playerMinion, EffectId.NEUROTOXIN);\r\n    }\r\n\r\n    if (opponentTrap && opponentTrap.effect === EffectId.NOXIOUS_FUMES) {\r\n      animations.push(...effect.noxiousFumes({\r\n        player,\r\n        playerMinion,\r\n        playerMinionField: attacker,\r\n        opponent,\r\n        opponentTrap\r\n      }));\r\n    }\r\n\r\n    if (opponentTrap && opponentTrap.effect === EffectId.EXPLOSIVE) {\r\n      animations.push(...effect.explosive({\r\n        player,\r\n        playerMinionField: attacker,\r\n        opponent,\r\n        opponentTrap\r\n      }));\r\n    }\r\n\r\n    if (opponentTrap && opponentTrap.effect === EffectId.CONSTRICTION) {\r\n      animations.push(\r\n        ...effect.constriction({player, playerMinion, opponent, opponentTrap, playerMinionField: attacker})\r\n      );\r\n    }\r\n\r\n\r\n    if (playerMinion.buffs.find((buff) => buff.id === EffectId.POISONOUS_TOUCH)) {\r\n      gameHelpers.insertDebuff(opponentMinion, EffectId.NEUROTOXIN);\r\n    }\r\n    if (playerMinion.buffs.find((buff) => buff.id === EffectId.CORROSIVE_TOUCH)) {\r\n      gameHelpers.effect.corrosiveTouch({opponent});\r\n      if (await gameHelpers.isGameOver($game, animations)) {\r\n        return;\r\n      }\r\n    }\r\n    if (playerMinion.buffs.find((buff) => buff.id === EffectId.OVERPOWER)) {\r\n      if (playerMinion.damage > opponentMinion.health) {\r\n        gameHelpers.effect.overpower({opponent, damage: playerMinion.damage.current - opponentMinion.health.current});\r\n        if (await gameHelpers.isGameOver($game, animations)) {\r\n          return;\r\n        }\r\n      }\r\n    }\r\n\r\n    if (opponentMinion.buffs.find((buff) => buff.id === EffectId.POISONOUS_TOUCH)) {\r\n      gameHelpers.insertDebuff(playerMinion, EffectId.NEUROTOXIN);\r\n    }\r\n    if (opponentMinion.buffs.find((buff) => buff.id === EffectId.CORROSIVE_TOUCH)) {\r\n      gameHelpers.effect.corrosiveTouch({opponent: player});\r\n      if (await gameHelpers.isGameOver($game, animations)) {\r\n        return;\r\n      }\r\n    }\r\n    if (opponentMinion.buffs.find((buff) => buff.id === EffectId.OVERPOWER)) {\r\n      if (opponentMinion.damage > playerMinion.health) {\r\n        gameHelpers.effect.overpower({opponent, damage: opponentMinion.damage.current - playerMinion.health.current});\r\n        if (await gameHelpers.isGameOver($game, animations)) {\r\n          return;\r\n        }\r\n      }\r\n    }\r\n\r\n    if (!isAttackNegated) {\r\n      // shake should play both animations simultaneously\r\n      animations.push({\r\n        type: \"SHAKE\",\r\n        playerA: player.name,\r\n        playerANumber: opponentMinion.damage.current,\r\n        playerAField: attacker,\r\n        playerB: opponent.name,\r\n        playerBNumber: playerMinion.damage.current,\r\n        playerBField: attacked\r\n      });\r\n\r\n      animations.push(...gameHelpers.deductHealth(player, playerMinion, opponentMinion.damage.current, attacker));\r\n      animations.push(...gameHelpers.deductHealth(opponent, opponentMinion, playerMinion.damage.current, attacked));\r\n    }\r\n\r\n    if (playerMinion.health.current <= 0 || (playerMinion.health.current === 1 && opponentMinion.buffs.find((buff) => buff.id === EffectId.EXECUTE))) {\r\n      if (player.trap && player.trap.effect === EffectId.LAST_STAND) {\r\n        // gameHelpers.effect.lastStand({minion: playerMinion, opponent: player, trap: player.trap})\r\n      } else {\r\n        const hasAcidicDeathBuff = playerMinion.buffs.find((buff) => buff.id === EffectId.ACIDIC_DEATH);\r\n        const hasSelfDescturctDebuff = playerMinion.debuffs.find((debuff) => debuff.id === EffectId.SELF_DESTRUCT);\r\n        if (player.trap && player.trap.effect === EffectId.REFLECTION) {\r\n          gameHelpers.effect.reflection({player, opponent, trap: player.trap});\r\n        }\r\n\r\n        animations.push(...gameHelpers.moveToGraveyard(player, playerMinion, attacker));\r\n\r\n        if (hasSelfDescturctDebuff) {\r\n          gameHelpers.effect.selfDestruct({player});\r\n          if (await gameHelpers.isGameOver($game, animations)) {\r\n            return;\r\n          }\r\n        }\r\n\r\n        if (hasAcidicDeathBuff) {\r\n          effect.acidicDeath({player, opponent});\r\n        }\r\n\r\n        (Object.keys(player.field) as Array<keyof typeof player.field>).forEach((key) => {\r\n          const minion = player.field[key];\r\n          if (!minion) { return; }\r\n          if (minion.buffs.find((buff) => buff.id === EffectId.RISING_FURY)) {\r\n            gameHelpers.effect.risingFury({minionCard: minion});\r\n          }\r\n          if (minion.buffs.find((buff) => buff.id === EffectId.SACRIFICE)) {\r\n            if (playerMinion.klass === CardKlass.LIQUID) {\r\n              const minion = gameHelpers.getRandomMinion(player);\r\n              if (!minion) {return; }\r\n              minion.health.current += 3;\r\n            }\r\n          }\r\n        });\r\n      }\r\n    } else {\r\n      if (playerMinion.buffs.find((buff) => buff.id === EffectId.RAMPAGE)) {\r\n        effect.rampage({minion: playerMinion});\r\n      }\r\n    }\r\n\r\n    if (opponentMinion.health.current <= 0 || (opponentMinion.health.current === 1 && playerMinion.buffs.find((buff) => buff.id === EffectId.EXECUTE))) {\r\n      if (opponent.trap && opponent.trap.effect === EffectId.LAST_STAND) {\r\n        animations.push(\r\n          ...gameHelpers.effect.lastStand({\r\n            opponent,\r\n            opponentMinion,\r\n            opponentMinionField: attacked,\r\n            opponentTrap: opponent.trap\r\n          })\r\n        );\r\n      } else {\r\n        const hasAcidicDeathBuff = playerMinion.buffs.find((buff) => buff.id === EffectId.ACIDIC_DEATH);\r\n        const hasSelfDescturctDebuff = playerMinion.debuffs.find((debuff) => debuff.id === EffectId.SELF_DESTRUCT);\r\n        if (opponent.trap && opponent.trap.effect === EffectId.REFLECTION) {\r\n          gameHelpers.effect.reflection({player: opponent, opponent: player, trap: opponent.trap});\r\n        }\r\n\r\n        animations.push(...gameHelpers.moveToGraveyard(opponent, opponentMinion, attacked));\r\n\r\n        if (hasSelfDescturctDebuff) {\r\n          gameHelpers.effect.selfDestruct({player});\r\n          if (await gameHelpers.isGameOver($game, animations)) {\r\n            return;\r\n          }\r\n        }\r\n\r\n        if (hasAcidicDeathBuff) {\r\n          effect.acidicDeath({player, opponent});\r\n        }\r\n      }\r\n\r\n      (Object.keys(opponent.field) as Array<keyof typeof opponent.field>).forEach((key) => {\r\n        const minion = opponent.field[key];\r\n        if (!minion) { return; }\r\n        if (minion.buffs.find((buff) => buff.id === EffectId.RISING_FURY)) {\r\n          gameHelpers.effect.risingFury({minionCard: minion});\r\n        }\r\n        if (minion.buffs.find((buff) => buff.id === EffectId.SACRIFICE)) {\r\n          if (opponentMinion.klass === CardKlass.LIQUID) {\r\n            const minion = gameHelpers.getRandomMinion(opponent);\r\n            if (!minion) {return; }\r\n            minion.health.current += 3;\r\n          }\r\n        }\r\n      });\r\n    } else {\r\n      if (opponentMinion.buffs.find((buff) => buff.id === EffectId.RAMPAGE)) {\r\n        effect.rampage({minion: opponentMinion});\r\n      }\r\n    }\r\n\r\n    // $game.battleLogs.push(attacked, attacker, playerMinion.id, opponentMinion.id);\r\n\r\n    await gameHelpers.attackMinionSave($game, animations);\r\n  });\r\n};\r\n\r\nexport {attackMinion};\r\n","import {CardType, EffectId} from \"@som/shared/enums\";\r\nimport {gameHelpers} from \"helpers\";\r\nimport type {SocketRequest} from \"@som/shared/types/backend\";\r\nimport type {Animations} from \"@som/shared/types/game\";\r\n\r\nconst endTurn: SocketRequest = (socket, error): void => {\r\n  const socketId = socket.id;\r\n\r\n  socket.on(\"endTurn\", async () => {\r\n    const [getGameData, getGameError] = await gameHelpers.getGame(socketId);\r\n    const animations: Animations = [];\r\n\r\n    if (!getGameData) {\r\n      return error(getGameError);\r\n    }\r\n\r\n    const {$game, player, opponent} = getGameData;\r\n\r\n    const card = opponent.deck.pop();\r\n\r\n    if (!card) {\r\n      return await gameHelpers.endGame($game.id, player.name);\r\n    }\r\n\r\n    opponent.hand.push(card);\r\n\r\n    const manaDelta = 10 - opponent.field.hero.mana.current\r\n    player.field.hero.mana.current = 10;\r\n\r\n    animations.push({\r\n      type: \"MANA_CAPACITY\",\r\n      field: \"hero\",\r\n      name: opponent.name,\r\n      increment: manaDelta\r\n    });\r\n\r\n    const playerMinionFields = Object.keys(player.field) as Array<keyof typeof player.field>;\r\n\r\n    playerMinionFields.forEach((field) => {\r\n      const minion = player.field[field];\r\n\r\n      if (!minion || minion.type === CardType.HERO || field === \"hero\") { return; }\r\n\r\n      minion.canAttack = true;\r\n      animations.push(...gameHelpers.effect.blaze({player, playerMinion: minion, playerMinionField: field}));\r\n\r\n      if (minion.buffs.find((buff) => buff.id === EffectId.REGENERATION)) {\r\n        gameHelpers.effect.regeneration({player});\r\n      }\r\n    });\r\n\r\n    $game.currentPlayer = opponent.name;\r\n    $game.currentTurn += 1;\r\n\r\n    await gameHelpers.attackMinionSave($game, animations);\r\n  });\r\n};\r\n\r\nexport {endTurn};\r\n","import {CardType, EffectId, LogType} from \"@som/shared/enums\";\r\nimport {gameHelpers} from \"helpers\";\r\nimport type {SocketRequest} from \"@som/shared/types/backend\";\r\nimport type {Animations} from \"@som/shared/types/game\";\r\n\r\nconst playMagic: SocketRequest = (socket, error): void => {\r\n  const socketId = socket.id;\r\n  const {effect} = gameHelpers;\r\n\r\n  socket.on(\"playMagic\", async (params) => {\r\n    const [getGameData, getGameError] = await gameHelpers.getGame(socketId);\r\n    const animations: Animations = [];\r\n\r\n    if (!getGameData) {\r\n      return error(getGameError);\r\n    }\r\n\r\n    const {gid, field, target} = params;\r\n    const {$game, player, opponent} = getGameData;\r\n\r\n    // if (field && opponent.field[field]?.buffs.find((buff) => buff.id === EffectId.ELUSIVE)) {\r\n    //   return error(\"Selected card has Elusive buff.\");\r\n    // }\r\n\r\n    const card = player.hand.find((card) => card.gid === gid);\r\n\r\n    if (!card) {\r\n      return error(\"Card not found in hand.\");\r\n    }\r\n\r\n    if (card.type !== CardType.MAGIC) {\r\n      return error(\"Selected card is not Magic.\");\r\n    }\r\n\r\n    if (card.manaCost.current > player.field.hero.mana.current) {\r\n      return error(\"Not enough mana.\");\r\n    }\r\n\r\n    player.field.hero.mana.current -= card.manaCost.current;\r\n    player.hand.splice(player.hand.indexOf(card), 1);\r\n    player.graveyard.push(card);\r\n\r\n    animations.push({\r\n      type: \"MAGIC\",\r\n      name: player.name,\r\n      card: card\r\n    }, {\r\n      type: \"MANA_CAPACITY\",\r\n      field: \"hero\",\r\n      name: player.name,\r\n      increment: -card.manaCost.current\r\n    });\r\n\r\n    let logText = \"\";\r\n\r\n    const {trap} = opponent;\r\n\r\n    if (trap && trap.effect === EffectId.SILENCE) {\r\n      animations.push(...effect.silence({opponent, trap}));\r\n    } else {\r\n      if (card.effect === EffectId.REBIRTH) {\r\n        if (!target) {\r\n          return error(\"Target for revival not specified.\");\r\n        }\r\n\r\n        if (!field) {\r\n          return error(\"Field for Special Summon not specified.\");\r\n        }\r\n\r\n        if (field === \"hero\") {\r\n          return error(\"Cannot Summon on this field.\");\r\n        }\r\n\r\n        if (player.field[field]) {\r\n          return error(`Minion already exists on the field ${field}.`);\r\n        }\r\n\r\n        const toRevive = player.graveyard.find((card) => card.gid === target);\r\n\r\n        if (!toRevive) {\r\n          return error(\"Card with the given ID not found in the graveyard.\");\r\n        }\r\n\r\n        if (toRevive.type !== CardType.MINION) {\r\n          return error(\"Selected card for revival must be a Minion.\");\r\n        }\r\n\r\n        if (toRevive.effect === EffectId.ELUSIVE) {\r\n          return error(\"Rebirth negated.\");\r\n        }\r\n\r\n        animations.push(...effect.rebirth({player, minion: toRevive, field}));\r\n      }\r\n\r\n      if (card.effect === EffectId.DIMINISH) {\r\n        if (!field) {\r\n          return error(\"Field for Effect not specified.\");\r\n        }\r\n\r\n        if (field === \"hero\") {\r\n          return error(\"Cannot Summon on this field.\");\r\n        }\r\n\r\n        const card = opponent.field[field];\r\n\r\n        if (!card) {\r\n          return error(`Minion doesn't exist on the field ${field}.`);\r\n        }\r\n\r\n        const elusive = card.buffs.find(\r\n          (buff): boolean => buff.id === EffectId.ELUSIVE\r\n        );\r\n\r\n        if (elusive) {\r\n          return error(\"Diminish negated.\");\r\n        }\r\n\r\n        animations.push(...effect.diminish({\r\n          opponent,\r\n          opponentMinion: card,\r\n          opponentMinionField: field\r\n        }));\r\n      }\r\n\r\n      if (card.effect === EffectId.RELOAD) {\r\n        const drawnCard = player.deck.pop();\r\n\r\n        if (!drawnCard) {\r\n          return error(\"You have no cards remaining to draw.\");\r\n        }\r\n\r\n        effect.reload({player, drawnCard});\r\n      }\r\n\r\n      if (card.effect === EffectId.VALOR) {\r\n        animations.push(...effect.valor({player, opponent}));\r\n\r\n        if (await gameHelpers.isGameOver($game, animations)) {\r\n          return;\r\n        }\r\n      }\r\n\r\n      if (card.effect === EffectId.SHELL) {\r\n        animations.push(...effect.shell({player}));\r\n      }\r\n\r\n      if (card.effect === EffectId.FORTITUDE) {\r\n        if (!field) {\r\n          return error(\"Field not specified.\");\r\n        }\r\n\r\n        if (field === \"hero\") {\r\n          return error(\"Hero not allowed.\");\r\n        }\r\n\r\n        const playerMinion = player.field[field];\r\n\r\n        if (!playerMinion) {\r\n          return error(`No minion on the ${field} field.`);\r\n        }\r\n\r\n        const playerMinionField = field;\r\n\r\n        animations.push(\r\n          ...effect.fortitude({player, playerMinion, playerMinionField})\r\n        );\r\n      }\r\n\r\n\r\n\r\n      // IN DEVELOPMENT!\r\n      if (card.effect === EffectId.ELECTRO_SHOCK) {\r\n        const [success, message] = effect.electroShock({player, opponent});\r\n        if (!success) {\r\n          return error(message);\r\n        } else {\r\n          logText = message;\r\n        }\r\n      }\r\n\r\n      if (card.effect === EffectId.CLEANSE) {\r\n        const [success, message] = effect.cleanse({player, field});\r\n        if (!success) {\r\n          return error(message);\r\n        } else {\r\n          logText = message;\r\n        }\r\n      }\r\n\r\n      if (card.effect === EffectId.TIDAL_WAVE) {\r\n        const [success, message] = effect.tidalWave({player});\r\n        if (!success) {\r\n          return error(message);\r\n        } else {\r\n          logText = message;\r\n        }\r\n      }\r\n\r\n      if (card.effect === EffectId.ACID_RAIN) {\r\n        const [success, message] = effect.acidRain({opponent});\r\n        if (!success) {\r\n          return error(message);\r\n        } else {\r\n          logText = message;\r\n        }\r\n      }\r\n\r\n      if (card.effect === EffectId.SMOKE_BOMB) {\r\n        const [success, message] = effect.smokeBomb({player});\r\n        if (!success) {\r\n          return error(message);\r\n        } else {\r\n          logText = message;\r\n        }\r\n      }\r\n\r\n      if (card.effect === EffectId.CONTAMINATED_AIR) {\r\n        const [success, message] = effect.contaminatedAir({player, opponent});\r\n        if (!success) {\r\n          return error(message);\r\n        } else {\r\n          logText = message;\r\n        }\r\n      }\r\n\r\n      if (card.effect === EffectId.IGNITE) {\r\n        const [success, message] = effect.ignite({player, opponent, field});\r\n        if (!success) {\r\n          return error(message);\r\n        } else {\r\n          logText = message;\r\n        }\r\n      }\r\n\r\n      if (card.effect === EffectId.CORRUPTION) {\r\n        const [success, message] = effect.corruption({player, field});\r\n        if (!success) {\r\n          return error(message);\r\n        } else {\r\n          logText = message;\r\n        }\r\n      }\r\n\r\n      if (card.effect === EffectId.HYSTERIA) {\r\n        const [success, message] = effect.hysteria({player, field});\r\n        if (!success) {\r\n          return error(message);\r\n        } else {\r\n          logText = message;\r\n        }\r\n      }\r\n    }\r\n\r\n    $game.gameLogs.push({\r\n      type: LogType.MAGIC,\r\n      player: player.name,\r\n      magicId: card.id\r\n    });\r\n\r\n    await gameHelpers.attackMinionSave($game, animations);\r\n  });\r\n};\r\n\r\nexport {playMagic};\r\n","import {CardType, EffectId, LogType} from \"@som/shared/enums\";\r\nimport {gameHelpers} from \"helpers\";\r\nimport type {SocketRequest} from \"@som/shared/types/backend\";\r\nimport { Animations } from \"@som/shared/types/game\";\r\n\r\nconst playMinion: SocketRequest = (socket, error): void => {\r\n  const socketId = socket.id;\r\n  const {effect} = gameHelpers;\r\n\r\n  socket.on(\"playMinion\", async (params) => {\r\n    const animations: Animations = [];\r\n    const [getGameData, getGameError] = await gameHelpers.getGame(socketId);\r\n\r\n    if (!getGameData) {\r\n      return error(getGameError);\r\n    }\r\n\r\n    const {$game, player, opponent} = getGameData;\r\n    const {field, gid} = params;\r\n\r\n    if (player.field[field]) {\r\n      return error(\"Field already inhibits a Minion.\");\r\n    }\r\n\r\n    const card = player.hand.find((card) => card.gid === gid);\r\n\r\n    if (!card) {\r\n      return error(\"Card not found in hand.\");\r\n    }\r\n\r\n    if (card.type !== CardType.MINION) {\r\n      return error(\"Selected card is not Minion.\");\r\n    }\r\n\r\n    if (card.manaCost.current > player.field.hero.mana.current) {\r\n      return error(\"Not enough mana.\");\r\n    }\r\n\r\n    player.field.hero.mana.current -= card.manaCost.current;\r\n    player.field[field] = card;\r\n\r\n    const minion = player.field[field];\r\n\r\n    if (!minion) {\r\n      return error(\"Error summoning card.\");\r\n    }\r\n\r\n    player.hand.splice(player.hand.indexOf(card), 1);\r\n\r\n    animations.push({\r\n      type: \"SUMMON\",\r\n      name: player.name,\r\n      field,\r\n      minion,\r\n      necromancyFixPositive: false\r\n    }, {\r\n      type: \"MANA_CAPACITY\",\r\n      increment: -minion.manaCost.current,\r\n      field: \"hero\",\r\n      name: player.name\r\n    });\r\n\r\n    const {trap} = opponent;\r\n    const isElusive = minion.effect === EffectId.ELUSIVE;\r\n\r\n    // Step 1: Insert buffs / debuffs\r\n    // Step 2: Check for on summon trap cards\r\n    // Step 3: Trigger on summon effects\r\n\r\n    // [1] INSERT BUFFS / DEBUFFS\r\n    switch (minion.effect) {\r\n      case EffectId.BLAZE: // Neutral\r\n        const hasAttackedTwice = true;\r\n        gameHelpers.insertBuff(minion, EffectId.BLAZE, {hasAttackedTwice});\r\n        animations.push({\r\n          type: \"FLOATING_TEXT\",\r\n          field,\r\n          name: player.name,\r\n          text: \"BLAZE\"\r\n        });\r\n        break;\r\n      case EffectId.ELUSIVE:\r\n        gameHelpers.insertBuff(minion, EffectId.ELUSIVE);\r\n        animations.push({\r\n          type: \"FLOATING_TEXT\",\r\n          field,\r\n          name: player.name,\r\n          text: \"ELUSIVE\"\r\n        });\r\n        break;\r\n      case EffectId.REVENGE:\r\n        gameHelpers.insertBuff(minion, EffectId.REVENGE);\r\n        animations.push({\r\n          type: \"FLOATING_TEXT\",\r\n          field,\r\n          name: player.name,\r\n          text: \"REVENGE\"\r\n        });\r\n        break;\r\n      case EffectId.UNITY: // Solid\r\n        gameHelpers.insertBuff(minion, EffectId.UNITY);\r\n        animations.push({\r\n          type: \"FLOATING_TEXT\",\r\n          field,\r\n          name: player.name,\r\n          text: \"UNITY\"\r\n        });\r\n        break;\r\n      case EffectId.UNBREAKABLE:\r\n        gameHelpers.insertBuff(minion, EffectId.UNBREAKABLE);\r\n        animations.push({\r\n          type: \"FLOATING_TEXT\",\r\n          field,\r\n          name: player.name,\r\n          text: \"UNBREAKABLE\"\r\n        });\r\n        break;\r\n      case EffectId.PROTECTOR:\r\n        gameHelpers.insertBuff(minion, EffectId.TAUNT);\r\n        animations.push({\r\n          type: \"FLOATING_TEXT\",\r\n          field,\r\n          name: player.name,\r\n          text: \"TAUNT\"\r\n        });\r\n        break;\r\n      case EffectId.RISING_FURY: // Liquid\r\n        gameHelpers.insertBuff(minion, EffectId.RISING_FURY);\r\n        break;\r\n      case EffectId.REGENERATION:\r\n        gameHelpers.insertBuff(minion, EffectId.REGENERATION);\r\n        break;\r\n      case EffectId.SACRIFICE:\r\n        gameHelpers.insertBuff(minion, EffectId.SACRIFICE);\r\n        break;\r\n      case EffectId.SHADOWSTRIKE:\r\n        gameHelpers.insertBuff(minion, EffectId.SHADOWSTRIKE);\r\n        break;\r\n      case EffectId.LEECH:\r\n        gameHelpers.insertBuff(minion, EffectId.LEECH);\r\n        break;\r\n      case EffectId.RESILIENT:\r\n        gameHelpers.insertBuff(minion, EffectId.RESILIENT);\r\n        break;\r\n      // Gas\r\n      case EffectId.ACIDIC_DEATH:\r\n        gameHelpers.insertBuff(minion, EffectId.ACIDIC_DEATH);\r\n        break;\r\n      case EffectId.STEALTH:\r\n        gameHelpers.insertBuff(minion, EffectId.STEALTH);\r\n        break;\r\n      case EffectId.POISONOUS_TOUCH:\r\n        gameHelpers.insertBuff(minion, EffectId.POISONOUS_TOUCH);\r\n        break;\r\n      case EffectId.CORROSIVE_TOUCH:\r\n        gameHelpers.insertBuff(minion, EffectId.CORROSIVE_TOUCH);\r\n        break;\r\n      // ---------- [ P L A S M A ] ----------\r\n      case EffectId.SELF_DESTRUCT:\r\n        gameHelpers.insertBuff(minion, EffectId.SELF_DESTRUCT);\r\n        break;\r\n      case EffectId.RAMPAGE:\r\n        gameHelpers.insertBuff(minion, EffectId.RAMPAGE);\r\n        break;\r\n      case EffectId.BACKSTAB:\r\n        gameHelpers.insertBuff(minion, EffectId.BACKSTAB);\r\n        break;\r\n      case EffectId.MARKSMANSHIP:\r\n        gameHelpers.insertBuff(minion, EffectId.MARKSMANSHIP);\r\n        break;\r\n      case EffectId.OVERPOWER:\r\n        gameHelpers.insertBuff(minion, EffectId.OVERPOWER);\r\n        break;\r\n      case EffectId.EXECUTE:\r\n        gameHelpers.insertBuff(minion, EffectId.EXECUTE);\r\n        break;\r\n    }\r\n\r\n    // [2] ON SUMMON TRAP TRIGGERS\r\n    if (trap && !isElusive) {\r\n      switch (trap.effect) {\r\n        case EffectId.SMITE:\r\n          animations.push(...effect.smite({player, opponent, minion, trap, field}));\r\n          break;\r\n        case EffectId.BANISH:\r\n          effect.banish({\r\n            player,\r\n            opponent,\r\n            playerMinion: minion,\r\n            opponentTrap: trap,\r\n            playerMinionField: field\r\n          });\r\n          break;\r\n        case EffectId.POISONED_GROUND:\r\n          effect.poisonedGround({player: opponent, minion, trap});\r\n          break;\r\n      }\r\n    } else {\r\n      // [3] TRIGGER ON SUMMON EFFECTS\r\n      switch (minion.effect) {\r\n        case EffectId.SHADOW_SURGE: // Neutral\r\n          animations.push(...effect.shadowSurge.onNormalSummon({\r\n            player,\r\n            playerMinion: minion,\r\n            playerMinionField: field\r\n          }));\r\n\r\n          break;\r\n        case EffectId.QUICK_SHOT:\r\n          animations.push(...effect.quickShot({opponent}));\r\n          break;\r\n        case EffectId.NECROMANCY:\r\n          animations.push(...effect.necromancy({\r\n            player,\r\n            playerMinion: minion,\r\n            playerMinionField: field,\r\n            isPositive: false\r\n          }));\r\n          break;\r\n        case EffectId.GLORY: // Solid\r\n          animations.push(...effect.glory({\r\n            player,\r\n            opponent,\r\n            minion,\r\n            playerMinionField: field,\r\n          }));\r\n          break;\r\n        case EffectId.SPELLWEAVE:\r\n          animations.push(...effect.spellweave({\r\n            player,\r\n            playerMinion: minion,\r\n            playerMinionField: field\r\n          }));\r\n          break;\r\n        case EffectId.SHIELDWALL:\r\n          animations.push(...effect.shieldwall({\r\n            player,\r\n            playerMinionField: field\r\n          }));\r\n          break;\r\n        // ---------- [ G A S ] ----------\r\n        case EffectId.TOXIC_SPRAY:\r\n          effect.toxicSpray({opponent});\r\n          break;\r\n        case EffectId.TOXIC_GAS:\r\n          effect.toxicGas({opponent});\r\n          break;\r\n      }\r\n    }\r\n\r\n    $game.gameLogs.push({\r\n      type: LogType.SUMMON,\r\n      field,\r\n      player: player.name,\r\n      minionId: minion.id\r\n    });\r\n\r\n    \r\n\r\n    // await gameHelpers.saveGame($game, animations);\r\n    await gameHelpers.attackMinionSave($game, animations);\r\n  });\r\n};\r\n\r\nexport {playMinion};\r\n","import {CardType} from \"@som/shared/enums\";\r\nimport {gameHelpers} from \"helpers\";\r\nimport type {SocketRequest} from \"@som/shared/types/backend\";\r\nimport { Animations } from \"@som/shared/types/game\";\r\n\r\nconst playTrap: SocketRequest = (socket, error): void => {\r\n  const socketId = socket.id;\r\n\r\n  socket.on(\"playTrap\", async (params) => {\r\n    const [getGameData, getGameError] = await gameHelpers.getGame(socketId);\r\n    const animations: Animations = [];\r\n\r\n    if (!getGameData) {\r\n      return error(getGameError);\r\n    }\r\n\r\n    const {$game, player} = getGameData;\r\n    const {name, hand, trap} = player;\r\n    const {gid} = params;\r\n\r\n    if (trap) {\r\n      return error(\"Trap Card is already set.\");\r\n    }\r\n\r\n    const card = hand.find((card) => card.gid === gid);\r\n\r\n    if (!card) {\r\n      return error(\"Card not found in hand.\");\r\n    }\r\n\r\n    if (card.type !== CardType.TRAP) {\r\n      return error(\"Selected card is not Trap.\");\r\n    }\r\n\r\n    if (card.manaCost.current > player.field.hero.mana.current) {\r\n      return error(\"Not enough mana.\");\r\n    }\r\n\r\n    player.field.hero.mana.current -= card.manaCost.current;\r\n    hand.splice(hand.indexOf(card), 1);\r\n    player.trap = card;\r\n\r\n    animations.push({\r\n      type: \"TRAP_SET\",\r\n      name\r\n    });\r\n\r\n    // socket.emit(\"playTrap\", {name});\r\n\r\n    await gameHelpers.attackMinionSave($game, animations);\r\n  });\r\n};\r\n\r\nexport {playTrap};\r\n","import {attackHero} from \"./attackHero\";\r\nimport {attackMinion} from \"./attackMinion\";\r\nimport {endTurn} from \"./endTurn\";\r\nimport {playMagic} from \"./playMagic\";\r\nimport {playMinion} from \"./playMinion\";\r\nimport {playTrap} from \"./playTrap\";\r\n\r\nconst game = [\r\n  attackHero,\r\n  attackMinion,\r\n  endTurn,\r\n  playMagic,\r\n  playMinion,\r\n  playTrap\r\n];\r\n\r\nexport {game};\r\n","import {mongo, server} from \"app\";\r\nimport type {UpdateFilter} from \"mongodb\";\r\nimport type {SocketRequest} from \"@som/shared/types/backend\";\r\nimport type {Player} from \"@som/shared/types/mongo\";\r\n\r\nconst acceptFriend: SocketRequest = (socket, error): void => {\r\n  const socketId = socket.id;\r\n  const {$chats, $players} = mongo;\r\n\r\n  socket.on(\"acceptFriend\", async (params) => {\r\n    const {name} = params;\r\n\r\n    const $playerSenderUpdate = await $players.findOneAndUpdate({socketId}, {\r\n      $pull: {\r\n        \"social.requests\": name\r\n      },\r\n      $push: {\r\n        \"social.friends\": name\r\n      }\r\n    } as UpdateFilter<Player> | Partial<Player>, { // bug: https://github.com/Automattic/mongoose/issues/10075\r\n      returnDocument: \"after\"\r\n    });\r\n\r\n    if (!$playerSenderUpdate) {\r\n      return error(\"Error updating sender.\");\r\n    }\r\n\r\n    const $playerReceiverUpdate = await $players.findOneAndUpdate({name}, {\r\n      $push: {\r\n        \"social.friends\": $playerSenderUpdate.name\r\n      }\r\n    } as UpdateFilter<Player> | Partial<Player>, { // bug: https://github.com/Automattic/mongoose/issues/10075\r\n      returnDocument: \"after\"\r\n    });\r\n\r\n    if (!$playerReceiverUpdate) {\r\n      return error(\"Error updating receiver.\");\r\n    }\r\n\r\n    const $chatInsert = await $chats.insertOne({\r\n      players: [$playerSenderUpdate.name, $playerReceiverUpdate.name],\r\n      lastSender: $playerSenderUpdate.name,\r\n      unseen: 0,\r\n      messages: []\r\n    });\r\n\r\n    if (!$chatInsert.insertedId) {\r\n      return error(\"Error inserting chat.\");\r\n    }\r\n\r\n    socket.emit(\"acceptFriendSender\", {\r\n      name: $playerReceiverUpdate.name,\r\n      avatarId: $playerReceiverUpdate.avatarId,\r\n      bannerId: $playerReceiverUpdate.bannerId,\r\n      experience: $playerReceiverUpdate.experience,\r\n      level: $playerReceiverUpdate.level,\r\n      elo: $playerReceiverUpdate.elo,\r\n      status: $playerReceiverUpdate.status,\r\n      games: $playerReceiverUpdate.games,\r\n      lastSender: $playerSenderUpdate.name\r\n    });\r\n\r\n    server.io.to($playerReceiverUpdate.socketId).emit(\"acceptFriendReceiver\", {\r\n      name: $playerSenderUpdate.name,\r\n      avatarId: $playerSenderUpdate.avatarId,\r\n      bannerId: $playerSenderUpdate.bannerId,\r\n      experience: $playerSenderUpdate.experience,\r\n      level: $playerSenderUpdate.level,\r\n      elo: $playerSenderUpdate.elo,\r\n      status: $playerSenderUpdate.status,\r\n      games: $playerSenderUpdate.games,\r\n    });\r\n  });\r\n};\r\n\r\nexport {acceptFriend};\r\n","import {mongo, server} from \"app\";\r\nimport type {SocketRequest} from \"@som/shared/types/backend\";\r\n\r\nconst addFriend: SocketRequest = (socket, error): void => {\r\n  const socketId = socket.id;\r\n  const {$players} = mongo;\r\n\r\n  socket.on(\"addFriend\", async (params) => {\r\n    const {name} = params;\r\n\r\n    const [$playerSender, $playerReceiver] = await Promise.all([\r\n      $players.findOne({socketId}),\r\n      $players.findOne({name})\r\n    ]);\r\n\r\n    if (!$playerSender) {\r\n      return error(\"Player sender not found.\");\r\n    }\r\n\r\n    if (!$playerReceiver) {\r\n      return error(\"Player receiver not found.\");\r\n    }\r\n\r\n    if ($playerSender.name === name) {\r\n      return error(\"You can't add yourself as a friend.\");\r\n    }\r\n\r\n    if ($playerReceiver.social.blocked.includes($playerSender.name)) {\r\n      return error(\"This player has blocked you.\");\r\n    }\r\n\r\n    if ($playerSender.social.blocked.includes(name)) {\r\n      return error(\"You have blocked this player.\");\r\n    }\r\n\r\n    if ($playerReceiver.social.requests.includes($playerSender.name)) {\r\n      return error(\"You have already sent the request to this player.\");\r\n    }\r\n\r\n    if ($playerSender.social.requests.includes(name)) {\r\n      return error(\"This player has already sent you the request.\");\r\n    }\r\n\r\n    if ($playerSender.social.friends.includes(name)) {\r\n      return error(\"This player is already your friend.\");\r\n    }\r\n\r\n    const $playerUpdate = await $players.updateOne({name}, {\r\n      $push: {\r\n        \"social.requests\": $playerSender.name\r\n      }\r\n    });\r\n\r\n    if (!$playerUpdate.modifiedCount) {\r\n      return error(\"Error updating player.\");\r\n    }\r\n\r\n    socket.emit(\"notification\", {\r\n      color: \"success\",\r\n      message: \"Friend request sent.\"\r\n    });\r\n\r\n    server.io.to($playerReceiver.socketId).emit(\"addFriend\", {\r\n      name: $playerSender.name\r\n    });\r\n  });\r\n};\r\n\r\nexport {addFriend};\r\n","import {mongo, server} from \"app\";\r\nimport type {SocketRequest} from \"@som/shared/types/backend\";\r\nimport type {Player} from \"@som/shared/types/mongo\";\r\nimport type {UpdateFilter} from \"mongodb\";\r\n\r\nconst blockFriend: SocketRequest = (socket, error): void => {\r\n  const socketId = socket.id;\r\n  const {$chats, $players} = mongo;\r\n\r\n  socket.on(\"blockFriend\", async (params) => {\r\n    const {name} = params;\r\n\r\n    const $playerSenderUpdate = await $players.findOneAndUpdate({socketId}, {\r\n      $pull: {\r\n        \"social.friends\": name\r\n      },\r\n      $push: {\r\n        \"social.blocked\": name\r\n      }\r\n    } as UpdateFilter<Player> | Partial<Player>);\r\n\r\n    if (!$playerSenderUpdate) {\r\n      return error(\"Sender not found.\");\r\n    }\r\n\r\n    const $playerReceiverUpdate = await $players.findOneAndUpdate({name}, {\r\n      $pull: {\r\n        \"social.friends\": $playerSenderUpdate.name\r\n      }\r\n    } as UpdateFilter<Player> | Partial<Player>);\r\n\r\n    if (!$playerReceiverUpdate) {\r\n      return error(\"Receiver not found.\");\r\n    }\r\n\r\n    const $chatDelete = await $chats.deleteOne({\r\n      players: {\r\n        $all: [$playerSenderUpdate.name, name]\r\n      }\r\n    });\r\n\r\n    if (!$chatDelete.deletedCount) {\r\n      return error(\"Error deleting chat.\");\r\n    }\r\n\r\n    socket.emit(\"blockFriendSender\", {name});\r\n\r\n    server.io.to($playerReceiverUpdate.socketId).emit(\"blockFriendReceiver\", {\r\n      name: $playerSenderUpdate.name\r\n    });\r\n  });\r\n};\r\n\r\nexport {blockFriend};\r\n","import {mongo} from \"app\";\r\nimport type {SocketRequest} from \"@som/shared/types/backend\";\r\n\r\nconst declineFriend: SocketRequest = (socket, error): void => {\r\n  const socketId = socket.id;\r\n  const {$players} = mongo;\r\n\r\n  socket.on(\"declineFriend\", async (params) => {\r\n    const {name} = params;\r\n    const $player = await $players.findOne({socketId});\r\n\r\n    if (!$player) {\r\n      return error(\"Player not found, try relogging.\");\r\n    }\r\n\r\n    const $playerUpdate = await $players.updateOne({\r\n      name: $player.name\r\n    }, {\r\n      $pull: {\r\n        \"social.requests\": name\r\n      }\r\n    });\r\n\r\n    if (!$playerUpdate.modifiedCount) {\r\n      return error(\"Failed to update account.\");\r\n    }\r\n\r\n    socket.emit(\"declineFriend\", {name});\r\n  });\r\n};\r\n\r\nexport {declineFriend};\r\n","import {mongo, server} from \"app\";\r\nimport type {SocketRequest} from \"@som/shared/types/backend\";\r\n\r\nconst readChatMessages: SocketRequest = (socket, error): void => {\r\n  const socketId = socket.id;\r\n  const {$chats, $players} = mongo;\r\n\r\n  socket.on(\"readChatMessages\", async (params) => {\r\n    const {name} = params;\r\n\r\n    const [$playerSender, $playerReceiver] = await Promise.all([\r\n      $players.findOne({socketId}),\r\n      $players.findOne({name})\r\n    ]);\r\n\r\n    if (!$playerSender) {\r\n      return error(\"Player not found.\");\r\n    }\r\n\r\n    if (!$playerReceiver) {\r\n      return error(\"Receiver not found.\");\r\n    }\r\n\r\n    const $chatUpdate = await $chats.updateOne({\r\n      players: {\r\n        $all: [$playerSender.name, name]\r\n      }\r\n    }, {\r\n      $set: {\r\n        unseen: 0\r\n      }\r\n    });\r\n\r\n    if (!$chatUpdate) {\r\n      return error(\"Error updating chat.\");\r\n    }\r\n\r\n    socket.emit(\"readChatMessages\", {name});\r\n\r\n    server.io.to($playerReceiver.socketId).emit(\"readChatMessages\", {\r\n      name: $playerSender.name\r\n    });\r\n  });\r\n};\r\n\r\nexport {readChatMessages};\r\n","import {mongo, server} from \"app\";\r\nimport type {UpdateFilter} from \"mongodb\";\r\nimport type {SocketRequest} from \"@som/shared/types/backend\";\r\nimport type {Player} from \"@som/shared/types/mongo\";\r\n\r\nconst removeFriend: SocketRequest = (socket, error): void => {\r\n  const socketId = socket.id;\r\n  const {$chats, $players} = mongo;\r\n\r\n  socket.on(\"removeFriend\", async (params) => {\r\n    const {name} = params;\r\n\r\n    const [$playerSender, $playerReceiver] = await Promise.all([\r\n      $players.findOne({socketId}),\r\n      $players.findOne({name})\r\n    ]);\r\n\r\n    if (!$playerSender) {\r\n      return error(\"Player sender not found.\");\r\n    }\r\n\r\n    if (!$playerReceiver) {\r\n      return error(\"Player receiver not found.\");\r\n    }\r\n\r\n    const [\r\n      $playerSenderUpdate,\r\n      $playerReceiverUpdate,\r\n      $chatDelete\r\n    ] = await Promise.all([\r\n      $players.findOneAndUpdate({\r\n        name: $playerSender.name\r\n      }, {\r\n        $pull: {\r\n          \"social.friends\": name\r\n        } as UpdateFilter<Player> | Partial<Player>\r\n      }, {\r\n        returnDocument: \"after\"\r\n      }),\r\n\r\n      $players.findOneAndUpdate({name}, {\r\n        $pull: {\r\n          \"social.friends\": $playerSender.name\r\n        } as UpdateFilter<Player> | Partial<Player>\r\n      }, {\r\n        returnDocument: \"after\"\r\n      }),\r\n\r\n      $chats.deleteOne({\r\n        players: {\r\n          $all: [name, $playerSender.name]\r\n        }\r\n      })\r\n    ]);\r\n\r\n    if (!$playerSenderUpdate) {\r\n      return error(\"Account sender not found.\");\r\n    }\r\n\r\n    if (!$playerReceiverUpdate) {\r\n      return error(\"Account receiver not found.\");\r\n    }\r\n\r\n    if (!$chatDelete.deletedCount) {\r\n      return error(\"Failed to delete chat.\");\r\n    }\r\n\r\n    socket.emit(\"removeFriendSender\", {name});\r\n\r\n    server.io.to($playerReceiver.socketId).emit(\"removeFriendReceiver\", {\r\n      name: $playerSender.name\r\n    });\r\n  });\r\n};\r\n\r\nexport {removeFriend};\r\n","import {mongo, server} from \"app\";\r\nimport type {SocketRequest} from \"@som/shared/types/backend\";\r\n\r\nconst sendChatMessage: SocketRequest = (socket, error): void => {\r\n  const socketId = socket.id;\r\n  const {$players, $chats} = mongo;\r\n\r\n  socket.on(\"sendChatMessage\", async (params) => {\r\n    const {receiver, text} = params;\r\n\r\n    if (text.length > 256) {\r\n      return error(\"Message too long.\");\r\n    }\r\n\r\n    const [$playerSender, $playerReceiver] = await Promise.all([\r\n      $players.findOne({socketId}),\r\n      $players.findOne({\r\n        name: receiver\r\n      })\r\n    ]);\r\n\r\n    if (!$playerSender) {\r\n      return error(\"Player sender not found, try relogging.\");\r\n    }\r\n\r\n    if (!$playerReceiver) {\r\n      return error(\"Player receiver not found, try relogging.\");\r\n    }\r\n\r\n    if (!$playerSender.social.friends.includes(receiver)) {\r\n      return error(\"This user isn't your friend.\");\r\n    }\r\n\r\n    const $chat = await $chats.findOne({\r\n      players: {\r\n        $all: [$playerSender.name, receiver]\r\n      }\r\n    });\r\n\r\n    if (!$chat) {\r\n      return error(\"Chat not found.\");\r\n    }\r\n\r\n    const date = Date.now();\r\n\r\n    if ($chat.lastSender === $playerSender.name) {\r\n      $chat.unseen += 1;\r\n    } else {\r\n      $chat.lastSender = $playerSender.name;\r\n      $chat.unseen = 1;\r\n    }\r\n\r\n    $chat.messages.push({\r\n      name: $playerSender.name,\r\n      text,\r\n      date\r\n    });\r\n\r\n    if ($chat.messages.length > 100) {\r\n      $chat.messages.shift();\r\n    }\r\n\r\n    const $chatReplace = await $chats.replaceOne({\r\n      players: {\r\n        $all: [$playerSender.name, receiver]\r\n      }\r\n    }, $chat);\r\n\r\n    if (!$chatReplace.modifiedCount) {\r\n      return error(\"Error updating chat.\");\r\n    }\r\n\r\n    const sender = $playerSender.name;\r\n\r\n    socket.emit(\"sendChatMessageSender\", {sender, receiver, text, date});\r\n\r\n    server\r\n      .io\r\n      .to($playerReceiver.socketId)\r\n      .emit(\"sendChatMessageReceiver\", {sender, text, date});\r\n  });\r\n};\r\n\r\nexport {sendChatMessage};\r\n","import {mongo, server} from \"app\";\r\nimport {playerHelpers} from \"helpers\";\r\nimport type {SocketRequest} from \"@som/shared/types/backend\";\r\n\r\nconst setAvatar: SocketRequest = (socket, error): void => {\r\n  const socketId = socket.id;\r\n  const {$players} = mongo;\r\n\r\n  socket.on(\"setAvatar\", async (params) => {\r\n    const {avatarId} = params;\r\n\r\n    if (avatarId < 1000 || avatarId > 1999) {\r\n      return error(\"Invalid avatar.\");\r\n    }\r\n\r\n    const $player = await $players.findOne({socketId});\r\n\r\n    if (!$player) {\r\n      return error(\"Player not found.\");\r\n    }\r\n\r\n    if (avatarId === 1001 && $player.elo < 250) {\r\n      return error(\"Can't select this avatar.\");\r\n    }\r\n\r\n    if (avatarId === 1002 && $player.elo < 500) {\r\n      return error(\"Can't select this avatar.\");\r\n    }\r\n\r\n    if (avatarId === 1003 && $player.elo < 750) {\r\n      return error(\"Can't select this avatar.\");\r\n    }\r\n\r\n    const $playerUpdate = await $players.findOneAndUpdate({socketId}, {\r\n      $set: {avatarId}\r\n    }, {\r\n      returnDocument: \"after\"\r\n    });\r\n\r\n    if (!$playerUpdate) {\r\n      return error(\"Failed to update player.\");\r\n    }\r\n\r\n    const {name, social} = $playerUpdate;\r\n    const socketIds = await playerHelpers.getSocketIds(social.friends);\r\n\r\n    socket.emit(\"updatePlayer\", {avatarId});\r\n    server.io.to(socketIds).emit(\"updateFriend\", {name, avatarId});\r\n  });\r\n};\r\n\r\nexport {setAvatar};\r\n","import {mongo, server} from \"app\";\r\nimport {playerHelpers} from \"helpers\";\r\nimport type {SocketRequest} from \"@som/shared/types/backend\";\r\n\r\nconst setBanner: SocketRequest = (socket, error): void => {\r\n  const socketId = socket.id;\r\n  const {$players} = mongo;\r\n\r\n  socket.on(\"setBanner\", async (params) => {\r\n    const {bannerId} = params;\r\n\r\n    if (bannerId < 2000 || bannerId > 2999) {\r\n      return error(\"Invalid banner.\");\r\n    }\r\n\r\n    // check whether player owns the avatar here!\r\n\r\n    const $playerUpdate = await $players.findOneAndUpdate({socketId}, {\r\n      $set: {bannerId}\r\n    }, {\r\n      returnDocument: \"after\"\r\n    });\r\n\r\n    if (!$playerUpdate) {\r\n      return error(\"Failed to update player.\");\r\n    }\r\n\r\n    const {name, social} = $playerUpdate;\r\n    const socketIds = await playerHelpers.getSocketIds(social.friends);\r\n\r\n    socket.emit(\"updatePlayer\", {bannerId});\r\n    server.io.to(socketIds).emit(\"updateFriend\", {name, bannerId});\r\n  });\r\n};\r\n\r\nexport {setBanner};\r\n","import {mongo} from \"app\";\r\nimport type {SocketRequest} from \"@som/shared/types/backend\";\r\n\r\nconst unblockFriend: SocketRequest = (socket, error): void => {\r\n  const socketId = socket.id;\r\n  const {$players} = mongo;\r\n\r\n  socket.on(\"unblockFriend\", async (params) => {\r\n    const {name} = params;\r\n\r\n    const $playerUpdate = await $players.updateOne({socketId}, {\r\n      $pull: {\r\n        \"social.blocked\": name\r\n      }\r\n    });\r\n\r\n    if (!$playerUpdate.modifiedCount) {\r\n      return error(\"Failed to update player.\");\r\n    }\r\n\r\n    socket.emit(\"unblockFriend\", {name});\r\n  });\r\n};\r\n\r\nexport {unblockFriend};\r\n","import {mongo, server} from \"app\";\r\nimport {playerHelpers} from \"helpers\";\r\nimport type {SocketRequest} from \"@som/shared/types/backend\";\r\n\r\nconst updateFriend: SocketRequest = (socket, error): void => {\r\n  const socketId = socket.id;\r\n  const {$players} = mongo;\r\n\r\n  socket.on(\"updateFriend\", async () => {\r\n    const $player = await $players.findOne({socketId});\r\n\r\n    if (!$player) {\r\n      return error(\"Player not found.\");\r\n    }\r\n\r\n    const {name, avatarId, bannerId, elo, level, experience, status, games} = $player;\r\n    const friends = await playerHelpers.getSocketIds($player.social.friends);\r\n\r\n    if (friends.length) {\r\n      server.io.to(friends).emit(\"updateFriend\", {name, avatarId, bannerId, elo, level, experience, status, games});\r\n    }\r\n  });\r\n};\r\n\r\nexport {updateFriend};\r\n","import {acceptFriend} from \"./acceptFriend\";\r\nimport {addFriend} from \"./addFriend\";\r\nimport {blockFriend} from \"./blockFriend\";\r\nimport {declineFriend} from \"./declineFriend\";\r\nimport {readChatMessages} from \"./readChatMessages\";\r\nimport {removeFriend} from \"./removeFriend\";\r\nimport {sendChatMessage} from \"./sendChatMessage\";\r\nimport {setAvatar} from \"./setAvatar\";\r\nimport {setBanner} from \"./setBanner\";\r\nimport {unblockFriend} from \"./unblockFriend\";\r\nimport {updateFriend} from \"./updateFriend\";\r\n\r\nconst sidenav = [\r\n  acceptFriend,\r\n  addFriend,\r\n  blockFriend,\r\n  declineFriend,\r\n  readChatMessages,\r\n  removeFriend,\r\n  sendChatMessage,\r\n  setAvatar,\r\n  setBanner,\r\n  unblockFriend,\r\n  updateFriend\r\n];\r\n\r\nexport {sidenav};\r\n","import {auth} from \"./auth\";\r\nimport {client} from \"./client\";\r\nimport {game} from \"./game\";\r\nimport {sidenav} from \"./sidenav\";\r\n\r\nconst requests = [...auth, ...client, ...game, ...sidenav];\r\n\r\nexport {requests};\r\n","import {contracts, mongo, server} from \"app\";\r\nimport {requests} from \"requests\";\r\nimport {schedule} from \"node-cron\";\r\nimport express from 'express';\r\nimport path from \"path\";\r\n\r\nprocess.on(\"unhandledRejection\", (reason, promise): void => {\r\n  console.log(`Unhandled rejection: ${reason}`);\r\n});\r\n\r\nprocess.on(\"uncaughtException\", (error, origin): void => {\r\n  console.log(`Uncaught Exception: ${error}`);\r\n});\r\n\r\nconst cleanup = async (): Promise<void> => {\r\n  // await contracts.somGame[\"addItem\"](101301n, 1n).catch(console.log);\r\n  // await contracts.somGame[\"addItem\"](101302n, 2n).catch(console.log);\r\n  // await contracts.somGame[\"addItem\"](101303n, 3n).catch(console.log);\r\n  // await contracts.somGame[\"addItem\"](101304n, 4n).catch(console.log);\r\n  // await contracts.somGame[\"addItem\"](101305n, 5n).catch(console.log);\r\n  // await contracts.somGame[\"addItem\"](101401n, 1n).catch(console.log);\r\n  // await contracts.somGame[\"addItem\"](101402n, 2n).catch(console.log);\r\n  // await contracts.somGame[\"addItem\"](101403n, 3n).catch(console.log);\r\n  // await contracts.somGame[\"addItem\"](101404n, 4n).catch(console.log);\r\n  // await contracts.somGame[\"addItem\"](101405n, 5n).catch(console.log);\r\n  // await contracts.somGame[\"addItem\"](101501n, 1n).catch(console.log);\r\n  // await contracts.somGame[\"addItem\"](101502n, 2n).catch(console.log);\r\n  // await contracts.somGame[\"addItem\"](101503n, 3n).catch(console.log);\r\n  // await contracts.somGame[\"addItem\"](101504n, 4n).catch(console.log);\r\n  // await contracts.somGame[\"addItem\"](101505n, 5n).catch(console.log);\r\n\r\n  // remove all rankedQueuePlayers, casualQueuePlayers, and gamePopups when\r\n  // restarting the server?\r\n};\r\n\r\nawait cleanup();\r\n\r\nserver.app.use(express.static(path.join(process.cwd(), \"frontend\")));\r\nserver.app.get(\"/\", (req, res) => res.sendFile(`${process.cwd()}/frontend/index.html`));\r\nserver.app.get(\"*\", (req, res) => res.sendFile(`${process.cwd()}/frontend/index.html`));\r\n\r\nserver.io.on(\"connection\", (socket): void => {\r\n  const error = (message: string): void => {\r\n    socket.emit(\"notification\", {\r\n      color: \"warn\",\r\n      message\r\n    });\r\n\r\n    console.error(message);\r\n  };\r\n\r\n  // for token transfers, wallets already implement sending to address,\r\n  // this allows players to send to \"username\"\r\n  socket.on(\"getAddress\", async ({name}: any): Promise<void> => {\r\n    const $player = await mongo.$players.findOne({name});\r\n\r\n    if (!$player) {\r\n      return error(\"Player not found.\");\r\n    }\r\n\r\n    if (!$player.address) {\r\n      return error(\"This player hasn't connected an address yet.\");\r\n    }\r\n\r\n    socket.emit(\"getAddress\", {address: $player.address});\r\n  });\r\n\r\n  socket.on(\"claimRewards\", async (): Promise<void> => {\r\n    const $player = await mongo.$players.findOne({socketId: socket.id});\r\n\r\n    if (!$player) {\r\n      return error(\"Player not found.\");\r\n    }\r\n\r\n    if (!$player.address) {\r\n      return error(\"Can't claim, address not set.\");\r\n    }\r\n\r\n    if (BigInt($player.rewards.ecr) < 1 && BigInt($player.rewards.ees) < 1) {\r\n      return error(\"No rewards to claim\");\r\n    }\r\n\r\n    const $playerUpdate = await mongo.$players.updateOne({socketId: socket.id}, {\r\n      $set: {\r\n        \"rewards.ees\": \"0\",\r\n        \"rewards.ecr\": \"0\"\r\n      }\r\n    });\r\n\r\n    if (!$playerUpdate.modifiedCount) {\r\n      return error(\"Error updating player.\");\r\n    }\r\n\r\n    const tx = await contracts.somGame.claimRewards(\r\n      $player.address,\r\n      BigInt($player.rewards.ees),\r\n      BigInt($player.rewards.ecr)\r\n    ).catch(console.log);\r\n\r\n    if (!tx) {\r\n      return error(\"Couldn't push transaction, no tokens were minted.\");\r\n    }\r\n\r\n    const fin = await tx.wait();\r\n\r\n    if (!fin) {\r\n      return error(\"Error transacting\");\r\n    }\r\n\r\n    socket.emit(\"notification\", {color: \"success\", message: \"Claimed rewards.\"});\r\n  });\r\n\r\n  requests.forEach((request): void => {\r\n    request(socket, error);\r\n  });\r\n});\r\n\r\nserver.http.listen(process.env.PORT || 4201);\r\n\r\nschedule(\"0 */24 * * *\", async (): Promise<void> => {\r\n  for await (let $player of mongo.$players.find()) {\r\n    if ($player.tasks.daily || $player.tasks.dailyAlternative >= 3) {\r\n      $player.rewards.ecr = `${BigInt($player.rewards.ecr) + 1n * 10n ** 18n}`;\r\n      $player.tasks.weekly += 1;\r\n\r\n      if ($player.tasks.weekly >= 7) {\r\n        $player.rewards.ecr = `${BigInt($player.rewards.ecr) + 3n * 10n ** 18n}`;\r\n        $player.tasks.weekly = 0;\r\n      }\r\n    } else {\r\n      $player.tasks.weekly = 0;\r\n    }\r\n\r\n    $player.tasks.daily = false;\r\n    $player.tasks.dailyAlternative = 0;\r\n\r\n    if ($player.elo > 250) {\r\n      $player.elo -= 1;\r\n    }\r\n\r\n    if ($player.elo >= 250) { // silver\r\n      $player.rewards.ees = `${BigInt($player.rewards.ees) + 1n * 10n ** 18n}`;\r\n    } else if ($player.elo >= 500) { // gold\r\n      $player.rewards.ees = `${BigInt($player.rewards.ees) + 3n * 10n ** 18n}`;\r\n    } else if ($player.elo >= 750) { // master\r\n      $player.rewards.ees = `${BigInt($player.rewards.ees) + 5n * 10n ** 18n}`;\r\n    }\r\n\r\n    await mongo.$players.replaceOne({name: $player.name}, $player);\r\n  }\r\n\r\n  const [deployTimestamp, ees, ecr, enrg] = await Promise.all([\r\n    contracts.somGame.deployTimestamp(),\r\n    contracts.ethericEssence.totalSupply(),\r\n    contracts.ethericCrystals.totalSupply(),\r\n    contracts.ethericEnergy.totalSupply()\r\n  ]);\r\n\r\n  const POW = 10n ** 18n;\r\n  const REWARD_PER_MS = 1000000n;\r\n  const date = Date.now();\r\n  const ecrStaked = (enrg * (1n * POW + ((BigInt(date) - deployTimestamp * 1000n) * REWARD_PER_MS))) / POW;\r\n  const supply = ecr + ecrStaked;\r\n\r\n  await Promise.all([\r\n    mongo.$supplySnapshots.updateOne({\r\n      name: \"ees\"\r\n    }, {\r\n      $push: {\r\n        \"snapshots\": {date, supply: `${ees}`}\r\n      }\r\n    }),\r\n    mongo.$supplySnapshots.updateOne({\r\n      name: \"ecr\"\r\n    }, {\r\n      $push: {\r\n        \"snapshots\": {date, supply: `${supply}`}\r\n      }\r\n    }),\r\n    mongo.$supplySnapshots.updateOne({\r\n      name: \"enrg\"\r\n    }, {\r\n      $push: {\r\n        \"snapshots\": {date, supply: `${enrg}`}\r\n      }\r\n    })\r\n  ]);\r\n\r\n  const byLevel = (await mongo.$players\r\n    .find()\r\n    .limit(100)\r\n    .sort({\r\n      level: -1\r\n    })\r\n    .toArray()\r\n  ).map(({name, elo, level, experience, avatarId, bannerId, games}) =>\r\n    ({name, level, elo, experience, avatarId, bannerId, games})\r\n  );\r\n\r\n  const byElo = (await mongo.$players\r\n    .find()\r\n    .limit(100)\r\n    .sort({\r\n      elo: -1\r\n    })\r\n    .toArray()\r\n  ).map(($player) => {\r\n    const {name, elo, level, experience, avatarId, bannerId, games} = $player;\r\n    return {name, level, elo, experience, avatarId, bannerId, games};\r\n  });\r\n\r\n  await mongo.$leaderboards.updateOne({}, {\r\n    $set: {level: byLevel, elo: byElo}\r\n  });\r\n\r\n  for (let {name} of byLevel) {\r\n    const $player = await mongo.$players.findOne({name});\r\n\r\n    if ($player) {\r\n      const newValue = `${BigInt($player.rewards.ecr) + 1n * 10n ** 18n}`\r\n      $player.rewards.ecr = newValue;\r\n      await mongo.$players.replaceOne({name}, $player);\r\n    }\r\n  }\r\n\r\n  for (let {name} of byElo) {\r\n    const $player = await mongo.$players.findOne({name});\r\n\r\n    if ($player) {\r\n      const newValue = `${BigInt($player.rewards.ecr) + 3n * 10n ** 18n}`\r\n      $player.rewards.ecr = newValue;\r\n      await mongo.$players.replaceOne({name}, $player);\r\n    }\r\n  }\r\n\r\n  server.io.emit(\"notification\", {\r\n    color: \"success\",\r\n    message: \"Leaderboards and tasks updated, rewards distributed!\"\r\n  });\r\n});\r\n"],"names":["client","authenticate"],"mappings":"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"}