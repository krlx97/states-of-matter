{
	"id": "0f3e1861918714bea9f95f29c87ea048",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.20",
	"solcLongVersion": "0.8.20+commit.a1b79de6",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/Items/Items.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\nimport \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\";\nimport \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\";\nimport \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol\";\n\n/// @custom:security-contact krlebyte@gmail.com\ncontract Items is ERC1155, ERC1155Burnable, ERC1155Supply {\n  address private immutable _gameAddress;\n\n  constructor (address gameAddress)\n  ERC1155(\"https://som.eternitas.games/json\") {\n    _gameAddress = gameAddress;\n  }\n\n  modifier onlyGame {\n    require(msg.sender == _gameAddress, \"Only game contract can call.\");_;\n  }\n\n  function mint (\n    address account,\n    uint256 id,\n    uint256 amount,\n    bytes memory data\n  ) public onlyGame {\n    _mint(account, id, amount, data);\n  }\n\n  function mintBatch (\n    address to,\n    uint256[] memory ids,\n    uint256[] memory amounts,\n    bytes memory data\n  ) public onlyGame {\n    _mintBatch(to, ids, amounts, data);\n  }\n\n  function _update (\n    address from,\n    address to,\n    uint256[] memory ids,\n    uint256[] memory values\n  ) internal override(ERC1155, ERC1155Supply) {\n    super._update(from, to, ids, values);\n  }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC1155/extensions/ERC1155Supply.sol)\n\npragma solidity ^0.8.20;\n\nimport {ERC1155} from \"../ERC1155.sol\";\n\n/**\n * @dev Extension of ERC1155 that adds tracking of total supply per id.\n *\n * Useful for scenarios where Fungible and Non-fungible tokens have to be\n * clearly identified. Note: While a totalSupply of 1 might mean the\n * corresponding is an NFT, there is no guarantees that no other token with the\n * same id are not going to be minted.\n *\n * NOTE: This contract implies a global limit of 2**256 - 1 to the number of tokens\n * that can be minted.\n *\n * CAUTION: This extension should not be added in an upgrade to an already deployed contract.\n */\nabstract contract ERC1155Supply is ERC1155 {\n    mapping(uint256 id => uint256) private _totalSupply;\n    uint256 private _totalSupplyAll;\n\n    /**\n     * @dev Total value of tokens in with a given id.\n     */\n    function totalSupply(uint256 id) public view virtual returns (uint256) {\n        return _totalSupply[id];\n    }\n\n    /**\n     * @dev Total value of tokens.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupplyAll;\n    }\n\n    /**\n     * @dev Indicates whether any token exist with a given id, or not.\n     */\n    function exists(uint256 id) public view virtual returns (bool) {\n        return totalSupply(id) > 0;\n    }\n\n    /**\n     * @dev See {ERC1155-_update}.\n     */\n    function _update(\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory values\n    ) internal virtual override {\n        super._update(from, to, ids, values);\n\n        if (from == address(0)) {\n            uint256 totalMintValue = 0;\n            for (uint256 i = 0; i < ids.length; ++i) {\n                uint256 value = values[i];\n                // Overflow check required: The rest of the code assumes that totalSupply never overflows\n                _totalSupply[ids[i]] += value;\n                totalMintValue += value;\n            }\n            // Overflow check required: The rest of the code assumes that totalSupplyAll never overflows\n            _totalSupplyAll += totalMintValue;\n        }\n\n        if (to == address(0)) {\n            uint256 totalBurnValue = 0;\n            for (uint256 i = 0; i < ids.length; ++i) {\n                uint256 value = values[i];\n\n                unchecked {\n                    // Overflow not possible: values[i] <= balanceOf(from, ids[i]) <= totalSupply(ids[i])\n                    _totalSupply[ids[i]] -= value;\n                    // Overflow not possible: sum_i(values[i]) <= sum_i(totalSupply(ids[i])) <= totalSupplyAll\n                    totalBurnValue += value;\n                }\n            }\n            unchecked {\n                // Overflow not possible: totalBurnValue = sum_i(values[i]) <= sum_i(totalSupply(ids[i])) <= totalSupplyAll\n                _totalSupplyAll -= totalBurnValue;\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC1155/extensions/ERC1155Burnable.sol)\n\npragma solidity ^0.8.20;\n\nimport {ERC1155} from \"../ERC1155.sol\";\n\n/**\n * @dev Extension of {ERC1155} that allows token holders to destroy both their\n * own tokens and those that they have been approved to use.\n */\nabstract contract ERC1155Burnable is ERC1155 {\n    function burn(address account, uint256 id, uint256 value) public virtual {\n        if (account != _msgSender() && !isApprovedForAll(account, _msgSender())) {\n            revert ERC1155MissingApprovalForAll(_msgSender(), account);\n        }\n\n        _burn(account, id, value);\n    }\n\n    function burnBatch(address account, uint256[] memory ids, uint256[] memory values) public virtual {\n        if (account != _msgSender() && !isApprovedForAll(account, _msgSender())) {\n            revert ERC1155MissingApprovalForAll(_msgSender(), account);\n        }\n\n        _burnBatch(account, ids, values);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC1155/ERC1155.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC1155/ERC1155.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC1155} from \"./IERC1155.sol\";\nimport {IERC1155Receiver} from \"./IERC1155Receiver.sol\";\nimport {IERC1155MetadataURI} from \"./extensions/IERC1155MetadataURI.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC165, ERC165} from \"../../utils/introspection/ERC165.sol\";\nimport {Arrays} from \"../../utils/Arrays.sol\";\nimport {IERC1155Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the basic standard multi-token.\n * See https://eips.ethereum.org/EIPS/eip-1155\n * Originally based on code by Enjin: https://github.com/enjin/erc-1155\n */\nabstract contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI, IERC1155Errors {\n    using Arrays for uint256[];\n    using Arrays for address[];\n\n    mapping(uint256 id => mapping(address account => uint256)) private _balances;\n\n    mapping(address account => mapping(address operator => bool)) private _operatorApprovals;\n\n    // Used as the URI for all token types by relying on ID substitution, e.g. https://token-cdn-domain/{id}.json\n    string private _uri;\n\n    /**\n     * @dev See {_setURI}.\n     */\n    constructor(string memory uri_) {\n        _setURI(uri_);\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\n        return\n            interfaceId == type(IERC1155).interfaceId ||\n            interfaceId == type(IERC1155MetadataURI).interfaceId ||\n            super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC1155MetadataURI-uri}.\n     *\n     * This implementation returns the same URI for *all* token types. It relies\n     * on the token type ID substitution mechanism\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\n     *\n     * Clients calling this function must replace the `\\{id\\}` substring with the\n     * actual token type ID.\n     */\n    function uri(uint256 /* id */) public view virtual returns (string memory) {\n        return _uri;\n    }\n\n    /**\n     * @dev See {IERC1155-balanceOf}.\n     */\n    function balanceOf(address account, uint256 id) public view virtual returns (uint256) {\n        return _balances[id][account];\n    }\n\n    /**\n     * @dev See {IERC1155-balanceOfBatch}.\n     *\n     * Requirements:\n     *\n     * - `accounts` and `ids` must have the same length.\n     */\n    function balanceOfBatch(\n        address[] memory accounts,\n        uint256[] memory ids\n    ) public view virtual returns (uint256[] memory) {\n        if (accounts.length != ids.length) {\n            revert ERC1155InvalidArrayLength(ids.length, accounts.length);\n        }\n\n        uint256[] memory batchBalances = new uint256[](accounts.length);\n\n        for (uint256 i = 0; i < accounts.length; ++i) {\n            batchBalances[i] = balanceOf(accounts.unsafeMemoryAccess(i), ids.unsafeMemoryAccess(i));\n        }\n\n        return batchBalances;\n    }\n\n    /**\n     * @dev See {IERC1155-setApprovalForAll}.\n     */\n    function setApprovalForAll(address operator, bool approved) public virtual {\n        _setApprovalForAll(_msgSender(), operator, approved);\n    }\n\n    /**\n     * @dev See {IERC1155-isApprovedForAll}.\n     */\n    function isApprovedForAll(address account, address operator) public view virtual returns (bool) {\n        return _operatorApprovals[account][operator];\n    }\n\n    /**\n     * @dev See {IERC1155-safeTransferFrom}.\n     */\n    function safeTransferFrom(address from, address to, uint256 id, uint256 value, bytes memory data) public virtual {\n        address sender = _msgSender();\n        if (from != sender && !isApprovedForAll(from, sender)) {\n            revert ERC1155MissingApprovalForAll(sender, from);\n        }\n        _safeTransferFrom(from, to, id, value, data);\n    }\n\n    /**\n     * @dev See {IERC1155-safeBatchTransferFrom}.\n     */\n    function safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory values,\n        bytes memory data\n    ) public virtual {\n        address sender = _msgSender();\n        if (from != sender && !isApprovedForAll(from, sender)) {\n            revert ERC1155MissingApprovalForAll(sender, from);\n        }\n        _safeBatchTransferFrom(from, to, ids, values, data);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens of type `id` from `from` to `to`. Will mint (or burn) if `from`\n     * (or `to`) is the zero address.\n     *\n     * Emits a {TransferSingle} event if the arrays contain one element, and {TransferBatch} otherwise.\n     *\n     * Requirements:\n     *\n     * - If `to` refers to a smart contract, it must implement either {IERC1155Receiver-onERC1155Received}\n     *   or {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\n     * - `ids` and `values` must have the same length.\n     *\n     * NOTE: The ERC-1155 acceptance check is not performed in this function. See {_updateWithAcceptanceCheck} instead.\n     */\n    function _update(address from, address to, uint256[] memory ids, uint256[] memory values) internal virtual {\n        if (ids.length != values.length) {\n            revert ERC1155InvalidArrayLength(ids.length, values.length);\n        }\n\n        address operator = _msgSender();\n\n        for (uint256 i = 0; i < ids.length; ++i) {\n            uint256 id = ids.unsafeMemoryAccess(i);\n            uint256 value = values.unsafeMemoryAccess(i);\n\n            if (from != address(0)) {\n                uint256 fromBalance = _balances[id][from];\n                if (fromBalance < value) {\n                    revert ERC1155InsufficientBalance(from, fromBalance, value, id);\n                }\n                unchecked {\n                    // Overflow not possible: value <= fromBalance\n                    _balances[id][from] = fromBalance - value;\n                }\n            }\n\n            if (to != address(0)) {\n                _balances[id][to] += value;\n            }\n        }\n\n        if (ids.length == 1) {\n            uint256 id = ids.unsafeMemoryAccess(0);\n            uint256 value = values.unsafeMemoryAccess(0);\n            emit TransferSingle(operator, from, to, id, value);\n        } else {\n            emit TransferBatch(operator, from, to, ids, values);\n        }\n    }\n\n    /**\n     * @dev Version of {_update} that performs the token acceptance check by calling\n     * {IERC1155Receiver-onERC1155Received} or {IERC1155Receiver-onERC1155BatchReceived} on the receiver address if it\n     * contains code (eg. is a smart contract at the moment of execution).\n     *\n     * IMPORTANT: Overriding this function is discouraged because it poses a reentrancy risk from the receiver. So any\n     * update to the contract state after this function would break the check-effect-interaction pattern. Consider\n     * overriding {_update} instead.\n     */\n    function _updateWithAcceptanceCheck(\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory values,\n        bytes memory data\n    ) internal virtual {\n        _update(from, to, ids, values);\n        if (to != address(0)) {\n            address operator = _msgSender();\n            if (ids.length == 1) {\n                uint256 id = ids.unsafeMemoryAccess(0);\n                uint256 value = values.unsafeMemoryAccess(0);\n                _doSafeTransferAcceptanceCheck(operator, from, to, id, value, data);\n            } else {\n                _doSafeBatchTransferAcceptanceCheck(operator, from, to, ids, values, data);\n            }\n        }\n    }\n\n    /**\n     * @dev Transfers a `value` tokens of token type `id` from `from` to `to`.\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `from` must have a balance of tokens of type `id` of at least `value` amount.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n     * acceptance magic value.\n     */\n    function _safeTransferFrom(address from, address to, uint256 id, uint256 value, bytes memory data) internal {\n        if (to == address(0)) {\n            revert ERC1155InvalidReceiver(address(0));\n        }\n        if (from == address(0)) {\n            revert ERC1155InvalidSender(address(0));\n        }\n        (uint256[] memory ids, uint256[] memory values) = _asSingletonArrays(id, value);\n        _updateWithAcceptanceCheck(from, to, ids, values, data);\n    }\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_safeTransferFrom}.\n     *\n     * Emits a {TransferBatch} event.\n     *\n     * Requirements:\n     *\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n     * acceptance magic value.\n     * - `ids` and `values` must have the same length.\n     */\n    function _safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory values,\n        bytes memory data\n    ) internal {\n        if (to == address(0)) {\n            revert ERC1155InvalidReceiver(address(0));\n        }\n        if (from == address(0)) {\n            revert ERC1155InvalidSender(address(0));\n        }\n        _updateWithAcceptanceCheck(from, to, ids, values, data);\n    }\n\n    /**\n     * @dev Sets a new URI for all token types, by relying on the token type ID\n     * substitution mechanism\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\n     *\n     * By this mechanism, any occurrence of the `\\{id\\}` substring in either the\n     * URI or any of the values in the JSON file at said URI will be replaced by\n     * clients with the token type ID.\n     *\n     * For example, the `https://token-cdn-domain/\\{id\\}.json` URI would be\n     * interpreted by clients as\n     * `https://token-cdn-domain/000000000000000000000000000000000000000000000000000000000004cce0.json`\n     * for token type ID 0x4cce0.\n     *\n     * See {uri}.\n     *\n     * Because these URIs cannot be meaningfully represented by the {URI} event,\n     * this function emits no events.\n     */\n    function _setURI(string memory newuri) internal virtual {\n        _uri = newuri;\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens of type `id`, and assigns them to `to`.\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n     * acceptance magic value.\n     */\n    function _mint(address to, uint256 id, uint256 value, bytes memory data) internal {\n        if (to == address(0)) {\n            revert ERC1155InvalidReceiver(address(0));\n        }\n        (uint256[] memory ids, uint256[] memory values) = _asSingletonArrays(id, value);\n        _updateWithAcceptanceCheck(address(0), to, ids, values, data);\n    }\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_mint}.\n     *\n     * Emits a {TransferBatch} event.\n     *\n     * Requirements:\n     *\n     * - `ids` and `values` must have the same length.\n     * - `to` cannot be the zero address.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n     * acceptance magic value.\n     */\n    function _mintBatch(address to, uint256[] memory ids, uint256[] memory values, bytes memory data) internal {\n        if (to == address(0)) {\n            revert ERC1155InvalidReceiver(address(0));\n        }\n        _updateWithAcceptanceCheck(address(0), to, ids, values, data);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens of type `id` from `from`\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `from` must have at least `value` amount of tokens of type `id`.\n     */\n    function _burn(address from, uint256 id, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC1155InvalidSender(address(0));\n        }\n        (uint256[] memory ids, uint256[] memory values) = _asSingletonArrays(id, value);\n        _updateWithAcceptanceCheck(from, address(0), ids, values, \"\");\n    }\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_burn}.\n     *\n     * Emits a {TransferBatch} event.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `from` must have at least `value` amount of tokens of type `id`.\n     * - `ids` and `values` must have the same length.\n     */\n    function _burnBatch(address from, uint256[] memory ids, uint256[] memory values) internal {\n        if (from == address(0)) {\n            revert ERC1155InvalidSender(address(0));\n        }\n        _updateWithAcceptanceCheck(from, address(0), ids, values, \"\");\n    }\n\n    /**\n     * @dev Approve `operator` to operate on all of `owner` tokens\n     *\n     * Emits an {ApprovalForAll} event.\n     *\n     * Requirements:\n     *\n     * - `operator` cannot be the zero address.\n     */\n    function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {\n        if (operator == address(0)) {\n            revert ERC1155InvalidOperator(address(0));\n        }\n        _operatorApprovals[owner][operator] = approved;\n        emit ApprovalForAll(owner, operator, approved);\n    }\n\n    /**\n     * @dev Performs an acceptance check by calling {IERC1155-onERC1155Received} on the `to` address\n     * if it contains code at the moment of execution.\n     */\n    function _doSafeTransferAcceptanceCheck(\n        address operator,\n        address from,\n        address to,\n        uint256 id,\n        uint256 value,\n        bytes memory data\n    ) private {\n        if (to.code.length > 0) {\n            try IERC1155Receiver(to).onERC1155Received(operator, from, id, value, data) returns (bytes4 response) {\n                if (response != IERC1155Receiver.onERC1155Received.selector) {\n                    // Tokens rejected\n                    revert ERC1155InvalidReceiver(to);\n                }\n            } catch (bytes memory reason) {\n                if (reason.length == 0) {\n                    // non-ERC1155Receiver implementer\n                    revert ERC1155InvalidReceiver(to);\n                } else {\n                    /// @solidity memory-safe-assembly\n                    assembly {\n                        revert(add(32, reason), mload(reason))\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * @dev Performs a batch acceptance check by calling {IERC1155-onERC1155BatchReceived} on the `to` address\n     * if it contains code at the moment of execution.\n     */\n    function _doSafeBatchTransferAcceptanceCheck(\n        address operator,\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory values,\n        bytes memory data\n    ) private {\n        if (to.code.length > 0) {\n            try IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, values, data) returns (\n                bytes4 response\n            ) {\n                if (response != IERC1155Receiver.onERC1155BatchReceived.selector) {\n                    // Tokens rejected\n                    revert ERC1155InvalidReceiver(to);\n                }\n            } catch (bytes memory reason) {\n                if (reason.length == 0) {\n                    // non-ERC1155Receiver implementer\n                    revert ERC1155InvalidReceiver(to);\n                } else {\n                    /// @solidity memory-safe-assembly\n                    assembly {\n                        revert(add(32, reason), mload(reason))\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * @dev Creates an array in memory with only one value for each of the elements provided.\n     */\n    function _asSingletonArrays(\n        uint256 element1,\n        uint256 element2\n    ) private pure returns (uint256[] memory array1, uint256[] memory array2) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            // Load the free memory pointer\n            array1 := mload(0x40)\n            // Set array length to 1\n            mstore(array1, 1)\n            // Store the single element at the next word after the length (where content starts)\n            mstore(add(array1, 0x20), element1)\n\n            // Repeat for next array locating it right after the first array\n            array2 := add(array1, 0x40)\n            mstore(array2, 1)\n            mstore(add(array2, 0x20), element2)\n\n            // Update the free memory pointer by pointing after the second array\n            mstore(0x40, add(array2, 0x40))\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/utils/Arrays.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Arrays.sol)\n\npragma solidity ^0.8.20;\n\nimport {StorageSlot} from \"./StorageSlot.sol\";\nimport {Math} from \"./math/Math.sol\";\n\n/**\n * @dev Collection of functions related to array types.\n */\nlibrary Arrays {\n    using StorageSlot for bytes32;\n\n    /**\n     * @dev Searches a sorted `array` and returns the first index that contains\n     * a value greater or equal to `element`. If no such index exists (i.e. all\n     * values in the array are strictly less than `element`), the array length is\n     * returned. Time complexity O(log n).\n     *\n     * `array` is expected to be sorted in ascending order, and to contain no\n     * repeated elements.\n     */\n    function findUpperBound(uint256[] storage array, uint256 element) internal view returns (uint256) {\n        uint256 low = 0;\n        uint256 high = array.length;\n\n        if (high == 0) {\n            return 0;\n        }\n\n        while (low < high) {\n            uint256 mid = Math.average(low, high);\n\n            // Note that mid will always be strictly less than high (i.e. it will be a valid array index)\n            // because Math.average rounds towards zero (it does integer division with truncation).\n            if (unsafeAccess(array, mid).value > element) {\n                high = mid;\n            } else {\n                low = mid + 1;\n            }\n        }\n\n        // At this point `low` is the exclusive upper bound. We will return the inclusive upper bound.\n        if (low > 0 && unsafeAccess(array, low - 1).value == element) {\n            return low - 1;\n        } else {\n            return low;\n        }\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeAccess(address[] storage arr, uint256 pos) internal pure returns (StorageSlot.AddressSlot storage) {\n        bytes32 slot;\n        // We use assembly to calculate the storage slot of the element at index `pos` of the dynamic array `arr`\n        // following https://docs.soliditylang.org/en/v0.8.20/internals/layout_in_storage.html#mappings-and-dynamic-arrays.\n\n        /// @solidity memory-safe-assembly\n        assembly {\n            mstore(0, arr.slot)\n            slot := add(keccak256(0, 0x20), pos)\n        }\n        return slot.getAddressSlot();\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeAccess(bytes32[] storage arr, uint256 pos) internal pure returns (StorageSlot.Bytes32Slot storage) {\n        bytes32 slot;\n        // We use assembly to calculate the storage slot of the element at index `pos` of the dynamic array `arr`\n        // following https://docs.soliditylang.org/en/v0.8.20/internals/layout_in_storage.html#mappings-and-dynamic-arrays.\n\n        /// @solidity memory-safe-assembly\n        assembly {\n            mstore(0, arr.slot)\n            slot := add(keccak256(0, 0x20), pos)\n        }\n        return slot.getBytes32Slot();\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeAccess(uint256[] storage arr, uint256 pos) internal pure returns (StorageSlot.Uint256Slot storage) {\n        bytes32 slot;\n        // We use assembly to calculate the storage slot of the element at index `pos` of the dynamic array `arr`\n        // following https://docs.soliditylang.org/en/v0.8.20/internals/layout_in_storage.html#mappings-and-dynamic-arrays.\n\n        /// @solidity memory-safe-assembly\n        assembly {\n            mstore(0, arr.slot)\n            slot := add(keccak256(0, 0x20), pos)\n        }\n        return slot.getUint256Slot();\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeMemoryAccess(uint256[] memory arr, uint256 pos) internal pure returns (uint256 res) {\n        assembly {\n            res := mload(add(add(arr, 0x20), mul(pos, 0x20)))\n        }\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeMemoryAccess(address[] memory arr, uint256 pos) internal pure returns (address res) {\n        assembly {\n            res := mload(add(add(arr, 0x20), mul(pos, 0x20)))\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC1155/extensions/IERC1155MetadataURI.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC1155} from \"../IERC1155.sol\";\n\n/**\n * @dev Interface of the optional ERC1155MetadataExtension interface, as defined\n * in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[EIP].\n */\ninterface IERC1155MetadataURI is IERC1155 {\n    /**\n     * @dev Returns the URI for token type `id`.\n     *\n     * If the `\\{id\\}` substring is present in the URI, it must be replaced by\n     * clients with the actual token type ID.\n     */\n    function uri(uint256 id) external view returns (string memory);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC1155/IERC1155Receiver.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Interface that must be implemented by smart contracts in order to receive\n * ERC-1155 token transfers.\n */\ninterface IERC1155Receiver is IERC165 {\n    /**\n     * @dev Handles the receipt of a single ERC1155 token type. This function is\n     * called at the end of a `safeTransferFrom` after the balance has been updated.\n     *\n     * NOTE: To accept the transfer, this must return\n     * `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))`\n     * (i.e. 0xf23a6e61, or its own function selector).\n     *\n     * @param operator The address which initiated the transfer (i.e. msg.sender)\n     * @param from The address which previously owned the token\n     * @param id The ID of the token being transferred\n     * @param value The amount of tokens being transferred\n     * @param data Additional data with no specified format\n     * @return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed\n     */\n    function onERC1155Received(\n        address operator,\n        address from,\n        uint256 id,\n        uint256 value,\n        bytes calldata data\n    ) external returns (bytes4);\n\n    /**\n     * @dev Handles the receipt of a multiple ERC1155 token types. This function\n     * is called at the end of a `safeBatchTransferFrom` after the balances have\n     * been updated.\n     *\n     * NOTE: To accept the transfer(s), this must return\n     * `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))`\n     * (i.e. 0xbc197c81, or its own function selector).\n     *\n     * @param operator The address which initiated the batch transfer (i.e. msg.sender)\n     * @param from The address which previously owned the token\n     * @param ids An array containing ids of each token being transferred (order and length must match values array)\n     * @param values An array containing amounts of each token being transferred (order and length must match ids array)\n     * @param data Additional data with no specified format\n     * @return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed\n     */\n    function onERC1155BatchReceived(\n        address operator,\n        address from,\n        uint256[] calldata ids,\n        uint256[] calldata values,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC1155/IERC1155.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (token/ERC1155/IERC1155.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC1155 compliant contract, as defined in the\n * https://eips.ethereum.org/EIPS/eip-1155[EIP].\n */\ninterface IERC1155 is IERC165 {\n    /**\n     * @dev Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`.\n     */\n    event TransferSingle(address indexed operator, address indexed from, address indexed to, uint256 id, uint256 value);\n\n    /**\n     * @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\n     * transfers.\n     */\n    event TransferBatch(\n        address indexed operator,\n        address indexed from,\n        address indexed to,\n        uint256[] ids,\n        uint256[] values\n    );\n\n    /**\n     * @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\n     * `approved`.\n     */\n    event ApprovalForAll(address indexed account, address indexed operator, bool approved);\n\n    /**\n     * @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\n     *\n     * If an {URI} event was emitted for `id`, the standard\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\n     * returned by {IERC1155MetadataURI-uri}.\n     */\n    event URI(string value, uint256 indexed id);\n\n    /**\n     * @dev Returns the value of tokens of token type `id` owned by `account`.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     */\n    function balanceOf(address account, uint256 id) external view returns (uint256);\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\n     *\n     * Requirements:\n     *\n     * - `accounts` and `ids` must have the same length.\n     */\n    function balanceOfBatch(\n        address[] calldata accounts,\n        uint256[] calldata ids\n    ) external view returns (uint256[] memory);\n\n    /**\n     * @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\n     *\n     * Emits an {ApprovalForAll} event.\n     *\n     * Requirements:\n     *\n     * - `operator` cannot be the caller.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\n     *\n     * See {setApprovalForAll}.\n     */\n    function isApprovedForAll(address account, address operator) external view returns (bool);\n\n    /**\n     * @dev Transfers a `value` amount of tokens of type `id` from `from` to `to`.\n     *\n     * WARNING: This function can potentially allow a reentrancy attack when transferring tokens\n     * to an untrusted contract, when invoking {onERC1155Received} on the receiver.\n     * Ensure to follow the checks-effects-interactions pattern and consider employing\n     * reentrancy guards when interacting with untrusted contracts.\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}.\n     * - `from` must have a balance of tokens of type `id` of at least `value` amount.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n     * acceptance magic value.\n     */\n    function safeTransferFrom(address from, address to, uint256 id, uint256 value, bytes calldata data) external;\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\n     *\n     * WARNING: This function can potentially allow a reentrancy attack when transferring tokens\n     * to an untrusted contract, when invoking {onERC1155BatchReceived} on the receiver.\n     * Ensure to follow the checks-effects-interactions pattern and consider employing\n     * reentrancy guards when interacting with untrusted contracts.\n     *\n     * Emits either a {TransferSingle} or a {TransferBatch} event, depending on the length of the array arguments.\n     *\n     * Requirements:\n     *\n     * - `ids` and `values` must have the same length.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n     * acceptance magic value.\n     */\n    function safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] calldata ids,\n        uint256[] calldata values,\n        bytes calldata data\n    ) external;\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    /**\n     * @dev Muldiv operation overflow.\n     */\n    error MathOverflowedMulDiv();\n\n    enum Rounding {\n        Floor, // Toward negative infinity\n        Ceil, // Toward positive infinity\n        Trunc, // Toward zero\n        Expand // Away from zero\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds towards infinity instead\n     * of rounding towards zero.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (b == 0) {\n            // Guarantee the same behavior as in a regular Solidity division.\n            return a / b;\n        }\n\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n     * denominator == 0.\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n     * Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0 = x * y; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            if (denominator <= prod1) {\n                revert MathOverflowedMulDiv();\n            }\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\n\n            uint256 twos = denominator & (0 - denominator);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\n            // works in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n     * towards zero.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (unsignedRoundsUp(rounding) && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (unsignedRoundsUp(rounding) && 10 ** result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << (result << 3) < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\n     */\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\n        return uint8(rounding) % 2 == 1;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/StorageSlot.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/StorageSlot.sol)\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Library for reading and writing primitive types to specific storage slots.\n *\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n * This library helps with reading and writing to such slots without the need for inline assembly.\n *\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n *\n * Example usage to set ERC1967 implementation slot:\n * ```solidity\n * contract ERC1967 {\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n *\n *     function _getImplementation() internal view returns (address) {\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n *     }\n *\n *     function _setImplementation(address newImplementation) internal {\n *         require(newImplementation.code.length > 0);\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n *     }\n * }\n * ```\n */\nlibrary StorageSlot {\n    struct AddressSlot {\n        address value;\n    }\n\n    struct BooleanSlot {\n        bool value;\n    }\n\n    struct Bytes32Slot {\n        bytes32 value;\n    }\n\n    struct Uint256Slot {\n        uint256 value;\n    }\n\n    struct StringSlot {\n        string value;\n    }\n\n    struct BytesSlot {\n        bytes value;\n    }\n\n    /**\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\n     */\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\n     */\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\n     */\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\n     */\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` with member `value` located at `slot`.\n     */\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\n     */\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := store.slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` with member `value` located at `slot`.\n     */\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\n     */\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := store.slot\n        }\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC1155/ERC1155.sol": {
				"ERC1155": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								}
							],
							"name": "TransferBatch",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "TransferSingle",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "value",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "URI",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "accounts",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								}
							],
							"name": "balanceOfBatch",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeBatchTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "uri",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the basic standard multi-token. See https://eips.ethereum.org/EIPS/eip-1155 Originally based on code by Enjin: https://github.com/enjin/erc-1155",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"events": {
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`."
							},
							"TransferBatch(address,address,address,uint256[],uint256[])": {
								"details": "Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers."
							},
							"TransferSingle(address,address,address,uint256,uint256)": {
								"details": "Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`."
							},
							"URI(string,uint256)": {
								"details": "Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}."
							}
						},
						"kind": "dev",
						"methods": {
							"balanceOf(address,uint256)": {
								"details": "See {IERC1155-balanceOf}."
							},
							"balanceOfBatch(address[],uint256[])": {
								"details": "See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length."
							},
							"constructor": {
								"details": "See {_setURI}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC1155-isApprovedForAll}."
							},
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
								"details": "See {IERC1155-safeBatchTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,uint256,bytes)": {
								"details": "See {IERC1155-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC1155-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"uri(uint256)": {
								"details": "See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP]. Clients calling this function must replace the `\\{id\\}` substring with the actual token type ID."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"balanceOf(address,uint256)": "00fdd58e",
							"balanceOfBatch(address[],uint256[])": "4e1273f4",
							"isApprovedForAll(address,address)": "e985e9c5",
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
							"safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"uri(uint256)": "0e89341c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the basic standard multi-token. See https://eips.ethereum.org/EIPS/eip-1155 Originally based on code by Enjin: https://github.com/enjin/erc-1155\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"See {IERC1155-balanceOf}.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length.\"},\"constructor\":{\"details\":\"See {_setURI}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC1155-isApprovedForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"See {IERC1155-safeBatchTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"See {IERC1155-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC1155-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"uri(uint256)\":{\"details\":\"See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP]. Clients calling this function must replace the `\\\\{id\\\\}` substring with the actual token type ID.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":\"ERC1155\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":{\"keccak256\":\"0xd9b0b8ee1ac6dfee14eb1ad4383a4739dbaa0f2036594bb3a16f0408085dadde\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6309805132e519162d1134c67df22dd963323a9208b4f41344a4c13ed63c1026\",\"dweb:/ipfs/QmTBPHnf6qbtAD4NVnKVFmubUHRqMDPLkseR6apxTUpsQo\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x6caffc9cfdc623eca9f87a686071708af5d5c17454d65022843fdddbc53c0cce\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ecf8c7ed1f8ff443c181f64496ae380ee02e61dcd2ed120e1e997837a926f182\",\"dweb:/ipfs/QmWASYTrZPF2MrcpC3EBmxx6RgtZ5Fr4jwrsmB7ZF7qhDC\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0xb69597a63b202e28401128bed6a6d259e8730191274471af7303eafb247881a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://25addbda49a578b3318130585601344c5149a5549d749adf88e9685349a46b23\",\"dweb:/ipfs/Qme2DuD8gpsve1ZvaSMQpBwMdpU7yAtekDwr7gUp8dX4zX\"]},\"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":{\"keccak256\":\"0xe92b5e199b963d108ad6e06feeede151ba23849e0d064956535489ff967ffe68\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://280e17738a67b06dae02fec32982bd48a8ab71d8df95e9975ae03532634bc522\",\"dweb:/ipfs/QmecjsNcFgy2mMjuNfRDkLpAYMRWnh5o73fw1Bj2rCso2z\"]},\"@openzeppelin/contracts/utils/Arrays.sol\":{\"keccak256\":\"0x8806d620b6571932b662cfd48fbd518d4f70df1f88a23b5724cacde64a77bda1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8043304c8f9e1c1dc4a41935efa067daa77ad7abbae1fda41f015d53fbf327a5\",\"dweb:/ipfs/QmTrF2hSkRZoN9EEu8zdEhBpGNZ7RxzCdXf9ydzc2HQ3tM\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 178,
								"contract": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:ERC1155",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 184,
								"contract": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:ERC1155",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							},
							{
								"astId": 186,
								"contract": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:ERC1155",
								"label": "_uri",
								"offset": 0,
								"slot": "2",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC1155/IERC1155.sol": {
				"IERC1155": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								}
							],
							"name": "TransferBatch",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "TransferSingle",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "value",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "URI",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "accounts",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								}
							],
							"name": "balanceOfBatch",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeBatchTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Required interface of an ERC1155 compliant contract, as defined in the https://eips.ethereum.org/EIPS/eip-1155[EIP].",
						"events": {
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`."
							},
							"TransferBatch(address,address,address,uint256[],uint256[])": {
								"details": "Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers."
							},
							"TransferSingle(address,address,address,uint256,uint256)": {
								"details": "Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`."
							},
							"URI(string,uint256)": {
								"details": "Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}."
							}
						},
						"kind": "dev",
						"methods": {
							"balanceOf(address,uint256)": {
								"details": "Returns the value of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address."
							},
							"balanceOfBatch(address[],uint256[])": {
								"details": "xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}."
							},
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
								"details": "xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {onERC1155BatchReceived} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits either a {TransferSingle} or a {TransferBatch} event, depending on the length of the array arguments. Requirements: - `ids` and `values` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value."
							},
							"safeTransferFrom(address,address,uint256,uint256,bytes)": {
								"details": "Transfers a `value` amount of tokens of type `id` from `from` to `to`. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {onERC1155Received} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `value` amount. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"balanceOf(address,uint256)": "00fdd58e",
							"balanceOfBatch(address[],uint256[])": "4e1273f4",
							"isApprovedForAll(address,address)": "e985e9c5",
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
							"safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC1155 compliant contract, as defined in the https://eips.ethereum.org/EIPS/eip-1155[EIP].\",\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"Returns the value of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {onERC1155BatchReceived} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits either a {TransferSingle} or a {TransferBatch} event, depending on the length of the array arguments. Requirements: - `ids` and `values` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"Transfers a `value` amount of tokens of type `id` from `from` to `to`. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {onERC1155Received} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `value` amount. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":\"IERC1155\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x6caffc9cfdc623eca9f87a686071708af5d5c17454d65022843fdddbc53c0cce\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ecf8c7ed1f8ff443c181f64496ae380ee02e61dcd2ed120e1e997837a926f182\",\"dweb:/ipfs/QmWASYTrZPF2MrcpC3EBmxx6RgtZ5Fr4jwrsmB7ZF7qhDC\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol": {
				"IERC1155Receiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC1155BatchReceived",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC1155Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface that must be implemented by smart contracts in order to receive ERC-1155 token transfers.",
						"kind": "dev",
						"methods": {
							"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": {
								"details": "Handles the receipt of a multiple ERC1155 token types. This function is called at the end of a `safeBatchTransferFrom` after the balances have been updated. NOTE: To accept the transfer(s), this must return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` (i.e. 0xbc197c81, or its own function selector).",
								"params": {
									"data": "Additional data with no specified format",
									"from": "The address which previously owned the token",
									"ids": "An array containing ids of each token being transferred (order and length must match values array)",
									"operator": "The address which initiated the batch transfer (i.e. msg.sender)",
									"values": "An array containing amounts of each token being transferred (order and length must match ids array)"
								},
								"returns": {
									"_0": "`bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed"
								}
							},
							"onERC1155Received(address,address,uint256,uint256,bytes)": {
								"details": "Handles the receipt of a single ERC1155 token type. This function is called at the end of a `safeTransferFrom` after the balance has been updated. NOTE: To accept the transfer, this must return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` (i.e. 0xf23a6e61, or its own function selector).",
								"params": {
									"data": "Additional data with no specified format",
									"from": "The address which previously owned the token",
									"id": "The ID of the token being transferred",
									"operator": "The address which initiated the transfer (i.e. msg.sender)",
									"value": "The amount of tokens being transferred"
								},
								"returns": {
									"_0": "`bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed"
								}
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": "bc197c81",
							"onERC1155Received(address,address,uint256,uint256,bytes)": "f23a6e61",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155BatchReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface that must be implemented by smart contracts in order to receive ERC-1155 token transfers.\",\"kind\":\"dev\",\"methods\":{\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\":{\"details\":\"Handles the receipt of a multiple ERC1155 token types. This function is called at the end of a `safeBatchTransferFrom` after the balances have been updated. NOTE: To accept the transfer(s), this must return `bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` (i.e. 0xbc197c81, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"ids\":\"An array containing ids of each token being transferred (order and length must match values array)\",\"operator\":\"The address which initiated the batch transfer (i.e. msg.sender)\",\"values\":\"An array containing amounts of each token being transferred (order and length must match ids array)\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` if transfer is allowed\"}},\"onERC1155Received(address,address,uint256,uint256,bytes)\":{\"details\":\"Handles the receipt of a single ERC1155 token type. This function is called at the end of a `safeTransferFrom` after the balance has been updated. NOTE: To accept the transfer, this must return `bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` (i.e. 0xf23a6e61, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"id\":\"The ID of the token being transferred\",\"operator\":\"The address which initiated the transfer (i.e. msg.sender)\",\"value\":\"The amount of tokens being transferred\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` if transfer is allowed\"}},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":\"IERC1155Receiver\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0xb69597a63b202e28401128bed6a6d259e8730191274471af7303eafb247881a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://25addbda49a578b3318130585601344c5149a5549d749adf88e9685349a46b23\",\"dweb:/ipfs/Qme2DuD8gpsve1ZvaSMQpBwMdpU7yAtekDwr7gUp8dX4zX\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol": {
				"ERC1155Burnable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								}
							],
							"name": "TransferBatch",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "TransferSingle",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "value",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "URI",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "accounts",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								}
							],
							"name": "balanceOfBatch",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								}
							],
							"name": "burnBatch",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeBatchTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "uri",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Extension of {ERC1155} that allows token holders to destroy both their own tokens and those that they have been approved to use.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"events": {
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`."
							},
							"TransferBatch(address,address,address,uint256[],uint256[])": {
								"details": "Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers."
							},
							"TransferSingle(address,address,address,uint256,uint256)": {
								"details": "Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`."
							},
							"URI(string,uint256)": {
								"details": "Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}."
							}
						},
						"kind": "dev",
						"methods": {
							"balanceOf(address,uint256)": {
								"details": "See {IERC1155-balanceOf}."
							},
							"balanceOfBatch(address[],uint256[])": {
								"details": "See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC1155-isApprovedForAll}."
							},
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
								"details": "See {IERC1155-safeBatchTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,uint256,bytes)": {
								"details": "See {IERC1155-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC1155-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"uri(uint256)": {
								"details": "See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP]. Clients calling this function must replace the `\\{id\\}` substring with the actual token type ID."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"balanceOf(address,uint256)": "00fdd58e",
							"balanceOfBatch(address[],uint256[])": "4e1273f4",
							"burn(address,uint256,uint256)": "f5298aca",
							"burnBatch(address,uint256[],uint256[])": "6b20c454",
							"isApprovedForAll(address,address)": "e985e9c5",
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
							"safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"uri(uint256)": "0e89341c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"burnBatch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Extension of {ERC1155} that allows token holders to destroy both their own tokens and those that they have been approved to use.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"See {IERC1155-balanceOf}.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC1155-isApprovedForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"See {IERC1155-safeBatchTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"See {IERC1155-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC1155-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"uri(uint256)\":{\"details\":\"See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP]. Clients calling this function must replace the `\\\\{id\\\\}` substring with the actual token type ID.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":\"ERC1155Burnable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":{\"keccak256\":\"0xd9b0b8ee1ac6dfee14eb1ad4383a4739dbaa0f2036594bb3a16f0408085dadde\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6309805132e519162d1134c67df22dd963323a9208b4f41344a4c13ed63c1026\",\"dweb:/ipfs/QmTBPHnf6qbtAD4NVnKVFmubUHRqMDPLkseR6apxTUpsQo\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x6caffc9cfdc623eca9f87a686071708af5d5c17454d65022843fdddbc53c0cce\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ecf8c7ed1f8ff443c181f64496ae380ee02e61dcd2ed120e1e997837a926f182\",\"dweb:/ipfs/QmWASYTrZPF2MrcpC3EBmxx6RgtZ5Fr4jwrsmB7ZF7qhDC\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0xb69597a63b202e28401128bed6a6d259e8730191274471af7303eafb247881a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://25addbda49a578b3318130585601344c5149a5549d749adf88e9685349a46b23\",\"dweb:/ipfs/Qme2DuD8gpsve1ZvaSMQpBwMdpU7yAtekDwr7gUp8dX4zX\"]},\"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":{\"keccak256\":\"0xdfab949ba677f4b122d0c14225e6db7ca8a65524e2f00049e57b04f68eceeb87\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://25d240211d484954a409a8870c3a971af9e2eb6b6d0ab46b50c193c4a1576006\",\"dweb:/ipfs/QmdzSJoJ6iqoWrGKNeDjV4KVfCqna7Vc7AMoQxpxTdTMpF\"]},\"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":{\"keccak256\":\"0xe92b5e199b963d108ad6e06feeede151ba23849e0d064956535489ff967ffe68\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://280e17738a67b06dae02fec32982bd48a8ab71d8df95e9975ae03532634bc522\",\"dweb:/ipfs/QmecjsNcFgy2mMjuNfRDkLpAYMRWnh5o73fw1Bj2rCso2z\"]},\"@openzeppelin/contracts/utils/Arrays.sol\":{\"keccak256\":\"0x8806d620b6571932b662cfd48fbd518d4f70df1f88a23b5724cacde64a77bda1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8043304c8f9e1c1dc4a41935efa067daa77ad7abbae1fda41f015d53fbf327a5\",\"dweb:/ipfs/QmTrF2hSkRZoN9EEu8zdEhBpGNZ7RxzCdXf9ydzc2HQ3tM\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 178,
								"contract": "@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol:ERC1155Burnable",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 184,
								"contract": "@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol:ERC1155Burnable",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							},
							{
								"astId": 186,
								"contract": "@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol:ERC1155Burnable",
								"label": "_uri",
								"offset": 0,
								"slot": "2",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol": {
				"ERC1155Supply": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								}
							],
							"name": "TransferBatch",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "TransferSingle",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "value",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "URI",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "accounts",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								}
							],
							"name": "balanceOfBatch",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "exists",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeBatchTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "uri",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Extension of ERC1155 that adds tracking of total supply per id. Useful for scenarios where Fungible and Non-fungible tokens have to be clearly identified. Note: While a totalSupply of 1 might mean the corresponding is an NFT, there is no guarantees that no other token with the same id are not going to be minted. NOTE: This contract implies a global limit of 2**256 - 1 to the number of tokens that can be minted. CAUTION: This extension should not be added in an upgrade to an already deployed contract.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"events": {
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`."
							},
							"TransferBatch(address,address,address,uint256[],uint256[])": {
								"details": "Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers."
							},
							"TransferSingle(address,address,address,uint256,uint256)": {
								"details": "Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`."
							},
							"URI(string,uint256)": {
								"details": "Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}."
							}
						},
						"kind": "dev",
						"methods": {
							"balanceOf(address,uint256)": {
								"details": "See {IERC1155-balanceOf}."
							},
							"balanceOfBatch(address[],uint256[])": {
								"details": "See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length."
							},
							"exists(uint256)": {
								"details": "Indicates whether any token exist with a given id, or not."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC1155-isApprovedForAll}."
							},
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
								"details": "See {IERC1155-safeBatchTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,uint256,bytes)": {
								"details": "See {IERC1155-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC1155-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"totalSupply()": {
								"details": "Total value of tokens."
							},
							"totalSupply(uint256)": {
								"details": "Total value of tokens in with a given id."
							},
							"uri(uint256)": {
								"details": "See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP]. Clients calling this function must replace the `\\{id\\}` substring with the actual token type ID."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"balanceOf(address,uint256)": "00fdd58e",
							"balanceOfBatch(address[],uint256[])": "4e1273f4",
							"exists(uint256)": "4f558e79",
							"isApprovedForAll(address,address)": "e985e9c5",
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
							"safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"totalSupply()": "18160ddd",
							"totalSupply(uint256)": "bd85b039",
							"uri(uint256)": "0e89341c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"exists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Extension of ERC1155 that adds tracking of total supply per id. Useful for scenarios where Fungible and Non-fungible tokens have to be clearly identified. Note: While a totalSupply of 1 might mean the corresponding is an NFT, there is no guarantees that no other token with the same id are not going to be minted. NOTE: This contract implies a global limit of 2**256 - 1 to the number of tokens that can be minted. CAUTION: This extension should not be added in an upgrade to an already deployed contract.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"See {IERC1155-balanceOf}.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length.\"},\"exists(uint256)\":{\"details\":\"Indicates whether any token exist with a given id, or not.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC1155-isApprovedForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"See {IERC1155-safeBatchTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"See {IERC1155-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC1155-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"totalSupply()\":{\"details\":\"Total value of tokens.\"},\"totalSupply(uint256)\":{\"details\":\"Total value of tokens in with a given id.\"},\"uri(uint256)\":{\"details\":\"See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP]. Clients calling this function must replace the `\\\\{id\\\\}` substring with the actual token type ID.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":\"ERC1155Supply\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":{\"keccak256\":\"0xd9b0b8ee1ac6dfee14eb1ad4383a4739dbaa0f2036594bb3a16f0408085dadde\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6309805132e519162d1134c67df22dd963323a9208b4f41344a4c13ed63c1026\",\"dweb:/ipfs/QmTBPHnf6qbtAD4NVnKVFmubUHRqMDPLkseR6apxTUpsQo\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x6caffc9cfdc623eca9f87a686071708af5d5c17454d65022843fdddbc53c0cce\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ecf8c7ed1f8ff443c181f64496ae380ee02e61dcd2ed120e1e997837a926f182\",\"dweb:/ipfs/QmWASYTrZPF2MrcpC3EBmxx6RgtZ5Fr4jwrsmB7ZF7qhDC\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0xb69597a63b202e28401128bed6a6d259e8730191274471af7303eafb247881a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://25addbda49a578b3318130585601344c5149a5549d749adf88e9685349a46b23\",\"dweb:/ipfs/Qme2DuD8gpsve1ZvaSMQpBwMdpU7yAtekDwr7gUp8dX4zX\"]},\"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":{\"keccak256\":\"0x1cebc792116430641b9ec887f245ce5dde0ace17a8d5fc38e03fd087e061b537\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://21fea8da292377bdc2930254fd5536c1d2be84a1fcb6268527ab8dd1142b23ee\",\"dweb:/ipfs/QmS5AwrNHbvcFB7TmwcXZNXPgMXZxRxmmcey4eP8YTvBgX\"]},\"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":{\"keccak256\":\"0xe92b5e199b963d108ad6e06feeede151ba23849e0d064956535489ff967ffe68\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://280e17738a67b06dae02fec32982bd48a8ab71d8df95e9975ae03532634bc522\",\"dweb:/ipfs/QmecjsNcFgy2mMjuNfRDkLpAYMRWnh5o73fw1Bj2rCso2z\"]},\"@openzeppelin/contracts/utils/Arrays.sol\":{\"keccak256\":\"0x8806d620b6571932b662cfd48fbd518d4f70df1f88a23b5724cacde64a77bda1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8043304c8f9e1c1dc4a41935efa067daa77ad7abbae1fda41f015d53fbf327a5\",\"dweb:/ipfs/QmTrF2hSkRZoN9EEu8zdEhBpGNZ7RxzCdXf9ydzc2HQ3tM\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 178,
								"contract": "@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol:ERC1155Supply",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 184,
								"contract": "@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol:ERC1155Supply",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							},
							{
								"astId": 186,
								"contract": "@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol:ERC1155Supply",
								"label": "_uri",
								"offset": 0,
								"slot": "2",
								"type": "t_string_storage"
							},
							{
								"astId": 1443,
								"contract": "@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol:ERC1155Supply",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_uint256,t_uint256)"
							},
							{
								"astId": 1445,
								"contract": "@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol:ERC1155Supply",
								"label": "_totalSupplyAll",
								"offset": 0,
								"slot": "4",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_uint256,t_uint256)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol": {
				"IERC1155MetadataURI": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								}
							],
							"name": "TransferBatch",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "TransferSingle",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "value",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "URI",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "accounts",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								}
							],
							"name": "balanceOfBatch",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeBatchTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "uri",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the optional ERC1155MetadataExtension interface, as defined in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[EIP].",
						"events": {
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`."
							},
							"TransferBatch(address,address,address,uint256[],uint256[])": {
								"details": "Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers."
							},
							"TransferSingle(address,address,address,uint256,uint256)": {
								"details": "Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`."
							},
							"URI(string,uint256)": {
								"details": "Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}."
							}
						},
						"kind": "dev",
						"methods": {
							"balanceOf(address,uint256)": {
								"details": "Returns the value of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address."
							},
							"balanceOfBatch(address[],uint256[])": {
								"details": "xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}."
							},
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
								"details": "xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {onERC1155BatchReceived} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits either a {TransferSingle} or a {TransferBatch} event, depending on the length of the array arguments. Requirements: - `ids` and `values` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value."
							},
							"safeTransferFrom(address,address,uint256,uint256,bytes)": {
								"details": "Transfers a `value` amount of tokens of type `id` from `from` to `to`. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {onERC1155Received} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `value` amount. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"uri(uint256)": {
								"details": "Returns the URI for token type `id`. If the `\\{id\\}` substring is present in the URI, it must be replaced by clients with the actual token type ID."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"balanceOf(address,uint256)": "00fdd58e",
							"balanceOfBatch(address[],uint256[])": "4e1273f4",
							"isApprovedForAll(address,address)": "e985e9c5",
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
							"safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"uri(uint256)": "0e89341c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the optional ERC1155MetadataExtension interface, as defined in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[EIP].\",\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"Returns the value of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {onERC1155BatchReceived} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits either a {TransferSingle} or a {TransferBatch} event, depending on the length of the array arguments. Requirements: - `ids` and `values` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"Transfers a `value` amount of tokens of type `id` from `from` to `to`. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {onERC1155Received} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `value` amount. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"uri(uint256)\":{\"details\":\"Returns the URI for token type `id`. If the `\\\\{id\\\\}` substring is present in the URI, it must be replaced by clients with the actual token type ID.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":\"IERC1155MetadataURI\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x6caffc9cfdc623eca9f87a686071708af5d5c17454d65022843fdddbc53c0cce\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ecf8c7ed1f8ff443c181f64496ae380ee02e61dcd2ed120e1e997837a926f182\",\"dweb:/ipfs/QmWASYTrZPF2MrcpC3EBmxx6RgtZ5Fr4jwrsmB7ZF7qhDC\"]},\"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":{\"keccak256\":\"0xe92b5e199b963d108ad6e06feeede151ba23849e0d064956535489ff967ffe68\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://280e17738a67b06dae02fec32982bd48a8ab71d8df95e9975ae03532634bc522\",\"dweb:/ipfs/QmecjsNcFgy2mMjuNfRDkLpAYMRWnh5o73fw1Bj2rCso2z\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Arrays.sol": {
				"Arrays": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to array types.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Arrays.sol\":276:4802  library Arrays {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":276:4802  library Arrays {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212209ddeb7f30316ca043df9ae887f9e40324d506221a9b0525d847bb63ccfe2e59164736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212209ddeb7f30316ca043df9ae887f9e40324d506221a9b0525d847bb63ccfe2e59164736f6c63430008140033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP14 0xDE 0xB7 RETURN SUB AND 0xCA DIV RETURNDATASIZE 0xF9 0xAE DUP9 PUSH32 0x9E40324D506221A9B0525D847BB63CCFE2E59164736F6C634300081400330000 ",
							"sourceMap": "276:4526:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212209ddeb7f30316ca043df9ae887f9e40324d506221a9b0525d847bb63ccfe2e59164736f6c63430008140033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP14 0xDE 0xB7 RETURN SUB AND 0xCA DIV RETURNDATASIZE 0xF9 0xAE DUP9 PUSH32 0x9E40324D506221A9B0525D847BB63CCFE2E59164736F6C634300081400330000 ",
							"sourceMap": "276:4526:7:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"findUpperBound(uint256[] storage pointer,uint256)": "infinite",
								"unsafeAccess(address[] storage pointer,uint256)": "infinite",
								"unsafeAccess(bytes32[] storage pointer,uint256)": "infinite",
								"unsafeAccess(uint256[] storage pointer,uint256)": "infinite",
								"unsafeMemoryAccess(address[] memory,uint256)": "infinite",
								"unsafeMemoryAccess(uint256[] memory,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 276,
									"end": 4802,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "PUSH [$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "PUSH",
									"source": 7,
									"value": "B"
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "BYTE",
									"source": 7
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "tag",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "ADDRESS",
									"source": 7
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "MSTORE8",
									"source": 7
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "RETURN",
									"source": 7
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212209ddeb7f30316ca043df9ae887f9e40324d506221a9b0525d847bb63ccfe2e59164736f6c63430008140033",
									".code": [
										{
											"begin": 276,
											"end": 4802,
											"name": "PUSHDEPLOYADDRESS",
											"source": 7
										},
										{
											"begin": 276,
											"end": 4802,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 276,
											"end": 4802,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 276,
											"end": 4802,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 276,
											"end": 4802,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 276,
											"end": 4802,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 276,
											"end": 4802,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 276,
											"end": 4802,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 276,
											"end": 4802,
											"name": "REVERT",
											"source": 7
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC1155/ERC1155.sol",
								"@openzeppelin/contracts/token/ERC1155/IERC1155.sol",
								"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol",
								"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol",
								"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol",
								"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol",
								"@openzeppelin/contracts/utils/Arrays.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"contracts/Items/Items.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to array types.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Arrays.sol\":\"Arrays\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Arrays.sol\":{\"keccak256\":\"0x8806d620b6571932b662cfd48fbd518d4f70df1f88a23b5724cacde64a77bda1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8043304c8f9e1c1dc4a41935efa067daa77ad7abbae1fda41f015d53fbf327a5\",\"dweb:/ipfs/QmTrF2hSkRZoN9EEu8zdEhBpGNZ7RxzCdXf9ydzc2HQ3tM\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/StorageSlot.sol": {
				"StorageSlot": {
					"abi": [],
					"devdoc": {
						"details": "Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC1967 implementation slot: ```solidity contract ERC1967 {     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(newImplementation.code.length > 0);         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ```",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/StorageSlot.sol\":1245:3930  library StorageSlot {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/StorageSlot.sol\":1245:3930  library StorageSlot {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220122bdb37b83b84a84480ef52227fb13b9f3ed775d4693784d4e6a75172b45ee464736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220122bdb37b83b84a84480ef52227fb13b9f3ed775d4693784d4e6a75172b45ee464736f6c63430008140033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SLT 0x2B 0xDB CALLDATACOPY 0xB8 EXTCODESIZE DUP5 0xA8 PREVRANDAO DUP1 0xEF MSTORE 0x22 PUSH32 0xB13B9F3ED775D4693784D4E6A75172B45EE464736F6C63430008140033000000 ",
							"sourceMap": "1245:2685:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220122bdb37b83b84a84480ef52227fb13b9f3ed775d4693784d4e6a75172b45ee464736f6c63430008140033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SLT 0x2B 0xDB CALLDATACOPY 0xB8 EXTCODESIZE DUP5 0xA8 PREVRANDAO DUP1 0xEF MSTORE 0x22 PUSH32 0xB13B9F3ED775D4693784D4E6A75172B45EE464736F6C63430008140033000000 ",
							"sourceMap": "1245:2685:9:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"getAddressSlot(bytes32)": "infinite",
								"getBooleanSlot(bytes32)": "infinite",
								"getBytes32Slot(bytes32)": "infinite",
								"getBytesSlot(bytes storage pointer)": "infinite",
								"getBytesSlot(bytes32)": "infinite",
								"getStringSlot(bytes32)": "infinite",
								"getStringSlot(string storage pointer)": "infinite",
								"getUint256Slot(bytes32)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH #[$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH [$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 9,
									"value": "B"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "BYTE",
									"source": 9
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "EQ",
									"source": 9
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 9,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "tag",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "ADDRESS",
									"source": 9
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "MSTORE8",
									"source": 9
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "RETURN",
									"source": 9
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220122bdb37b83b84a84480ef52227fb13b9f3ed775d4693784d4e6a75172b45ee464736f6c63430008140033",
									".code": [
										{
											"begin": 1245,
											"end": 3930,
											"name": "PUSHDEPLOYADDRESS",
											"source": 9
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "ADDRESS",
											"source": 9
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "REVERT",
											"source": 9
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC1155/ERC1155.sol",
								"@openzeppelin/contracts/token/ERC1155/IERC1155.sol",
								"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol",
								"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol",
								"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol",
								"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol",
								"@openzeppelin/contracts/utils/Arrays.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"contracts/Items/Items.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC1967 implementation slot: ```solidity contract ERC1967 {     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(newImplementation.code.length > 0);         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ```\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":\"StorageSlot\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"Math": {
					"abi": [
						{
							"inputs": [],
							"name": "MathOverflowedMulDiv",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard math utilities missing in the Solidity language.",
						"errors": {
							"MathOverflowedMulDiv()": [
								{
									"details": "Muldiv operation overflow."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/Math.sol\":203:15117  library Math {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":203:15117  library Math {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212204a90bcf65ffb48e9c51d3503f33f51a10bd9a2c31b2d95cf873206fc780da2d364736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212204a90bcf65ffb48e9c51d3503f33f51a10bd9a2c31b2d95cf873206fc780da2d364736f6c63430008140033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4A SWAP1 0xBC 0xF6 PUSH0 0xFB BASEFEE 0xE9 0xC5 SAR CALLDATALOAD SUB RETURN EXTCODEHASH MLOAD LOG1 SIGNEXTEND 0xD9 LOG2 0xC3 SHL 0x2D SWAP6 0xCF DUP8 ORIGIN MOD 0xFC PUSH25 0xDA2D364736F6C634300081400330000000000000000000000 ",
							"sourceMap": "203:14914:12:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212204a90bcf65ffb48e9c51d3503f33f51a10bd9a2c31b2d95cf873206fc780da2d364736f6c63430008140033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4A SWAP1 0xBC 0xF6 PUSH0 0xFB BASEFEE 0xE9 0xC5 SAR CALLDATALOAD SUB RETURN EXTCODEHASH MLOAD LOG1 SIGNEXTEND 0xD9 LOG2 0xC3 SHL 0x2D SWAP6 0xCF DUP8 ORIGIN MOD 0xFC PUSH25 0xDA2D364736F6C634300081400330000000000000000000000 ",
							"sourceMap": "203:14914:12:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"average(uint256,uint256)": "infinite",
								"ceilDiv(uint256,uint256)": "infinite",
								"log10(uint256)": "infinite",
								"log10(uint256,enum Math.Rounding)": "infinite",
								"log2(uint256)": "infinite",
								"log2(uint256,enum Math.Rounding)": "infinite",
								"log256(uint256)": "infinite",
								"log256(uint256,enum Math.Rounding)": "infinite",
								"max(uint256,uint256)": "infinite",
								"min(uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256,enum Math.Rounding)": "infinite",
								"sqrt(uint256)": "infinite",
								"sqrt(uint256,enum Math.Rounding)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite",
								"unsignedRoundsUp(enum Math.Rounding)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH #[$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH [$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 12,
									"value": "B"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "CODECOPY",
									"source": 12
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "BYTE",
									"source": 12
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 12,
									"value": "73"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "EQ",
									"source": 12
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 12,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 12,
									"value": "4"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 12,
									"value": "24"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "tag",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "ADDRESS",
									"source": 12
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 12,
									"value": "73"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE8",
									"source": 12
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "RETURN",
									"source": 12
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212204a90bcf65ffb48e9c51d3503f33f51a10bd9a2c31b2d95cf873206fc780da2d364736f6c63430008140033",
									".code": [
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSHDEPLOYADDRESS",
											"source": 12
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "ADDRESS",
											"source": 12
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "REVERT",
											"source": 12
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC1155/ERC1155.sol",
								"@openzeppelin/contracts/token/ERC1155/IERC1155.sol",
								"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol",
								"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol",
								"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol",
								"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol",
								"@openzeppelin/contracts/utils/Arrays.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"contracts/Items/Items.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"MathOverflowedMulDiv\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"errors\":{\"MathOverflowedMulDiv()\":[{\"details\":\"Muldiv operation overflow.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/Items/Items.sol": {
				"Items": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "gameAddress",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								}
							],
							"name": "TransferBatch",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "TransferSingle",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "value",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "URI",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "accounts",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								}
							],
							"name": "balanceOfBatch",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								}
							],
							"name": "burnBatch",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "exists",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "mintBatch",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeBatchTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "uri",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"custom:security-contact": "krlebyte@gmail.com",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"events": {
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`."
							},
							"TransferBatch(address,address,address,uint256[],uint256[])": {
								"details": "Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers."
							},
							"TransferSingle(address,address,address,uint256,uint256)": {
								"details": "Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`."
							},
							"URI(string,uint256)": {
								"details": "Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}."
							}
						},
						"kind": "dev",
						"methods": {
							"balanceOf(address,uint256)": {
								"details": "See {IERC1155-balanceOf}."
							},
							"balanceOfBatch(address[],uint256[])": {
								"details": "See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length."
							},
							"exists(uint256)": {
								"details": "Indicates whether any token exist with a given id, or not."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC1155-isApprovedForAll}."
							},
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
								"details": "See {IERC1155-safeBatchTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,uint256,bytes)": {
								"details": "See {IERC1155-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC1155-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"totalSupply()": {
								"details": "Total value of tokens."
							},
							"totalSupply(uint256)": {
								"details": "Total value of tokens in with a given id."
							},
							"uri(uint256)": {
								"details": "See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP]. Clients calling this function must replace the `\\{id\\}` substring with the actual token type ID."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Items/Items.sol\":323:1199  contract Items is ERC1155, ERC1155Burnable, ERC1155Supply {... */\n  mstore(0x40, 0xa0)\n    /* \"contracts/Items/Items.sol\":428:545  constructor (address gameAddress)... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1251:1313  constructor(string memory uri_) {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x20\n  dup2\n  mstore\n  0x20\n  add\n  0x68747470733a2f2f736f6d2e657465726e697461732e67616d65732f6a736f6e\n  dup2\n  mstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1293:1306  _setURI(uri_) */\n  tag_7\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1301:1305  uri_ */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1293:1300  _setURI */\n  shl(0x20, tag_8)\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1293:1306  _setURI(uri_) */\n  0x20\n  shr\n  jump\t// in\ntag_7:\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1251:1313  constructor(string memory uri_) {... */\n  pop\n    /* \"contracts/Items/Items.sol\":529:540  gameAddress */\n  dup1\n    /* \"contracts/Items/Items.sol\":514:540  _gameAddress = gameAddress */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x80\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  pop\n  pop\n    /* \"contracts/Items/Items.sol\":428:545  constructor (address gameAddress)... */\n  pop\n    /* \"contracts/Items/Items.sol\":323:1199  contract Items is ERC1155, ERC1155Burnable, ERC1155Supply {... */\n  jump(tag_10)\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10282:10368  function _setURI(string memory newuri) internal virtual {... */\ntag_8:\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10355:10361  newuri */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10348:10352  _uri */\n  0x02\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10348:10361  _uri = newuri */\n  swap1\n  dup2\n  tag_12\n  swap2\n  swap1\n  tag_13\n  jump\t// in\ntag_12:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10282:10368  function _setURI(string memory newuri) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_15:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_17:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_18:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_47\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_17\n  jump\t// in\ntag_47:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_19:\n    /* \"#utility.yul\":641:665   */\n  tag_49\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_18\n  jump\t// in\ntag_49:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_50\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  dup1\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_50:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_20:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_52\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_19\n  jump\t// in\ntag_52:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:1196   */\ntag_3:\n    /* \"#utility.yul\":915:921   */\n  0x00\n    /* \"#utility.yul\":964:966   */\n  0x20\n    /* \"#utility.yul\":952:961   */\n  dup3\n    /* \"#utility.yul\":943:950   */\n  dup5\n    /* \"#utility.yul\":939:962   */\n  sub\n    /* \"#utility.yul\":935:967   */\n  slt\n    /* \"#utility.yul\":932:1051   */\n  iszero\n  tag_54\n  jumpi\n    /* \"#utility.yul\":970:1049   */\n  tag_55\n  tag_15\n  jump\t// in\ntag_55:\n    /* \"#utility.yul\":932:1051   */\ntag_54:\n    /* \"#utility.yul\":1090:1091   */\n  0x00\n    /* \"#utility.yul\":1115:1179   */\n  tag_56\n    /* \"#utility.yul\":1171:1178   */\n  dup5\n    /* \"#utility.yul\":1162:1168   */\n  dup3\n    /* \"#utility.yul\":1151:1160   */\n  dup6\n    /* \"#utility.yul\":1147:1169   */\n  add\n    /* \"#utility.yul\":1115:1179   */\n  tag_20\n  jump\t// in\ntag_56:\n    /* \"#utility.yul\":1105:1179   */\n  swap2\n  pop\n    /* \"#utility.yul\":1061:1189   */\n  pop\n    /* \"#utility.yul\":845:1196   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1202:1301   */\ntag_21:\n    /* \"#utility.yul\":1254:1260   */\n  0x00\n    /* \"#utility.yul\":1288:1293   */\n  dup2\n    /* \"#utility.yul\":1282:1294   */\n  mload\n    /* \"#utility.yul\":1272:1294   */\n  swap1\n  pop\n    /* \"#utility.yul\":1202:1301   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1307:1487   */\ntag_22:\n    /* \"#utility.yul\":1355:1432   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":1352:1353   */\n  0x00\n    /* \"#utility.yul\":1345:1433   */\n  mstore\n    /* \"#utility.yul\":1452:1456   */\n  0x41\n    /* \"#utility.yul\":1449:1450   */\n  0x04\n    /* \"#utility.yul\":1442:1457   */\n  mstore\n    /* \"#utility.yul\":1476:1480   */\n  0x24\n    /* \"#utility.yul\":1473:1474   */\n  0x00\n    /* \"#utility.yul\":1466:1481   */\n  revert\n    /* \"#utility.yul\":1493:1673   */\ntag_23:\n    /* \"#utility.yul\":1541:1618   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":1538:1539   */\n  0x00\n    /* \"#utility.yul\":1531:1619   */\n  mstore\n    /* \"#utility.yul\":1638:1642   */\n  0x22\n    /* \"#utility.yul\":1635:1636   */\n  0x04\n    /* \"#utility.yul\":1628:1643   */\n  mstore\n    /* \"#utility.yul\":1662:1666   */\n  0x24\n    /* \"#utility.yul\":1659:1660   */\n  0x00\n    /* \"#utility.yul\":1652:1667   */\n  revert\n    /* \"#utility.yul\":1679:1999   */\ntag_24:\n    /* \"#utility.yul\":1723:1729   */\n  0x00\n    /* \"#utility.yul\":1760:1761   */\n  0x02\n    /* \"#utility.yul\":1754:1758   */\n  dup3\n    /* \"#utility.yul\":1750:1762   */\n  div\n    /* \"#utility.yul\":1740:1762   */\n  swap1\n  pop\n    /* \"#utility.yul\":1807:1808   */\n  0x01\n    /* \"#utility.yul\":1801:1805   */\n  dup3\n    /* \"#utility.yul\":1797:1809   */\n  and\n    /* \"#utility.yul\":1828:1846   */\n  dup1\n    /* \"#utility.yul\":1818:1899   */\n  tag_61\n  jumpi\n    /* \"#utility.yul\":1884:1888   */\n  0x7f\n    /* \"#utility.yul\":1876:1882   */\n  dup3\n    /* \"#utility.yul\":1872:1889   */\n  and\n    /* \"#utility.yul\":1862:1889   */\n  swap2\n  pop\n    /* \"#utility.yul\":1818:1899   */\ntag_61:\n    /* \"#utility.yul\":1946:1948   */\n  0x20\n    /* \"#utility.yul\":1938:1944   */\n  dup3\n    /* \"#utility.yul\":1935:1949   */\n  lt\n    /* \"#utility.yul\":1915:1933   */\n  dup2\n    /* \"#utility.yul\":1912:1950   */\n  sub\n    /* \"#utility.yul\":1909:1993   */\n  tag_62\n  jumpi\n    /* \"#utility.yul\":1965:1983   */\n  tag_63\n  tag_23\n  jump\t// in\ntag_63:\n    /* \"#utility.yul\":1909:1993   */\ntag_62:\n    /* \"#utility.yul\":1730:1999   */\n  pop\n    /* \"#utility.yul\":1679:1999   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2005:2146   */\ntag_25:\n    /* \"#utility.yul\":2054:2058   */\n  0x00\n    /* \"#utility.yul\":2077:2080   */\n  dup2\n    /* \"#utility.yul\":2069:2080   */\n  swap1\n  pop\n    /* \"#utility.yul\":2100:2103   */\n  dup2\n    /* \"#utility.yul\":2097:2098   */\n  0x00\n    /* \"#utility.yul\":2090:2104   */\n  mstore\n    /* \"#utility.yul\":2134:2138   */\n  0x20\n    /* \"#utility.yul\":2131:2132   */\n  0x00\n    /* \"#utility.yul\":2121:2139   */\n  keccak256\n    /* \"#utility.yul\":2113:2139   */\n  swap1\n  pop\n    /* \"#utility.yul\":2005:2146   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2152:2245   */\ntag_26:\n    /* \"#utility.yul\":2189:2195   */\n  0x00\n    /* \"#utility.yul\":2236:2238   */\n  0x20\n    /* \"#utility.yul\":2231:2233   */\n  0x1f\n    /* \"#utility.yul\":2224:2229   */\n  dup4\n    /* \"#utility.yul\":2220:2234   */\n  add\n    /* \"#utility.yul\":2216:2239   */\n  div\n    /* \"#utility.yul\":2206:2239   */\n  swap1\n  pop\n    /* \"#utility.yul\":2152:2245   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2251:2358   */\ntag_27:\n    /* \"#utility.yul\":2295:2303   */\n  0x00\n    /* \"#utility.yul\":2345:2350   */\n  dup3\n    /* \"#utility.yul\":2339:2343   */\n  dup3\n    /* \"#utility.yul\":2335:2351   */\n  shl\n    /* \"#utility.yul\":2314:2351   */\n  swap1\n  pop\n    /* \"#utility.yul\":2251:2358   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2364:2757   */\ntag_28:\n    /* \"#utility.yul\":2433:2439   */\n  0x00\n    /* \"#utility.yul\":2483:2484   */\n  0x08\n    /* \"#utility.yul\":2471:2481   */\n  dup4\n    /* \"#utility.yul\":2467:2485   */\n  mul\n    /* \"#utility.yul\":2506:2603   */\n  tag_68\n    /* \"#utility.yul\":2536:2602   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":2525:2534   */\n  dup3\n    /* \"#utility.yul\":2506:2603   */\n  tag_27\n  jump\t// in\ntag_68:\n    /* \"#utility.yul\":2624:2663   */\n  tag_69\n    /* \"#utility.yul\":2654:2662   */\n  dup7\n    /* \"#utility.yul\":2643:2652   */\n  dup4\n    /* \"#utility.yul\":2624:2663   */\n  tag_27\n  jump\t// in\ntag_69:\n    /* \"#utility.yul\":2612:2663   */\n  swap6\n  pop\n    /* \"#utility.yul\":2696:2700   */\n  dup1\n    /* \"#utility.yul\":2692:2701   */\n  not\n    /* \"#utility.yul\":2685:2690   */\n  dup5\n    /* \"#utility.yul\":2681:2702   */\n  and\n    /* \"#utility.yul\":2672:2702   */\n  swap4\n  pop\n    /* \"#utility.yul\":2745:2749   */\n  dup1\n    /* \"#utility.yul\":2735:2743   */\n  dup7\n    /* \"#utility.yul\":2731:2750   */\n  and\n    /* \"#utility.yul\":2724:2729   */\n  dup5\n    /* \"#utility.yul\":2721:2751   */\n  or\n    /* \"#utility.yul\":2711:2751   */\n  swap3\n  pop\n    /* \"#utility.yul\":2440:2757   */\n  pop\n  pop\n    /* \"#utility.yul\":2364:2757   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2763:2840   */\ntag_29:\n    /* \"#utility.yul\":2800:2807   */\n  0x00\n    /* \"#utility.yul\":2829:2834   */\n  dup2\n    /* \"#utility.yul\":2818:2834   */\n  swap1\n  pop\n    /* \"#utility.yul\":2763:2840   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2846:2906   */\ntag_30:\n    /* \"#utility.yul\":2874:2877   */\n  0x00\n    /* \"#utility.yul\":2895:2900   */\n  dup2\n    /* \"#utility.yul\":2888:2900   */\n  swap1\n  pop\n    /* \"#utility.yul\":2846:2906   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2912:3054   */\ntag_31:\n    /* \"#utility.yul\":2962:2971   */\n  0x00\n    /* \"#utility.yul\":2995:3048   */\n  tag_73\n    /* \"#utility.yul\":3013:3047   */\n  tag_74\n    /* \"#utility.yul\":3022:3046   */\n  tag_75\n    /* \"#utility.yul\":3040:3045   */\n  dup5\n    /* \"#utility.yul\":3022:3046   */\n  tag_29\n  jump\t// in\ntag_75:\n    /* \"#utility.yul\":3013:3047   */\n  tag_30\n  jump\t// in\ntag_74:\n    /* \"#utility.yul\":2995:3048   */\n  tag_29\n  jump\t// in\ntag_73:\n    /* \"#utility.yul\":2982:3048   */\n  swap1\n  pop\n    /* \"#utility.yul\":2912:3054   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3060:3135   */\ntag_32:\n    /* \"#utility.yul\":3103:3106   */\n  0x00\n    /* \"#utility.yul\":3124:3129   */\n  dup2\n    /* \"#utility.yul\":3117:3129   */\n  swap1\n  pop\n    /* \"#utility.yul\":3060:3135   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3141:3410   */\ntag_33:\n    /* \"#utility.yul\":3251:3290   */\n  tag_78\n    /* \"#utility.yul\":3282:3289   */\n  dup4\n    /* \"#utility.yul\":3251:3290   */\n  tag_31\n  jump\t// in\ntag_78:\n    /* \"#utility.yul\":3312:3403   */\n  tag_79\n    /* \"#utility.yul\":3361:3402   */\n  tag_80\n    /* \"#utility.yul\":3385:3401   */\n  dup3\n    /* \"#utility.yul\":3361:3402   */\n  tag_32\n  jump\t// in\ntag_80:\n    /* \"#utility.yul\":3353:3359   */\n  dup5\n    /* \"#utility.yul\":3346:3350   */\n  dup5\n    /* \"#utility.yul\":3340:3351   */\n  sload\n    /* \"#utility.yul\":3312:3403   */\n  tag_28\n  jump\t// in\ntag_79:\n    /* \"#utility.yul\":3306:3310   */\n  dup3\n    /* \"#utility.yul\":3299:3404   */\n  sstore\n    /* \"#utility.yul\":3217:3410   */\n  pop\n    /* \"#utility.yul\":3141:3410   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3416:3489   */\ntag_34:\n    /* \"#utility.yul\":3461:3464   */\n  0x00\n    /* \"#utility.yul\":3416:3489   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":3495:3684   */\ntag_35:\n    /* \"#utility.yul\":3572:3604   */\n  tag_83\n  tag_34\n  jump\t// in\ntag_83:\n    /* \"#utility.yul\":3613:3678   */\n  tag_84\n    /* \"#utility.yul\":3671:3677   */\n  dup2\n    /* \"#utility.yul\":3663:3669   */\n  dup5\n    /* \"#utility.yul\":3657:3661   */\n  dup5\n    /* \"#utility.yul\":3613:3678   */\n  tag_33\n  jump\t// in\ntag_84:\n    /* \"#utility.yul\":3548:3684   */\n  pop\n    /* \"#utility.yul\":3495:3684   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3690:3876   */\ntag_36:\n    /* \"#utility.yul\":3750:3870   */\ntag_86:\n    /* \"#utility.yul\":3767:3770   */\n  dup2\n    /* \"#utility.yul\":3760:3765   */\n  dup2\n    /* \"#utility.yul\":3757:3771   */\n  lt\n    /* \"#utility.yul\":3750:3870   */\n  iszero\n  tag_88\n  jumpi\n    /* \"#utility.yul\":3821:3860   */\n  tag_89\n    /* \"#utility.yul\":3858:3859   */\n  0x00\n    /* \"#utility.yul\":3851:3856   */\n  dup3\n    /* \"#utility.yul\":3821:3860   */\n  tag_35\n  jump\t// in\ntag_89:\n    /* \"#utility.yul\":3794:3795   */\n  0x01\n    /* \"#utility.yul\":3787:3792   */\n  dup2\n    /* \"#utility.yul\":3783:3796   */\n  add\n    /* \"#utility.yul\":3774:3796   */\n  swap1\n  pop\n    /* \"#utility.yul\":3750:3870   */\n  jump(tag_86)\ntag_88:\n    /* \"#utility.yul\":3690:3876   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3882:4425   */\ntag_37:\n    /* \"#utility.yul\":3983:3985   */\n  0x1f\n    /* \"#utility.yul\":3978:3981   */\n  dup3\n    /* \"#utility.yul\":3975:3986   */\n  gt\n    /* \"#utility.yul\":3972:4418   */\n  iszero\n  tag_91\n  jumpi\n    /* \"#utility.yul\":4017:4055   */\n  tag_92\n    /* \"#utility.yul\":4049:4054   */\n  dup2\n    /* \"#utility.yul\":4017:4055   */\n  tag_25\n  jump\t// in\ntag_92:\n    /* \"#utility.yul\":4101:4130   */\n  tag_93\n    /* \"#utility.yul\":4119:4129   */\n  dup5\n    /* \"#utility.yul\":4101:4130   */\n  tag_26\n  jump\t// in\ntag_93:\n    /* \"#utility.yul\":4091:4099   */\n  dup2\n    /* \"#utility.yul\":4087:4131   */\n  add\n    /* \"#utility.yul\":4284:4286   */\n  0x20\n    /* \"#utility.yul\":4272:4282   */\n  dup6\n    /* \"#utility.yul\":4269:4287   */\n  lt\n    /* \"#utility.yul\":4266:4315   */\n  iszero\n  tag_94\n  jumpi\n    /* \"#utility.yul\":4305:4313   */\n  dup2\n    /* \"#utility.yul\":4290:4313   */\n  swap1\n  pop\n    /* \"#utility.yul\":4266:4315   */\ntag_94:\n    /* \"#utility.yul\":4328:4408   */\n  tag_95\n    /* \"#utility.yul\":4384:4406   */\n  tag_96\n    /* \"#utility.yul\":4402:4405   */\n  dup6\n    /* \"#utility.yul\":4384:4406   */\n  tag_26\n  jump\t// in\ntag_96:\n    /* \"#utility.yul\":4374:4382   */\n  dup4\n    /* \"#utility.yul\":4370:4407   */\n  add\n    /* \"#utility.yul\":4357:4368   */\n  dup3\n    /* \"#utility.yul\":4328:4408   */\n  tag_36\n  jump\t// in\ntag_95:\n    /* \"#utility.yul\":3987:4418   */\n  pop\n  pop\n    /* \"#utility.yul\":3972:4418   */\ntag_91:\n    /* \"#utility.yul\":3882:4425   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4431:4548   */\ntag_38:\n    /* \"#utility.yul\":4485:4493   */\n  0x00\n    /* \"#utility.yul\":4535:4540   */\n  dup3\n    /* \"#utility.yul\":4529:4533   */\n  dup3\n    /* \"#utility.yul\":4525:4541   */\n  shr\n    /* \"#utility.yul\":4504:4541   */\n  swap1\n  pop\n    /* \"#utility.yul\":4431:4548   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4554:4723   */\ntag_39:\n    /* \"#utility.yul\":4598:4604   */\n  0x00\n    /* \"#utility.yul\":4631:4682   */\n  tag_99\n    /* \"#utility.yul\":4679:4680   */\n  0x00\n    /* \"#utility.yul\":4675:4681   */\n  not\n    /* \"#utility.yul\":4667:4672   */\n  dup5\n    /* \"#utility.yul\":4664:4665   */\n  0x08\n    /* \"#utility.yul\":4660:4673   */\n  mul\n    /* \"#utility.yul\":4631:4682   */\n  tag_38\n  jump\t// in\ntag_99:\n    /* \"#utility.yul\":4627:4683   */\n  not\n    /* \"#utility.yul\":4712:4716   */\n  dup1\n    /* \"#utility.yul\":4706:4710   */\n  dup4\n    /* \"#utility.yul\":4702:4717   */\n  and\n    /* \"#utility.yul\":4692:4717   */\n  swap2\n  pop\n    /* \"#utility.yul\":4605:4723   */\n  pop\n    /* \"#utility.yul\":4554:4723   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4728:5023   */\ntag_40:\n    /* \"#utility.yul\":4804:4808   */\n  0x00\n    /* \"#utility.yul\":4950:4979   */\n  tag_101\n    /* \"#utility.yul\":4975:4978   */\n  dup4\n    /* \"#utility.yul\":4969:4973   */\n  dup4\n    /* \"#utility.yul\":4950:4979   */\n  tag_39\n  jump\t// in\ntag_101:\n    /* \"#utility.yul\":4942:4979   */\n  swap2\n  pop\n    /* \"#utility.yul\":5012:5015   */\n  dup3\n    /* \"#utility.yul\":5009:5010   */\n  0x02\n    /* \"#utility.yul\":5005:5016   */\n  mul\n    /* \"#utility.yul\":4999:5003   */\n  dup3\n    /* \"#utility.yul\":4996:5017   */\n  or\n    /* \"#utility.yul\":4988:5017   */\n  swap1\n  pop\n    /* \"#utility.yul\":4728:5023   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5028:6423   */\ntag_13:\n    /* \"#utility.yul\":5145:5182   */\n  tag_103\n    /* \"#utility.yul\":5178:5181   */\n  dup3\n    /* \"#utility.yul\":5145:5182   */\n  tag_21\n  jump\t// in\ntag_103:\n    /* \"#utility.yul\":5247:5265   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":5239:5245   */\n  dup2\n    /* \"#utility.yul\":5236:5266   */\n  gt\n    /* \"#utility.yul\":5233:5289   */\n  iszero\n  tag_104\n  jumpi\n    /* \"#utility.yul\":5269:5287   */\n  tag_105\n  tag_22\n  jump\t// in\ntag_105:\n    /* \"#utility.yul\":5233:5289   */\ntag_104:\n    /* \"#utility.yul\":5313:5351   */\n  tag_106\n    /* \"#utility.yul\":5345:5349   */\n  dup3\n    /* \"#utility.yul\":5339:5350   */\n  sload\n    /* \"#utility.yul\":5313:5351   */\n  tag_24\n  jump\t// in\ntag_106:\n    /* \"#utility.yul\":5398:5465   */\n  tag_107\n    /* \"#utility.yul\":5458:5464   */\n  dup3\n    /* \"#utility.yul\":5450:5456   */\n  dup3\n    /* \"#utility.yul\":5444:5448   */\n  dup6\n    /* \"#utility.yul\":5398:5465   */\n  tag_37\n  jump\t// in\ntag_107:\n    /* \"#utility.yul\":5492:5493   */\n  0x00\n    /* \"#utility.yul\":5516:5520   */\n  0x20\n    /* \"#utility.yul\":5503:5520   */\n  swap1\n  pop\n    /* \"#utility.yul\":5548:5550   */\n  0x1f\n    /* \"#utility.yul\":5540:5546   */\n  dup4\n    /* \"#utility.yul\":5537:5551   */\n  gt\n    /* \"#utility.yul\":5565:5566   */\n  0x01\n    /* \"#utility.yul\":5560:6178   */\n  dup2\n  eq\n  tag_109\n  jumpi\n    /* \"#utility.yul\":6222:6223   */\n  0x00\n    /* \"#utility.yul\":6239:6245   */\n  dup5\n    /* \"#utility.yul\":6236:6313   */\n  iszero\n  tag_110\n  jumpi\n    /* \"#utility.yul\":6288:6297   */\n  dup3\n    /* \"#utility.yul\":6283:6286   */\n  dup8\n    /* \"#utility.yul\":6279:6298   */\n  add\n    /* \"#utility.yul\":6273:6299   */\n  mload\n    /* \"#utility.yul\":6264:6299   */\n  swap1\n  pop\n    /* \"#utility.yul\":6236:6313   */\ntag_110:\n    /* \"#utility.yul\":6339:6406   */\n  tag_111\n    /* \"#utility.yul\":6399:6405   */\n  dup6\n    /* \"#utility.yul\":6392:6397   */\n  dup3\n    /* \"#utility.yul\":6339:6406   */\n  tag_40\n  jump\t// in\ntag_111:\n    /* \"#utility.yul\":6333:6337   */\n  dup7\n    /* \"#utility.yul\":6326:6407   */\n  sstore\n    /* \"#utility.yul\":6195:6417   */\n  pop\n    /* \"#utility.yul\":5530:6417   */\n  jump(tag_108)\n    /* \"#utility.yul\":5560:6178   */\ntag_109:\n    /* \"#utility.yul\":5612:5616   */\n  0x1f\n    /* \"#utility.yul\":5608:5617   */\n  not\n    /* \"#utility.yul\":5600:5606   */\n  dup5\n    /* \"#utility.yul\":5596:5618   */\n  and\n    /* \"#utility.yul\":5646:5683   */\n  tag_112\n    /* \"#utility.yul\":5678:5682   */\n  dup7\n    /* \"#utility.yul\":5646:5683   */\n  tag_25\n  jump\t// in\ntag_112:\n    /* \"#utility.yul\":5705:5706   */\n  0x00\n    /* \"#utility.yul\":5719:5927   */\ntag_113:\n    /* \"#utility.yul\":5733:5740   */\n  dup3\n    /* \"#utility.yul\":5730:5731   */\n  dup2\n    /* \"#utility.yul\":5727:5741   */\n  lt\n    /* \"#utility.yul\":5719:5927   */\n  iszero\n  tag_115\n  jumpi\n    /* \"#utility.yul\":5812:5821   */\n  dup5\n    /* \"#utility.yul\":5807:5810   */\n  dup10\n    /* \"#utility.yul\":5803:5822   */\n  add\n    /* \"#utility.yul\":5797:5823   */\n  mload\n    /* \"#utility.yul\":5789:5795   */\n  dup3\n    /* \"#utility.yul\":5782:5824   */\n  sstore\n    /* \"#utility.yul\":5863:5864   */\n  0x01\n    /* \"#utility.yul\":5855:5861   */\n  dup3\n    /* \"#utility.yul\":5851:5865   */\n  add\n    /* \"#utility.yul\":5841:5865   */\n  swap2\n  pop\n    /* \"#utility.yul\":5910:5912   */\n  0x20\n    /* \"#utility.yul\":5899:5908   */\n  dup6\n    /* \"#utility.yul\":5895:5913   */\n  add\n    /* \"#utility.yul\":5882:5913   */\n  swap5\n  pop\n    /* \"#utility.yul\":5756:5760   */\n  0x20\n    /* \"#utility.yul\":5753:5754   */\n  dup2\n    /* \"#utility.yul\":5749:5761   */\n  add\n    /* \"#utility.yul\":5744:5761   */\n  swap1\n  pop\n    /* \"#utility.yul\":5719:5927   */\n  jump(tag_113)\ntag_115:\n    /* \"#utility.yul\":5955:5961   */\n  dup7\n    /* \"#utility.yul\":5946:5953   */\n  dup4\n    /* \"#utility.yul\":5943:5962   */\n  lt\n    /* \"#utility.yul\":5940:6119   */\n  iszero\n  tag_116\n  jumpi\n    /* \"#utility.yul\":6013:6022   */\n  dup5\n    /* \"#utility.yul\":6008:6011   */\n  dup10\n    /* \"#utility.yul\":6004:6023   */\n  add\n    /* \"#utility.yul\":5998:6024   */\n  mload\n    /* \"#utility.yul\":6056:6104   */\n  tag_117\n    /* \"#utility.yul\":6098:6102   */\n  0x1f\n    /* \"#utility.yul\":6090:6096   */\n  dup10\n    /* \"#utility.yul\":6086:6103   */\n  and\n    /* \"#utility.yul\":6075:6084   */\n  dup3\n    /* \"#utility.yul\":6056:6104   */\n  tag_39\n  jump\t// in\ntag_117:\n    /* \"#utility.yul\":6048:6054   */\n  dup4\n    /* \"#utility.yul\":6041:6105   */\n  sstore\n    /* \"#utility.yul\":5963:6119   */\n  pop\n    /* \"#utility.yul\":5940:6119   */\ntag_116:\n    /* \"#utility.yul\":6165:6166   */\n  0x01\n    /* \"#utility.yul\":6161:6162   */\n  0x02\n    /* \"#utility.yul\":6153:6159   */\n  dup9\n    /* \"#utility.yul\":6149:6163   */\n  mul\n    /* \"#utility.yul\":6145:6167   */\n  add\n    /* \"#utility.yul\":6139:6143   */\n  dup9\n    /* \"#utility.yul\":6132:6168   */\n  sstore\n    /* \"#utility.yul\":5567:6178   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":5530:6417   */\ntag_108:\n  pop\n    /* \"#utility.yul\":5120:6423   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":5028:6423   */\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/Items/Items.sol\":323:1199  contract Items is ERC1155, ERC1155Burnable, ERC1155Supply {... */\ntag_10:\n  mload(0x80)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0x6793c6a9604136a1b6d4ba669c8fd19d062a01f122f4a844e550533940770ef1\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"contracts/Items/Items.sol\":323:1199  contract Items is ERC1155, ERC1155Burnable, ERC1155Supply {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x4f558e79\n      gt\n      tag_18\n      jumpi\n      dup1\n      0xbd85b039\n      gt\n      tag_19\n      jumpi\n      dup1\n      0xbd85b039\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xe985e9c5\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xf242432a\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xf5298aca\n      eq\n      tag_17\n      jumpi\n      jump(tag_2)\n    tag_19:\n      dup1\n      0x4f558e79\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x6b20c454\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x731133e9\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xa22cb465\n      eq\n      tag_13\n      jumpi\n      jump(tag_2)\n    tag_18:\n      dup1\n      0x18160ddd\n      gt\n      tag_20\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x1f7fdffa\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x2eb2c2d6\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x4e1273f4\n      eq\n      tag_9\n      jumpi\n      jump(tag_2)\n    tag_20:\n      dup1\n      0xfdd58e\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x01ffc9a7\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x0e89341c\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2247:2379  function balanceOf(address account, uint256 id) public view virtual returns (uint256) {... */\n    tag_3:\n      tag_21\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_22\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_22:\n      tag_24\n      jump\t// in\n    tag_21:\n      mload(0x40)\n      tag_25\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1380:1685  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_4:\n      tag_27\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_28\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_28:\n      tag_30\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      tag_31\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_31:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2084:2187  function uri(uint256 /* id */) public view virtual returns (string memory) {... */\n    tag_5:\n      tag_33\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_34\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_34:\n      tag_36\n      jump\t// in\n    tag_33:\n      mload(0x40)\n      tag_37\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":1127:1227  function totalSupply() public view virtual returns (uint256) {... */\n    tag_6:\n      tag_39\n      tag_40\n      jump\t// in\n    tag_39:\n      mload(0x40)\n      tag_41\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Items/Items.sol\":813:993  function mintBatch (... */\n    tag_7:\n      tag_42\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_43\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_43:\n      tag_45\n      jump\t// in\n    tag_42:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4014:4443  function safeBatchTransferFrom(... */\n    tag_8:\n      tag_46\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_47\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_47:\n      tag_49\n      jump\t// in\n    tag_46:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2536:3088  function balanceOfBatch(... */\n    tag_9:\n      tag_50\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_51\n      swap2\n      swap1\n      tag_52\n      jump\t// in\n    tag_51:\n      tag_53\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      tag_54\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_54:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":1320:1426  function exists(uint256 id) public view virtual returns (bool) {... */\n    tag_10:\n      tag_56\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_57\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_57:\n      tag_58\n      jump\t// in\n    tag_56:\n      mload(0x40)\n      tag_59\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_59:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":681:994  function burnBatch(address account, uint256[] memory ids, uint256[] memory values) public virtual {... */\n    tag_11:\n      tag_60\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_61\n      swap2\n      swap1\n      tag_62\n      jump\t// in\n    tag_61:\n      tag_63\n      jump\t// in\n    tag_60:\n      stop\n        /* \"contracts/Items/Items.sol\":651:809  function mint (... */\n    tag_12:\n      tag_64\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_65\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_65:\n      tag_67\n      jump\t// in\n    tag_64:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3156:3300  function setApprovalForAll(address operator, bool approved) public virtual {... */\n    tag_13:\n      tag_68\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_69\n      swap2\n      swap1\n      tag_70\n      jump\t// in\n    tag_69:\n      tag_71\n      jump\t// in\n    tag_68:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":959:1070  function totalSupply(uint256 id) public view virtual returns (uint256) {... */\n    tag_14:\n      tag_72\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_73\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_73:\n      tag_74\n      jump\t// in\n    tag_72:\n      mload(0x40)\n      tag_75\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_75:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3367:3524  function isApprovedForAll(address account, address operator) public view virtual returns (bool) {... */\n    tag_15:\n      tag_76\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_77\n      swap2\n      swap1\n      tag_78\n      jump\t// in\n    tag_77:\n      tag_79\n      jump\t// in\n    tag_76:\n      mload(0x40)\n      tag_80\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_80:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3591:3942  function safeTransferFrom(address from, address to, uint256 id, uint256 value, bytes memory data) public virtual {... */\n    tag_16:\n      tag_81\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_82\n      swap2\n      swap1\n      tag_83\n      jump\t// in\n    tag_82:\n      tag_84\n      jump\t// in\n    tag_81:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":394:675  function burn(address account, uint256 id, uint256 value) public virtual {... */\n    tag_17:\n      tag_85\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_86\n      swap2\n      swap1\n      tag_87\n      jump\t// in\n    tag_86:\n      tag_88\n      jump\t// in\n    tag_85:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2247:2379  function balanceOf(address account, uint256 id) public view virtual returns (uint256) {... */\n    tag_24:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2324:2331  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2350:2359  _balances */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2350:2363  _balances[id] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2360:2362  id */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2350:2363  _balances[id] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2350:2372  _balances[id][account] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2364:2371  account */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2350:2372  _balances[id][account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2343:2372  return _balances[id][account] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2247:2379  function balanceOf(address account, uint256 id) public view virtual returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1380:1685  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_30:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1482:1486  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1532:1558  type(IERC1155).interfaceId */\n      0xd9b67a2600000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1517:1558  interfaceId == type(IERC1155).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1517:1528  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1517:1558  interfaceId == type(IERC1155).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1517:1626  interfaceId == type(IERC1155).interfaceId ||... */\n      dup1\n      tag_91\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1589:1626  type(IERC1155MetadataURI).interfaceId */\n      0x0e89341c00000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1574:1626  interfaceId == type(IERC1155MetadataURI).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1574:1585  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1574:1626  interfaceId == type(IERC1155MetadataURI).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1517:1626  interfaceId == type(IERC1155).interfaceId ||... */\n    tag_91:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1517:1678  interfaceId == type(IERC1155).interfaceId ||... */\n      dup1\n      tag_92\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1642:1678  super.supportsInterface(interfaceId) */\n      tag_93\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1666:1677  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1642:1665  super.supportsInterface */\n      tag_94\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1642:1678  super.supportsInterface(interfaceId) */\n      jump\t// in\n    tag_93:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1517:1678  interfaceId == type(IERC1155).interfaceId ||... */\n    tag_92:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1498:1678  return... */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1380:1685  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2084:2187  function uri(uint256 /* id */) public view virtual returns (string memory) {... */\n    tag_36:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2144:2157  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2176:2180  _uri */\n      0x02\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2169:2180  return _uri */\n      dup1\n      sload\n      tag_96\n      swap1\n      tag_97\n      jump\t// in\n    tag_96:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_98\n      swap1\n      tag_97\n      jump\t// in\n    tag_98:\n      dup1\n      iszero\n      tag_99\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_100\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_99)\n    tag_100:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_101:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_101\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_99:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2084:2187  function uri(uint256 /* id */) public view virtual returns (string memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":1127:1227  function totalSupply() public view virtual returns (uint256) {... */\n    tag_40:\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":1179:1186  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":1205:1220  _totalSupplyAll */\n      sload(0x04)\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":1198:1220  return _totalSupplyAll */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":1127:1227  function totalSupply() public view virtual returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/Items/Items.sol\":813:993  function mintBatch (... */\n    tag_45:\n        /* \"contracts/Items/Items.sol\":595:607  _gameAddress */\n      immutable(\"0x6793c6a9604136a1b6d4ba669c8fd19d062a01f122f4a844e550533940770ef1\")\n        /* \"contracts/Items/Items.sol\":581:607  msg.sender == _gameAddress */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Items/Items.sol\":581:591  msg.sender */\n      caller\n        /* \"contracts/Items/Items.sol\":581:607  msg.sender == _gameAddress */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/Items/Items.sol\":573:640  require(msg.sender == _gameAddress, \"Only game contract can call.\") */\n      tag_104\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_105\n      swap1\n      tag_106\n      jump\t// in\n    tag_105:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_104:\n        /* \"contracts/Items/Items.sol\":954:988  _mintBatch(to, ids, amounts, data) */\n      tag_108\n        /* \"contracts/Items/Items.sol\":965:967  to */\n      dup5\n        /* \"contracts/Items/Items.sol\":969:972  ids */\n      dup5\n        /* \"contracts/Items/Items.sol\":974:981  amounts */\n      dup5\n        /* \"contracts/Items/Items.sol\":983:987  data */\n      dup5\n        /* \"contracts/Items/Items.sol\":954:964  _mintBatch */\n      tag_109\n        /* \"contracts/Items/Items.sol\":954:988  _mintBatch(to, ids, amounts, data) */\n      jump\t// in\n    tag_108:\n        /* \"contracts/Items/Items.sol\":813:993  function mintBatch (... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4014:4443  function safeBatchTransferFrom(... */\n    tag_49:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4208:4222  address sender */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4225:4237  _msgSender() */\n      tag_111\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4225:4235  _msgSender */\n      tag_112\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4225:4237  _msgSender() */\n      jump\t// in\n    tag_111:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4208:4237  address sender = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4259:4265  sender */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4251:4265  from != sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4251:4255  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4251:4265  from != sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4251:4300  from != sender && !isApprovedForAll(from, sender) */\n      dup1\n      iszero\n      tag_113\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4270:4300  isApprovedForAll(from, sender) */\n      tag_114\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4287:4291  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4293:4299  sender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4270:4286  isApprovedForAll */\n      tag_79\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4270:4300  isApprovedForAll(from, sender) */\n      jump\t// in\n    tag_114:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4269:4300  !isApprovedForAll(from, sender) */\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4251:4300  from != sender && !isApprovedForAll(from, sender) */\n    tag_113:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4247:4376  if (from != sender && !isApprovedForAll(from, sender)) {... */\n      iszero\n      tag_115\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4352:4358  sender */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4360:4364  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4323:4365  ERC1155MissingApprovalForAll(sender, from) */\n      mload(0x40)\n      0xe237d92200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_116\n      swap3\n      swap2\n      swap1\n      tag_117\n      jump\t// in\n    tag_116:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4247:4376  if (from != sender && !isApprovedForAll(from, sender)) {... */\n    tag_115:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4385:4436  _safeBatchTransferFrom(from, to, ids, values, data) */\n      tag_118\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4408:4412  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4414:4416  to */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4418:4421  ids */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4423:4429  values */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4431:4435  data */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4385:4407  _safeBatchTransferFrom */\n      tag_119\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4385:4436  _safeBatchTransferFrom(from, to, ids, values, data) */\n      jump\t// in\n    tag_118:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4198:4443  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4014:4443  function safeBatchTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2536:3088  function balanceOfBatch(... */\n    tag_53:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2660:2676  uint256[] memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2711:2714  ids */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2711:2721  ids.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2692:2700  accounts */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2692:2707  accounts.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2692:2721  accounts.length != ids.length */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2688:2809  if (accounts.length != ids.length) {... */\n      tag_121\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2770:2773  ids */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2770:2780  ids.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2782:2790  accounts */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2782:2797  accounts.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2744:2798  ERC1155InvalidArrayLength(ids.length, accounts.length) */\n      mload(0x40)\n      0x5b05999100000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_122\n      swap3\n      swap2\n      swap1\n      tag_123\n      jump\t// in\n    tag_122:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2688:2809  if (accounts.length != ids.length) {... */\n    tag_121:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2819:2849  uint256[] memory batchBalances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2866:2874  accounts */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2866:2881  accounts.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2852:2882  new uint256[](accounts.length) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_124\n      jumpi\n      tag_125\n      tag_126\n      jump\t// in\n    tag_125:\n    tag_124:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_127\n      jumpi\n      dup2\n      0x20\n      add\n      0x20\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      dup1\n      dup3\n      add\n      swap2\n      pop\n      pop\n      swap1\n      pop\n    tag_127:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2819:2882  uint256[] memory batchBalances = new uint256[](accounts.length) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2898:2907  uint256 i */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2893:3051  for (uint256 i = 0; i < accounts.length; ++i) {... */\n    tag_128:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2917:2925  accounts */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2917:2932  accounts.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2913:2914  i */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2913:2932  i < accounts.length */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2893:3051  for (uint256 i = 0; i < accounts.length; ++i) {... */\n      iszero\n      tag_129\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2972:3040  balanceOf(accounts.unsafeMemoryAccess(i), ids.unsafeMemoryAccess(i)) */\n      tag_131\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2982:3012  accounts.unsafeMemoryAccess(i) */\n      tag_132\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3010:3011  i */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2982:2990  accounts */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2982:3009  accounts.unsafeMemoryAccess */\n      tag_133\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2982:3012  accounts.unsafeMemoryAccess(i) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_132:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3014:3039  ids.unsafeMemoryAccess(i) */\n      tag_134\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3037:3038  i */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3014:3017  ids */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3014:3036  ids.unsafeMemoryAccess */\n      tag_135\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3014:3039  ids.unsafeMemoryAccess(i) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_134:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2972:2981  balanceOf */\n      tag_24\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2972:3040  balanceOf(accounts.unsafeMemoryAccess(i), ids.unsafeMemoryAccess(i)) */\n      jump\t// in\n    tag_131:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2953:2966  batchBalances */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2967:2968  i */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2953:2969  batchBalances[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_136\n      jumpi\n      tag_137\n      tag_138\n      jump\t// in\n    tag_137:\n    tag_136:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2953:3040  batchBalances[i] = balanceOf(accounts.unsafeMemoryAccess(i), ids.unsafeMemoryAccess(i)) */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2934:2937  ++i */\n      dup1\n      tag_139\n      swap1\n      tag_140\n      jump\t// in\n    tag_139:\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2893:3051  for (uint256 i = 0; i < accounts.length; ++i) {... */\n      jump(tag_128)\n    tag_129:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3068:3081  batchBalances */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3061:3081  return batchBalances */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2536:3088  function balanceOfBatch(... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":1320:1426  function exists(uint256 id) public view virtual returns (bool) {... */\n    tag_58:\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":1377:1381  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":1418:1419  0 */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":1400:1415  totalSupply(id) */\n      tag_142\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":1412:1414  id */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":1400:1411  totalSupply */\n      tag_74\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":1400:1415  totalSupply(id) */\n      jump\t// in\n    tag_142:\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":1400:1419  totalSupply(id) > 0 */\n      gt\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":1393:1419  return totalSupply(id) > 0 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":1320:1426  function exists(uint256 id) public view virtual returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":681:994  function burnBatch(address account, uint256[] memory ids, uint256[] memory values) public virtual {... */\n    tag_63:\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":804:816  _msgSender() */\n      tag_144\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":804:814  _msgSender */\n      tag_112\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":804:816  _msgSender() */\n      jump\t// in\n    tag_144:\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":793:816  account != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":793:800  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":793:816  account != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":793:860  account != _msgSender() && !isApprovedForAll(account, _msgSender()) */\n      dup1\n      iszero\n      tag_145\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":821:860  isApprovedForAll(account, _msgSender()) */\n      tag_146\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":838:845  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":847:859  _msgSender() */\n      tag_147\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":847:857  _msgSender */\n      tag_112\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":847:859  _msgSender() */\n      jump\t// in\n    tag_147:\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":821:837  isApprovedForAll */\n      tag_79\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":821:860  isApprovedForAll(account, _msgSender()) */\n      jump\t// in\n    tag_146:\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":820:860  !isApprovedForAll(account, _msgSender()) */\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":793:860  account != _msgSender() && !isApprovedForAll(account, _msgSender()) */\n    tag_145:\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":789:945  if (account != _msgSender() && !isApprovedForAll(account, _msgSender())) {... */\n      iszero\n      tag_148\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":912:924  _msgSender() */\n      tag_149\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":912:922  _msgSender */\n      tag_112\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":912:924  _msgSender() */\n      jump\t// in\n    tag_149:\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":926:933  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":883:934  ERC1155MissingApprovalForAll(_msgSender(), account) */\n      mload(0x40)\n      0xe237d92200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_150\n      swap3\n      swap2\n      swap1\n      tag_117\n      jump\t// in\n    tag_150:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":789:945  if (account != _msgSender() && !isApprovedForAll(account, _msgSender())) {... */\n    tag_148:\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":955:987  _burnBatch(account, ids, values) */\n      tag_151\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":966:973  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":975:978  ids */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":980:986  values */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":955:965  _burnBatch */\n      tag_152\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":955:987  _burnBatch(account, ids, values) */\n      jump\t// in\n    tag_151:\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":681:994  function burnBatch(address account, uint256[] memory ids, uint256[] memory values) public virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Items/Items.sol\":651:809  function mint (... */\n    tag_67:\n        /* \"contracts/Items/Items.sol\":595:607  _gameAddress */\n      immutable(\"0x6793c6a9604136a1b6d4ba669c8fd19d062a01f122f4a844e550533940770ef1\")\n        /* \"contracts/Items/Items.sol\":581:607  msg.sender == _gameAddress */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Items/Items.sol\":581:591  msg.sender */\n      caller\n        /* \"contracts/Items/Items.sol\":581:607  msg.sender == _gameAddress */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/Items/Items.sol\":573:640  require(msg.sender == _gameAddress, \"Only game contract can call.\") */\n      tag_154\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_155\n      swap1\n      tag_106\n      jump\t// in\n    tag_155:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_154:\n        /* \"contracts/Items/Items.sol\":772:804  _mint(account, id, amount, data) */\n      tag_157\n        /* \"contracts/Items/Items.sol\":778:785  account */\n      dup5\n        /* \"contracts/Items/Items.sol\":787:789  id */\n      dup5\n        /* \"contracts/Items/Items.sol\":791:797  amount */\n      dup5\n        /* \"contracts/Items/Items.sol\":799:803  data */\n      dup5\n        /* \"contracts/Items/Items.sol\":772:777  _mint */\n      tag_158\n        /* \"contracts/Items/Items.sol\":772:804  _mint(account, id, amount, data) */\n      jump\t// in\n    tag_157:\n        /* \"contracts/Items/Items.sol\":651:809  function mint (... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3156:3300  function setApprovalForAll(address operator, bool approved) public virtual {... */\n    tag_71:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3241:3293  _setApprovalForAll(_msgSender(), operator, approved) */\n      tag_160\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3260:3272  _msgSender() */\n      tag_161\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3260:3270  _msgSender */\n      tag_112\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3260:3272  _msgSender() */\n      jump\t// in\n    tag_161:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3274:3282  operator */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3284:3292  approved */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3241:3259  _setApprovalForAll */\n      tag_162\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3241:3293  _setApprovalForAll(_msgSender(), operator, approved) */\n      jump\t// in\n    tag_160:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3156:3300  function setApprovalForAll(address operator, bool approved) public virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":959:1070  function totalSupply(uint256 id) public view virtual returns (uint256) {... */\n    tag_74:\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":1021:1028  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":1047:1059  _totalSupply */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":1047:1063  _totalSupply[id] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":1060:1062  id */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":1047:1063  _totalSupply[id] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":1040:1063  return _totalSupply[id] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":959:1070  function totalSupply(uint256 id) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3367:3524  function isApprovedForAll(address account, address operator) public view virtual returns (bool) {... */\n    tag_79:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3457:3461  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3480:3498  _operatorApprovals */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3480:3507  _operatorApprovals[account] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3499:3506  account */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3480:3507  _operatorApprovals[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3480:3517  _operatorApprovals[account][operator] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3508:3516  operator */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3480:3517  _operatorApprovals[account][operator] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3473:3517  return _operatorApprovals[account][operator] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3367:3524  function isApprovedForAll(address account, address operator) public view virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3591:3942  function safeTransferFrom(address from, address to, uint256 id, uint256 value, bytes memory data) public virtual {... */\n    tag_84:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3714:3728  address sender */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3731:3743  _msgSender() */\n      tag_166\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3731:3741  _msgSender */\n      tag_112\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3731:3743  _msgSender() */\n      jump\t// in\n    tag_166:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3714:3743  address sender = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3765:3771  sender */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3757:3771  from != sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3757:3761  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3757:3771  from != sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3757:3806  from != sender && !isApprovedForAll(from, sender) */\n      dup1\n      iszero\n      tag_167\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3776:3806  isApprovedForAll(from, sender) */\n      tag_168\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3793:3797  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3799:3805  sender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3776:3792  isApprovedForAll */\n      tag_79\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3776:3806  isApprovedForAll(from, sender) */\n      jump\t// in\n    tag_168:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3775:3806  !isApprovedForAll(from, sender) */\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3757:3806  from != sender && !isApprovedForAll(from, sender) */\n    tag_167:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3753:3882  if (from != sender && !isApprovedForAll(from, sender)) {... */\n      iszero\n      tag_169\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3858:3864  sender */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3866:3870  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3829:3871  ERC1155MissingApprovalForAll(sender, from) */\n      mload(0x40)\n      0xe237d92200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_170\n      swap3\n      swap2\n      swap1\n      tag_117\n      jump\t// in\n    tag_170:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3753:3882  if (from != sender && !isApprovedForAll(from, sender)) {... */\n    tag_169:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3891:3935  _safeTransferFrom(from, to, id, value, data) */\n      tag_171\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3909:3913  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3915:3917  to */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3919:3921  id */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3923:3928  value */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3930:3934  data */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3891:3908  _safeTransferFrom */\n      tag_172\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3891:3935  _safeTransferFrom(from, to, id, value, data) */\n      jump\t// in\n    tag_171:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3704:3942  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3591:3942  function safeTransferFrom(address from, address to, uint256 id, uint256 value, bytes memory data) public virtual {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":394:675  function burn(address account, uint256 id, uint256 value) public virtual {... */\n    tag_88:\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":492:504  _msgSender() */\n      tag_174\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":492:502  _msgSender */\n      tag_112\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":492:504  _msgSender() */\n      jump\t// in\n    tag_174:\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":481:504  account != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":481:488  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":481:504  account != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":481:548  account != _msgSender() && !isApprovedForAll(account, _msgSender()) */\n      dup1\n      iszero\n      tag_175\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":509:548  isApprovedForAll(account, _msgSender()) */\n      tag_176\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":526:533  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":535:547  _msgSender() */\n      tag_177\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":535:545  _msgSender */\n      tag_112\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":535:547  _msgSender() */\n      jump\t// in\n    tag_177:\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":509:525  isApprovedForAll */\n      tag_79\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":509:548  isApprovedForAll(account, _msgSender()) */\n      jump\t// in\n    tag_176:\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":508:548  !isApprovedForAll(account, _msgSender()) */\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":481:548  account != _msgSender() && !isApprovedForAll(account, _msgSender()) */\n    tag_175:\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":477:633  if (account != _msgSender() && !isApprovedForAll(account, _msgSender())) {... */\n      iszero\n      tag_178\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":600:612  _msgSender() */\n      tag_179\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":600:610  _msgSender */\n      tag_112\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":600:612  _msgSender() */\n      jump\t// in\n    tag_179:\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":614:621  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":571:622  ERC1155MissingApprovalForAll(_msgSender(), account) */\n      mload(0x40)\n      0xe237d92200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_180\n      swap3\n      swap2\n      swap1\n      tag_117\n      jump\t// in\n    tag_180:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":477:633  if (account != _msgSender() && !isApprovedForAll(account, _msgSender())) {... */\n    tag_178:\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":643:668  _burn(account, id, value) */\n      tag_181\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":649:656  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":658:660  id */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":662:667  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":643:648  _burn */\n      tag_182\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":643:668  _burn(account, id, value) */\n      jump\t// in\n    tag_181:\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":394:675  function burn(address account, uint256 id, uint256 value) public virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":762:908  function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {... */\n    tag_94:\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":838:842  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":876:901  type(IERC165).interfaceId */\n      0x01ffc9a700000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":861:901  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":861:872  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":861:901  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":854:901  return interfaceId == type(IERC165).interfaceId */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":762:908  function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":11523:11805  function _mintBatch(address to, uint256[] memory ids, uint256[] memory values, bytes memory data) internal {... */\n    tag_109:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":11658:11659  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":11644:11660  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":11644:11646  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":11644:11660  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":11640:11728  if (to == address(0)) {... */\n      tag_185\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":11714:11715  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":11683:11717  ERC1155InvalidReceiver(address(0)) */\n      mload(0x40)\n      0x57f447ce00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_186\n      swap2\n      swap1\n      tag_187\n      jump\t// in\n    tag_186:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":11640:11728  if (to == address(0)) {... */\n    tag_185:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":11737:11798  _updateWithAcceptanceCheck(address(0), to, ids, values, data) */\n      tag_188\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":11772:11773  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":11776:11778  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":11780:11783  ids */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":11785:11791  values */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":11793:11797  data */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":11737:11763  _updateWithAcceptanceCheck */\n      tag_189\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":11737:11798  _updateWithAcceptanceCheck(address(0), to, ids, values, data) */\n      jump\t// in\n    tag_188:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":11523:11805  function _mintBatch(address to, uint256[] memory ids, uint256[] memory values, bytes memory data) internal {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_112:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9015:9460  function _safeBatchTransferFrom(... */\n    tag_119:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9222:9223  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9208:9224  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9208:9210  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9208:9224  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9204:9292  if (to == address(0)) {... */\n      tag_192\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9278:9279  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9247:9281  ERC1155InvalidReceiver(address(0)) */\n      mload(0x40)\n      0x57f447ce00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_193\n      swap2\n      swap1\n      tag_187\n      jump\t// in\n    tag_193:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9204:9292  if (to == address(0)) {... */\n    tag_192:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9321:9322  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9305:9323  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9305:9309  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9305:9323  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9301:9389  if (from == address(0)) {... */\n      tag_194\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9375:9376  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9346:9378  ERC1155InvalidSender(address(0)) */\n      mload(0x40)\n      0x01a8351400000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_195\n      swap2\n      swap1\n      tag_187\n      jump\t// in\n    tag_195:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9301:9389  if (from == address(0)) {... */\n    tag_194:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9398:9453  _updateWithAcceptanceCheck(from, to, ids, values, data) */\n      tag_196\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9425:9429  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9431:9433  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9435:9438  ids */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9440:9446  values */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9448:9452  data */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9398:9424  _updateWithAcceptanceCheck */\n      tag_189\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9398:9453  _updateWithAcceptanceCheck(from, to, ids, values, data) */\n      jump\t// in\n    tag_196:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9015:9460  function _safeBatchTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":4603:4800  function unsafeMemoryAccess(address[] memory arr, uint256 pos) internal pure returns (address res) {... */\n    tag_133:\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":4689:4700  address res */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":4777:4781  0x20 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":4772:4775  pos */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":4768:4782  mul(pos, 0x20) */\n      mul\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":4761:4765  0x20 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":4756:4759  arr */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":4752:4766  add(arr, 0x20) */\n      add\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":4748:4783  add(add(arr, 0x20), mul(pos, 0x20)) */\n      add\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":4742:4784  mload(add(add(arr, 0x20), mul(pos, 0x20))) */\n      mload\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":4735:4784  res := mload(add(add(arr, 0x20), mul(pos, 0x20))) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":4603:4800  function unsafeMemoryAccess(address[] memory arr, uint256 pos) internal pure returns (address res) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":4204:4401  function unsafeMemoryAccess(uint256[] memory arr, uint256 pos) internal pure returns (uint256 res) {... */\n    tag_135:\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":4290:4301  uint256 res */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":4378:4382  0x20 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":4373:4376  pos */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":4369:4383  mul(pos, 0x20) */\n      mul\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":4362:4366  0x20 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":4357:4360  arr */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":4353:4367  add(arr, 0x20) */\n      add\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":4349:4384  add(add(arr, 0x20), mul(pos, 0x20)) */\n      add\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":4343:4385  mload(add(add(arr, 0x20), mul(pos, 0x20))) */\n      mload\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":4336:4385  res := mload(add(add(arr, 0x20), mul(pos, 0x20))) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":4204:4401  function unsafeMemoryAccess(uint256[] memory arr, uint256 pos) internal pure returns (uint256 res) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12784:13049  function _burnBatch(address from, uint256[] memory ids, uint256[] memory values) internal {... */\n    tag_152:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12904:12905  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12888:12906  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12888:12892  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12888:12906  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12884:12972  if (from == address(0)) {... */\n      tag_200\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12958:12959  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12929:12961  ERC1155InvalidSender(address(0)) */\n      mload(0x40)\n      0x01a8351400000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_201\n      swap2\n      swap1\n      tag_187\n      jump\t// in\n    tag_201:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12884:12972  if (from == address(0)) {... */\n    tag_200:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12981:13042  _updateWithAcceptanceCheck(from, address(0), ids, values, \"\") */\n      tag_202\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13008:13012  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13022:13023  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13026:13029  ids */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13031:13037  values */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12981:13042  _updateWithAcceptanceCheck(from, address(0), ids, values, \"\") */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12981:13007  _updateWithAcceptanceCheck */\n      tag_189\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12981:13042  _updateWithAcceptanceCheck(from, address(0), ids, values, \"\") */\n      jump\t// in\n    tag_202:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12784:13049  function _burnBatch(address from, uint256[] memory ids, uint256[] memory values) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10746:11092  function _mint(address to, uint256 id, uint256 value, bytes memory data) internal {... */\n    tag_158:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10856:10857  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10842:10858  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10842:10844  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10842:10858  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10838:10926  if (to == address(0)) {... */\n      tag_204\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10912:10913  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10881:10915  ERC1155InvalidReceiver(address(0)) */\n      mload(0x40)\n      0x57f447ce00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_205\n      swap2\n      swap1\n      tag_187\n      jump\t// in\n    tag_205:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10838:10926  if (to == address(0)) {... */\n    tag_204:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10936:10956  uint256[] memory ids */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10958:10981  uint256[] memory values */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10985:11014  _asSingletonArrays(id, value) */\n      tag_206\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":11004:11006  id */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":11008:11013  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10985:11003  _asSingletonArrays */\n      tag_207\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10985:11014  _asSingletonArrays(id, value) */\n      jump\t// in\n    tag_206:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10935:11014  (uint256[] memory ids, uint256[] memory values) = _asSingletonArrays(id, value) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":11024:11085  _updateWithAcceptanceCheck(address(0), to, ids, values, data) */\n      tag_208\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":11059:11060  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":11063:11065  to */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":11067:11070  ids */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":11072:11078  values */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":11080:11084  data */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":11024:11050  _updateWithAcceptanceCheck */\n      tag_189\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":11024:11085  _updateWithAcceptanceCheck(address(0), to, ids, values, data) */\n      jump\t// in\n    tag_208:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10828:11092  {... */\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10746:11092  function _mint(address to, uint256 id, uint256 value, bytes memory data) internal {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13268:13583  function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {... */\n    tag_162:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13395:13396  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13375:13397  operator == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13375:13383  operator */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13375:13397  operator == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13371:13465  if (operator == address(0)) {... */\n      tag_210\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13451:13452  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13420:13454  ERC1155InvalidOperator(address(0)) */\n      mload(0x40)\n      0xced3e10000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_211\n      swap2\n      swap1\n      tag_187\n      jump\t// in\n    tag_211:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13371:13465  if (operator == address(0)) {... */\n    tag_210:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13512:13520  approved */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13474:13492  _operatorApprovals */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13474:13499  _operatorApprovals[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13493:13498  owner */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13474:13499  _operatorApprovals[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13474:13509  _operatorApprovals[owner][operator] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13500:13508  operator */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13474:13509  _operatorApprovals[owner][operator] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13474:13520  _operatorApprovals[owner][operator] = approved */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13557:13565  operator */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13535:13576  ApprovalForAll(owner, operator, approved) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13550:13555  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13535:13576  ApprovalForAll(owner, operator, approved) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13567:13575  approved */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13535:13576  ApprovalForAll(owner, operator, approved) */\n      mload(0x40)\n      tag_212\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_212:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13268:13583  function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8151:8614  function _safeTransferFrom(address from, address to, uint256 id, uint256 value, bytes memory data) internal {... */\n    tag_172:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8287:8288  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8273:8289  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8273:8275  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8273:8289  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8269:8357  if (to == address(0)) {... */\n      tag_214\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8343:8344  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8312:8346  ERC1155InvalidReceiver(address(0)) */\n      mload(0x40)\n      0x57f447ce00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_215\n      swap2\n      swap1\n      tag_187\n      jump\t// in\n    tag_215:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8269:8357  if (to == address(0)) {... */\n    tag_214:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8386:8387  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8370:8388  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8370:8374  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8370:8388  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8366:8454  if (from == address(0)) {... */\n      tag_216\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8440:8441  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8411:8443  ERC1155InvalidSender(address(0)) */\n      mload(0x40)\n      0x01a8351400000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_217\n      swap2\n      swap1\n      tag_187\n      jump\t// in\n    tag_217:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8366:8454  if (from == address(0)) {... */\n    tag_216:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8464:8484  uint256[] memory ids */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8486:8509  uint256[] memory values */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8513:8542  _asSingletonArrays(id, value) */\n      tag_218\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8532:8534  id */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8536:8541  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8513:8531  _asSingletonArrays */\n      tag_207\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8513:8542  _asSingletonArrays(id, value) */\n      jump\t// in\n    tag_218:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8463:8542  (uint256[] memory ids, uint256[] memory values) = _asSingletonArrays(id, value) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8552:8607  _updateWithAcceptanceCheck(from, to, ids, values, data) */\n      tag_219\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8579:8583  from */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8585:8587  to */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8589:8592  ids */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8594:8600  values */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8602:8606  data */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8552:8578  _updateWithAcceptanceCheck */\n      tag_189\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8552:8607  _updateWithAcceptanceCheck(from, to, ids, values, data) */\n      jump\t// in\n    tag_219:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8259:8614  {... */\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8151:8614  function _safeTransferFrom(address from, address to, uint256 id, uint256 value, bytes memory data) internal {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12099:12428  function _burn(address from, uint256 id, uint256 value) internal {... */\n    tag_182:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12194:12195  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12178:12196  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12178:12182  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12178:12196  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12174:12262  if (from == address(0)) {... */\n      tag_221\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12248:12249  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12219:12251  ERC1155InvalidSender(address(0)) */\n      mload(0x40)\n      0x01a8351400000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_222\n      swap2\n      swap1\n      tag_187\n      jump\t// in\n    tag_222:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12174:12262  if (from == address(0)) {... */\n    tag_221:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12272:12292  uint256[] memory ids */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12294:12317  uint256[] memory values */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12321:12350  _asSingletonArrays(id, value) */\n      tag_223\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12340:12342  id */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12344:12349  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12321:12339  _asSingletonArrays */\n      tag_207\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12321:12350  _asSingletonArrays(id, value) */\n      jump\t// in\n    tag_223:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12271:12350  (uint256[] memory ids, uint256[] memory values) = _asSingletonArrays(id, value) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12360:12421  _updateWithAcceptanceCheck(from, address(0), ids, values, \"\") */\n      tag_224\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12387:12391  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12401:12402  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12405:12408  ids */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12410:12416  values */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12360:12421  _updateWithAcceptanceCheck(from, address(0), ids, values, \"\") */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12360:12386  _updateWithAcceptanceCheck */\n      tag_189\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12360:12421  _updateWithAcceptanceCheck(from, address(0), ids, values, \"\") */\n      jump\t// in\n    tag_224:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12164:12428  {... */\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12099:12428  function _burn(address from, uint256 id, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7004:7694  function _updateWithAcceptanceCheck(... */\n    tag_189:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7205:7235  _update(from, to, ids, values) */\n      tag_226\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7213:7217  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7219:7221  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7223:7226  ids */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7228:7234  values */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7205:7212  _update */\n      tag_227\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7205:7235  _update(from, to, ids, values) */\n      jump\t// in\n    tag_226:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7263:7264  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7249:7265  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7249:7251  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7249:7265  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7245:7688  if (to != address(0)) {... */\n      tag_228\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7281:7297  address operator */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7300:7312  _msgSender() */\n      tag_229\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7300:7310  _msgSender */\n      tag_112\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7300:7312  _msgSender() */\n      jump\t// in\n    tag_229:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7281:7312  address operator = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7344:7345  1 */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7330:7333  ids */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7330:7340  ids.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7330:7345  ids.length == 1 */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7326:7678  if (ids.length == 1) {... */\n      tag_230\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7365:7375  uint256 id */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7378:7403  ids.unsafeMemoryAccess(0) */\n      tag_231\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7401:7402  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7378:7381  ids */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7378:7400  ids.unsafeMemoryAccess */\n      tag_135\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7378:7403  ids.unsafeMemoryAccess(0) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_231:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7365:7403  uint256 id = ids.unsafeMemoryAccess(0) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7421:7434  uint256 value */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7437:7465  values.unsafeMemoryAccess(0) */\n      tag_232\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7463:7464  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7437:7443  values */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7437:7462  values.unsafeMemoryAccess */\n      tag_135\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7437:7465  values.unsafeMemoryAccess(0) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_232:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7421:7465  uint256 value = values.unsafeMemoryAccess(0) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7483:7550  _doSafeTransferAcceptanceCheck(operator, from, to, id, value, data) */\n      tag_233\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7514:7522  operator */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7524:7528  from */\n      dup10\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7530:7532  to */\n      dup10\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7534:7536  id */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7538:7543  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7545:7549  data */\n      dup10\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7483:7513  _doSafeTransferAcceptanceCheck */\n      tag_234\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7483:7550  _doSafeTransferAcceptanceCheck(operator, from, to, id, value, data) */\n      jump\t// in\n    tag_233:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7347:7565  {... */\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7326:7678  if (ids.length == 1) {... */\n      jump(tag_235)\n    tag_230:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7589:7663  _doSafeBatchTransferAcceptanceCheck(operator, from, to, ids, values, data) */\n      tag_236\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7625:7633  operator */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7635:7639  from */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7641:7643  to */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7645:7648  ids */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7650:7656  values */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7658:7662  data */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7589:7624  _doSafeBatchTransferAcceptanceCheck */\n      tag_237\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7589:7663  _doSafeBatchTransferAcceptanceCheck(operator, from, to, ids, values, data) */\n      jump\t// in\n    tag_236:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7326:7678  if (ids.length == 1) {... */\n    tag_235:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7267:7688  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7245:7688  if (to != address(0)) {... */\n    tag_228:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7004:7694  function _updateWithAcceptanceCheck(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16080:16929  function _asSingletonArrays(... */\n    tag_207:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16188:16211  uint256[] memory array1 */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16213:16236  uint256[] memory array2 */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16374:16378  0x40 */\n      0x40\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16368:16379  mload(0x40) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16358:16379  array1 := mload(0x40) */\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16444:16445  1 */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16436:16442  array1 */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16429:16446  mstore(array1, 1) */\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16582:16590  element1 */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16575:16579  0x20 */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16567:16573  array1 */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16563:16580  add(array1, 0x20) */\n      add\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16556:16591  mstore(add(array1, 0x20), element1) */\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16704:16708  0x40 */\n      0x40\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16696:16702  array1 */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16692:16709  add(array1, 0x40) */\n      add\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16682:16709  array2 := add(array1, 0x40) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16737:16738  1 */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16729:16735  array2 */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16722:16739  mstore(array2, 1) */\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16778:16786  element2 */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16771:16775  0x20 */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16763:16769  array2 */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16759:16776  add(array2, 0x20) */\n      add\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16752:16787  mstore(add(array2, 0x20), element2) */\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16907:16911  0x40 */\n      0x40\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16899:16905  array2 */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16895:16912  add(array2, 0x40) */\n      add\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16889:16893  0x40 */\n      0x40\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16882:16913  mstore(0x40, add(array2, 0x40)) */\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16080:16929  function _asSingletonArrays(... */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/Items/Items.sol\":997:1197  function _update (... */\n    tag_227:\n        /* \"contracts/Items/Items.sol\":1156:1192  super._update(from, to, ids, values) */\n      tag_240\n        /* \"contracts/Items/Items.sol\":1170:1174  from */\n      dup5\n        /* \"contracts/Items/Items.sol\":1176:1178  to */\n      dup5\n        /* \"contracts/Items/Items.sol\":1180:1183  ids */\n      dup5\n        /* \"contracts/Items/Items.sol\":1185:1191  values */\n      dup5\n        /* \"contracts/Items/Items.sol\":1156:1169  super._update */\n      tag_241\n        /* \"contracts/Items/Items.sol\":1156:1192  super._update(from, to, ids, values) */\n      jump\t// in\n    tag_240:\n        /* \"contracts/Items/Items.sol\":997:1197  function _update (... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13761:14735  function _doSafeTransferAcceptanceCheck(... */\n    tag_234:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13984:13985  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13967:13969  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13967:13981  to.code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13967:13985  to.code.length > 0 */\n      gt\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13963:14729  if (to.code.length > 0) {... */\n      iszero\n      tag_243\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14022:14024  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14005:14043  IERC1155Receiver(to).onERC1155Received */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xf23a6e61\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14044:14052  operator */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14054:14058  from */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14060:14062  id */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14064:14069  value */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14071:14075  data */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14005:14076  IERC1155Receiver(to).onERC1155Received(operator, from, id, value, data) */\n      mload(0x40)\n      dup7\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_244\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_245\n      jump\t// in\n    tag_244:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_246\n      jumpi\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_247\n      swap2\n      swap1\n      tag_248\n      jump\t// in\n    tag_247:\n      0x01\n    tag_246:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14001:14719  try IERC1155Receiver(to).onERC1155Received(operator, from, id, value, data) returns (bytes4 response) {... */\n      tag_249\n      jumpi\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_254\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_253)\n    tag_254:\n      0x60\n      swap2\n      pop\n    tag_253:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14377:14378  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14360:14366  reason */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14360:14373  reason.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14360:14378  reason.length == 0 */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14356:14705  if (reason.length == 0) {... */\n      tag_255\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14487:14489  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14464:14490  ERC1155InvalidReceiver(to) */\n      mload(0x40)\n      0x57f447ce00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_256\n      swap2\n      swap1\n      tag_187\n      jump\t// in\n    tag_256:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14356:14705  if (reason.length == 0) {... */\n    tag_255:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14657:14663  reason */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14651:14664  mload(reason) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14642:14648  reason */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14638:14640  32 */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14634:14649  add(32, reason) */\n      add\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14627:14665  revert(add(32, reason), mload(reason)) */\n      revert\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14001:14719  try IERC1155Receiver(to).onERC1155Received(operator, from, id, value, data) returns (bytes4 response) {... */\n    tag_249:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14137:14180  IERC1155Receiver.onERC1155Received.selector */\n      shl(0xe0, 0xf23a6e61)\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14125:14180  response != IERC1155Receiver.onERC1155Received.selector */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14125:14133  response */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14125:14180  response != IERC1155Receiver.onERC1155Received.selector */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14121:14295  if (response != IERC1155Receiver.onERC1155Received.selector) {... */\n      tag_259\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14273:14275  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14250:14276  ERC1155InvalidReceiver(to) */\n      mload(0x40)\n      0x57f447ce00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_260\n      swap2\n      swap1\n      tag_187\n      jump\t// in\n    tag_260:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14121:14295  if (response != IERC1155Receiver.onERC1155Received.selector) {... */\n    tag_259:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14077:14309  returns (bytes4 response) {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13963:14729  if (to.code.length > 0) {... */\n    tag_243:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13761:14735  function _doSafeTransferAcceptanceCheck(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14923:15964  function _doSafeBatchTransferAcceptanceCheck(... */\n    tag_237:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15171:15172  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15154:15156  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15154:15168  to.code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15154:15172  to.code.length > 0 */\n      gt\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15150:15958  if (to.code.length > 0) {... */\n      iszero\n      tag_262\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15209:15211  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15192:15235  IERC1155Receiver(to).onERC1155BatchReceived */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xbc197c81\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15236:15244  operator */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15246:15250  from */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15252:15255  ids */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15257:15263  values */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15265:15269  data */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15192:15270  IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, values, data) */\n      mload(0x40)\n      dup7\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_263\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_264\n      jump\t// in\n    tag_263:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_265\n      jumpi\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_266\n      swap2\n      swap1\n      tag_248\n      jump\t// in\n    tag_266:\n      0x01\n    tag_265:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15188:15948  try IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, values, data) returns (... */\n      tag_267\n      jumpi\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_272\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_271)\n    tag_272:\n      0x60\n      swap2\n      pop\n    tag_271:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15606:15607  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15589:15595  reason */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15589:15602  reason.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15589:15607  reason.length == 0 */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15585:15934  if (reason.length == 0) {... */\n      tag_273\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15716:15718  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15693:15719  ERC1155InvalidReceiver(to) */\n      mload(0x40)\n      0x57f447ce00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_274\n      swap2\n      swap1\n      tag_187\n      jump\t// in\n    tag_274:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15585:15934  if (reason.length == 0) {... */\n    tag_273:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15886:15892  reason */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15880:15893  mload(reason) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15871:15877  reason */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15867:15869  32 */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15863:15878  add(32, reason) */\n      add\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15856:15894  revert(add(32, reason), mload(reason)) */\n      revert\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15188:15948  try IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, values, data) returns (... */\n    tag_267:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15361:15409  IERC1155Receiver.onERC1155BatchReceived.selector */\n      shl(0xe0, 0xbc197c81)\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15349:15409  response != IERC1155Receiver.onERC1155BatchReceived.selector */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15349:15357  response */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15349:15409  response != IERC1155Receiver.onERC1155BatchReceived.selector */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15345:15524  if (response != IERC1155Receiver.onERC1155BatchReceived.selector) {... */\n      tag_277\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15502:15504  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15479:15505  ERC1155InvalidReceiver(to) */\n      mload(0x40)\n      0x57f447ce00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_278\n      swap2\n      swap1\n      tag_187\n      jump\t// in\n    tag_278:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15345:15524  if (response != IERC1155Receiver.onERC1155BatchReceived.selector) {... */\n    tag_277:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15271:15538  returns (... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15150:15958  if (to.code.length > 0) {... */\n    tag_262:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14923:15964  function _doSafeBatchTransferAcceptanceCheck(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":1483:3001  function _update(... */\n    tag_241:\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":1647:1683  super._update(from, to, ids, values) */\n      tag_280\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":1661:1665  from */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":1667:1669  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":1671:1674  ids */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":1676:1682  values */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":1647:1660  super._update */\n      tag_281\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":1647:1683  super._update(from, to, ids, values) */\n      jump\t// in\n    tag_280:\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":1714:1715  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":1698:1716  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":1698:1702  from */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":1698:1716  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":1694:2227  if (from == address(0)) {... */\n      tag_282\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":1732:1754  uint256 totalMintValue */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":1777:1786  uint256 i */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":1772:2065  for (uint256 i = 0; i < ids.length; ++i) {... */\n    tag_283:\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":1796:1799  ids */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":1796:1806  ids.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":1792:1793  i */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":1792:1806  i < ids.length */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":1772:2065  for (uint256 i = 0; i < ids.length; ++i) {... */\n      iszero\n      tag_284\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":1831:1844  uint256 value */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":1847:1853  values */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":1854:1855  i */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":1847:1856  values[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_286\n      jumpi\n      tag_287\n      tag_138\n      jump\t// in\n    tag_287:\n    tag_286:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":1831:1856  uint256 value = values[i] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":2004:2009  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":1980:1992  _totalSupply */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":1980:2000  _totalSupply[ids[i]] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":1993:1996  ids */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":1997:1998  i */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":1993:1999  ids[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_288\n      jumpi\n      tag_289\n      tag_138\n      jump\t// in\n    tag_289:\n    tag_288:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":1980:2000  _totalSupply[ids[i]] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":1980:2009  _totalSupply[ids[i]] += value */\n      dup3\n      dup3\n      sload\n      tag_290\n      swap2\n      swap1\n      tag_291\n      jump\t// in\n    tag_290:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":2045:2050  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":2027:2050  totalMintValue += value */\n      dup4\n      tag_292\n      swap2\n      swap1\n      tag_291\n      jump\t// in\n    tag_292:\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":1813:2065  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":1808:1811  ++i */\n      dup1\n      tag_293\n      swap1\n      tag_140\n      jump\t// in\n    tag_293:\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":1772:2065  for (uint256 i = 0; i < ids.length; ++i) {... */\n      jump(tag_283)\n    tag_284:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":2202:2216  totalMintValue */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":2183:2198  _totalSupplyAll */\n      0x04\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":2183:2216  _totalSupplyAll += totalMintValue */\n      dup3\n      dup3\n      sload\n      tag_294\n      swap2\n      swap1\n      tag_291\n      jump\t// in\n    tag_294:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":1718:2227  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":1694:2227  if (from == address(0)) {... */\n    tag_282:\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":2255:2256  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":2241:2257  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":2241:2243  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":2241:2257  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":2237:2995  if (to == address(0)) {... */\n      tag_295\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":2273:2295  uint256 totalBurnValue */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":2318:2327  uint256 i */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":2313:2772  for (uint256 i = 0; i < ids.length; ++i) {... */\n    tag_296:\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":2337:2340  ids */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":2337:2347  ids.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":2333:2334  i */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":2333:2347  i < ids.length */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":2313:2772  for (uint256 i = 0; i < ids.length; ++i) {... */\n      iszero\n      tag_297\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":2372:2385  uint256 value */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":2388:2394  values */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":2395:2396  i */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":2388:2397  values[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_299\n      jumpi\n      tag_300\n      tag_138\n      jump\t// in\n    tag_300:\n    tag_299:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":2372:2397  uint256 value = values[i] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":2578:2583  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":2554:2566  _totalSupply */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":2554:2574  _totalSupply[ids[i]] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":2567:2570  ids */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":2571:2572  i */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":2567:2573  ids[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_301\n      jumpi\n      tag_302\n      tag_138\n      jump\t// in\n    tag_302:\n    tag_301:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":2554:2574  _totalSupply[ids[i]] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":2554:2583  _totalSupply[ids[i]] -= value */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":2734:2739  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":2716:2739  totalBurnValue += value */\n      dup4\n      add\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":2354:2772  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":2349:2352  ++i */\n      dup1\n      tag_303\n      swap1\n      tag_140\n      jump\t// in\n    tag_303:\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":2313:2772  for (uint256 i = 0; i < ids.length; ++i) {... */\n      jump(tag_296)\n    tag_297:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":2956:2970  totalBurnValue */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":2937:2952  _totalSupplyAll */\n      0x04\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":2937:2970  _totalSupplyAll -= totalBurnValue */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":2259:2995  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":2237:2995  if (to == address(0)) {... */\n    tag_295:\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":1483:3001  function _update(... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5144:6425  function _update(address from, address to, uint256[] memory ids, uint256[] memory values) internal virtual {... */\n    tag_281:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5279:5285  values */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5279:5292  values.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5265:5268  ids */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5265:5275  ids.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5265:5292  ids.length != values.length */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5261:5378  if (ids.length != values.length) {... */\n      tag_305\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5341:5344  ids */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5341:5351  ids.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5353:5359  values */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5353:5366  values.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5315:5367  ERC1155InvalidArrayLength(ids.length, values.length) */\n      mload(0x40)\n      0x5b05999100000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_306\n      swap3\n      swap2\n      swap1\n      tag_123\n      jump\t// in\n    tag_306:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5261:5378  if (ids.length != values.length) {... */\n    tag_305:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5388:5404  address operator */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5407:5419  _msgSender() */\n      tag_307\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5407:5417  _msgSender */\n      tag_112\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5407:5419  _msgSender() */\n      jump\t// in\n    tag_307:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5388:5419  address operator = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5435:5444  uint256 i */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5430:6121  for (uint256 i = 0; i < ids.length; ++i) {... */\n    tag_308:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5454:5457  ids */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5454:5464  ids.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5450:5451  i */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5450:5464  i < ids.length */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5430:6121  for (uint256 i = 0; i < ids.length; ++i) {... */\n      iszero\n      tag_309\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5485:5495  uint256 id */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5498:5523  ids.unsafeMemoryAccess(i) */\n      tag_311\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5521:5522  i */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5498:5501  ids */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5498:5520  ids.unsafeMemoryAccess */\n      tag_135\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5498:5523  ids.unsafeMemoryAccess(i) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_311:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5485:5523  uint256 id = ids.unsafeMemoryAccess(i) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5537:5550  uint256 value */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5553:5581  values.unsafeMemoryAccess(i) */\n      tag_312\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5579:5580  i */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5553:5559  values */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5553:5578  values.unsafeMemoryAccess */\n      tag_135\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5553:5581  values.unsafeMemoryAccess(i) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_312:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5537:5581  uint256 value = values.unsafeMemoryAccess(i) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5616:5617  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5600:5618  from != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5600:5604  from */\n      dup9\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5600:5618  from != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5596:6016  if (from != address(0)) {... */\n      tag_313\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5638:5657  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5660:5669  _balances */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5660:5673  _balances[id] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5670:5672  id */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5660:5673  _balances[id] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5660:5679  _balances[id][from] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5674:5678  from */\n      dup11\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5660:5679  _balances[id][from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5638:5679  uint256 fromBalance = _balances[id][from] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5715:5720  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5701:5712  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5701:5720  fromBalance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5697:5826  if (fromBalance < value) {... */\n      iszero\n      tag_314\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5778:5782  from */\n      dup9\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5784:5795  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5797:5802  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5804:5806  id */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5751:5807  ERC1155InsufficientBalance(from, fromBalance, value, id) */\n      mload(0x40)\n      0x03dee4c500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_315\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_316\n      jump\t// in\n    tag_315:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5697:5826  if (fromBalance < value) {... */\n    tag_314:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5978:5983  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5964:5975  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5964:5983  fromBalance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5942:5951  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5942:5955  _balances[id] */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5952:5954  id */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5942:5955  _balances[id] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5942:5961  _balances[id][from] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5956:5960  from */\n      dup12\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5942:5961  _balances[id][from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5942:5983  _balances[id][from] = fromBalance - value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5620:6016  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5596:6016  if (from != address(0)) {... */\n    tag_313:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6048:6049  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6034:6050  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6034:6036  to */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6034:6050  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6030:6111  if (to != address(0)) {... */\n      tag_317\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6091:6096  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6070:6079  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6070:6083  _balances[id] */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6080:6082  id */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6070:6083  _balances[id] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6070:6087  _balances[id][to] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6084:6086  to */\n      dup10\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6070:6087  _balances[id][to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6070:6096  _balances[id][to] += value */\n      dup3\n      dup3\n      sload\n      tag_318\n      swap2\n      swap1\n      tag_291\n      jump\t// in\n    tag_318:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6030:6111  if (to != address(0)) {... */\n    tag_317:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5471:6121  {... */\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5466:5469  ++i */\n      dup1\n      tag_319\n      swap1\n      tag_140\n      jump\t// in\n    tag_319:\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5430:6121  for (uint256 i = 0; i < ids.length; ++i) {... */\n      jump(tag_308)\n    tag_309:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6149:6150  1 */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6135:6138  ids */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6135:6145  ids.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6135:6150  ids.length == 1 */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6131:6419  if (ids.length == 1) {... */\n      tag_320\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6166:6176  uint256 id */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6179:6204  ids.unsafeMemoryAccess(0) */\n      tag_321\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6202:6203  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6179:6182  ids */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6179:6201  ids.unsafeMemoryAccess */\n      tag_135\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6179:6204  ids.unsafeMemoryAccess(0) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_321:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6166:6204  uint256 id = ids.unsafeMemoryAccess(0) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6218:6231  uint256 value */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6234:6262  values.unsafeMemoryAccess(0) */\n      tag_322\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6260:6261  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6234:6240  values */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6234:6259  values.unsafeMemoryAccess */\n      tag_135\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6234:6262  values.unsafeMemoryAccess(0) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_322:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6218:6262  uint256 value = values.unsafeMemoryAccess(0) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6312:6314  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6281:6326  TransferSingle(operator, from, to, id, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6306:6310  from */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6281:6326  TransferSingle(operator, from, to, id, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6296:6304  operator */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6281:6326  TransferSingle(operator, from, to, id, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6316:6318  id */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6320:6325  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6281:6326  TransferSingle(operator, from, to, id, value) */\n      mload(0x40)\n      tag_323\n      swap3\n      swap2\n      swap1\n      tag_123\n      jump\t// in\n    tag_323:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6152:6337  {... */\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6131:6419  if (ids.length == 1) {... */\n      jump(tag_324)\n    tag_320:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6392:6394  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6362:6408  TransferBatch(operator, from, to, ids, values) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6386:6390  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6362:6408  TransferBatch(operator, from, to, ids, values) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6376:6384  operator */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6362:6408  TransferBatch(operator, from, to, ids, values) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6396:6399  ids */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6401:6407  values */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6362:6408  TransferBatch(operator, from, to, ids, values) */\n      mload(0x40)\n      tag_325\n      swap3\n      swap2\n      swap1\n      tag_326\n      jump\t// in\n    tag_325:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6131:6419  if (ids.length == 1) {... */\n    tag_324:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5251:6425  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5144:6425  function _update(address from, address to, uint256[] memory ids, uint256[] memory values) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:82   */\n    tag_327:\n        /* \"#utility.yul\":40:46   */\n      0x00\n        /* \"#utility.yul\":73:75   */\n      0x40\n        /* \"#utility.yul\":67:76   */\n      mload\n        /* \"#utility.yul\":57:76   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:82   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_328:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":211:328   */\n    tag_329:\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      dup1\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":334:460   */\n    tag_330:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":411:453   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":404:409   */\n      dup3\n        /* \"#utility.yul\":400:454   */\n      and\n        /* \"#utility.yul\":389:454   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:460   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":466:562   */\n    tag_331:\n        /* \"#utility.yul\":503:510   */\n      0x00\n        /* \"#utility.yul\":532:556   */\n      tag_387\n        /* \"#utility.yul\":550:555   */\n      dup3\n        /* \"#utility.yul\":532:556   */\n      tag_330\n      jump\t// in\n    tag_387:\n        /* \"#utility.yul\":521:556   */\n      swap1\n      pop\n        /* \"#utility.yul\":466:562   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":568:690   */\n    tag_332:\n        /* \"#utility.yul\":641:665   */\n      tag_389\n        /* \"#utility.yul\":659:664   */\n      dup2\n        /* \"#utility.yul\":641:665   */\n      tag_331\n      jump\t// in\n    tag_389:\n        /* \"#utility.yul\":634:639   */\n      dup2\n        /* \"#utility.yul\":631:666   */\n      eq\n        /* \"#utility.yul\":621:684   */\n      tag_390\n      jumpi\n        /* \"#utility.yul\":680:681   */\n      0x00\n        /* \"#utility.yul\":677:678   */\n      dup1\n        /* \"#utility.yul\":670:682   */\n      revert\n        /* \"#utility.yul\":621:684   */\n    tag_390:\n        /* \"#utility.yul\":568:690   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":696:835   */\n    tag_333:\n        /* \"#utility.yul\":742:747   */\n      0x00\n        /* \"#utility.yul\":780:786   */\n      dup2\n        /* \"#utility.yul\":767:787   */\n      calldataload\n        /* \"#utility.yul\":758:787   */\n      swap1\n      pop\n        /* \"#utility.yul\":796:829   */\n      tag_392\n        /* \"#utility.yul\":823:828   */\n      dup2\n        /* \"#utility.yul\":796:829   */\n      tag_332\n      jump\t// in\n    tag_392:\n        /* \"#utility.yul\":696:835   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":841:918   */\n    tag_334:\n        /* \"#utility.yul\":878:885   */\n      0x00\n        /* \"#utility.yul\":907:912   */\n      dup2\n        /* \"#utility.yul\":896:912   */\n      swap1\n      pop\n        /* \"#utility.yul\":841:918   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":924:1046   */\n    tag_335:\n        /* \"#utility.yul\":997:1021   */\n      tag_395\n        /* \"#utility.yul\":1015:1020   */\n      dup2\n        /* \"#utility.yul\":997:1021   */\n      tag_334\n      jump\t// in\n    tag_395:\n        /* \"#utility.yul\":990:995   */\n      dup2\n        /* \"#utility.yul\":987:1022   */\n      eq\n        /* \"#utility.yul\":977:1040   */\n      tag_396\n      jumpi\n        /* \"#utility.yul\":1036:1037   */\n      0x00\n        /* \"#utility.yul\":1033:1034   */\n      dup1\n        /* \"#utility.yul\":1026:1038   */\n      revert\n        /* \"#utility.yul\":977:1040   */\n    tag_396:\n        /* \"#utility.yul\":924:1046   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1052:1191   */\n    tag_336:\n        /* \"#utility.yul\":1098:1103   */\n      0x00\n        /* \"#utility.yul\":1136:1142   */\n      dup2\n        /* \"#utility.yul\":1123:1143   */\n      calldataload\n        /* \"#utility.yul\":1114:1143   */\n      swap1\n      pop\n        /* \"#utility.yul\":1152:1185   */\n      tag_398\n        /* \"#utility.yul\":1179:1184   */\n      dup2\n        /* \"#utility.yul\":1152:1185   */\n      tag_335\n      jump\t// in\n    tag_398:\n        /* \"#utility.yul\":1052:1191   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1197:1671   */\n    tag_23:\n        /* \"#utility.yul\":1265:1271   */\n      0x00\n        /* \"#utility.yul\":1273:1279   */\n      dup1\n        /* \"#utility.yul\":1322:1324   */\n      0x40\n        /* \"#utility.yul\":1310:1319   */\n      dup4\n        /* \"#utility.yul\":1301:1308   */\n      dup6\n        /* \"#utility.yul\":1297:1320   */\n      sub\n        /* \"#utility.yul\":1293:1325   */\n      slt\n        /* \"#utility.yul\":1290:1409   */\n      iszero\n      tag_400\n      jumpi\n        /* \"#utility.yul\":1328:1407   */\n      tag_401\n      tag_328\n      jump\t// in\n    tag_401:\n        /* \"#utility.yul\":1290:1409   */\n    tag_400:\n        /* \"#utility.yul\":1448:1449   */\n      0x00\n        /* \"#utility.yul\":1473:1526   */\n      tag_402\n        /* \"#utility.yul\":1518:1525   */\n      dup6\n        /* \"#utility.yul\":1509:1515   */\n      dup3\n        /* \"#utility.yul\":1498:1507   */\n      dup7\n        /* \"#utility.yul\":1494:1516   */\n      add\n        /* \"#utility.yul\":1473:1526   */\n      tag_333\n      jump\t// in\n    tag_402:\n        /* \"#utility.yul\":1463:1526   */\n      swap3\n      pop\n        /* \"#utility.yul\":1419:1536   */\n      pop\n        /* \"#utility.yul\":1575:1577   */\n      0x20\n        /* \"#utility.yul\":1601:1654   */\n      tag_403\n        /* \"#utility.yul\":1646:1653   */\n      dup6\n        /* \"#utility.yul\":1637:1643   */\n      dup3\n        /* \"#utility.yul\":1626:1635   */\n      dup7\n        /* \"#utility.yul\":1622:1644   */\n      add\n        /* \"#utility.yul\":1601:1654   */\n      tag_336\n      jump\t// in\n    tag_403:\n        /* \"#utility.yul\":1591:1654   */\n      swap2\n      pop\n        /* \"#utility.yul\":1546:1664   */\n      pop\n        /* \"#utility.yul\":1197:1671   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1677:1795   */\n    tag_337:\n        /* \"#utility.yul\":1764:1788   */\n      tag_405\n        /* \"#utility.yul\":1782:1787   */\n      dup2\n        /* \"#utility.yul\":1764:1788   */\n      tag_334\n      jump\t// in\n    tag_405:\n        /* \"#utility.yul\":1759:1762   */\n      dup3\n        /* \"#utility.yul\":1752:1789   */\n      mstore\n        /* \"#utility.yul\":1677:1795   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1801:2023   */\n    tag_26:\n        /* \"#utility.yul\":1894:1898   */\n      0x00\n        /* \"#utility.yul\":1932:1934   */\n      0x20\n        /* \"#utility.yul\":1921:1930   */\n      dup3\n        /* \"#utility.yul\":1917:1935   */\n      add\n        /* \"#utility.yul\":1909:1935   */\n      swap1\n      pop\n        /* \"#utility.yul\":1945:2016   */\n      tag_407\n        /* \"#utility.yul\":2013:2014   */\n      0x00\n        /* \"#utility.yul\":2002:2011   */\n      dup4\n        /* \"#utility.yul\":1998:2015   */\n      add\n        /* \"#utility.yul\":1989:1995   */\n      dup5\n        /* \"#utility.yul\":1945:2016   */\n      tag_337\n      jump\t// in\n    tag_407:\n        /* \"#utility.yul\":1801:2023   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2029:2178   */\n    tag_338:\n        /* \"#utility.yul\":2065:2072   */\n      0x00\n        /* \"#utility.yul\":2105:2171   */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":2098:2103   */\n      dup3\n        /* \"#utility.yul\":2094:2172   */\n      and\n        /* \"#utility.yul\":2083:2172   */\n      swap1\n      pop\n        /* \"#utility.yul\":2029:2178   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2184:2304   */\n    tag_339:\n        /* \"#utility.yul\":2256:2279   */\n      tag_410\n        /* \"#utility.yul\":2273:2278   */\n      dup2\n        /* \"#utility.yul\":2256:2279   */\n      tag_338\n      jump\t// in\n    tag_410:\n        /* \"#utility.yul\":2249:2254   */\n      dup2\n        /* \"#utility.yul\":2246:2280   */\n      eq\n        /* \"#utility.yul\":2236:2298   */\n      tag_411\n      jumpi\n        /* \"#utility.yul\":2294:2295   */\n      0x00\n        /* \"#utility.yul\":2291:2292   */\n      dup1\n        /* \"#utility.yul\":2284:2296   */\n      revert\n        /* \"#utility.yul\":2236:2298   */\n    tag_411:\n        /* \"#utility.yul\":2184:2304   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2310:2447   */\n    tag_340:\n        /* \"#utility.yul\":2355:2360   */\n      0x00\n        /* \"#utility.yul\":2393:2399   */\n      dup2\n        /* \"#utility.yul\":2380:2400   */\n      calldataload\n        /* \"#utility.yul\":2371:2400   */\n      swap1\n      pop\n        /* \"#utility.yul\":2409:2441   */\n      tag_413\n        /* \"#utility.yul\":2435:2440   */\n      dup2\n        /* \"#utility.yul\":2409:2441   */\n      tag_339\n      jump\t// in\n    tag_413:\n        /* \"#utility.yul\":2310:2447   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2453:2780   */\n    tag_29:\n        /* \"#utility.yul\":2511:2517   */\n      0x00\n        /* \"#utility.yul\":2560:2562   */\n      0x20\n        /* \"#utility.yul\":2548:2557   */\n      dup3\n        /* \"#utility.yul\":2539:2546   */\n      dup5\n        /* \"#utility.yul\":2535:2558   */\n      sub\n        /* \"#utility.yul\":2531:2563   */\n      slt\n        /* \"#utility.yul\":2528:2647   */\n      iszero\n      tag_415\n      jumpi\n        /* \"#utility.yul\":2566:2645   */\n      tag_416\n      tag_328\n      jump\t// in\n    tag_416:\n        /* \"#utility.yul\":2528:2647   */\n    tag_415:\n        /* \"#utility.yul\":2686:2687   */\n      0x00\n        /* \"#utility.yul\":2711:2763   */\n      tag_417\n        /* \"#utility.yul\":2755:2762   */\n      dup5\n        /* \"#utility.yul\":2746:2752   */\n      dup3\n        /* \"#utility.yul\":2735:2744   */\n      dup6\n        /* \"#utility.yul\":2731:2753   */\n      add\n        /* \"#utility.yul\":2711:2763   */\n      tag_340\n      jump\t// in\n    tag_417:\n        /* \"#utility.yul\":2701:2763   */\n      swap2\n      pop\n        /* \"#utility.yul\":2657:2773   */\n      pop\n        /* \"#utility.yul\":2453:2780   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2786:2876   */\n    tag_341:\n        /* \"#utility.yul\":2820:2827   */\n      0x00\n        /* \"#utility.yul\":2863:2868   */\n      dup2\n        /* \"#utility.yul\":2856:2869   */\n      iszero\n        /* \"#utility.yul\":2849:2870   */\n      iszero\n        /* \"#utility.yul\":2838:2870   */\n      swap1\n      pop\n        /* \"#utility.yul\":2786:2876   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2882:2991   */\n    tag_342:\n        /* \"#utility.yul\":2963:2984   */\n      tag_420\n        /* \"#utility.yul\":2978:2983   */\n      dup2\n        /* \"#utility.yul\":2963:2984   */\n      tag_341\n      jump\t// in\n    tag_420:\n        /* \"#utility.yul\":2958:2961   */\n      dup3\n        /* \"#utility.yul\":2951:2985   */\n      mstore\n        /* \"#utility.yul\":2882:2991   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2997:3207   */\n    tag_32:\n        /* \"#utility.yul\":3084:3088   */\n      0x00\n        /* \"#utility.yul\":3122:3124   */\n      0x20\n        /* \"#utility.yul\":3111:3120   */\n      dup3\n        /* \"#utility.yul\":3107:3125   */\n      add\n        /* \"#utility.yul\":3099:3125   */\n      swap1\n      pop\n        /* \"#utility.yul\":3135:3200   */\n      tag_422\n        /* \"#utility.yul\":3197:3198   */\n      0x00\n        /* \"#utility.yul\":3186:3195   */\n      dup4\n        /* \"#utility.yul\":3182:3199   */\n      add\n        /* \"#utility.yul\":3173:3179   */\n      dup5\n        /* \"#utility.yul\":3135:3200   */\n      tag_342\n      jump\t// in\n    tag_422:\n        /* \"#utility.yul\":2997:3207   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3213:3542   */\n    tag_35:\n        /* \"#utility.yul\":3272:3278   */\n      0x00\n        /* \"#utility.yul\":3321:3323   */\n      0x20\n        /* \"#utility.yul\":3309:3318   */\n      dup3\n        /* \"#utility.yul\":3300:3307   */\n      dup5\n        /* \"#utility.yul\":3296:3319   */\n      sub\n        /* \"#utility.yul\":3292:3324   */\n      slt\n        /* \"#utility.yul\":3289:3408   */\n      iszero\n      tag_424\n      jumpi\n        /* \"#utility.yul\":3327:3406   */\n      tag_425\n      tag_328\n      jump\t// in\n    tag_425:\n        /* \"#utility.yul\":3289:3408   */\n    tag_424:\n        /* \"#utility.yul\":3447:3448   */\n      0x00\n        /* \"#utility.yul\":3472:3525   */\n      tag_426\n        /* \"#utility.yul\":3517:3524   */\n      dup5\n        /* \"#utility.yul\":3508:3514   */\n      dup3\n        /* \"#utility.yul\":3497:3506   */\n      dup6\n        /* \"#utility.yul\":3493:3515   */\n      add\n        /* \"#utility.yul\":3472:3525   */\n      tag_336\n      jump\t// in\n    tag_426:\n        /* \"#utility.yul\":3462:3525   */\n      swap2\n      pop\n        /* \"#utility.yul\":3418:3535   */\n      pop\n        /* \"#utility.yul\":3213:3542   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3548:3647   */\n    tag_343:\n        /* \"#utility.yul\":3600:3606   */\n      0x00\n        /* \"#utility.yul\":3634:3639   */\n      dup2\n        /* \"#utility.yul\":3628:3640   */\n      mload\n        /* \"#utility.yul\":3618:3640   */\n      swap1\n      pop\n        /* \"#utility.yul\":3548:3647   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3653:3822   */\n    tag_344:\n        /* \"#utility.yul\":3737:3748   */\n      0x00\n        /* \"#utility.yul\":3771:3777   */\n      dup3\n        /* \"#utility.yul\":3766:3769   */\n      dup3\n        /* \"#utility.yul\":3759:3778   */\n      mstore\n        /* \"#utility.yul\":3811:3815   */\n      0x20\n        /* \"#utility.yul\":3806:3809   */\n      dup3\n        /* \"#utility.yul\":3802:3816   */\n      add\n        /* \"#utility.yul\":3787:3816   */\n      swap1\n      pop\n        /* \"#utility.yul\":3653:3822   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3828:4074   */\n    tag_345:\n        /* \"#utility.yul\":3909:3910   */\n      0x00\n        /* \"#utility.yul\":3919:4032   */\n    tag_430:\n        /* \"#utility.yul\":3933:3939   */\n      dup4\n        /* \"#utility.yul\":3930:3931   */\n      dup2\n        /* \"#utility.yul\":3927:3940   */\n      lt\n        /* \"#utility.yul\":3919:4032   */\n      iszero\n      tag_432\n      jumpi\n        /* \"#utility.yul\":4018:4019   */\n      dup1\n        /* \"#utility.yul\":4013:4016   */\n      dup3\n        /* \"#utility.yul\":4009:4020   */\n      add\n        /* \"#utility.yul\":4003:4021   */\n      mload\n        /* \"#utility.yul\":3999:4000   */\n      dup2\n        /* \"#utility.yul\":3994:3997   */\n      dup5\n        /* \"#utility.yul\":3990:4001   */\n      add\n        /* \"#utility.yul\":3983:4022   */\n      mstore\n        /* \"#utility.yul\":3955:3957   */\n      0x20\n        /* \"#utility.yul\":3952:3953   */\n      dup2\n        /* \"#utility.yul\":3948:3958   */\n      add\n        /* \"#utility.yul\":3943:3958   */\n      swap1\n      pop\n        /* \"#utility.yul\":3919:4032   */\n      jump(tag_430)\n    tag_432:\n        /* \"#utility.yul\":4066:4067   */\n      0x00\n        /* \"#utility.yul\":4057:4063   */\n      dup5\n        /* \"#utility.yul\":4052:4055   */\n      dup5\n        /* \"#utility.yul\":4048:4064   */\n      add\n        /* \"#utility.yul\":4041:4068   */\n      mstore\n        /* \"#utility.yul\":3890:4074   */\n      pop\n        /* \"#utility.yul\":3828:4074   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4080:4182   */\n    tag_346:\n        /* \"#utility.yul\":4121:4127   */\n      0x00\n        /* \"#utility.yul\":4172:4174   */\n      0x1f\n        /* \"#utility.yul\":4168:4175   */\n      not\n        /* \"#utility.yul\":4163:4165   */\n      0x1f\n        /* \"#utility.yul\":4156:4161   */\n      dup4\n        /* \"#utility.yul\":4152:4166   */\n      add\n        /* \"#utility.yul\":4148:4176   */\n      and\n        /* \"#utility.yul\":4138:4176   */\n      swap1\n      pop\n        /* \"#utility.yul\":4080:4182   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4188:4565   */\n    tag_347:\n        /* \"#utility.yul\":4276:4279   */\n      0x00\n        /* \"#utility.yul\":4304:4343   */\n      tag_435\n        /* \"#utility.yul\":4337:4342   */\n      dup3\n        /* \"#utility.yul\":4304:4343   */\n      tag_343\n      jump\t// in\n    tag_435:\n        /* \"#utility.yul\":4359:4430   */\n      tag_436\n        /* \"#utility.yul\":4423:4429   */\n      dup2\n        /* \"#utility.yul\":4418:4421   */\n      dup6\n        /* \"#utility.yul\":4359:4430   */\n      tag_344\n      jump\t// in\n    tag_436:\n        /* \"#utility.yul\":4352:4430   */\n      swap4\n      pop\n        /* \"#utility.yul\":4439:4504   */\n      tag_437\n        /* \"#utility.yul\":4497:4503   */\n      dup2\n        /* \"#utility.yul\":4492:4495   */\n      dup6\n        /* \"#utility.yul\":4485:4489   */\n      0x20\n        /* \"#utility.yul\":4478:4483   */\n      dup7\n        /* \"#utility.yul\":4474:4490   */\n      add\n        /* \"#utility.yul\":4439:4504   */\n      tag_345\n      jump\t// in\n    tag_437:\n        /* \"#utility.yul\":4529:4558   */\n      tag_438\n        /* \"#utility.yul\":4551:4557   */\n      dup2\n        /* \"#utility.yul\":4529:4558   */\n      tag_346\n      jump\t// in\n    tag_438:\n        /* \"#utility.yul\":4524:4527   */\n      dup5\n        /* \"#utility.yul\":4520:4559   */\n      add\n        /* \"#utility.yul\":4513:4559   */\n      swap2\n      pop\n        /* \"#utility.yul\":4280:4565   */\n      pop\n        /* \"#utility.yul\":4188:4565   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4571:4884   */\n    tag_38:\n        /* \"#utility.yul\":4684:4688   */\n      0x00\n        /* \"#utility.yul\":4722:4724   */\n      0x20\n        /* \"#utility.yul\":4711:4720   */\n      dup3\n        /* \"#utility.yul\":4707:4725   */\n      add\n        /* \"#utility.yul\":4699:4725   */\n      swap1\n      pop\n        /* \"#utility.yul\":4771:4780   */\n      dup2\n        /* \"#utility.yul\":4765:4769   */\n      dup2\n        /* \"#utility.yul\":4761:4781   */\n      sub\n        /* \"#utility.yul\":4757:4758   */\n      0x00\n        /* \"#utility.yul\":4746:4755   */\n      dup4\n        /* \"#utility.yul\":4742:4759   */\n      add\n        /* \"#utility.yul\":4735:4782   */\n      mstore\n        /* \"#utility.yul\":4799:4877   */\n      tag_440\n        /* \"#utility.yul\":4872:4876   */\n      dup2\n        /* \"#utility.yul\":4863:4869   */\n      dup5\n        /* \"#utility.yul\":4799:4877   */\n      tag_347\n      jump\t// in\n    tag_440:\n        /* \"#utility.yul\":4791:4877   */\n      swap1\n      pop\n        /* \"#utility.yul\":4571:4884   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4890:5007   */\n    tag_348:\n        /* \"#utility.yul\":4999:5000   */\n      0x00\n        /* \"#utility.yul\":4996:4997   */\n      dup1\n        /* \"#utility.yul\":4989:5001   */\n      revert\n        /* \"#utility.yul\":5013:5193   */\n    tag_126:\n        /* \"#utility.yul\":5061:5138   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":5058:5059   */\n      0x00\n        /* \"#utility.yul\":5051:5139   */\n      mstore\n        /* \"#utility.yul\":5158:5162   */\n      0x41\n        /* \"#utility.yul\":5155:5156   */\n      0x04\n        /* \"#utility.yul\":5148:5163   */\n      mstore\n        /* \"#utility.yul\":5182:5186   */\n      0x24\n        /* \"#utility.yul\":5179:5180   */\n      0x00\n        /* \"#utility.yul\":5172:5187   */\n      revert\n        /* \"#utility.yul\":5199:5480   */\n    tag_349:\n        /* \"#utility.yul\":5282:5309   */\n      tag_444\n        /* \"#utility.yul\":5304:5308   */\n      dup3\n        /* \"#utility.yul\":5282:5309   */\n      tag_346\n      jump\t// in\n    tag_444:\n        /* \"#utility.yul\":5274:5280   */\n      dup2\n        /* \"#utility.yul\":5270:5310   */\n      add\n        /* \"#utility.yul\":5412:5418   */\n      dup2\n        /* \"#utility.yul\":5400:5410   */\n      dup2\n        /* \"#utility.yul\":5397:5419   */\n      lt\n        /* \"#utility.yul\":5376:5394   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":5364:5374   */\n      dup3\n        /* \"#utility.yul\":5361:5395   */\n      gt\n        /* \"#utility.yul\":5358:5420   */\n      or\n        /* \"#utility.yul\":5355:5443   */\n      iszero\n      tag_445\n      jumpi\n        /* \"#utility.yul\":5423:5441   */\n      tag_446\n      tag_126\n      jump\t// in\n    tag_446:\n        /* \"#utility.yul\":5355:5443   */\n    tag_445:\n        /* \"#utility.yul\":5463:5473   */\n      dup1\n        /* \"#utility.yul\":5459:5461   */\n      0x40\n        /* \"#utility.yul\":5452:5474   */\n      mstore\n        /* \"#utility.yul\":5242:5480   */\n      pop\n        /* \"#utility.yul\":5199:5480   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5486:5615   */\n    tag_350:\n        /* \"#utility.yul\":5520:5526   */\n      0x00\n        /* \"#utility.yul\":5547:5567   */\n      tag_448\n      tag_327\n      jump\t// in\n    tag_448:\n        /* \"#utility.yul\":5537:5567   */\n      swap1\n      pop\n        /* \"#utility.yul\":5576:5609   */\n      tag_449\n        /* \"#utility.yul\":5604:5608   */\n      dup3\n        /* \"#utility.yul\":5596:5602   */\n      dup3\n        /* \"#utility.yul\":5576:5609   */\n      tag_349\n      jump\t// in\n    tag_449:\n        /* \"#utility.yul\":5486:5615   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5621:5932   */\n    tag_351:\n        /* \"#utility.yul\":5698:5702   */\n      0x00\n        /* \"#utility.yul\":5788:5806   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":5780:5786   */\n      dup3\n        /* \"#utility.yul\":5777:5807   */\n      gt\n        /* \"#utility.yul\":5774:5830   */\n      iszero\n      tag_451\n      jumpi\n        /* \"#utility.yul\":5810:5828   */\n      tag_452\n      tag_126\n      jump\t// in\n    tag_452:\n        /* \"#utility.yul\":5774:5830   */\n    tag_451:\n        /* \"#utility.yul\":5860:5864   */\n      0x20\n        /* \"#utility.yul\":5852:5858   */\n      dup3\n        /* \"#utility.yul\":5848:5865   */\n      mul\n        /* \"#utility.yul\":5840:5865   */\n      swap1\n      pop\n        /* \"#utility.yul\":5920:5924   */\n      0x20\n        /* \"#utility.yul\":5914:5918   */\n      dup2\n        /* \"#utility.yul\":5910:5925   */\n      add\n        /* \"#utility.yul\":5902:5925   */\n      swap1\n      pop\n        /* \"#utility.yul\":5621:5932   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5938:6055   */\n    tag_352:\n        /* \"#utility.yul\":6047:6048   */\n      0x00\n        /* \"#utility.yul\":6044:6045   */\n      dup1\n        /* \"#utility.yul\":6037:6049   */\n      revert\n        /* \"#utility.yul\":6078:6788   */\n    tag_353:\n        /* \"#utility.yul\":6174:6179   */\n      0x00\n        /* \"#utility.yul\":6199:6280   */\n      tag_455\n        /* \"#utility.yul\":6215:6279   */\n      tag_456\n        /* \"#utility.yul\":6272:6278   */\n      dup5\n        /* \"#utility.yul\":6215:6279   */\n      tag_351\n      jump\t// in\n    tag_456:\n        /* \"#utility.yul\":6199:6280   */\n      tag_350\n      jump\t// in\n    tag_455:\n        /* \"#utility.yul\":6190:6280   */\n      swap1\n      pop\n        /* \"#utility.yul\":6300:6305   */\n      dup1\n        /* \"#utility.yul\":6329:6335   */\n      dup4\n        /* \"#utility.yul\":6322:6327   */\n      dup3\n        /* \"#utility.yul\":6315:6336   */\n      mstore\n        /* \"#utility.yul\":6363:6367   */\n      0x20\n        /* \"#utility.yul\":6356:6361   */\n      dup3\n        /* \"#utility.yul\":6352:6368   */\n      add\n        /* \"#utility.yul\":6345:6368   */\n      swap1\n      pop\n        /* \"#utility.yul\":6416:6420   */\n      0x20\n        /* \"#utility.yul\":6408:6414   */\n      dup5\n        /* \"#utility.yul\":6404:6421   */\n      mul\n        /* \"#utility.yul\":6396:6402   */\n      dup4\n        /* \"#utility.yul\":6392:6422   */\n      add\n        /* \"#utility.yul\":6445:6448   */\n      dup6\n        /* \"#utility.yul\":6437:6443   */\n      dup2\n        /* \"#utility.yul\":6434:6449   */\n      gt\n        /* \"#utility.yul\":6431:6553   */\n      iszero\n      tag_457\n      jumpi\n        /* \"#utility.yul\":6464:6543   */\n      tag_458\n      tag_352\n      jump\t// in\n    tag_458:\n        /* \"#utility.yul\":6431:6553   */\n    tag_457:\n        /* \"#utility.yul\":6579:6585   */\n      dup4\n        /* \"#utility.yul\":6562:6782   */\n    tag_459:\n        /* \"#utility.yul\":6596:6602   */\n      dup2\n        /* \"#utility.yul\":6591:6594   */\n      dup2\n        /* \"#utility.yul\":6588:6603   */\n      lt\n        /* \"#utility.yul\":6562:6782   */\n      iszero\n      tag_461\n      jumpi\n        /* \"#utility.yul\":6671:6674   */\n      dup1\n        /* \"#utility.yul\":6700:6737   */\n      tag_462\n        /* \"#utility.yul\":6733:6736   */\n      dup9\n        /* \"#utility.yul\":6721:6731   */\n      dup3\n        /* \"#utility.yul\":6700:6737   */\n      tag_336\n      jump\t// in\n    tag_462:\n        /* \"#utility.yul\":6695:6698   */\n      dup5\n        /* \"#utility.yul\":6688:6738   */\n      mstore\n        /* \"#utility.yul\":6767:6771   */\n      0x20\n        /* \"#utility.yul\":6762:6765   */\n      dup5\n        /* \"#utility.yul\":6758:6772   */\n      add\n        /* \"#utility.yul\":6751:6772   */\n      swap4\n      pop\n        /* \"#utility.yul\":6638:6782   */\n      pop\n        /* \"#utility.yul\":6622:6626   */\n      0x20\n        /* \"#utility.yul\":6617:6620   */\n      dup2\n        /* \"#utility.yul\":6613:6627   */\n      add\n        /* \"#utility.yul\":6606:6627   */\n      swap1\n      pop\n        /* \"#utility.yul\":6562:6782   */\n      jump(tag_459)\n    tag_461:\n        /* \"#utility.yul\":6566:6587   */\n      pop\n        /* \"#utility.yul\":6180:6788   */\n      pop\n      pop\n        /* \"#utility.yul\":6078:6788   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6811:7181   */\n    tag_354:\n        /* \"#utility.yul\":6882:6887   */\n      0x00\n        /* \"#utility.yul\":6931:6934   */\n      dup3\n        /* \"#utility.yul\":6924:6928   */\n      0x1f\n        /* \"#utility.yul\":6916:6922   */\n      dup4\n        /* \"#utility.yul\":6912:6929   */\n      add\n        /* \"#utility.yul\":6908:6935   */\n      slt\n        /* \"#utility.yul\":6898:7020   */\n      tag_464\n      jumpi\n        /* \"#utility.yul\":6939:7018   */\n      tag_465\n      tag_348\n      jump\t// in\n    tag_465:\n        /* \"#utility.yul\":6898:7020   */\n    tag_464:\n        /* \"#utility.yul\":7056:7062   */\n      dup2\n        /* \"#utility.yul\":7043:7063   */\n      calldataload\n        /* \"#utility.yul\":7081:7175   */\n      tag_466\n        /* \"#utility.yul\":7171:7174   */\n      dup5\n        /* \"#utility.yul\":7163:7169   */\n      dup3\n        /* \"#utility.yul\":7156:7160   */\n      0x20\n        /* \"#utility.yul\":7148:7154   */\n      dup7\n        /* \"#utility.yul\":7144:7161   */\n      add\n        /* \"#utility.yul\":7081:7175   */\n      tag_353\n      jump\t// in\n    tag_466:\n        /* \"#utility.yul\":7072:7175   */\n      swap2\n      pop\n        /* \"#utility.yul\":6888:7181   */\n      pop\n        /* \"#utility.yul\":6811:7181   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7187:7304   */\n    tag_355:\n        /* \"#utility.yul\":7296:7297   */\n      0x00\n        /* \"#utility.yul\":7293:7294   */\n      dup1\n        /* \"#utility.yul\":7286:7298   */\n      revert\n        /* \"#utility.yul\":7310:7617   */\n    tag_356:\n        /* \"#utility.yul\":7371:7375   */\n      0x00\n        /* \"#utility.yul\":7461:7479   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":7453:7459   */\n      dup3\n        /* \"#utility.yul\":7450:7480   */\n      gt\n        /* \"#utility.yul\":7447:7503   */\n      iszero\n      tag_469\n      jumpi\n        /* \"#utility.yul\":7483:7501   */\n      tag_470\n      tag_126\n      jump\t// in\n    tag_470:\n        /* \"#utility.yul\":7447:7503   */\n    tag_469:\n        /* \"#utility.yul\":7521:7550   */\n      tag_471\n        /* \"#utility.yul\":7543:7549   */\n      dup3\n        /* \"#utility.yul\":7521:7550   */\n      tag_346\n      jump\t// in\n    tag_471:\n        /* \"#utility.yul\":7513:7550   */\n      swap1\n      pop\n        /* \"#utility.yul\":7605:7609   */\n      0x20\n        /* \"#utility.yul\":7599:7603   */\n      dup2\n        /* \"#utility.yul\":7595:7610   */\n      add\n        /* \"#utility.yul\":7587:7610   */\n      swap1\n      pop\n        /* \"#utility.yul\":7310:7617   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7623:7769   */\n    tag_357:\n        /* \"#utility.yul\":7720:7726   */\n      dup3\n        /* \"#utility.yul\":7715:7718   */\n      dup2\n        /* \"#utility.yul\":7710:7713   */\n      dup4\n        /* \"#utility.yul\":7697:7727   */\n      calldatacopy\n        /* \"#utility.yul\":7761:7762   */\n      0x00\n        /* \"#utility.yul\":7752:7758   */\n      dup4\n        /* \"#utility.yul\":7747:7750   */\n      dup4\n        /* \"#utility.yul\":7743:7759   */\n      add\n        /* \"#utility.yul\":7736:7763   */\n      mstore\n        /* \"#utility.yul\":7623:7769   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7775:8198   */\n    tag_358:\n        /* \"#utility.yul\":7852:7857   */\n      0x00\n        /* \"#utility.yul\":7877:7942   */\n      tag_474\n        /* \"#utility.yul\":7893:7941   */\n      tag_475\n        /* \"#utility.yul\":7934:7940   */\n      dup5\n        /* \"#utility.yul\":7893:7941   */\n      tag_356\n      jump\t// in\n    tag_475:\n        /* \"#utility.yul\":7877:7942   */\n      tag_350\n      jump\t// in\n    tag_474:\n        /* \"#utility.yul\":7868:7942   */\n      swap1\n      pop\n        /* \"#utility.yul\":7965:7971   */\n      dup3\n        /* \"#utility.yul\":7958:7963   */\n      dup2\n        /* \"#utility.yul\":7951:7972   */\n      mstore\n        /* \"#utility.yul\":8003:8007   */\n      0x20\n        /* \"#utility.yul\":7996:8001   */\n      dup2\n        /* \"#utility.yul\":7992:8008   */\n      add\n        /* \"#utility.yul\":8041:8044   */\n      dup5\n        /* \"#utility.yul\":8032:8038   */\n      dup5\n        /* \"#utility.yul\":8027:8030   */\n      dup5\n        /* \"#utility.yul\":8023:8039   */\n      add\n        /* \"#utility.yul\":8020:8045   */\n      gt\n        /* \"#utility.yul\":8017:8129   */\n      iszero\n      tag_476\n      jumpi\n        /* \"#utility.yul\":8048:8127   */\n      tag_477\n      tag_355\n      jump\t// in\n    tag_477:\n        /* \"#utility.yul\":8017:8129   */\n    tag_476:\n        /* \"#utility.yul\":8138:8192   */\n      tag_478\n        /* \"#utility.yul\":8185:8191   */\n      dup5\n        /* \"#utility.yul\":8180:8183   */\n      dup3\n        /* \"#utility.yul\":8175:8178   */\n      dup6\n        /* \"#utility.yul\":8138:8192   */\n      tag_357\n      jump\t// in\n    tag_478:\n        /* \"#utility.yul\":7858:8198   */\n      pop\n        /* \"#utility.yul\":7775:8198   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8217:8555   */\n    tag_359:\n        /* \"#utility.yul\":8272:8277   */\n      0x00\n        /* \"#utility.yul\":8321:8324   */\n      dup3\n        /* \"#utility.yul\":8314:8318   */\n      0x1f\n        /* \"#utility.yul\":8306:8312   */\n      dup4\n        /* \"#utility.yul\":8302:8319   */\n      add\n        /* \"#utility.yul\":8298:8325   */\n      slt\n        /* \"#utility.yul\":8288:8410   */\n      tag_480\n      jumpi\n        /* \"#utility.yul\":8329:8408   */\n      tag_481\n      tag_348\n      jump\t// in\n    tag_481:\n        /* \"#utility.yul\":8288:8410   */\n    tag_480:\n        /* \"#utility.yul\":8446:8452   */\n      dup2\n        /* \"#utility.yul\":8433:8453   */\n      calldataload\n        /* \"#utility.yul\":8471:8549   */\n      tag_482\n        /* \"#utility.yul\":8545:8548   */\n      dup5\n        /* \"#utility.yul\":8537:8543   */\n      dup3\n        /* \"#utility.yul\":8530:8534   */\n      0x20\n        /* \"#utility.yul\":8522:8528   */\n      dup7\n        /* \"#utility.yul\":8518:8535   */\n      add\n        /* \"#utility.yul\":8471:8549   */\n      tag_358\n      jump\t// in\n    tag_482:\n        /* \"#utility.yul\":8462:8549   */\n      swap2\n      pop\n        /* \"#utility.yul\":8278:8555   */\n      pop\n        /* \"#utility.yul\":8217:8555   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8561:9924   */\n    tag_44:\n        /* \"#utility.yul\":8706:8712   */\n      0x00\n        /* \"#utility.yul\":8714:8720   */\n      dup1\n        /* \"#utility.yul\":8722:8728   */\n      0x00\n        /* \"#utility.yul\":8730:8736   */\n      dup1\n        /* \"#utility.yul\":8779:8782   */\n      0x80\n        /* \"#utility.yul\":8767:8776   */\n      dup6\n        /* \"#utility.yul\":8758:8765   */\n      dup8\n        /* \"#utility.yul\":8754:8777   */\n      sub\n        /* \"#utility.yul\":8750:8783   */\n      slt\n        /* \"#utility.yul\":8747:8867   */\n      iszero\n      tag_484\n      jumpi\n        /* \"#utility.yul\":8786:8865   */\n      tag_485\n      tag_328\n      jump\t// in\n    tag_485:\n        /* \"#utility.yul\":8747:8867   */\n    tag_484:\n        /* \"#utility.yul\":8906:8907   */\n      0x00\n        /* \"#utility.yul\":8931:8984   */\n      tag_486\n        /* \"#utility.yul\":8976:8983   */\n      dup8\n        /* \"#utility.yul\":8967:8973   */\n      dup3\n        /* \"#utility.yul\":8956:8965   */\n      dup9\n        /* \"#utility.yul\":8952:8974   */\n      add\n        /* \"#utility.yul\":8931:8984   */\n      tag_333\n      jump\t// in\n    tag_486:\n        /* \"#utility.yul\":8921:8984   */\n      swap5\n      pop\n        /* \"#utility.yul\":8877:8994   */\n      pop\n        /* \"#utility.yul\":9061:9063   */\n      0x20\n        /* \"#utility.yul\":9050:9059   */\n      dup6\n        /* \"#utility.yul\":9046:9064   */\n      add\n        /* \"#utility.yul\":9033:9065   */\n      calldataload\n        /* \"#utility.yul\":9092:9110   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":9084:9090   */\n      dup2\n        /* \"#utility.yul\":9081:9111   */\n      gt\n        /* \"#utility.yul\":9078:9195   */\n      iszero\n      tag_487\n      jumpi\n        /* \"#utility.yul\":9114:9193   */\n      tag_488\n      tag_329\n      jump\t// in\n    tag_488:\n        /* \"#utility.yul\":9078:9195   */\n    tag_487:\n        /* \"#utility.yul\":9219:9297   */\n      tag_489\n        /* \"#utility.yul\":9289:9296   */\n      dup8\n        /* \"#utility.yul\":9280:9286   */\n      dup3\n        /* \"#utility.yul\":9269:9278   */\n      dup9\n        /* \"#utility.yul\":9265:9287   */\n      add\n        /* \"#utility.yul\":9219:9297   */\n      tag_354\n      jump\t// in\n    tag_489:\n        /* \"#utility.yul\":9209:9297   */\n      swap4\n      pop\n        /* \"#utility.yul\":9004:9307   */\n      pop\n        /* \"#utility.yul\":9374:9376   */\n      0x40\n        /* \"#utility.yul\":9363:9372   */\n      dup6\n        /* \"#utility.yul\":9359:9377   */\n      add\n        /* \"#utility.yul\":9346:9378   */\n      calldataload\n        /* \"#utility.yul\":9405:9423   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":9397:9403   */\n      dup2\n        /* \"#utility.yul\":9394:9424   */\n      gt\n        /* \"#utility.yul\":9391:9508   */\n      iszero\n      tag_490\n      jumpi\n        /* \"#utility.yul\":9427:9506   */\n      tag_491\n      tag_329\n      jump\t// in\n    tag_491:\n        /* \"#utility.yul\":9391:9508   */\n    tag_490:\n        /* \"#utility.yul\":9532:9610   */\n      tag_492\n        /* \"#utility.yul\":9602:9609   */\n      dup8\n        /* \"#utility.yul\":9593:9599   */\n      dup3\n        /* \"#utility.yul\":9582:9591   */\n      dup9\n        /* \"#utility.yul\":9578:9600   */\n      add\n        /* \"#utility.yul\":9532:9610   */\n      tag_354\n      jump\t// in\n    tag_492:\n        /* \"#utility.yul\":9522:9610   */\n      swap3\n      pop\n        /* \"#utility.yul\":9317:9620   */\n      pop\n        /* \"#utility.yul\":9687:9689   */\n      0x60\n        /* \"#utility.yul\":9676:9685   */\n      dup6\n        /* \"#utility.yul\":9672:9690   */\n      add\n        /* \"#utility.yul\":9659:9691   */\n      calldataload\n        /* \"#utility.yul\":9718:9736   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":9710:9716   */\n      dup2\n        /* \"#utility.yul\":9707:9737   */\n      gt\n        /* \"#utility.yul\":9704:9821   */\n      iszero\n      tag_493\n      jumpi\n        /* \"#utility.yul\":9740:9819   */\n      tag_494\n      tag_329\n      jump\t// in\n    tag_494:\n        /* \"#utility.yul\":9704:9821   */\n    tag_493:\n        /* \"#utility.yul\":9845:9907   */\n      tag_495\n        /* \"#utility.yul\":9899:9906   */\n      dup8\n        /* \"#utility.yul\":9890:9896   */\n      dup3\n        /* \"#utility.yul\":9879:9888   */\n      dup9\n        /* \"#utility.yul\":9875:9897   */\n      add\n        /* \"#utility.yul\":9845:9907   */\n      tag_359\n      jump\t// in\n    tag_495:\n        /* \"#utility.yul\":9835:9907   */\n      swap2\n      pop\n        /* \"#utility.yul\":9630:9917   */\n      pop\n        /* \"#utility.yul\":8561:9924   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9930:11439   */\n    tag_48:\n        /* \"#utility.yul\":10084:10090   */\n      0x00\n        /* \"#utility.yul\":10092:10098   */\n      dup1\n        /* \"#utility.yul\":10100:10106   */\n      0x00\n        /* \"#utility.yul\":10108:10114   */\n      dup1\n        /* \"#utility.yul\":10116:10122   */\n      0x00\n        /* \"#utility.yul\":10165:10168   */\n      0xa0\n        /* \"#utility.yul\":10153:10162   */\n      dup7\n        /* \"#utility.yul\":10144:10151   */\n      dup9\n        /* \"#utility.yul\":10140:10163   */\n      sub\n        /* \"#utility.yul\":10136:10169   */\n      slt\n        /* \"#utility.yul\":10133:10253   */\n      iszero\n      tag_497\n      jumpi\n        /* \"#utility.yul\":10172:10251   */\n      tag_498\n      tag_328\n      jump\t// in\n    tag_498:\n        /* \"#utility.yul\":10133:10253   */\n    tag_497:\n        /* \"#utility.yul\":10292:10293   */\n      0x00\n        /* \"#utility.yul\":10317:10370   */\n      tag_499\n        /* \"#utility.yul\":10362:10369   */\n      dup9\n        /* \"#utility.yul\":10353:10359   */\n      dup3\n        /* \"#utility.yul\":10342:10351   */\n      dup10\n        /* \"#utility.yul\":10338:10360   */\n      add\n        /* \"#utility.yul\":10317:10370   */\n      tag_333\n      jump\t// in\n    tag_499:\n        /* \"#utility.yul\":10307:10370   */\n      swap6\n      pop\n        /* \"#utility.yul\":10263:10380   */\n      pop\n        /* \"#utility.yul\":10419:10421   */\n      0x20\n        /* \"#utility.yul\":10445:10498   */\n      tag_500\n        /* \"#utility.yul\":10490:10497   */\n      dup9\n        /* \"#utility.yul\":10481:10487   */\n      dup3\n        /* \"#utility.yul\":10470:10479   */\n      dup10\n        /* \"#utility.yul\":10466:10488   */\n      add\n        /* \"#utility.yul\":10445:10498   */\n      tag_333\n      jump\t// in\n    tag_500:\n        /* \"#utility.yul\":10435:10498   */\n      swap5\n      pop\n        /* \"#utility.yul\":10390:10508   */\n      pop\n        /* \"#utility.yul\":10575:10577   */\n      0x40\n        /* \"#utility.yul\":10564:10573   */\n      dup7\n        /* \"#utility.yul\":10560:10578   */\n      add\n        /* \"#utility.yul\":10547:10579   */\n      calldataload\n        /* \"#utility.yul\":10606:10624   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":10598:10604   */\n      dup2\n        /* \"#utility.yul\":10595:10625   */\n      gt\n        /* \"#utility.yul\":10592:10709   */\n      iszero\n      tag_501\n      jumpi\n        /* \"#utility.yul\":10628:10707   */\n      tag_502\n      tag_329\n      jump\t// in\n    tag_502:\n        /* \"#utility.yul\":10592:10709   */\n    tag_501:\n        /* \"#utility.yul\":10733:10811   */\n      tag_503\n        /* \"#utility.yul\":10803:10810   */\n      dup9\n        /* \"#utility.yul\":10794:10800   */\n      dup3\n        /* \"#utility.yul\":10783:10792   */\n      dup10\n        /* \"#utility.yul\":10779:10801   */\n      add\n        /* \"#utility.yul\":10733:10811   */\n      tag_354\n      jump\t// in\n    tag_503:\n        /* \"#utility.yul\":10723:10811   */\n      swap4\n      pop\n        /* \"#utility.yul\":10518:10821   */\n      pop\n        /* \"#utility.yul\":10888:10890   */\n      0x60\n        /* \"#utility.yul\":10877:10886   */\n      dup7\n        /* \"#utility.yul\":10873:10891   */\n      add\n        /* \"#utility.yul\":10860:10892   */\n      calldataload\n        /* \"#utility.yul\":10919:10937   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":10911:10917   */\n      dup2\n        /* \"#utility.yul\":10908:10938   */\n      gt\n        /* \"#utility.yul\":10905:11022   */\n      iszero\n      tag_504\n      jumpi\n        /* \"#utility.yul\":10941:11020   */\n      tag_505\n      tag_329\n      jump\t// in\n    tag_505:\n        /* \"#utility.yul\":10905:11022   */\n    tag_504:\n        /* \"#utility.yul\":11046:11124   */\n      tag_506\n        /* \"#utility.yul\":11116:11123   */\n      dup9\n        /* \"#utility.yul\":11107:11113   */\n      dup3\n        /* \"#utility.yul\":11096:11105   */\n      dup10\n        /* \"#utility.yul\":11092:11114   */\n      add\n        /* \"#utility.yul\":11046:11124   */\n      tag_354\n      jump\t// in\n    tag_506:\n        /* \"#utility.yul\":11036:11124   */\n      swap3\n      pop\n        /* \"#utility.yul\":10831:11134   */\n      pop\n        /* \"#utility.yul\":11201:11204   */\n      0x80\n        /* \"#utility.yul\":11190:11199   */\n      dup7\n        /* \"#utility.yul\":11186:11205   */\n      add\n        /* \"#utility.yul\":11173:11206   */\n      calldataload\n        /* \"#utility.yul\":11233:11251   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":11225:11231   */\n      dup2\n        /* \"#utility.yul\":11222:11252   */\n      gt\n        /* \"#utility.yul\":11219:11336   */\n      iszero\n      tag_507\n      jumpi\n        /* \"#utility.yul\":11255:11334   */\n      tag_508\n      tag_329\n      jump\t// in\n    tag_508:\n        /* \"#utility.yul\":11219:11336   */\n    tag_507:\n        /* \"#utility.yul\":11360:11422   */\n      tag_509\n        /* \"#utility.yul\":11414:11421   */\n      dup9\n        /* \"#utility.yul\":11405:11411   */\n      dup3\n        /* \"#utility.yul\":11394:11403   */\n      dup10\n        /* \"#utility.yul\":11390:11412   */\n      add\n        /* \"#utility.yul\":11360:11422   */\n      tag_359\n      jump\t// in\n    tag_509:\n        /* \"#utility.yul\":11350:11422   */\n      swap2\n      pop\n        /* \"#utility.yul\":11144:11432   */\n      pop\n        /* \"#utility.yul\":9930:11439   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      swap1\n      swap4\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11445:11756   */\n    tag_360:\n        /* \"#utility.yul\":11522:11526   */\n      0x00\n        /* \"#utility.yul\":11612:11630   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":11604:11610   */\n      dup3\n        /* \"#utility.yul\":11601:11631   */\n      gt\n        /* \"#utility.yul\":11598:11654   */\n      iszero\n      tag_511\n      jumpi\n        /* \"#utility.yul\":11634:11652   */\n      tag_512\n      tag_126\n      jump\t// in\n    tag_512:\n        /* \"#utility.yul\":11598:11654   */\n    tag_511:\n        /* \"#utility.yul\":11684:11688   */\n      0x20\n        /* \"#utility.yul\":11676:11682   */\n      dup3\n        /* \"#utility.yul\":11672:11689   */\n      mul\n        /* \"#utility.yul\":11664:11689   */\n      swap1\n      pop\n        /* \"#utility.yul\":11744:11748   */\n      0x20\n        /* \"#utility.yul\":11738:11742   */\n      dup2\n        /* \"#utility.yul\":11734:11749   */\n      add\n        /* \"#utility.yul\":11726:11749   */\n      swap1\n      pop\n        /* \"#utility.yul\":11445:11756   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11779:12489   */\n    tag_361:\n        /* \"#utility.yul\":11875:11880   */\n      0x00\n        /* \"#utility.yul\":11900:11981   */\n      tag_514\n        /* \"#utility.yul\":11916:11980   */\n      tag_515\n        /* \"#utility.yul\":11973:11979   */\n      dup5\n        /* \"#utility.yul\":11916:11980   */\n      tag_360\n      jump\t// in\n    tag_515:\n        /* \"#utility.yul\":11900:11981   */\n      tag_350\n      jump\t// in\n    tag_514:\n        /* \"#utility.yul\":11891:11981   */\n      swap1\n      pop\n        /* \"#utility.yul\":12001:12006   */\n      dup1\n        /* \"#utility.yul\":12030:12036   */\n      dup4\n        /* \"#utility.yul\":12023:12028   */\n      dup3\n        /* \"#utility.yul\":12016:12037   */\n      mstore\n        /* \"#utility.yul\":12064:12068   */\n      0x20\n        /* \"#utility.yul\":12057:12062   */\n      dup3\n        /* \"#utility.yul\":12053:12069   */\n      add\n        /* \"#utility.yul\":12046:12069   */\n      swap1\n      pop\n        /* \"#utility.yul\":12117:12121   */\n      0x20\n        /* \"#utility.yul\":12109:12115   */\n      dup5\n        /* \"#utility.yul\":12105:12122   */\n      mul\n        /* \"#utility.yul\":12097:12103   */\n      dup4\n        /* \"#utility.yul\":12093:12123   */\n      add\n        /* \"#utility.yul\":12146:12149   */\n      dup6\n        /* \"#utility.yul\":12138:12144   */\n      dup2\n        /* \"#utility.yul\":12135:12150   */\n      gt\n        /* \"#utility.yul\":12132:12254   */\n      iszero\n      tag_516\n      jumpi\n        /* \"#utility.yul\":12165:12244   */\n      tag_517\n      tag_352\n      jump\t// in\n    tag_517:\n        /* \"#utility.yul\":12132:12254   */\n    tag_516:\n        /* \"#utility.yul\":12280:12286   */\n      dup4\n        /* \"#utility.yul\":12263:12483   */\n    tag_518:\n        /* \"#utility.yul\":12297:12303   */\n      dup2\n        /* \"#utility.yul\":12292:12295   */\n      dup2\n        /* \"#utility.yul\":12289:12304   */\n      lt\n        /* \"#utility.yul\":12263:12483   */\n      iszero\n      tag_520\n      jumpi\n        /* \"#utility.yul\":12372:12375   */\n      dup1\n        /* \"#utility.yul\":12401:12438   */\n      tag_521\n        /* \"#utility.yul\":12434:12437   */\n      dup9\n        /* \"#utility.yul\":12422:12432   */\n      dup3\n        /* \"#utility.yul\":12401:12438   */\n      tag_333\n      jump\t// in\n    tag_521:\n        /* \"#utility.yul\":12396:12399   */\n      dup5\n        /* \"#utility.yul\":12389:12439   */\n      mstore\n        /* \"#utility.yul\":12468:12472   */\n      0x20\n        /* \"#utility.yul\":12463:12466   */\n      dup5\n        /* \"#utility.yul\":12459:12473   */\n      add\n        /* \"#utility.yul\":12452:12473   */\n      swap4\n      pop\n        /* \"#utility.yul\":12339:12483   */\n      pop\n        /* \"#utility.yul\":12323:12327   */\n      0x20\n        /* \"#utility.yul\":12318:12321   */\n      dup2\n        /* \"#utility.yul\":12314:12328   */\n      add\n        /* \"#utility.yul\":12307:12328   */\n      swap1\n      pop\n        /* \"#utility.yul\":12263:12483   */\n      jump(tag_518)\n    tag_520:\n        /* \"#utility.yul\":12267:12288   */\n      pop\n        /* \"#utility.yul\":11881:12489   */\n      pop\n      pop\n        /* \"#utility.yul\":11779:12489   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12512:12882   */\n    tag_362:\n        /* \"#utility.yul\":12583:12588   */\n      0x00\n        /* \"#utility.yul\":12632:12635   */\n      dup3\n        /* \"#utility.yul\":12625:12629   */\n      0x1f\n        /* \"#utility.yul\":12617:12623   */\n      dup4\n        /* \"#utility.yul\":12613:12630   */\n      add\n        /* \"#utility.yul\":12609:12636   */\n      slt\n        /* \"#utility.yul\":12599:12721   */\n      tag_523\n      jumpi\n        /* \"#utility.yul\":12640:12719   */\n      tag_524\n      tag_348\n      jump\t// in\n    tag_524:\n        /* \"#utility.yul\":12599:12721   */\n    tag_523:\n        /* \"#utility.yul\":12757:12763   */\n      dup2\n        /* \"#utility.yul\":12744:12764   */\n      calldataload\n        /* \"#utility.yul\":12782:12876   */\n      tag_525\n        /* \"#utility.yul\":12872:12875   */\n      dup5\n        /* \"#utility.yul\":12864:12870   */\n      dup3\n        /* \"#utility.yul\":12857:12861   */\n      0x20\n        /* \"#utility.yul\":12849:12855   */\n      dup7\n        /* \"#utility.yul\":12845:12862   */\n      add\n        /* \"#utility.yul\":12782:12876   */\n      tag_361\n      jump\t// in\n    tag_525:\n        /* \"#utility.yul\":12773:12876   */\n      swap2\n      pop\n        /* \"#utility.yul\":12589:12882   */\n      pop\n        /* \"#utility.yul\":12512:12882   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12888:13782   */\n    tag_52:\n        /* \"#utility.yul\":13006:13012   */\n      0x00\n        /* \"#utility.yul\":13014:13020   */\n      dup1\n        /* \"#utility.yul\":13063:13065   */\n      0x40\n        /* \"#utility.yul\":13051:13060   */\n      dup4\n        /* \"#utility.yul\":13042:13049   */\n      dup6\n        /* \"#utility.yul\":13038:13061   */\n      sub\n        /* \"#utility.yul\":13034:13066   */\n      slt\n        /* \"#utility.yul\":13031:13150   */\n      iszero\n      tag_527\n      jumpi\n        /* \"#utility.yul\":13069:13148   */\n      tag_528\n      tag_328\n      jump\t// in\n    tag_528:\n        /* \"#utility.yul\":13031:13150   */\n    tag_527:\n        /* \"#utility.yul\":13217:13218   */\n      0x00\n        /* \"#utility.yul\":13206:13215   */\n      dup4\n        /* \"#utility.yul\":13202:13219   */\n      add\n        /* \"#utility.yul\":13189:13220   */\n      calldataload\n        /* \"#utility.yul\":13247:13265   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":13239:13245   */\n      dup2\n        /* \"#utility.yul\":13236:13266   */\n      gt\n        /* \"#utility.yul\":13233:13350   */\n      iszero\n      tag_529\n      jumpi\n        /* \"#utility.yul\":13269:13348   */\n      tag_530\n      tag_329\n      jump\t// in\n    tag_530:\n        /* \"#utility.yul\":13233:13350   */\n    tag_529:\n        /* \"#utility.yul\":13374:13452   */\n      tag_531\n        /* \"#utility.yul\":13444:13451   */\n      dup6\n        /* \"#utility.yul\":13435:13441   */\n      dup3\n        /* \"#utility.yul\":13424:13433   */\n      dup7\n        /* \"#utility.yul\":13420:13442   */\n      add\n        /* \"#utility.yul\":13374:13452   */\n      tag_362\n      jump\t// in\n    tag_531:\n        /* \"#utility.yul\":13364:13452   */\n      swap3\n      pop\n        /* \"#utility.yul\":13160:13462   */\n      pop\n        /* \"#utility.yul\":13529:13531   */\n      0x20\n        /* \"#utility.yul\":13518:13527   */\n      dup4\n        /* \"#utility.yul\":13514:13532   */\n      add\n        /* \"#utility.yul\":13501:13533   */\n      calldataload\n        /* \"#utility.yul\":13560:13578   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":13552:13558   */\n      dup2\n        /* \"#utility.yul\":13549:13579   */\n      gt\n        /* \"#utility.yul\":13546:13663   */\n      iszero\n      tag_532\n      jumpi\n        /* \"#utility.yul\":13582:13661   */\n      tag_533\n      tag_329\n      jump\t// in\n    tag_533:\n        /* \"#utility.yul\":13546:13663   */\n    tag_532:\n        /* \"#utility.yul\":13687:13765   */\n      tag_534\n        /* \"#utility.yul\":13757:13764   */\n      dup6\n        /* \"#utility.yul\":13748:13754   */\n      dup3\n        /* \"#utility.yul\":13737:13746   */\n      dup7\n        /* \"#utility.yul\":13733:13755   */\n      add\n        /* \"#utility.yul\":13687:13765   */\n      tag_354\n      jump\t// in\n    tag_534:\n        /* \"#utility.yul\":13677:13765   */\n      swap2\n      pop\n        /* \"#utility.yul\":13472:13775   */\n      pop\n        /* \"#utility.yul\":12888:13782   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13788:13902   */\n    tag_363:\n        /* \"#utility.yul\":13855:13861   */\n      0x00\n        /* \"#utility.yul\":13889:13894   */\n      dup2\n        /* \"#utility.yul\":13883:13895   */\n      mload\n        /* \"#utility.yul\":13873:13895   */\n      swap1\n      pop\n        /* \"#utility.yul\":13788:13902   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13908:14092   */\n    tag_364:\n        /* \"#utility.yul\":14007:14018   */\n      0x00\n        /* \"#utility.yul\":14041:14047   */\n      dup3\n        /* \"#utility.yul\":14036:14039   */\n      dup3\n        /* \"#utility.yul\":14029:14048   */\n      mstore\n        /* \"#utility.yul\":14081:14085   */\n      0x20\n        /* \"#utility.yul\":14076:14079   */\n      dup3\n        /* \"#utility.yul\":14072:14086   */\n      add\n        /* \"#utility.yul\":14057:14086   */\n      swap1\n      pop\n        /* \"#utility.yul\":13908:14092   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14098:14230   */\n    tag_365:\n        /* \"#utility.yul\":14165:14169   */\n      0x00\n        /* \"#utility.yul\":14188:14191   */\n      dup2\n        /* \"#utility.yul\":14180:14191   */\n      swap1\n      pop\n        /* \"#utility.yul\":14218:14222   */\n      0x20\n        /* \"#utility.yul\":14213:14216   */\n      dup3\n        /* \"#utility.yul\":14209:14223   */\n      add\n        /* \"#utility.yul\":14201:14223   */\n      swap1\n      pop\n        /* \"#utility.yul\":14098:14230   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14236:14344   */\n    tag_366:\n        /* \"#utility.yul\":14313:14337   */\n      tag_539\n        /* \"#utility.yul\":14331:14336   */\n      dup2\n        /* \"#utility.yul\":14313:14337   */\n      tag_334\n      jump\t// in\n    tag_539:\n        /* \"#utility.yul\":14308:14311   */\n      dup3\n        /* \"#utility.yul\":14301:14338   */\n      mstore\n        /* \"#utility.yul\":14236:14344   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14350:14529   */\n    tag_367:\n        /* \"#utility.yul\":14419:14429   */\n      0x00\n        /* \"#utility.yul\":14440:14486   */\n      tag_541\n        /* \"#utility.yul\":14482:14485   */\n      dup4\n        /* \"#utility.yul\":14474:14480   */\n      dup4\n        /* \"#utility.yul\":14440:14486   */\n      tag_366\n      jump\t// in\n    tag_541:\n        /* \"#utility.yul\":14518:14522   */\n      0x20\n        /* \"#utility.yul\":14513:14516   */\n      dup4\n        /* \"#utility.yul\":14509:14523   */\n      add\n        /* \"#utility.yul\":14495:14523   */\n      swap1\n      pop\n        /* \"#utility.yul\":14350:14529   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14535:14648   */\n    tag_368:\n        /* \"#utility.yul\":14605:14609   */\n      0x00\n        /* \"#utility.yul\":14637:14641   */\n      0x20\n        /* \"#utility.yul\":14632:14635   */\n      dup3\n        /* \"#utility.yul\":14628:14642   */\n      add\n        /* \"#utility.yul\":14620:14642   */\n      swap1\n      pop\n        /* \"#utility.yul\":14535:14648   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14684:15416   */\n    tag_369:\n        /* \"#utility.yul\":14803:14806   */\n      0x00\n        /* \"#utility.yul\":14832:14886   */\n      tag_544\n        /* \"#utility.yul\":14880:14885   */\n      dup3\n        /* \"#utility.yul\":14832:14886   */\n      tag_363\n      jump\t// in\n    tag_544:\n        /* \"#utility.yul\":14902:14988   */\n      tag_545\n        /* \"#utility.yul\":14981:14987   */\n      dup2\n        /* \"#utility.yul\":14976:14979   */\n      dup6\n        /* \"#utility.yul\":14902:14988   */\n      tag_364\n      jump\t// in\n    tag_545:\n        /* \"#utility.yul\":14895:14988   */\n      swap4\n      pop\n        /* \"#utility.yul\":15012:15068   */\n      tag_546\n        /* \"#utility.yul\":15062:15067   */\n      dup4\n        /* \"#utility.yul\":15012:15068   */\n      tag_365\n      jump\t// in\n    tag_546:\n        /* \"#utility.yul\":15091:15098   */\n      dup1\n        /* \"#utility.yul\":15122:15123   */\n      0x00\n        /* \"#utility.yul\":15107:15391   */\n    tag_547:\n        /* \"#utility.yul\":15132:15138   */\n      dup4\n        /* \"#utility.yul\":15129:15130   */\n      dup2\n        /* \"#utility.yul\":15126:15139   */\n      lt\n        /* \"#utility.yul\":15107:15391   */\n      iszero\n      tag_549\n      jumpi\n        /* \"#utility.yul\":15208:15214   */\n      dup2\n        /* \"#utility.yul\":15202:15215   */\n      mload\n        /* \"#utility.yul\":15235:15298   */\n      tag_550\n        /* \"#utility.yul\":15294:15297   */\n      dup9\n        /* \"#utility.yul\":15279:15292   */\n      dup3\n        /* \"#utility.yul\":15235:15298   */\n      tag_367\n      jump\t// in\n    tag_550:\n        /* \"#utility.yul\":15228:15298   */\n      swap8\n      pop\n        /* \"#utility.yul\":15321:15381   */\n      tag_551\n        /* \"#utility.yul\":15374:15380   */\n      dup4\n        /* \"#utility.yul\":15321:15381   */\n      tag_368\n      jump\t// in\n    tag_551:\n        /* \"#utility.yul\":15311:15381   */\n      swap3\n      pop\n        /* \"#utility.yul\":15167:15391   */\n      pop\n        /* \"#utility.yul\":15154:15155   */\n      0x01\n        /* \"#utility.yul\":15151:15152   */\n      dup2\n        /* \"#utility.yul\":15147:15156   */\n      add\n        /* \"#utility.yul\":15142:15156   */\n      swap1\n      pop\n        /* \"#utility.yul\":15107:15391   */\n      jump(tag_547)\n    tag_549:\n        /* \"#utility.yul\":15111:15125   */\n      pop\n        /* \"#utility.yul\":15407:15410   */\n      dup6\n        /* \"#utility.yul\":15400:15410   */\n      swap4\n      pop\n        /* \"#utility.yul\":14808:15416   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":14684:15416   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15422:15795   */\n    tag_55:\n        /* \"#utility.yul\":15565:15569   */\n      0x00\n        /* \"#utility.yul\":15603:15605   */\n      0x20\n        /* \"#utility.yul\":15592:15601   */\n      dup3\n        /* \"#utility.yul\":15588:15606   */\n      add\n        /* \"#utility.yul\":15580:15606   */\n      swap1\n      pop\n        /* \"#utility.yul\":15652:15661   */\n      dup2\n        /* \"#utility.yul\":15646:15650   */\n      dup2\n        /* \"#utility.yul\":15642:15662   */\n      sub\n        /* \"#utility.yul\":15638:15639   */\n      0x00\n        /* \"#utility.yul\":15627:15636   */\n      dup4\n        /* \"#utility.yul\":15623:15640   */\n      add\n        /* \"#utility.yul\":15616:15663   */\n      mstore\n        /* \"#utility.yul\":15680:15788   */\n      tag_553\n        /* \"#utility.yul\":15783:15787   */\n      dup2\n        /* \"#utility.yul\":15774:15780   */\n      dup5\n        /* \"#utility.yul\":15680:15788   */\n      tag_369\n      jump\t// in\n    tag_553:\n        /* \"#utility.yul\":15672:15788   */\n      swap1\n      pop\n        /* \"#utility.yul\":15422:15795   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15801:16840   */\n    tag_62:\n        /* \"#utility.yul\":15928:15934   */\n      0x00\n        /* \"#utility.yul\":15936:15942   */\n      dup1\n        /* \"#utility.yul\":15944:15950   */\n      0x00\n        /* \"#utility.yul\":15993:15995   */\n      0x60\n        /* \"#utility.yul\":15981:15990   */\n      dup5\n        /* \"#utility.yul\":15972:15979   */\n      dup7\n        /* \"#utility.yul\":15968:15991   */\n      sub\n        /* \"#utility.yul\":15964:15996   */\n      slt\n        /* \"#utility.yul\":15961:16080   */\n      iszero\n      tag_555\n      jumpi\n        /* \"#utility.yul\":15999:16078   */\n      tag_556\n      tag_328\n      jump\t// in\n    tag_556:\n        /* \"#utility.yul\":15961:16080   */\n    tag_555:\n        /* \"#utility.yul\":16119:16120   */\n      0x00\n        /* \"#utility.yul\":16144:16197   */\n      tag_557\n        /* \"#utility.yul\":16189:16196   */\n      dup7\n        /* \"#utility.yul\":16180:16186   */\n      dup3\n        /* \"#utility.yul\":16169:16178   */\n      dup8\n        /* \"#utility.yul\":16165:16187   */\n      add\n        /* \"#utility.yul\":16144:16197   */\n      tag_333\n      jump\t// in\n    tag_557:\n        /* \"#utility.yul\":16134:16197   */\n      swap4\n      pop\n        /* \"#utility.yul\":16090:16207   */\n      pop\n        /* \"#utility.yul\":16274:16276   */\n      0x20\n        /* \"#utility.yul\":16263:16272   */\n      dup5\n        /* \"#utility.yul\":16259:16277   */\n      add\n        /* \"#utility.yul\":16246:16278   */\n      calldataload\n        /* \"#utility.yul\":16305:16323   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":16297:16303   */\n      dup2\n        /* \"#utility.yul\":16294:16324   */\n      gt\n        /* \"#utility.yul\":16291:16408   */\n      iszero\n      tag_558\n      jumpi\n        /* \"#utility.yul\":16327:16406   */\n      tag_559\n      tag_329\n      jump\t// in\n    tag_559:\n        /* \"#utility.yul\":16291:16408   */\n    tag_558:\n        /* \"#utility.yul\":16432:16510   */\n      tag_560\n        /* \"#utility.yul\":16502:16509   */\n      dup7\n        /* \"#utility.yul\":16493:16499   */\n      dup3\n        /* \"#utility.yul\":16482:16491   */\n      dup8\n        /* \"#utility.yul\":16478:16500   */\n      add\n        /* \"#utility.yul\":16432:16510   */\n      tag_354\n      jump\t// in\n    tag_560:\n        /* \"#utility.yul\":16422:16510   */\n      swap3\n      pop\n        /* \"#utility.yul\":16217:16520   */\n      pop\n        /* \"#utility.yul\":16587:16589   */\n      0x40\n        /* \"#utility.yul\":16576:16585   */\n      dup5\n        /* \"#utility.yul\":16572:16590   */\n      add\n        /* \"#utility.yul\":16559:16591   */\n      calldataload\n        /* \"#utility.yul\":16618:16636   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":16610:16616   */\n      dup2\n        /* \"#utility.yul\":16607:16637   */\n      gt\n        /* \"#utility.yul\":16604:16721   */\n      iszero\n      tag_561\n      jumpi\n        /* \"#utility.yul\":16640:16719   */\n      tag_562\n      tag_329\n      jump\t// in\n    tag_562:\n        /* \"#utility.yul\":16604:16721   */\n    tag_561:\n        /* \"#utility.yul\":16745:16823   */\n      tag_563\n        /* \"#utility.yul\":16815:16822   */\n      dup7\n        /* \"#utility.yul\":16806:16812   */\n      dup3\n        /* \"#utility.yul\":16795:16804   */\n      dup8\n        /* \"#utility.yul\":16791:16813   */\n      add\n        /* \"#utility.yul\":16745:16823   */\n      tag_354\n      jump\t// in\n    tag_563:\n        /* \"#utility.yul\":16735:16823   */\n      swap2\n      pop\n        /* \"#utility.yul\":16530:16833   */\n      pop\n        /* \"#utility.yul\":15801:16840   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":16846:17789   */\n    tag_66:\n        /* \"#utility.yul\":16941:16947   */\n      0x00\n        /* \"#utility.yul\":16949:16955   */\n      dup1\n        /* \"#utility.yul\":16957:16963   */\n      0x00\n        /* \"#utility.yul\":16965:16971   */\n      dup1\n        /* \"#utility.yul\":17014:17017   */\n      0x80\n        /* \"#utility.yul\":17002:17011   */\n      dup6\n        /* \"#utility.yul\":16993:17000   */\n      dup8\n        /* \"#utility.yul\":16989:17012   */\n      sub\n        /* \"#utility.yul\":16985:17018   */\n      slt\n        /* \"#utility.yul\":16982:17102   */\n      iszero\n      tag_565\n      jumpi\n        /* \"#utility.yul\":17021:17100   */\n      tag_566\n      tag_328\n      jump\t// in\n    tag_566:\n        /* \"#utility.yul\":16982:17102   */\n    tag_565:\n        /* \"#utility.yul\":17141:17142   */\n      0x00\n        /* \"#utility.yul\":17166:17219   */\n      tag_567\n        /* \"#utility.yul\":17211:17218   */\n      dup8\n        /* \"#utility.yul\":17202:17208   */\n      dup3\n        /* \"#utility.yul\":17191:17200   */\n      dup9\n        /* \"#utility.yul\":17187:17209   */\n      add\n        /* \"#utility.yul\":17166:17219   */\n      tag_333\n      jump\t// in\n    tag_567:\n        /* \"#utility.yul\":17156:17219   */\n      swap5\n      pop\n        /* \"#utility.yul\":17112:17229   */\n      pop\n        /* \"#utility.yul\":17268:17270   */\n      0x20\n        /* \"#utility.yul\":17294:17347   */\n      tag_568\n        /* \"#utility.yul\":17339:17346   */\n      dup8\n        /* \"#utility.yul\":17330:17336   */\n      dup3\n        /* \"#utility.yul\":17319:17328   */\n      dup9\n        /* \"#utility.yul\":17315:17337   */\n      add\n        /* \"#utility.yul\":17294:17347   */\n      tag_336\n      jump\t// in\n    tag_568:\n        /* \"#utility.yul\":17284:17347   */\n      swap4\n      pop\n        /* \"#utility.yul\":17239:17357   */\n      pop\n        /* \"#utility.yul\":17396:17398   */\n      0x40\n        /* \"#utility.yul\":17422:17475   */\n      tag_569\n        /* \"#utility.yul\":17467:17474   */\n      dup8\n        /* \"#utility.yul\":17458:17464   */\n      dup3\n        /* \"#utility.yul\":17447:17456   */\n      dup9\n        /* \"#utility.yul\":17443:17465   */\n      add\n        /* \"#utility.yul\":17422:17475   */\n      tag_336\n      jump\t// in\n    tag_569:\n        /* \"#utility.yul\":17412:17475   */\n      swap3\n      pop\n        /* \"#utility.yul\":17367:17485   */\n      pop\n        /* \"#utility.yul\":17552:17554   */\n      0x60\n        /* \"#utility.yul\":17541:17550   */\n      dup6\n        /* \"#utility.yul\":17537:17555   */\n      add\n        /* \"#utility.yul\":17524:17556   */\n      calldataload\n        /* \"#utility.yul\":17583:17601   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":17575:17581   */\n      dup2\n        /* \"#utility.yul\":17572:17602   */\n      gt\n        /* \"#utility.yul\":17569:17686   */\n      iszero\n      tag_570\n      jumpi\n        /* \"#utility.yul\":17605:17684   */\n      tag_571\n      tag_329\n      jump\t// in\n    tag_571:\n        /* \"#utility.yul\":17569:17686   */\n    tag_570:\n        /* \"#utility.yul\":17710:17772   */\n      tag_572\n        /* \"#utility.yul\":17764:17771   */\n      dup8\n        /* \"#utility.yul\":17755:17761   */\n      dup3\n        /* \"#utility.yul\":17744:17753   */\n      dup9\n        /* \"#utility.yul\":17740:17762   */\n      add\n        /* \"#utility.yul\":17710:17772   */\n      tag_359\n      jump\t// in\n    tag_572:\n        /* \"#utility.yul\":17700:17772   */\n      swap2\n      pop\n        /* \"#utility.yul\":17495:17782   */\n      pop\n        /* \"#utility.yul\":16846:17789   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17795:17911   */\n    tag_370:\n        /* \"#utility.yul\":17865:17886   */\n      tag_574\n        /* \"#utility.yul\":17880:17885   */\n      dup2\n        /* \"#utility.yul\":17865:17886   */\n      tag_341\n      jump\t// in\n    tag_574:\n        /* \"#utility.yul\":17858:17863   */\n      dup2\n        /* \"#utility.yul\":17855:17887   */\n      eq\n        /* \"#utility.yul\":17845:17905   */\n      tag_575\n      jumpi\n        /* \"#utility.yul\":17901:17902   */\n      0x00\n        /* \"#utility.yul\":17898:17899   */\n      dup1\n        /* \"#utility.yul\":17891:17903   */\n      revert\n        /* \"#utility.yul\":17845:17905   */\n    tag_575:\n        /* \"#utility.yul\":17795:17911   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17917:18050   */\n    tag_371:\n        /* \"#utility.yul\":17960:17965   */\n      0x00\n        /* \"#utility.yul\":17998:18004   */\n      dup2\n        /* \"#utility.yul\":17985:18005   */\n      calldataload\n        /* \"#utility.yul\":17976:18005   */\n      swap1\n      pop\n        /* \"#utility.yul\":18014:18044   */\n      tag_577\n        /* \"#utility.yul\":18038:18043   */\n      dup2\n        /* \"#utility.yul\":18014:18044   */\n      tag_370\n      jump\t// in\n    tag_577:\n        /* \"#utility.yul\":17917:18050   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18056:18524   */\n    tag_70:\n        /* \"#utility.yul\":18121:18127   */\n      0x00\n        /* \"#utility.yul\":18129:18135   */\n      dup1\n        /* \"#utility.yul\":18178:18180   */\n      0x40\n        /* \"#utility.yul\":18166:18175   */\n      dup4\n        /* \"#utility.yul\":18157:18164   */\n      dup6\n        /* \"#utility.yul\":18153:18176   */\n      sub\n        /* \"#utility.yul\":18149:18181   */\n      slt\n        /* \"#utility.yul\":18146:18265   */\n      iszero\n      tag_579\n      jumpi\n        /* \"#utility.yul\":18184:18263   */\n      tag_580\n      tag_328\n      jump\t// in\n    tag_580:\n        /* \"#utility.yul\":18146:18265   */\n    tag_579:\n        /* \"#utility.yul\":18304:18305   */\n      0x00\n        /* \"#utility.yul\":18329:18382   */\n      tag_581\n        /* \"#utility.yul\":18374:18381   */\n      dup6\n        /* \"#utility.yul\":18365:18371   */\n      dup3\n        /* \"#utility.yul\":18354:18363   */\n      dup7\n        /* \"#utility.yul\":18350:18372   */\n      add\n        /* \"#utility.yul\":18329:18382   */\n      tag_333\n      jump\t// in\n    tag_581:\n        /* \"#utility.yul\":18319:18382   */\n      swap3\n      pop\n        /* \"#utility.yul\":18275:18392   */\n      pop\n        /* \"#utility.yul\":18431:18433   */\n      0x20\n        /* \"#utility.yul\":18457:18507   */\n      tag_582\n        /* \"#utility.yul\":18499:18506   */\n      dup6\n        /* \"#utility.yul\":18490:18496   */\n      dup3\n        /* \"#utility.yul\":18479:18488   */\n      dup7\n        /* \"#utility.yul\":18475:18497   */\n      add\n        /* \"#utility.yul\":18457:18507   */\n      tag_371\n      jump\t// in\n    tag_582:\n        /* \"#utility.yul\":18447:18507   */\n      swap2\n      pop\n        /* \"#utility.yul\":18402:18517   */\n      pop\n        /* \"#utility.yul\":18056:18524   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18530:19004   */\n    tag_78:\n        /* \"#utility.yul\":18598:18604   */\n      0x00\n        /* \"#utility.yul\":18606:18612   */\n      dup1\n        /* \"#utility.yul\":18655:18657   */\n      0x40\n        /* \"#utility.yul\":18643:18652   */\n      dup4\n        /* \"#utility.yul\":18634:18641   */\n      dup6\n        /* \"#utility.yul\":18630:18653   */\n      sub\n        /* \"#utility.yul\":18626:18658   */\n      slt\n        /* \"#utility.yul\":18623:18742   */\n      iszero\n      tag_584\n      jumpi\n        /* \"#utility.yul\":18661:18740   */\n      tag_585\n      tag_328\n      jump\t// in\n    tag_585:\n        /* \"#utility.yul\":18623:18742   */\n    tag_584:\n        /* \"#utility.yul\":18781:18782   */\n      0x00\n        /* \"#utility.yul\":18806:18859   */\n      tag_586\n        /* \"#utility.yul\":18851:18858   */\n      dup6\n        /* \"#utility.yul\":18842:18848   */\n      dup3\n        /* \"#utility.yul\":18831:18840   */\n      dup7\n        /* \"#utility.yul\":18827:18849   */\n      add\n        /* \"#utility.yul\":18806:18859   */\n      tag_333\n      jump\t// in\n    tag_586:\n        /* \"#utility.yul\":18796:18859   */\n      swap3\n      pop\n        /* \"#utility.yul\":18752:18869   */\n      pop\n        /* \"#utility.yul\":18908:18910   */\n      0x20\n        /* \"#utility.yul\":18934:18987   */\n      tag_587\n        /* \"#utility.yul\":18979:18986   */\n      dup6\n        /* \"#utility.yul\":18970:18976   */\n      dup3\n        /* \"#utility.yul\":18959:18968   */\n      dup7\n        /* \"#utility.yul\":18955:18977   */\n      add\n        /* \"#utility.yul\":18934:18987   */\n      tag_333\n      jump\t// in\n    tag_587:\n        /* \"#utility.yul\":18924:18987   */\n      swap2\n      pop\n        /* \"#utility.yul\":18879:18997   */\n      pop\n        /* \"#utility.yul\":18530:19004   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19010:20099   */\n    tag_83:\n        /* \"#utility.yul\":19114:19120   */\n      0x00\n        /* \"#utility.yul\":19122:19128   */\n      dup1\n        /* \"#utility.yul\":19130:19136   */\n      0x00\n        /* \"#utility.yul\":19138:19144   */\n      dup1\n        /* \"#utility.yul\":19146:19152   */\n      0x00\n        /* \"#utility.yul\":19195:19198   */\n      0xa0\n        /* \"#utility.yul\":19183:19192   */\n      dup7\n        /* \"#utility.yul\":19174:19181   */\n      dup9\n        /* \"#utility.yul\":19170:19193   */\n      sub\n        /* \"#utility.yul\":19166:19199   */\n      slt\n        /* \"#utility.yul\":19163:19283   */\n      iszero\n      tag_589\n      jumpi\n        /* \"#utility.yul\":19202:19281   */\n      tag_590\n      tag_328\n      jump\t// in\n    tag_590:\n        /* \"#utility.yul\":19163:19283   */\n    tag_589:\n        /* \"#utility.yul\":19322:19323   */\n      0x00\n        /* \"#utility.yul\":19347:19400   */\n      tag_591\n        /* \"#utility.yul\":19392:19399   */\n      dup9\n        /* \"#utility.yul\":19383:19389   */\n      dup3\n        /* \"#utility.yul\":19372:19381   */\n      dup10\n        /* \"#utility.yul\":19368:19390   */\n      add\n        /* \"#utility.yul\":19347:19400   */\n      tag_333\n      jump\t// in\n    tag_591:\n        /* \"#utility.yul\":19337:19400   */\n      swap6\n      pop\n        /* \"#utility.yul\":19293:19410   */\n      pop\n        /* \"#utility.yul\":19449:19451   */\n      0x20\n        /* \"#utility.yul\":19475:19528   */\n      tag_592\n        /* \"#utility.yul\":19520:19527   */\n      dup9\n        /* \"#utility.yul\":19511:19517   */\n      dup3\n        /* \"#utility.yul\":19500:19509   */\n      dup10\n        /* \"#utility.yul\":19496:19518   */\n      add\n        /* \"#utility.yul\":19475:19528   */\n      tag_333\n      jump\t// in\n    tag_592:\n        /* \"#utility.yul\":19465:19528   */\n      swap5\n      pop\n        /* \"#utility.yul\":19420:19538   */\n      pop\n        /* \"#utility.yul\":19577:19579   */\n      0x40\n        /* \"#utility.yul\":19603:19656   */\n      tag_593\n        /* \"#utility.yul\":19648:19655   */\n      dup9\n        /* \"#utility.yul\":19639:19645   */\n      dup3\n        /* \"#utility.yul\":19628:19637   */\n      dup10\n        /* \"#utility.yul\":19624:19646   */\n      add\n        /* \"#utility.yul\":19603:19656   */\n      tag_336\n      jump\t// in\n    tag_593:\n        /* \"#utility.yul\":19593:19656   */\n      swap4\n      pop\n        /* \"#utility.yul\":19548:19666   */\n      pop\n        /* \"#utility.yul\":19705:19707   */\n      0x60\n        /* \"#utility.yul\":19731:19784   */\n      tag_594\n        /* \"#utility.yul\":19776:19783   */\n      dup9\n        /* \"#utility.yul\":19767:19773   */\n      dup3\n        /* \"#utility.yul\":19756:19765   */\n      dup10\n        /* \"#utility.yul\":19752:19774   */\n      add\n        /* \"#utility.yul\":19731:19784   */\n      tag_336\n      jump\t// in\n    tag_594:\n        /* \"#utility.yul\":19721:19784   */\n      swap3\n      pop\n        /* \"#utility.yul\":19676:19794   */\n      pop\n        /* \"#utility.yul\":19861:19864   */\n      0x80\n        /* \"#utility.yul\":19850:19859   */\n      dup7\n        /* \"#utility.yul\":19846:19865   */\n      add\n        /* \"#utility.yul\":19833:19866   */\n      calldataload\n        /* \"#utility.yul\":19893:19911   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":19885:19891   */\n      dup2\n        /* \"#utility.yul\":19882:19912   */\n      gt\n        /* \"#utility.yul\":19879:19996   */\n      iszero\n      tag_595\n      jumpi\n        /* \"#utility.yul\":19915:19994   */\n      tag_596\n      tag_329\n      jump\t// in\n    tag_596:\n        /* \"#utility.yul\":19879:19996   */\n    tag_595:\n        /* \"#utility.yul\":20020:20082   */\n      tag_597\n        /* \"#utility.yul\":20074:20081   */\n      dup9\n        /* \"#utility.yul\":20065:20071   */\n      dup3\n        /* \"#utility.yul\":20054:20063   */\n      dup10\n        /* \"#utility.yul\":20050:20072   */\n      add\n        /* \"#utility.yul\":20020:20082   */\n      tag_359\n      jump\t// in\n    tag_597:\n        /* \"#utility.yul\":20010:20082   */\n      swap2\n      pop\n        /* \"#utility.yul\":19804:20092   */\n      pop\n        /* \"#utility.yul\":19010:20099   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      swap1\n      swap4\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20105:20724   */\n    tag_87:\n        /* \"#utility.yul\":20182:20188   */\n      0x00\n        /* \"#utility.yul\":20190:20196   */\n      dup1\n        /* \"#utility.yul\":20198:20204   */\n      0x00\n        /* \"#utility.yul\":20247:20249   */\n      0x60\n        /* \"#utility.yul\":20235:20244   */\n      dup5\n        /* \"#utility.yul\":20226:20233   */\n      dup7\n        /* \"#utility.yul\":20222:20245   */\n      sub\n        /* \"#utility.yul\":20218:20250   */\n      slt\n        /* \"#utility.yul\":20215:20334   */\n      iszero\n      tag_599\n      jumpi\n        /* \"#utility.yul\":20253:20332   */\n      tag_600\n      tag_328\n      jump\t// in\n    tag_600:\n        /* \"#utility.yul\":20215:20334   */\n    tag_599:\n        /* \"#utility.yul\":20373:20374   */\n      0x00\n        /* \"#utility.yul\":20398:20451   */\n      tag_601\n        /* \"#utility.yul\":20443:20450   */\n      dup7\n        /* \"#utility.yul\":20434:20440   */\n      dup3\n        /* \"#utility.yul\":20423:20432   */\n      dup8\n        /* \"#utility.yul\":20419:20441   */\n      add\n        /* \"#utility.yul\":20398:20451   */\n      tag_333\n      jump\t// in\n    tag_601:\n        /* \"#utility.yul\":20388:20451   */\n      swap4\n      pop\n        /* \"#utility.yul\":20344:20461   */\n      pop\n        /* \"#utility.yul\":20500:20502   */\n      0x20\n        /* \"#utility.yul\":20526:20579   */\n      tag_602\n        /* \"#utility.yul\":20571:20578   */\n      dup7\n        /* \"#utility.yul\":20562:20568   */\n      dup3\n        /* \"#utility.yul\":20551:20560   */\n      dup8\n        /* \"#utility.yul\":20547:20569   */\n      add\n        /* \"#utility.yul\":20526:20579   */\n      tag_336\n      jump\t// in\n    tag_602:\n        /* \"#utility.yul\":20516:20579   */\n      swap3\n      pop\n        /* \"#utility.yul\":20471:20589   */\n      pop\n        /* \"#utility.yul\":20628:20630   */\n      0x40\n        /* \"#utility.yul\":20654:20707   */\n      tag_603\n        /* \"#utility.yul\":20699:20706   */\n      dup7\n        /* \"#utility.yul\":20690:20696   */\n      dup3\n        /* \"#utility.yul\":20679:20688   */\n      dup8\n        /* \"#utility.yul\":20675:20697   */\n      add\n        /* \"#utility.yul\":20654:20707   */\n      tag_336\n      jump\t// in\n    tag_603:\n        /* \"#utility.yul\":20644:20707   */\n      swap2\n      pop\n        /* \"#utility.yul\":20599:20717   */\n      pop\n        /* \"#utility.yul\":20105:20724   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":20730:20910   */\n    tag_372:\n        /* \"#utility.yul\":20778:20855   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":20775:20776   */\n      0x00\n        /* \"#utility.yul\":20768:20856   */\n      mstore\n        /* \"#utility.yul\":20875:20879   */\n      0x22\n        /* \"#utility.yul\":20872:20873   */\n      0x04\n        /* \"#utility.yul\":20865:20880   */\n      mstore\n        /* \"#utility.yul\":20899:20903   */\n      0x24\n        /* \"#utility.yul\":20896:20897   */\n      0x00\n        /* \"#utility.yul\":20889:20904   */\n      revert\n        /* \"#utility.yul\":20916:21236   */\n    tag_97:\n        /* \"#utility.yul\":20960:20966   */\n      0x00\n        /* \"#utility.yul\":20997:20998   */\n      0x02\n        /* \"#utility.yul\":20991:20995   */\n      dup3\n        /* \"#utility.yul\":20987:20999   */\n      div\n        /* \"#utility.yul\":20977:20999   */\n      swap1\n      pop\n        /* \"#utility.yul\":21044:21045   */\n      0x01\n        /* \"#utility.yul\":21038:21042   */\n      dup3\n        /* \"#utility.yul\":21034:21046   */\n      and\n        /* \"#utility.yul\":21065:21083   */\n      dup1\n        /* \"#utility.yul\":21055:21136   */\n      tag_606\n      jumpi\n        /* \"#utility.yul\":21121:21125   */\n      0x7f\n        /* \"#utility.yul\":21113:21119   */\n      dup3\n        /* \"#utility.yul\":21109:21126   */\n      and\n        /* \"#utility.yul\":21099:21126   */\n      swap2\n      pop\n        /* \"#utility.yul\":21055:21136   */\n    tag_606:\n        /* \"#utility.yul\":21183:21185   */\n      0x20\n        /* \"#utility.yul\":21175:21181   */\n      dup3\n        /* \"#utility.yul\":21172:21186   */\n      lt\n        /* \"#utility.yul\":21152:21170   */\n      dup2\n        /* \"#utility.yul\":21149:21187   */\n      sub\n        /* \"#utility.yul\":21146:21230   */\n      tag_607\n      jumpi\n        /* \"#utility.yul\":21202:21220   */\n      tag_608\n      tag_372\n      jump\t// in\n    tag_608:\n        /* \"#utility.yul\":21146:21230   */\n    tag_607:\n        /* \"#utility.yul\":20967:21236   */\n      pop\n        /* \"#utility.yul\":20916:21236   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21242:21420   */\n    tag_373:\n        /* \"#utility.yul\":21382:21412   */\n      0x4f6e6c792067616d6520636f6e74726163742063616e2063616c6c2e00000000\n        /* \"#utility.yul\":21378:21379   */\n      0x00\n        /* \"#utility.yul\":21370:21376   */\n      dup3\n        /* \"#utility.yul\":21366:21380   */\n      add\n        /* \"#utility.yul\":21359:21413   */\n      mstore\n        /* \"#utility.yul\":21242:21420   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21426:21792   */\n    tag_374:\n        /* \"#utility.yul\":21568:21571   */\n      0x00\n        /* \"#utility.yul\":21589:21656   */\n      tag_611\n        /* \"#utility.yul\":21653:21655   */\n      0x1c\n        /* \"#utility.yul\":21648:21651   */\n      dup4\n        /* \"#utility.yul\":21589:21656   */\n      tag_344\n      jump\t// in\n    tag_611:\n        /* \"#utility.yul\":21582:21656   */\n      swap2\n      pop\n        /* \"#utility.yul\":21665:21758   */\n      tag_612\n        /* \"#utility.yul\":21754:21757   */\n      dup3\n        /* \"#utility.yul\":21665:21758   */\n      tag_373\n      jump\t// in\n    tag_612:\n        /* \"#utility.yul\":21783:21785   */\n      0x20\n        /* \"#utility.yul\":21778:21781   */\n      dup3\n        /* \"#utility.yul\":21774:21786   */\n      add\n        /* \"#utility.yul\":21767:21786   */\n      swap1\n      pop\n        /* \"#utility.yul\":21426:21792   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21798:22217   */\n    tag_106:\n        /* \"#utility.yul\":21964:21968   */\n      0x00\n        /* \"#utility.yul\":22002:22004   */\n      0x20\n        /* \"#utility.yul\":21991:22000   */\n      dup3\n        /* \"#utility.yul\":21987:22005   */\n      add\n        /* \"#utility.yul\":21979:22005   */\n      swap1\n      pop\n        /* \"#utility.yul\":22051:22060   */\n      dup2\n        /* \"#utility.yul\":22045:22049   */\n      dup2\n        /* \"#utility.yul\":22041:22061   */\n      sub\n        /* \"#utility.yul\":22037:22038   */\n      0x00\n        /* \"#utility.yul\":22026:22035   */\n      dup4\n        /* \"#utility.yul\":22022:22039   */\n      add\n        /* \"#utility.yul\":22015:22062   */\n      mstore\n        /* \"#utility.yul\":22079:22210   */\n      tag_614\n        /* \"#utility.yul\":22205:22209   */\n      dup2\n        /* \"#utility.yul\":22079:22210   */\n      tag_374\n      jump\t// in\n    tag_614:\n        /* \"#utility.yul\":22071:22210   */\n      swap1\n      pop\n        /* \"#utility.yul\":21798:22217   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22223:22341   */\n    tag_375:\n        /* \"#utility.yul\":22310:22334   */\n      tag_616\n        /* \"#utility.yul\":22328:22333   */\n      dup2\n        /* \"#utility.yul\":22310:22334   */\n      tag_331\n      jump\t// in\n    tag_616:\n        /* \"#utility.yul\":22305:22308   */\n      dup3\n        /* \"#utility.yul\":22298:22335   */\n      mstore\n        /* \"#utility.yul\":22223:22341   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22347:22679   */\n    tag_117:\n        /* \"#utility.yul\":22468:22472   */\n      0x00\n        /* \"#utility.yul\":22506:22508   */\n      0x40\n        /* \"#utility.yul\":22495:22504   */\n      dup3\n        /* \"#utility.yul\":22491:22509   */\n      add\n        /* \"#utility.yul\":22483:22509   */\n      swap1\n      pop\n        /* \"#utility.yul\":22519:22590   */\n      tag_618\n        /* \"#utility.yul\":22587:22588   */\n      0x00\n        /* \"#utility.yul\":22576:22585   */\n      dup4\n        /* \"#utility.yul\":22572:22589   */\n      add\n        /* \"#utility.yul\":22563:22569   */\n      dup6\n        /* \"#utility.yul\":22519:22590   */\n      tag_375\n      jump\t// in\n    tag_618:\n        /* \"#utility.yul\":22600:22672   */\n      tag_619\n        /* \"#utility.yul\":22668:22670   */\n      0x20\n        /* \"#utility.yul\":22657:22666   */\n      dup4\n        /* \"#utility.yul\":22653:22671   */\n      add\n        /* \"#utility.yul\":22644:22650   */\n      dup5\n        /* \"#utility.yul\":22600:22672   */\n      tag_375\n      jump\t// in\n    tag_619:\n        /* \"#utility.yul\":22347:22679   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22685:23017   */\n    tag_123:\n        /* \"#utility.yul\":22806:22810   */\n      0x00\n        /* \"#utility.yul\":22844:22846   */\n      0x40\n        /* \"#utility.yul\":22833:22842   */\n      dup3\n        /* \"#utility.yul\":22829:22847   */\n      add\n        /* \"#utility.yul\":22821:22847   */\n      swap1\n      pop\n        /* \"#utility.yul\":22857:22928   */\n      tag_621\n        /* \"#utility.yul\":22925:22926   */\n      0x00\n        /* \"#utility.yul\":22914:22923   */\n      dup4\n        /* \"#utility.yul\":22910:22927   */\n      add\n        /* \"#utility.yul\":22901:22907   */\n      dup6\n        /* \"#utility.yul\":22857:22928   */\n      tag_337\n      jump\t// in\n    tag_621:\n        /* \"#utility.yul\":22938:23010   */\n      tag_622\n        /* \"#utility.yul\":23006:23008   */\n      0x20\n        /* \"#utility.yul\":22995:23004   */\n      dup4\n        /* \"#utility.yul\":22991:23009   */\n      add\n        /* \"#utility.yul\":22982:22988   */\n      dup5\n        /* \"#utility.yul\":22938:23010   */\n      tag_337\n      jump\t// in\n    tag_622:\n        /* \"#utility.yul\":22685:23017   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23023:23203   */\n    tag_138:\n        /* \"#utility.yul\":23071:23148   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":23068:23069   */\n      0x00\n        /* \"#utility.yul\":23061:23149   */\n      mstore\n        /* \"#utility.yul\":23168:23172   */\n      0x32\n        /* \"#utility.yul\":23165:23166   */\n      0x04\n        /* \"#utility.yul\":23158:23173   */\n      mstore\n        /* \"#utility.yul\":23192:23196   */\n      0x24\n        /* \"#utility.yul\":23189:23190   */\n      0x00\n        /* \"#utility.yul\":23182:23197   */\n      revert\n        /* \"#utility.yul\":23209:23389   */\n    tag_376:\n        /* \"#utility.yul\":23257:23334   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":23254:23255   */\n      0x00\n        /* \"#utility.yul\":23247:23335   */\n      mstore\n        /* \"#utility.yul\":23354:23358   */\n      0x11\n        /* \"#utility.yul\":23351:23352   */\n      0x04\n        /* \"#utility.yul\":23344:23359   */\n      mstore\n        /* \"#utility.yul\":23378:23382   */\n      0x24\n        /* \"#utility.yul\":23375:23376   */\n      0x00\n        /* \"#utility.yul\":23368:23383   */\n      revert\n        /* \"#utility.yul\":23395:23628   */\n    tag_140:\n        /* \"#utility.yul\":23434:23437   */\n      0x00\n        /* \"#utility.yul\":23457:23481   */\n      tag_626\n        /* \"#utility.yul\":23475:23480   */\n      dup3\n        /* \"#utility.yul\":23457:23481   */\n      tag_334\n      jump\t// in\n    tag_626:\n        /* \"#utility.yul\":23448:23481   */\n      swap2\n      pop\n        /* \"#utility.yul\":23503:23569   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":23496:23501   */\n      dup3\n        /* \"#utility.yul\":23493:23570   */\n      sub\n        /* \"#utility.yul\":23490:23593   */\n      tag_627\n      jumpi\n        /* \"#utility.yul\":23573:23591   */\n      tag_628\n      tag_376\n      jump\t// in\n    tag_628:\n        /* \"#utility.yul\":23490:23593   */\n    tag_627:\n        /* \"#utility.yul\":23620:23621   */\n      0x01\n        /* \"#utility.yul\":23613:23618   */\n      dup3\n        /* \"#utility.yul\":23609:23622   */\n      add\n        /* \"#utility.yul\":23602:23622   */\n      swap1\n      pop\n        /* \"#utility.yul\":23395:23628   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23634:23856   */\n    tag_187:\n        /* \"#utility.yul\":23727:23731   */\n      0x00\n        /* \"#utility.yul\":23765:23767   */\n      0x20\n        /* \"#utility.yul\":23754:23763   */\n      dup3\n        /* \"#utility.yul\":23750:23768   */\n      add\n        /* \"#utility.yul\":23742:23768   */\n      swap1\n      pop\n        /* \"#utility.yul\":23778:23849   */\n      tag_630\n        /* \"#utility.yul\":23846:23847   */\n      0x00\n        /* \"#utility.yul\":23835:23844   */\n      dup4\n        /* \"#utility.yul\":23831:23848   */\n      add\n        /* \"#utility.yul\":23822:23828   */\n      dup5\n        /* \"#utility.yul\":23778:23849   */\n      tag_375\n      jump\t// in\n    tag_630:\n        /* \"#utility.yul\":23634:23856   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23862:23960   */\n    tag_377:\n        /* \"#utility.yul\":23913:23919   */\n      0x00\n        /* \"#utility.yul\":23947:23952   */\n      dup2\n        /* \"#utility.yul\":23941:23953   */\n      mload\n        /* \"#utility.yul\":23931:23953   */\n      swap1\n      pop\n        /* \"#utility.yul\":23862:23960   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23966:24134   */\n    tag_378:\n        /* \"#utility.yul\":24049:24060   */\n      0x00\n        /* \"#utility.yul\":24083:24089   */\n      dup3\n        /* \"#utility.yul\":24078:24081   */\n      dup3\n        /* \"#utility.yul\":24071:24090   */\n      mstore\n        /* \"#utility.yul\":24123:24127   */\n      0x20\n        /* \"#utility.yul\":24118:24121   */\n      dup3\n        /* \"#utility.yul\":24114:24128   */\n      add\n        /* \"#utility.yul\":24099:24128   */\n      swap1\n      pop\n        /* \"#utility.yul\":23966:24134   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24140:24513   */\n    tag_379:\n        /* \"#utility.yul\":24226:24229   */\n      0x00\n        /* \"#utility.yul\":24254:24292   */\n      tag_634\n        /* \"#utility.yul\":24286:24291   */\n      dup3\n        /* \"#utility.yul\":24254:24292   */\n      tag_377\n      jump\t// in\n    tag_634:\n        /* \"#utility.yul\":24308:24378   */\n      tag_635\n        /* \"#utility.yul\":24371:24377   */\n      dup2\n        /* \"#utility.yul\":24366:24369   */\n      dup6\n        /* \"#utility.yul\":24308:24378   */\n      tag_378\n      jump\t// in\n    tag_635:\n        /* \"#utility.yul\":24301:24378   */\n      swap4\n      pop\n        /* \"#utility.yul\":24387:24452   */\n      tag_636\n        /* \"#utility.yul\":24445:24451   */\n      dup2\n        /* \"#utility.yul\":24440:24443   */\n      dup6\n        /* \"#utility.yul\":24433:24437   */\n      0x20\n        /* \"#utility.yul\":24426:24431   */\n      dup7\n        /* \"#utility.yul\":24422:24438   */\n      add\n        /* \"#utility.yul\":24387:24452   */\n      tag_345\n      jump\t// in\n    tag_636:\n        /* \"#utility.yul\":24477:24506   */\n      tag_637\n        /* \"#utility.yul\":24499:24505   */\n      dup2\n        /* \"#utility.yul\":24477:24506   */\n      tag_346\n      jump\t// in\n    tag_637:\n        /* \"#utility.yul\":24472:24475   */\n      dup5\n        /* \"#utility.yul\":24468:24507   */\n      add\n        /* \"#utility.yul\":24461:24507   */\n      swap2\n      pop\n        /* \"#utility.yul\":24230:24513   */\n      pop\n        /* \"#utility.yul\":24140:24513   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24519:25270   */\n    tag_245:\n        /* \"#utility.yul\":24742:24746   */\n      0x00\n        /* \"#utility.yul\":24780:24783   */\n      0xa0\n        /* \"#utility.yul\":24769:24778   */\n      dup3\n        /* \"#utility.yul\":24765:24784   */\n      add\n        /* \"#utility.yul\":24757:24784   */\n      swap1\n      pop\n        /* \"#utility.yul\":24794:24865   */\n      tag_639\n        /* \"#utility.yul\":24862:24863   */\n      0x00\n        /* \"#utility.yul\":24851:24860   */\n      dup4\n        /* \"#utility.yul\":24847:24864   */\n      add\n        /* \"#utility.yul\":24838:24844   */\n      dup9\n        /* \"#utility.yul\":24794:24865   */\n      tag_375\n      jump\t// in\n    tag_639:\n        /* \"#utility.yul\":24875:24947   */\n      tag_640\n        /* \"#utility.yul\":24943:24945   */\n      0x20\n        /* \"#utility.yul\":24932:24941   */\n      dup4\n        /* \"#utility.yul\":24928:24946   */\n      add\n        /* \"#utility.yul\":24919:24925   */\n      dup8\n        /* \"#utility.yul\":24875:24947   */\n      tag_375\n      jump\t// in\n    tag_640:\n        /* \"#utility.yul\":24957:25029   */\n      tag_641\n        /* \"#utility.yul\":25025:25027   */\n      0x40\n        /* \"#utility.yul\":25014:25023   */\n      dup4\n        /* \"#utility.yul\":25010:25028   */\n      add\n        /* \"#utility.yul\":25001:25007   */\n      dup7\n        /* \"#utility.yul\":24957:25029   */\n      tag_337\n      jump\t// in\n    tag_641:\n        /* \"#utility.yul\":25039:25111   */\n      tag_642\n        /* \"#utility.yul\":25107:25109   */\n      0x60\n        /* \"#utility.yul\":25096:25105   */\n      dup4\n        /* \"#utility.yul\":25092:25110   */\n      add\n        /* \"#utility.yul\":25083:25089   */\n      dup6\n        /* \"#utility.yul\":25039:25111   */\n      tag_337\n      jump\t// in\n    tag_642:\n        /* \"#utility.yul\":25159:25168   */\n      dup2\n        /* \"#utility.yul\":25153:25157   */\n      dup2\n        /* \"#utility.yul\":25149:25169   */\n      sub\n        /* \"#utility.yul\":25143:25146   */\n      0x80\n        /* \"#utility.yul\":25132:25141   */\n      dup4\n        /* \"#utility.yul\":25128:25147   */\n      add\n        /* \"#utility.yul\":25121:25170   */\n      mstore\n        /* \"#utility.yul\":25187:25263   */\n      tag_643\n        /* \"#utility.yul\":25258:25262   */\n      dup2\n        /* \"#utility.yul\":25249:25255   */\n      dup5\n        /* \"#utility.yul\":25187:25263   */\n      tag_379\n      jump\t// in\n    tag_643:\n        /* \"#utility.yul\":25179:25263   */\n      swap1\n      pop\n        /* \"#utility.yul\":24519:25270   */\n      swap7\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25276:25417   */\n    tag_380:\n        /* \"#utility.yul\":25332:25337   */\n      0x00\n        /* \"#utility.yul\":25363:25369   */\n      dup2\n        /* \"#utility.yul\":25357:25370   */\n      mload\n        /* \"#utility.yul\":25348:25370   */\n      swap1\n      pop\n        /* \"#utility.yul\":25379:25411   */\n      tag_645\n        /* \"#utility.yul\":25405:25410   */\n      dup2\n        /* \"#utility.yul\":25379:25411   */\n      tag_339\n      jump\t// in\n    tag_645:\n        /* \"#utility.yul\":25276:25417   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25423:25772   */\n    tag_248:\n        /* \"#utility.yul\":25492:25498   */\n      0x00\n        /* \"#utility.yul\":25541:25543   */\n      0x20\n        /* \"#utility.yul\":25529:25538   */\n      dup3\n        /* \"#utility.yul\":25520:25527   */\n      dup5\n        /* \"#utility.yul\":25516:25539   */\n      sub\n        /* \"#utility.yul\":25512:25544   */\n      slt\n        /* \"#utility.yul\":25509:25628   */\n      iszero\n      tag_647\n      jumpi\n        /* \"#utility.yul\":25547:25626   */\n      tag_648\n      tag_328\n      jump\t// in\n    tag_648:\n        /* \"#utility.yul\":25509:25628   */\n    tag_647:\n        /* \"#utility.yul\":25667:25668   */\n      0x00\n        /* \"#utility.yul\":25692:25755   */\n      tag_649\n        /* \"#utility.yul\":25747:25754   */\n      dup5\n        /* \"#utility.yul\":25738:25744   */\n      dup3\n        /* \"#utility.yul\":25727:25736   */\n      dup6\n        /* \"#utility.yul\":25723:25745   */\n      add\n        /* \"#utility.yul\":25692:25755   */\n      tag_380\n      jump\t// in\n    tag_649:\n        /* \"#utility.yul\":25682:25755   */\n      swap2\n      pop\n        /* \"#utility.yul\":25638:25765   */\n      pop\n        /* \"#utility.yul\":25423:25772   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25778:26831   */\n    tag_264:\n        /* \"#utility.yul\":26101:26105   */\n      0x00\n        /* \"#utility.yul\":26139:26142   */\n      0xa0\n        /* \"#utility.yul\":26128:26137   */\n      dup3\n        /* \"#utility.yul\":26124:26143   */\n      add\n        /* \"#utility.yul\":26116:26143   */\n      swap1\n      pop\n        /* \"#utility.yul\":26153:26224   */\n      tag_651\n        /* \"#utility.yul\":26221:26222   */\n      0x00\n        /* \"#utility.yul\":26210:26219   */\n      dup4\n        /* \"#utility.yul\":26206:26223   */\n      add\n        /* \"#utility.yul\":26197:26203   */\n      dup9\n        /* \"#utility.yul\":26153:26224   */\n      tag_375\n      jump\t// in\n    tag_651:\n        /* \"#utility.yul\":26234:26306   */\n      tag_652\n        /* \"#utility.yul\":26302:26304   */\n      0x20\n        /* \"#utility.yul\":26291:26300   */\n      dup4\n        /* \"#utility.yul\":26287:26305   */\n      add\n        /* \"#utility.yul\":26278:26284   */\n      dup8\n        /* \"#utility.yul\":26234:26306   */\n      tag_375\n      jump\t// in\n    tag_652:\n        /* \"#utility.yul\":26353:26362   */\n      dup2\n        /* \"#utility.yul\":26347:26351   */\n      dup2\n        /* \"#utility.yul\":26343:26363   */\n      sub\n        /* \"#utility.yul\":26338:26340   */\n      0x40\n        /* \"#utility.yul\":26327:26336   */\n      dup4\n        /* \"#utility.yul\":26323:26341   */\n      add\n        /* \"#utility.yul\":26316:26364   */\n      mstore\n        /* \"#utility.yul\":26381:26489   */\n      tag_653\n        /* \"#utility.yul\":26484:26488   */\n      dup2\n        /* \"#utility.yul\":26475:26481   */\n      dup7\n        /* \"#utility.yul\":26381:26489   */\n      tag_369\n      jump\t// in\n    tag_653:\n        /* \"#utility.yul\":26373:26489   */\n      swap1\n      pop\n        /* \"#utility.yul\":26536:26545   */\n      dup2\n        /* \"#utility.yul\":26530:26534   */\n      dup2\n        /* \"#utility.yul\":26526:26546   */\n      sub\n        /* \"#utility.yul\":26521:26523   */\n      0x60\n        /* \"#utility.yul\":26510:26519   */\n      dup4\n        /* \"#utility.yul\":26506:26524   */\n      add\n        /* \"#utility.yul\":26499:26547   */\n      mstore\n        /* \"#utility.yul\":26564:26672   */\n      tag_654\n        /* \"#utility.yul\":26667:26671   */\n      dup2\n        /* \"#utility.yul\":26658:26664   */\n      dup6\n        /* \"#utility.yul\":26564:26672   */\n      tag_369\n      jump\t// in\n    tag_654:\n        /* \"#utility.yul\":26556:26672   */\n      swap1\n      pop\n        /* \"#utility.yul\":26720:26729   */\n      dup2\n        /* \"#utility.yul\":26714:26718   */\n      dup2\n        /* \"#utility.yul\":26710:26730   */\n      sub\n        /* \"#utility.yul\":26704:26707   */\n      0x80\n        /* \"#utility.yul\":26693:26702   */\n      dup4\n        /* \"#utility.yul\":26689:26708   */\n      add\n        /* \"#utility.yul\":26682:26731   */\n      mstore\n        /* \"#utility.yul\":26748:26824   */\n      tag_655\n        /* \"#utility.yul\":26819:26823   */\n      dup2\n        /* \"#utility.yul\":26810:26816   */\n      dup5\n        /* \"#utility.yul\":26748:26824   */\n      tag_379\n      jump\t// in\n    tag_655:\n        /* \"#utility.yul\":26740:26824   */\n      swap1\n      pop\n        /* \"#utility.yul\":25778:26831   */\n      swap7\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26837:27028   */\n    tag_291:\n        /* \"#utility.yul\":26877:26880   */\n      0x00\n        /* \"#utility.yul\":26896:26916   */\n      tag_657\n        /* \"#utility.yul\":26914:26915   */\n      dup3\n        /* \"#utility.yul\":26896:26916   */\n      tag_334\n      jump\t// in\n    tag_657:\n        /* \"#utility.yul\":26891:26916   */\n      swap2\n      pop\n        /* \"#utility.yul\":26930:26950   */\n      tag_658\n        /* \"#utility.yul\":26948:26949   */\n      dup4\n        /* \"#utility.yul\":26930:26950   */\n      tag_334\n      jump\t// in\n    tag_658:\n        /* \"#utility.yul\":26925:26950   */\n      swap3\n      pop\n        /* \"#utility.yul\":26973:26974   */\n      dup3\n        /* \"#utility.yul\":26970:26971   */\n      dup3\n        /* \"#utility.yul\":26966:26975   */\n      add\n        /* \"#utility.yul\":26959:26975   */\n      swap1\n      pop\n        /* \"#utility.yul\":26994:26997   */\n      dup1\n        /* \"#utility.yul\":26991:26992   */\n      dup3\n        /* \"#utility.yul\":26988:26998   */\n      gt\n        /* \"#utility.yul\":26985:27021   */\n      iszero\n      tag_659\n      jumpi\n        /* \"#utility.yul\":27001:27019   */\n      tag_660\n      tag_376\n      jump\t// in\n    tag_660:\n        /* \"#utility.yul\":26985:27021   */\n    tag_659:\n        /* \"#utility.yul\":26837:27028   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":27034:27587   */\n    tag_316:\n        /* \"#utility.yul\":27211:27215   */\n      0x00\n        /* \"#utility.yul\":27249:27252   */\n      0x80\n        /* \"#utility.yul\":27238:27247   */\n      dup3\n        /* \"#utility.yul\":27234:27253   */\n      add\n        /* \"#utility.yul\":27226:27253   */\n      swap1\n      pop\n        /* \"#utility.yul\":27263:27334   */\n      tag_662\n        /* \"#utility.yul\":27331:27332   */\n      0x00\n        /* \"#utility.yul\":27320:27329   */\n      dup4\n        /* \"#utility.yul\":27316:27333   */\n      add\n        /* \"#utility.yul\":27307:27313   */\n      dup8\n        /* \"#utility.yul\":27263:27334   */\n      tag_375\n      jump\t// in\n    tag_662:\n        /* \"#utility.yul\":27344:27416   */\n      tag_663\n        /* \"#utility.yul\":27412:27414   */\n      0x20\n        /* \"#utility.yul\":27401:27410   */\n      dup4\n        /* \"#utility.yul\":27397:27415   */\n      add\n        /* \"#utility.yul\":27388:27394   */\n      dup7\n        /* \"#utility.yul\":27344:27416   */\n      tag_337\n      jump\t// in\n    tag_663:\n        /* \"#utility.yul\":27426:27498   */\n      tag_664\n        /* \"#utility.yul\":27494:27496   */\n      0x40\n        /* \"#utility.yul\":27483:27492   */\n      dup4\n        /* \"#utility.yul\":27479:27497   */\n      add\n        /* \"#utility.yul\":27470:27476   */\n      dup6\n        /* \"#utility.yul\":27426:27498   */\n      tag_337\n      jump\t// in\n    tag_664:\n        /* \"#utility.yul\":27508:27580   */\n      tag_665\n        /* \"#utility.yul\":27576:27578   */\n      0x60\n        /* \"#utility.yul\":27565:27574   */\n      dup4\n        /* \"#utility.yul\":27561:27579   */\n      add\n        /* \"#utility.yul\":27552:27558   */\n      dup5\n        /* \"#utility.yul\":27508:27580   */\n      tag_337\n      jump\t// in\n    tag_665:\n        /* \"#utility.yul\":27034:27587   */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":27593:28227   */\n    tag_326:\n        /* \"#utility.yul\":27814:27818   */\n      0x00\n        /* \"#utility.yul\":27852:27854   */\n      0x40\n        /* \"#utility.yul\":27841:27850   */\n      dup3\n        /* \"#utility.yul\":27837:27855   */\n      add\n        /* \"#utility.yul\":27829:27855   */\n      swap1\n      pop\n        /* \"#utility.yul\":27901:27910   */\n      dup2\n        /* \"#utility.yul\":27895:27899   */\n      dup2\n        /* \"#utility.yul\":27891:27911   */\n      sub\n        /* \"#utility.yul\":27887:27888   */\n      0x00\n        /* \"#utility.yul\":27876:27885   */\n      dup4\n        /* \"#utility.yul\":27872:27889   */\n      add\n        /* \"#utility.yul\":27865:27912   */\n      mstore\n        /* \"#utility.yul\":27929:28037   */\n      tag_667\n        /* \"#utility.yul\":28032:28036   */\n      dup2\n        /* \"#utility.yul\":28023:28029   */\n      dup6\n        /* \"#utility.yul\":27929:28037   */\n      tag_369\n      jump\t// in\n    tag_667:\n        /* \"#utility.yul\":27921:28037   */\n      swap1\n      pop\n        /* \"#utility.yul\":28084:28093   */\n      dup2\n        /* \"#utility.yul\":28078:28082   */\n      dup2\n        /* \"#utility.yul\":28074:28094   */\n      sub\n        /* \"#utility.yul\":28069:28071   */\n      0x20\n        /* \"#utility.yul\":28058:28067   */\n      dup4\n        /* \"#utility.yul\":28054:28072   */\n      add\n        /* \"#utility.yul\":28047:28095   */\n      mstore\n        /* \"#utility.yul\":28112:28220   */\n      tag_668\n        /* \"#utility.yul\":28215:28219   */\n      dup2\n        /* \"#utility.yul\":28206:28212   */\n      dup5\n        /* \"#utility.yul\":28112:28220   */\n      tag_369\n      jump\t// in\n    tag_668:\n        /* \"#utility.yul\":28104:28220   */\n      swap1\n      pop\n        /* \"#utility.yul\":27593:28227   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212208758f283f5b2a1538ffdd8d6bd6203a646ee510cc9cd8e4aa7ba217de96a48b764736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_197": {
									"entryPoint": null,
									"id": 197,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_3060": {
									"entryPoint": null,
									"id": 3060,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_setURI_810": {
									"entryPoint": 185,
									"id": 810,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 285,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 307,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 507,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 355,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 816,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 241,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 210,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 637,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 778,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 655,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 967,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 525,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 455,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 938,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 646,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 908,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x22": {
									"entryPoint": 410,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 365,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 694,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 206,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"shift_left_dynamic": {
									"entryPoint": 540,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 896,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 750,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 552,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 703,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 260,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 746,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:6426:14",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:14",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:14",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:14"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:14"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:14",
														"type": ""
													}
												],
												"src": "7:75:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:14",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:14"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:14",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:14"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:81:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:65:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "411:42:14",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "400:54:14"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:14"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:14",
														"type": ""
													}
												],
												"src": "334:126:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "511:51:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "521:35:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "532:24:14"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:14"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "493:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "503:7:14",
														"type": ""
													}
												],
												"src": "466:96:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "611:79:14",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "668:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "677:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "680:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:14"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:14"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:14"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "624:43:14"
															},
															"nodeType": "YulIf",
															"src": "621:63:14"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "604:5:14",
														"type": ""
													}
												],
												"src": "568:122:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "759:80:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "769:22:14",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:14"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "778:13:14"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:14"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "800:33:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "800:33:14"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "737:6:14",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "745:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "753:5:14",
														"type": ""
													}
												],
												"src": "696:143:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "922:274:14",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "968:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "970:77:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "970:79:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "970:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "943:7:14"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "952:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "939:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "939:23:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "964:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "935:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "935:32:14"
															},
															"nodeType": "YulIf",
															"src": "932:119:14"
														},
														{
															"nodeType": "YulBlock",
															"src": "1061:128:14",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1076:15:14",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1090:1:14",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1080:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1105:74:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1151:9:14"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1162:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1147:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1147:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1171:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1115:31:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1115:64:14"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1105:6:14"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "892:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "903:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "915:6:14",
														"type": ""
													}
												],
												"src": "845:351:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1261:40:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1272:22:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1288:5:14"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1282:5:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "1282:12:14"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "1272:6:14"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1244:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1254:6:14",
														"type": ""
													}
												],
												"src": "1202:99:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1335:152:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1352:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1355:77:14",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1345:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "1345:88:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1345:88:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1449:1:14",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1452:4:14",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1442:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "1442:15:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1442:15:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1473:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1476:4:14",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1466:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "1466:15:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1466:15:14"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "1307:180:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1521:152:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1538:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1541:77:14",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1531:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "1531:88:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1531:88:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1635:1:14",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1638:4:14",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1628:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "1628:15:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1628:15:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1659:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1662:4:14",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1652:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "1652:15:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1652:15:14"
														}
													]
												},
												"name": "panic_error_0x22",
												"nodeType": "YulFunctionDefinition",
												"src": "1493:180:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1730:269:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1740:22:14",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "1754:4:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1760:1:14",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "1750:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "1750:12:14"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "1740:6:14"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1771:38:14",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "1801:4:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1807:1:14",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1797:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "1797:12:14"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "1775:18:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1848:51:14",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1862:27:14",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "1876:6:14"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1884:4:14",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "1872:3:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1872:17:14"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1862:6:14"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "1828:18:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1821:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "1821:26:14"
															},
															"nodeType": "YulIf",
															"src": "1818:81:14"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1951:42:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nodeType": "YulIdentifier",
																				"src": "1965:16:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1965:18:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1965:18:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "1915:18:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1938:6:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1946:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "1935:2:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1935:14:14"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "1912:2:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "1912:38:14"
															},
															"nodeType": "YulIf",
															"src": "1909:84:14"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "1714:4:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1723:6:14",
														"type": ""
													}
												],
												"src": "1679:320:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2059:87:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2069:11:14",
															"value": {
																"name": "ptr",
																"nodeType": "YulIdentifier",
																"src": "2077:3:14"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "2069:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2097:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "2100:3:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2090:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "2090:14:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2090:14:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2113:26:14",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2131:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2134:4:14",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nodeType": "YulIdentifier",
																	"src": "2121:9:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "2121:18:14"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "2113:4:14"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "2046:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "2054:4:14",
														"type": ""
													}
												],
												"src": "2005:141:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2196:49:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2206:33:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2224:5:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2231:2:14",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2220:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2220:14:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2236:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "2216:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "2216:23:14"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "2206:6:14"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2179:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "2189:6:14",
														"type": ""
													}
												],
												"src": "2152:93:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2304:54:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2314:37:14",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nodeType": "YulIdentifier",
																		"src": "2339:4:14"
																	},
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2345:5:14"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nodeType": "YulIdentifier",
																	"src": "2335:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "2335:16:14"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nodeType": "YulIdentifier",
																	"src": "2314:8:14"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nodeType": "YulTypedName",
														"src": "2279:4:14",
														"type": ""
													},
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2285:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nodeType": "YulTypedName",
														"src": "2295:8:14",
														"type": ""
													}
												],
												"src": "2251:107:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2440:317:14",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2450:35:14",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nodeType": "YulIdentifier",
																		"src": "2471:10:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2483:1:14",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "2467:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "2467:18:14"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nodeType": "YulTypedName",
																	"src": "2454:9:14",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2494:109:14",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nodeType": "YulIdentifier",
																		"src": "2525:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2536:66:14",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nodeType": "YulIdentifier",
																	"src": "2506:18:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "2506:97:14"
															},
															"variables": [
																{
																	"name": "mask",
																	"nodeType": "YulTypedName",
																	"src": "2498:4:14",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2612:51:14",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nodeType": "YulIdentifier",
																		"src": "2643:9:14"
																	},
																	{
																		"name": "toInsert",
																		"nodeType": "YulIdentifier",
																		"src": "2654:8:14"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nodeType": "YulIdentifier",
																	"src": "2624:18:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "2624:39:14"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nodeType": "YulIdentifier",
																	"src": "2612:8:14"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2672:30:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2685:5:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nodeType": "YulIdentifier",
																				"src": "2696:4:14"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "2692:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2692:9:14"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2681:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "2681:21:14"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2672:5:14"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2711:40:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2724:5:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nodeType": "YulIdentifier",
																				"src": "2735:8:14"
																			},
																			{
																				"name": "mask",
																				"nodeType": "YulIdentifier",
																				"src": "2745:4:14"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2731:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2731:19:14"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "2721:2:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "2721:30:14"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "2711:6:14"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2401:5:14",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nodeType": "YulTypedName",
														"src": "2408:10:14",
														"type": ""
													},
													{
														"name": "toInsert",
														"nodeType": "YulTypedName",
														"src": "2420:8:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "2433:6:14",
														"type": ""
													}
												],
												"src": "2364:393:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2808:32:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2818:16:14",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2829:5:14"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2818:7:14"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2790:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2800:7:14",
														"type": ""
													}
												],
												"src": "2763:77:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2878:28:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2888:12:14",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2895:5:14"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "2888:3:14"
																}
															]
														}
													]
												},
												"name": "identity",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2864:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "2874:3:14",
														"type": ""
													}
												],
												"src": "2846:60:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2972:82:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2982:66:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "3040:5:14"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "3022:17:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3022:24:14"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nodeType": "YulIdentifier",
																			"src": "3013:8:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3013:34:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2995:17:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "2995:53:14"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "2982:9:14"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2952:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "2962:9:14",
														"type": ""
													}
												],
												"src": "2912:142:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3107:28:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3117:12:14",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "3124:5:14"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "3117:3:14"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3093:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "3103:3:14",
														"type": ""
													}
												],
												"src": "3060:75:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3217:193:14",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3227:63:14",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nodeType": "YulIdentifier",
																		"src": "3282:7:14"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "3251:30:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "3251:39:14"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nodeType": "YulTypedName",
																	"src": "3231:16:14",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "3306:4:14"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nodeType": "YulIdentifier",
																						"src": "3346:4:14"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nodeType": "YulIdentifier",
																					"src": "3340:5:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3340:11:14"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "3353:6:14"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nodeType": "YulIdentifier",
																						"src": "3385:16:14"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "3361:23:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3361:41:14"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nodeType": "YulIdentifier",
																			"src": "3312:27:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3312:91:14"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nodeType": "YulIdentifier",
																	"src": "3299:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "3299:105:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3299:105:14"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "3194:4:14",
														"type": ""
													},
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "3200:6:14",
														"type": ""
													},
													{
														"name": "value_0",
														"nodeType": "YulTypedName",
														"src": "3208:7:14",
														"type": ""
													}
												],
												"src": "3141:269:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3465:24:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3475:8:14",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3482:1:14",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "3475:3:14"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "3461:3:14",
														"type": ""
													}
												],
												"src": "3416:73:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3548:136:14",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3558:46:14",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "3572:30:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "3572:32:14"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nodeType": "YulTypedName",
																	"src": "3562:6:14",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "3657:4:14"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3663:6:14"
																	},
																	{
																		"name": "zero_0",
																		"nodeType": "YulIdentifier",
																		"src": "3671:6:14"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "3613:43:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "3613:65:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3613:65:14"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "3534:4:14",
														"type": ""
													},
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "3540:6:14",
														"type": ""
													}
												],
												"src": "3495:189:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3740:136:14",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3807:63:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nodeType": "YulIdentifier",
																					"src": "3851:5:14"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3858:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nodeType": "YulIdentifier",
																				"src": "3821:29:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3821:39:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3821:39:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nodeType": "YulIdentifier",
																		"src": "3760:5:14"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "3767:3:14"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "3757:2:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "3757:14:14"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "3772:26:14",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "3774:22:14",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nodeType": "YulIdentifier",
																					"src": "3787:5:14"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3794:1:14",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "3783:3:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3783:13:14"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nodeType": "YulIdentifier",
																				"src": "3774:5:14"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "3754:2:14",
																"statements": []
															},
															"src": "3750:120:14"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nodeType": "YulTypedName",
														"src": "3728:5:14",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3735:3:14",
														"type": ""
													}
												],
												"src": "3690:186:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3961:464:14",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3987:431:14",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "4001:54:14",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "4049:5:14"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nodeType": "YulIdentifier",
																				"src": "4017:31:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4017:38:14"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nodeType": "YulTypedName",
																				"src": "4005:8:14",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "4068:63:14",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nodeType": "YulIdentifier",
																					"src": "4091:8:14"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nodeType": "YulIdentifier",
																							"src": "4119:10:14"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nodeType": "YulIdentifier",
																						"src": "4101:17:14"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4101:29:14"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "4087:3:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4087:44:14"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nodeType": "YulTypedName",
																				"src": "4072:11:14",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "4288:27:14",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "4290:23:14",
																					"value": {
																						"name": "dataArea",
																						"nodeType": "YulIdentifier",
																						"src": "4305:8:14"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nodeType": "YulIdentifier",
																							"src": "4290:11:14"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nodeType": "YulIdentifier",
																					"src": "4272:10:14"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4284:2:14",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nodeType": "YulIdentifier",
																				"src": "4269:2:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4269:18:14"
																		},
																		"nodeType": "YulIf",
																		"src": "4266:49:14"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nodeType": "YulIdentifier",
																					"src": "4357:11:14"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nodeType": "YulIdentifier",
																							"src": "4374:8:14"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nodeType": "YulIdentifier",
																									"src": "4402:3:14"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nodeType": "YulIdentifier",
																								"src": "4384:17:14"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "4384:22:14"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "4370:3:14"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4370:37:14"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nodeType": "YulIdentifier",
																				"src": "4328:28:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4328:80:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4328:80:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "3978:3:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3983:2:14",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3975:2:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "3975:11:14"
															},
															"nodeType": "YulIf",
															"src": "3972:446:14"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "3937:5:14",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "3944:3:14",
														"type": ""
													},
													{
														"name": "startIndex",
														"nodeType": "YulTypedName",
														"src": "3949:10:14",
														"type": ""
													}
												],
												"src": "3882:543:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4494:54:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4504:37:14",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nodeType": "YulIdentifier",
																		"src": "4529:4:14"
																	},
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4535:5:14"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "4525:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "4525:16:14"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nodeType": "YulIdentifier",
																	"src": "4504:8:14"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nodeType": "YulTypedName",
														"src": "4469:4:14",
														"type": ""
													},
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4475:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nodeType": "YulTypedName",
														"src": "4485:8:14",
														"type": ""
													}
												],
												"src": "4431:117:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4605:118:14",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4615:68:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4664:1:14",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nodeType": "YulIdentifier",
																						"src": "4667:5:14"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nodeType": "YulIdentifier",
																					"src": "4660:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4660:13:14"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4679:1:14",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "4675:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4675:6:14"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nodeType": "YulIdentifier",
																			"src": "4631:28:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4631:51:14"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "4627:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "4627:56:14"
															},
															"variables": [
																{
																	"name": "mask",
																	"nodeType": "YulTypedName",
																	"src": "4619:4:14",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4692:25:14",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "4706:4:14"
																	},
																	{
																		"name": "mask",
																		"nodeType": "YulIdentifier",
																		"src": "4712:4:14"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "4702:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "4702:15:14"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "4692:6:14"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "4582:4:14",
														"type": ""
													},
													{
														"name": "bytes",
														"nodeType": "YulTypedName",
														"src": "4588:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "4598:6:14",
														"type": ""
													}
												],
												"src": "4554:169:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4809:214:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4942:37:14",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "4969:4:14"
																	},
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "4975:3:14"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nodeType": "YulIdentifier",
																	"src": "4950:18:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "4950:29:14"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "4942:4:14"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4988:29:14",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "4999:4:14"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5009:1:14",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nodeType": "YulIdentifier",
																				"src": "5012:3:14"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "5005:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5005:11:14"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "4996:2:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "4996:21:14"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nodeType": "YulIdentifier",
																	"src": "4988:4:14"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "4790:4:14",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "4796:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nodeType": "YulTypedName",
														"src": "4804:4:14",
														"type": ""
													}
												],
												"src": "4728:295:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5120:1303:14",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5131:51:14",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "5178:3:14"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "5145:32:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "5145:37:14"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nodeType": "YulTypedName",
																	"src": "5135:6:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5267:22:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "5269:16:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5269:18:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5269:18:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "5239:6:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5247:18:14",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5236:2:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "5236:30:14"
															},
															"nodeType": "YulIf",
															"src": "5233:56:14"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5299:52:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nodeType": "YulIdentifier",
																				"src": "5345:4:14"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nodeType": "YulIdentifier",
																			"src": "5339:5:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5339:11:14"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nodeType": "YulIdentifier",
																	"src": "5313:25:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "5313:38:14"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nodeType": "YulTypedName",
																	"src": "5303:6:14",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "5444:4:14"
																	},
																	{
																		"name": "oldLen",
																		"nodeType": "YulIdentifier",
																		"src": "5450:6:14"
																	},
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "5458:6:14"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nodeType": "YulIdentifier",
																	"src": "5398:45:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "5398:67:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5398:67:14"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5475:18:14",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "5492:1:14",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulTypedName",
																	"src": "5479:9:14",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5503:17:14",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "5516:4:14",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulIdentifier",
																	"src": "5503:9:14"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "5567:611:14",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "5581:37:14",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "5600:6:14"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "5612:4:14",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nodeType": "YulIdentifier",
																								"src": "5608:3:14"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "5608:9:14"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nodeType": "YulIdentifier",
																						"src": "5596:3:14"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5596:22:14"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nodeType": "YulTypedName",
																						"src": "5585:7:14",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "5632:51:14",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "5678:4:14"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nodeType": "YulIdentifier",
																						"src": "5646:31:14"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5646:37:14"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nodeType": "YulTypedName",
																						"src": "5636:6:14",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "5696:10:14",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5705:1:14",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nodeType": "YulTypedName",
																						"src": "5700:1:14",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "5764:163:14",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "5789:6:14"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nodeType": "YulIdentifier",
																														"src": "5807:3:14"
																													},
																													{
																														"name": "srcOffset",
																														"nodeType": "YulIdentifier",
																														"src": "5812:9:14"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nodeType": "YulIdentifier",
																													"src": "5803:3:14"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "5803:19:14"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nodeType": "YulIdentifier",
																											"src": "5797:5:14"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "5797:26:14"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "5782:6:14"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "5782:42:14"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "5782:42:14"
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "5841:24:14",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "5855:6:14"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "5863:1:14",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "5851:3:14"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "5851:14:14"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nodeType": "YulIdentifier",
																									"src": "5841:6:14"
																								}
																							]
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "5882:31:14",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nodeType": "YulIdentifier",
																										"src": "5899:9:14"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "5910:2:14",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "5895:3:14"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "5895:18:14"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nodeType": "YulIdentifier",
																									"src": "5882:9:14"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "5730:1:14"
																						},
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "5733:7:14"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "5727:2:14"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5727:14:14"
																				},
																				"nodeType": "YulForLoop",
																				"post": {
																					"nodeType": "YulBlock",
																					"src": "5742:21:14",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "5744:17:14",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nodeType": "YulIdentifier",
																										"src": "5753:1:14"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "5756:4:14",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "5749:3:14"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "5749:12:14"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "5744:1:14"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nodeType": "YulBlock",
																					"src": "5723:3:14",
																					"statements": []
																				},
																				"src": "5719:208:14"
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "5963:156:14",
																					"statements": [
																						{
																							"nodeType": "YulVariableDeclaration",
																							"src": "5981:43:14",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "6008:3:14"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "6013:9:14"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "6004:3:14"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "6004:19:14"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "5998:5:14"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "5998:26:14"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nodeType": "YulTypedName",
																									"src": "5985:9:14",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "6048:6:14"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nodeType": "YulIdentifier",
																												"src": "6075:9:14"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nodeType": "YulIdentifier",
																														"src": "6090:6:14"
																													},
																													{
																														"kind": "number",
																														"nodeType": "YulLiteral",
																														"src": "6098:4:14",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nodeType": "YulIdentifier",
																													"src": "6086:3:14"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "6086:17:14"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nodeType": "YulIdentifier",
																											"src": "6056:18:14"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "6056:48:14"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "6041:6:14"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "6041:64:14"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "6041:64:14"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "5946:7:14"
																						},
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "5955:6:14"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "5943:2:14"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5943:19:14"
																				},
																				"nodeType": "YulIf",
																				"src": "5940:179:14"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "6139:4:14"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nodeType": "YulIdentifier",
																											"src": "6153:6:14"
																										},
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "6161:1:14",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nodeType": "YulIdentifier",
																										"src": "6149:3:14"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "6149:14:14"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "6165:1:14",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "6145:3:14"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "6145:22:14"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "6132:6:14"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6132:36:14"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "6132:36:14"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "5560:618:14",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5565:1:14",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "6195:222:14",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "6209:14:14",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6222:1:14",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nodeType": "YulTypedName",
																						"src": "6213:5:14",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "6246:67:14",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "6264:35:14",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "6283:3:14"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "6288:9:14"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "6279:3:14"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "6279:19:14"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "6273:5:14"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "6273:26:14"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "6264:5:14"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nodeType": "YulIdentifier",
																					"src": "6239:6:14"
																				},
																				"nodeType": "YulIf",
																				"src": "6236:77:14"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "6333:4:14"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "6392:5:14"
																								},
																								{
																									"name": "newLen",
																									"nodeType": "YulIdentifier",
																									"src": "6399:6:14"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nodeType": "YulIdentifier",
																								"src": "6339:52:14"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "6339:67:14"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "6326:6:14"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6326:81:14"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "6326:81:14"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "6187:230:14",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "5540:6:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5548:2:14",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5537:2:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "5537:14:14"
															},
															"nodeType": "YulSwitch",
															"src": "5530:887:14"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "5109:4:14",
														"type": ""
													},
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "5115:3:14",
														"type": ""
													}
												],
												"src": "5028:1395:14"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n}\n",
									"id": 14,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60a060405234801562000010575f80fd5b5060405162002dff38038062002dff833981810160405281019062000036919062000133565b6040518060400160405280602081526020017f68747470733a2f2f736f6d2e657465726e697461732e67616d65732f6a736f6e8152506200007d81620000b960201b60201c565b508073ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff168152505050620004ab565b8060029081620000ca9190620003c7565b5050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f620000fd82620000d2565b9050919050565b6200010f81620000f1565b81146200011a575f80fd5b50565b5f815190506200012d8162000104565b92915050565b5f602082840312156200014b576200014a620000ce565b5b5f6200015a848285016200011d565b91505092915050565b5f81519050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f6002820490506001821680620001df57607f821691505b602082108103620001f557620001f46200019a565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f60088302620002597fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826200021c565b6200026586836200021c565b95508019841693508086168417925050509392505050565b5f819050919050565b5f819050919050565b5f620002af620002a9620002a3846200027d565b62000286565b6200027d565b9050919050565b5f819050919050565b620002ca836200028f565b620002e2620002d982620002b6565b84845462000228565b825550505050565b5f90565b620002f8620002ea565b62000305818484620002bf565b505050565b5b818110156200032c57620003205f82620002ee565b6001810190506200030b565b5050565b601f8211156200037b576200034581620001fb565b62000350846200020d565b8101602085101562000360578190505b620003786200036f856200020d565b8301826200030a565b50505b505050565b5f82821c905092915050565b5f6200039d5f198460080262000380565b1980831691505092915050565b5f620003b783836200038c565b9150826002028217905092915050565b620003d28262000163565b67ffffffffffffffff811115620003ee57620003ed6200016d565b5b620003fa8254620001c7565b6200040782828562000330565b5f60209050601f8311600181146200043d575f841562000428578287015190505b620004348582620003aa565b865550620004a3565b601f1984166200044d86620001fb565b5f5b8281101562000476578489015182556001820191506020850194506020810190506200044f565b8683101562000496578489015162000492601f8916826200038c565b8355505b6001600288020188555050505b505050505050565b608051612934620004cb5f395f81816104fb015261080e01526129345ff3fe608060405234801561000f575f80fd5b50600436106100f2575f3560e01c80634f558e7911610095578063bd85b03911610064578063bd85b03914610290578063e985e9c5146102c0578063f242432a146102f0578063f5298aca1461030c576100f2565b80634f558e791461020c5780636b20c4541461023c578063731133e914610258578063a22cb46514610274576100f2565b806318160ddd116100d157806318160ddd146101865780631f7fdffa146101a45780632eb2c2d6146101c05780634e1273f4146101dc576100f2565b8062fdd58e146100f657806301ffc9a7146101265780630e89341c14610156575b5f80fd5b610110600480360381019061010b9190611b29565b610328565b60405161011d9190611b76565b60405180910390f35b610140600480360381019061013b9190611be4565b61037d565b60405161014d9190611c29565b60405180910390f35b610170600480360381019061016b9190611c42565b61045e565b60405161017d9190611cf7565b60405180910390f35b61018e6104f0565b60405161019b9190611b76565b60405180910390f35b6101be60048036038101906101b99190611f07565b6104f9565b005b6101da60048036038101906101d59190611fbf565b610599565b005b6101f660048036038101906101f1919061214a565b610640565b6040516102039190612277565b60405180910390f35b61022660048036038101906102219190611c42565b61074d565b6040516102339190611c29565b60405180910390f35b61025660048036038101906102519190612297565b610760565b005b610272600480360381019061026d919061231f565b61080c565b005b61028e600480360381019061028991906123c9565b6108ac565b005b6102aa60048036038101906102a59190611c42565b6108c2565b6040516102b79190611b76565b60405180910390f35b6102da60048036038101906102d59190612407565b6108dc565b6040516102e79190611c29565b60405180910390f35b61030a60048036038101906103059190612445565b61096a565b005b610326600480360381019061032191906124d8565b610a11565b005b5f805f8381526020019081526020015f205f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b5f7fd9b67a26000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061044757507f0e89341c000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b80610457575061045682610abd565b5b9050919050565b60606002805461046d90612555565b80601f016020809104026020016040519081016040528092919081815260200182805461049990612555565b80156104e45780601f106104bb576101008083540402835291602001916104e4565b820191905f5260205f20905b8154815290600101906020018083116104c757829003601f168201915b50505050509050919050565b5f600454905090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610587576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161057e906125cf565b60405180910390fd5b61059384848484610b26565b50505050565b5f6105a2610ba9565b90508073ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff16141580156105e757506105e586826108dc565b155b1561062b5780866040517fe237d9220000000000000000000000000000000000000000000000000000000081526004016106229291906125fc565b60405180910390fd5b6106388686868686610bb0565b505050505050565b6060815183511461068c57815183516040517f5b059991000000000000000000000000000000000000000000000000000000008152600401610683929190612623565b60405180910390fd5b5f835167ffffffffffffffff8111156106a8576106a7611d1b565b5b6040519080825280602002602001820160405280156106d65781602001602082028036833780820191505090505b5090505f5b8451811015610742576107126106fa8287610ca490919063ffffffff16565b61070d8387610cb790919063ffffffff16565b610328565b8282815181106107255761072461264a565b5b6020026020010181815250508061073b906126a4565b90506106db565b508091505092915050565b5f80610758836108c2565b119050919050565b610768610ba9565b73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141580156107b157506107af836107aa610ba9565b6108dc565b155b156107fc576107be610ba9565b836040517fe237d9220000000000000000000000000000000000000000000000000000000081526004016107f39291906125fc565b60405180910390fd5b610807838383610cca565b505050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461089a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610891906125cf565b60405180910390fd5b6108a684848484610d5a565b50505050565b6108be6108b7610ba9565b8383610def565b5050565b5f60035f8381526020019081526020015f20549050919050565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16905092915050565b5f610973610ba9565b90508073ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff16141580156109b857506109b686826108dc565b155b156109fc5780866040517fe237d9220000000000000000000000000000000000000000000000000000000081526004016109f39291906125fc565b60405180910390fd5b610a098686868686610f58565b505050505050565b610a19610ba9565b73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614158015610a625750610a6083610a5b610ba9565b6108dc565b155b15610aad57610a6f610ba9565b836040517fe237d922000000000000000000000000000000000000000000000000000000008152600401610aa49291906125fc565b60405180910390fd5b610ab883838361105e565b505050565b5f7f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610b96575f6040517f57f447ce000000000000000000000000000000000000000000000000000000008152600401610b8d91906126eb565b60405180910390fd5b610ba35f85858585611100565b50505050565b5f33905090565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610c20575f6040517f57f447ce000000000000000000000000000000000000000000000000000000008152600401610c1791906126eb565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1603610c90575f6040517f01a83514000000000000000000000000000000000000000000000000000000008152600401610c8791906126eb565b60405180910390fd5b610c9d8585858585611100565b5050505050565b5f60208202602084010151905092915050565b5f60208202602084010151905092915050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610d3a575f6040517f01a83514000000000000000000000000000000000000000000000000000000008152600401610d3191906126eb565b60405180910390fd5b610d55835f848460405180602001604052805f815250611100565b505050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610dca575f6040517f57f447ce000000000000000000000000000000000000000000000000000000008152600401610dc191906126eb565b60405180910390fd5b5f80610dd685856111ac565b91509150610de75f87848487611100565b505050505050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610e5f575f6040517fced3e100000000000000000000000000000000000000000000000000000000008152600401610e5691906126eb565b60405180910390fd5b8060015f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051610f4b9190611c29565b60405180910390a3505050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610fc8575f6040517f57f447ce000000000000000000000000000000000000000000000000000000008152600401610fbf91906126eb565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1603611038575f6040517f01a8351400000000000000000000000000000000000000000000000000000000815260040161102f91906126eb565b60405180910390fd5b5f8061104485856111ac565b915091506110558787848487611100565b50505050505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036110ce575f6040517f01a835140000000000000000000000000000000000000000000000000000000081526004016110c591906126eb565b60405180910390fd5b5f806110da84846111ac565b915091506110f9855f848460405180602001604052805f815250611100565b5050505050565b61110c858585856111dc565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16146111a5575f611148610ba9565b90506001845103611194575f6111675f86610cb790919063ffffffff16565b90505f61117d5f86610cb790919063ffffffff16565b905061118d8389898585896111ee565b50506111a3565b6111a281878787878761139d565b5b505b5050505050565b60608060405191506001825283602083015260408201905060018152826020820152604081016040529250929050565b6111e88484848461154c565b50505050565b5f8473ffffffffffffffffffffffffffffffffffffffff163b1115611395578373ffffffffffffffffffffffffffffffffffffffff1663f23a6e6187878686866040518663ffffffff1660e01b815260040161124e959493929190612756565b6020604051808303815f875af192505050801561128957506040513d601f19601f8201168201806040525081019061128691906127c2565b60015b61130a573d805f81146112b7576040519150601f19603f3d011682016040523d82523d5f602084013e6112bc565b606091505b505f81510361130257846040517f57f447ce0000000000000000000000000000000000000000000000000000000081526004016112f991906126eb565b60405180910390fd5b805181602001fd5b63f23a6e6160e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161461139357846040517f57f447ce00000000000000000000000000000000000000000000000000000000815260040161138a91906126eb565b60405180910390fd5b505b505050505050565b5f8473ffffffffffffffffffffffffffffffffffffffff163b1115611544578373ffffffffffffffffffffffffffffffffffffffff1663bc197c8187878686866040518663ffffffff1660e01b81526004016113fd9594939291906127ed565b6020604051808303815f875af192505050801561143857506040513d601f19601f8201168201806040525081019061143591906127c2565b60015b6114b9573d805f8114611466576040519150601f19603f3d011682016040523d82523d5f602084013e61146b565b606091505b505f8151036114b157846040517f57f447ce0000000000000000000000000000000000000000000000000000000081526004016114a891906126eb565b60405180910390fd5b805181602001fd5b63bc197c8160e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161461154257846040517f57f447ce00000000000000000000000000000000000000000000000000000000815260040161153991906126eb565b60405180910390fd5b505b505050505050565b611558848484846116f5565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603611631575f805b8351811015611616575f8382815181106115ab576115aa61264a565b5b602002602001015190508060035f8785815181106115cc576115cb61264a565b5b602002602001015181526020019081526020015f205f8282546115ef9190612853565b9250508190555080836116029190612853565b9250508061160f906126a4565b905061158e565b508060045f8282546116289190612853565b92505081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036116ef575f805b83518110156116dd575f8382815181106116845761168361264a565b5b602002602001015190508060035f8785815181106116a5576116a461264a565b5b602002602001015181526020019081526020015f205f8282540392505081905550808301925050806116d6906126a4565b9050611667565b508060045f8282540392505081905550505b50505050565b805182511461173f57815181516040517f5b059991000000000000000000000000000000000000000000000000000000008152600401611736929190612623565b60405180910390fd5b5f611748610ba9565b90505f5b835181101561194a575f6117698286610cb790919063ffffffff16565b90505f61177f8386610cb790919063ffffffff16565b90505f73ffffffffffffffffffffffffffffffffffffffff168873ffffffffffffffffffffffffffffffffffffffff16146118a2575f805f8481526020019081526020015f205f8a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205490508181101561184e57888183856040517f03dee4c50000000000000000000000000000000000000000000000000000000081526004016118459493929190612886565b60405180910390fd5b8181035f808581526020019081526020015f205f8b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff161461193757805f808481526020019081526020015f205f8973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825461192f9190612853565b925050819055505b505080611943906126a4565b905061174c565b506001835103611a05575f6119685f85610cb790919063ffffffff16565b90505f61197e5f85610cb790919063ffffffff16565b90508573ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f6285856040516119f6929190612623565b60405180910390a45050611a84565b8373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8686604051611a7b9291906128c9565b60405180910390a45b5050505050565b5f604051905090565b5f80fd5b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f611ac582611a9c565b9050919050565b611ad581611abb565b8114611adf575f80fd5b50565b5f81359050611af081611acc565b92915050565b5f819050919050565b611b0881611af6565b8114611b12575f80fd5b50565b5f81359050611b2381611aff565b92915050565b5f8060408385031215611b3f57611b3e611a94565b5b5f611b4c85828601611ae2565b9250506020611b5d85828601611b15565b9150509250929050565b611b7081611af6565b82525050565b5f602082019050611b895f830184611b67565b92915050565b5f7fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b611bc381611b8f565b8114611bcd575f80fd5b50565b5f81359050611bde81611bba565b92915050565b5f60208284031215611bf957611bf8611a94565b5b5f611c0684828501611bd0565b91505092915050565b5f8115159050919050565b611c2381611c0f565b82525050565b5f602082019050611c3c5f830184611c1a565b92915050565b5f60208284031215611c5757611c56611a94565b5b5f611c6484828501611b15565b91505092915050565b5f81519050919050565b5f82825260208201905092915050565b5f5b83811015611ca4578082015181840152602081019050611c89565b5f8484015250505050565b5f601f19601f8301169050919050565b5f611cc982611c6d565b611cd38185611c77565b9350611ce3818560208601611c87565b611cec81611caf565b840191505092915050565b5f6020820190508181035f830152611d0f8184611cbf565b905092915050565b5f80fd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b611d5182611caf565b810181811067ffffffffffffffff82111715611d7057611d6f611d1b565b5b80604052505050565b5f611d82611a8b565b9050611d8e8282611d48565b919050565b5f67ffffffffffffffff821115611dad57611dac611d1b565b5b602082029050602081019050919050565b5f80fd5b5f611dd4611dcf84611d93565b611d79565b90508083825260208201905060208402830185811115611df757611df6611dbe565b5b835b81811015611e205780611e0c8882611b15565b845260208401935050602081019050611df9565b5050509392505050565b5f82601f830112611e3e57611e3d611d17565b5b8135611e4e848260208601611dc2565b91505092915050565b5f80fd5b5f67ffffffffffffffff821115611e7557611e74611d1b565b5b611e7e82611caf565b9050602081019050919050565b828183375f83830152505050565b5f611eab611ea684611e5b565b611d79565b905082815260208101848484011115611ec757611ec6611e57565b5b611ed2848285611e8b565b509392505050565b5f82601f830112611eee57611eed611d17565b5b8135611efe848260208601611e99565b91505092915050565b5f805f8060808587031215611f1f57611f1e611a94565b5b5f611f2c87828801611ae2565b945050602085013567ffffffffffffffff811115611f4d57611f4c611a98565b5b611f5987828801611e2a565b935050604085013567ffffffffffffffff811115611f7a57611f79611a98565b5b611f8687828801611e2a565b925050606085013567ffffffffffffffff811115611fa757611fa6611a98565b5b611fb387828801611eda565b91505092959194509250565b5f805f805f60a08688031215611fd857611fd7611a94565b5b5f611fe588828901611ae2565b9550506020611ff688828901611ae2565b945050604086013567ffffffffffffffff81111561201757612016611a98565b5b61202388828901611e2a565b935050606086013567ffffffffffffffff81111561204457612043611a98565b5b61205088828901611e2a565b925050608086013567ffffffffffffffff81111561207157612070611a98565b5b61207d88828901611eda565b9150509295509295909350565b5f67ffffffffffffffff8211156120a4576120a3611d1b565b5b602082029050602081019050919050565b5f6120c76120c28461208a565b611d79565b905080838252602082019050602084028301858111156120ea576120e9611dbe565b5b835b8181101561211357806120ff8882611ae2565b8452602084019350506020810190506120ec565b5050509392505050565b5f82601f83011261213157612130611d17565b5b81356121418482602086016120b5565b91505092915050565b5f80604083850312156121605761215f611a94565b5b5f83013567ffffffffffffffff81111561217d5761217c611a98565b5b6121898582860161211d565b925050602083013567ffffffffffffffff8111156121aa576121a9611a98565b5b6121b685828601611e2a565b9150509250929050565b5f81519050919050565b5f82825260208201905092915050565b5f819050602082019050919050565b6121f281611af6565b82525050565b5f61220383836121e9565b60208301905092915050565b5f602082019050919050565b5f612225826121c0565b61222f81856121ca565b935061223a836121da565b805f5b8381101561226a57815161225188826121f8565b975061225c8361220f565b92505060018101905061223d565b5085935050505092915050565b5f6020820190508181035f83015261228f818461221b565b905092915050565b5f805f606084860312156122ae576122ad611a94565b5b5f6122bb86828701611ae2565b935050602084013567ffffffffffffffff8111156122dc576122db611a98565b5b6122e886828701611e2a565b925050604084013567ffffffffffffffff81111561230957612308611a98565b5b61231586828701611e2a565b9150509250925092565b5f805f806080858703121561233757612336611a94565b5b5f61234487828801611ae2565b945050602061235587828801611b15565b935050604061236687828801611b15565b925050606085013567ffffffffffffffff81111561238757612386611a98565b5b61239387828801611eda565b91505092959194509250565b6123a881611c0f565b81146123b2575f80fd5b50565b5f813590506123c38161239f565b92915050565b5f80604083850312156123df576123de611a94565b5b5f6123ec85828601611ae2565b92505060206123fd858286016123b5565b9150509250929050565b5f806040838503121561241d5761241c611a94565b5b5f61242a85828601611ae2565b925050602061243b85828601611ae2565b9150509250929050565b5f805f805f60a0868803121561245e5761245d611a94565b5b5f61246b88828901611ae2565b955050602061247c88828901611ae2565b945050604061248d88828901611b15565b935050606061249e88828901611b15565b925050608086013567ffffffffffffffff8111156124bf576124be611a98565b5b6124cb88828901611eda565b9150509295509295909350565b5f805f606084860312156124ef576124ee611a94565b5b5f6124fc86828701611ae2565b935050602061250d86828701611b15565b925050604061251e86828701611b15565b9150509250925092565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061256c57607f821691505b60208210810361257f5761257e612528565b5b50919050565b7f4f6e6c792067616d6520636f6e74726163742063616e2063616c6c2e000000005f82015250565b5f6125b9601c83611c77565b91506125c482612585565b602082019050919050565b5f6020820190508181035f8301526125e6816125ad565b9050919050565b6125f681611abb565b82525050565b5f60408201905061260f5f8301856125ed565b61261c60208301846125ed565b9392505050565b5f6040820190506126365f830185611b67565b6126436020830184611b67565b9392505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6126ae82611af6565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036126e0576126df612677565b5b600182019050919050565b5f6020820190506126fe5f8301846125ed565b92915050565b5f81519050919050565b5f82825260208201905092915050565b5f61272882612704565b612732818561270e565b9350612742818560208601611c87565b61274b81611caf565b840191505092915050565b5f60a0820190506127695f8301886125ed565b61277660208301876125ed565b6127836040830186611b67565b6127906060830185611b67565b81810360808301526127a2818461271e565b90509695505050505050565b5f815190506127bc81611bba565b92915050565b5f602082840312156127d7576127d6611a94565b5b5f6127e4848285016127ae565b91505092915050565b5f60a0820190506128005f8301886125ed565b61280d60208301876125ed565b818103604083015261281f818661221b565b90508181036060830152612833818561221b565b90508181036080830152612847818461271e565b90509695505050505050565b5f61285d82611af6565b915061286883611af6565b92508282019050808211156128805761287f612677565b5b92915050565b5f6080820190506128995f8301876125ed565b6128a66020830186611b67565b6128b36040830185611b67565b6128c06060830184611b67565b95945050505050565b5f6040820190508181035f8301526128e1818561221b565b905081810360208301526128f5818461221b565b9050939250505056fea26469706673582212208758f283f5b2a1538ffdd8d6bd6203a646ee510cc9cd8e4aa7ba217de96a48b764736f6c63430008140033",
							"opcodes": "PUSH1 0xA0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x10 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x2DFF CODESIZE SUB DUP1 PUSH3 0x2DFF DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x36 SWAP2 SWAP1 PUSH3 0x133 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x68747470733A2F2F736F6D2E657465726E697461732E67616D65732F6A736F6E DUP2 MSTORE POP PUSH3 0x7D DUP2 PUSH3 0xB9 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x80 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP POP PUSH3 0x4AB JUMP JUMPDEST DUP1 PUSH1 0x2 SWAP1 DUP2 PUSH3 0xCA SWAP2 SWAP1 PUSH3 0x3C7 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0xFD DUP3 PUSH3 0xD2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x10F DUP2 PUSH3 0xF1 JUMP JUMPDEST DUP2 EQ PUSH3 0x11A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH3 0x12D DUP2 PUSH3 0x104 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x14B JUMPI PUSH3 0x14A PUSH3 0xCE JUMP JUMPDEST JUMPDEST PUSH0 PUSH3 0x15A DUP5 DUP3 DUP6 ADD PUSH3 0x11D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x1DF JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x1F5 JUMPI PUSH3 0x1F4 PUSH3 0x19A JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH3 0x259 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH3 0x21C JUMP JUMPDEST PUSH3 0x265 DUP7 DUP4 PUSH3 0x21C JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0x2AF PUSH3 0x2A9 PUSH3 0x2A3 DUP5 PUSH3 0x27D JUMP JUMPDEST PUSH3 0x286 JUMP JUMPDEST PUSH3 0x27D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x2CA DUP4 PUSH3 0x28F JUMP JUMPDEST PUSH3 0x2E2 PUSH3 0x2D9 DUP3 PUSH3 0x2B6 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH3 0x228 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH3 0x2F8 PUSH3 0x2EA JUMP JUMPDEST PUSH3 0x305 DUP2 DUP5 DUP5 PUSH3 0x2BF JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x32C JUMPI PUSH3 0x320 PUSH0 DUP3 PUSH3 0x2EE JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0x30B JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x37B JUMPI PUSH3 0x345 DUP2 PUSH3 0x1FB JUMP JUMPDEST PUSH3 0x350 DUP5 PUSH3 0x20D JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0x360 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH3 0x378 PUSH3 0x36F DUP6 PUSH3 0x20D JUMP JUMPDEST DUP4 ADD DUP3 PUSH3 0x30A JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH3 0x39D PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH3 0x380 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH3 0x3B7 DUP4 DUP4 PUSH3 0x38C JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x3D2 DUP3 PUSH3 0x163 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x3EE JUMPI PUSH3 0x3ED PUSH3 0x16D JUMP JUMPDEST JUMPDEST PUSH3 0x3FA DUP3 SLOAD PUSH3 0x1C7 JUMP JUMPDEST PUSH3 0x407 DUP3 DUP3 DUP6 PUSH3 0x330 JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x43D JUMPI PUSH0 DUP5 ISZERO PUSH3 0x428 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH3 0x434 DUP6 DUP3 PUSH3 0x3AA JUMP JUMPDEST DUP7 SSTORE POP PUSH3 0x4A3 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH3 0x44D DUP7 PUSH3 0x1FB JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x476 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x44F JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH3 0x496 JUMPI DUP5 DUP10 ADD MLOAD PUSH3 0x492 PUSH1 0x1F DUP10 AND DUP3 PUSH3 0x38C JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH2 0x2934 PUSH3 0x4CB PUSH0 CODECOPY PUSH0 DUP2 DUP2 PUSH2 0x4FB ADD MSTORE PUSH2 0x80E ADD MSTORE PUSH2 0x2934 PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xF2 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4F558E79 GT PUSH2 0x95 JUMPI DUP1 PUSH4 0xBD85B039 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xBD85B039 EQ PUSH2 0x290 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x2C0 JUMPI DUP1 PUSH4 0xF242432A EQ PUSH2 0x2F0 JUMPI DUP1 PUSH4 0xF5298ACA EQ PUSH2 0x30C JUMPI PUSH2 0xF2 JUMP JUMPDEST DUP1 PUSH4 0x4F558E79 EQ PUSH2 0x20C JUMPI DUP1 PUSH4 0x6B20C454 EQ PUSH2 0x23C JUMPI DUP1 PUSH4 0x731133E9 EQ PUSH2 0x258 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x274 JUMPI PUSH2 0xF2 JUMP JUMPDEST DUP1 PUSH4 0x18160DDD GT PUSH2 0xD1 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x186 JUMPI DUP1 PUSH4 0x1F7FDFFA EQ PUSH2 0x1A4 JUMPI DUP1 PUSH4 0x2EB2C2D6 EQ PUSH2 0x1C0 JUMPI DUP1 PUSH4 0x4E1273F4 EQ PUSH2 0x1DC JUMPI PUSH2 0xF2 JUMP JUMPDEST DUP1 PUSH3 0xFDD58E EQ PUSH2 0xF6 JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x126 JUMPI DUP1 PUSH4 0xE89341C EQ PUSH2 0x156 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x110 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x10B SWAP2 SWAP1 PUSH2 0x1B29 JUMP JUMPDEST PUSH2 0x328 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x11D SWAP2 SWAP1 PUSH2 0x1B76 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x140 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x13B SWAP2 SWAP1 PUSH2 0x1BE4 JUMP JUMPDEST PUSH2 0x37D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14D SWAP2 SWAP1 PUSH2 0x1C29 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x170 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x16B SWAP2 SWAP1 PUSH2 0x1C42 JUMP JUMPDEST PUSH2 0x45E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x17D SWAP2 SWAP1 PUSH2 0x1CF7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x18E PUSH2 0x4F0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x19B SWAP2 SWAP1 PUSH2 0x1B76 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1BE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B9 SWAP2 SWAP1 PUSH2 0x1F07 JUMP JUMPDEST PUSH2 0x4F9 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1DA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1D5 SWAP2 SWAP1 PUSH2 0x1FBF JUMP JUMPDEST PUSH2 0x599 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1F6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1F1 SWAP2 SWAP1 PUSH2 0x214A JUMP JUMPDEST PUSH2 0x640 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x203 SWAP2 SWAP1 PUSH2 0x2277 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x226 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x221 SWAP2 SWAP1 PUSH2 0x1C42 JUMP JUMPDEST PUSH2 0x74D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x233 SWAP2 SWAP1 PUSH2 0x1C29 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x256 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x251 SWAP2 SWAP1 PUSH2 0x2297 JUMP JUMPDEST PUSH2 0x760 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x272 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x26D SWAP2 SWAP1 PUSH2 0x231F JUMP JUMPDEST PUSH2 0x80C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x28E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x289 SWAP2 SWAP1 PUSH2 0x23C9 JUMP JUMPDEST PUSH2 0x8AC JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2AA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A5 SWAP2 SWAP1 PUSH2 0x1C42 JUMP JUMPDEST PUSH2 0x8C2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B7 SWAP2 SWAP1 PUSH2 0x1B76 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2DA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2D5 SWAP2 SWAP1 PUSH2 0x2407 JUMP JUMPDEST PUSH2 0x8DC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2E7 SWAP2 SWAP1 PUSH2 0x1C29 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x30A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x305 SWAP2 SWAP1 PUSH2 0x2445 JUMP JUMPDEST PUSH2 0x96A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x326 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x321 SWAP2 SWAP1 PUSH2 0x24D8 JUMP JUMPDEST PUSH2 0xA11 JUMP JUMPDEST STOP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH32 0xD9B67A2600000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x447 JUMPI POP PUSH32 0xE89341C00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x457 JUMPI POP PUSH2 0x456 DUP3 PUSH2 0xABD JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0x46D SWAP1 PUSH2 0x2555 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x499 SWAP1 PUSH2 0x2555 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4E4 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x4BB JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4E4 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x4C7 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x4 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x587 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x57E SWAP1 PUSH2 0x25CF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x593 DUP5 DUP5 DUP5 DUP5 PUSH2 0xB26 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x5A2 PUSH2 0xBA9 JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x5E7 JUMPI POP PUSH2 0x5E5 DUP7 DUP3 PUSH2 0x8DC JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x62B JUMPI DUP1 DUP7 PUSH1 0x40 MLOAD PUSH32 0xE237D92200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x622 SWAP3 SWAP2 SWAP1 PUSH2 0x25FC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x638 DUP7 DUP7 DUP7 DUP7 DUP7 PUSH2 0xBB0 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x68C JUMPI DUP2 MLOAD DUP4 MLOAD PUSH1 0x40 MLOAD PUSH32 0x5B05999100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x683 SWAP3 SWAP2 SWAP1 PUSH2 0x2623 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP4 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x6A8 JUMPI PUSH2 0x6A7 PUSH2 0x1D1B JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x6D6 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x742 JUMPI PUSH2 0x712 PUSH2 0x6FA DUP3 DUP8 PUSH2 0xCA4 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x70D DUP4 DUP8 PUSH2 0xCB7 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x328 JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x725 JUMPI PUSH2 0x724 PUSH2 0x264A JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP1 PUSH2 0x73B SWAP1 PUSH2 0x26A4 JUMP JUMPDEST SWAP1 POP PUSH2 0x6DB JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x758 DUP4 PUSH2 0x8C2 JUMP JUMPDEST GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x768 PUSH2 0xBA9 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x7B1 JUMPI POP PUSH2 0x7AF DUP4 PUSH2 0x7AA PUSH2 0xBA9 JUMP JUMPDEST PUSH2 0x8DC JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x7FC JUMPI PUSH2 0x7BE PUSH2 0xBA9 JUMP JUMPDEST DUP4 PUSH1 0x40 MLOAD PUSH32 0xE237D92200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7F3 SWAP3 SWAP2 SWAP1 PUSH2 0x25FC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x807 DUP4 DUP4 DUP4 PUSH2 0xCCA JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x89A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x891 SWAP1 PUSH2 0x25CF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x8A6 DUP5 DUP5 DUP5 DUP5 PUSH2 0xD5A JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x8BE PUSH2 0x8B7 PUSH2 0xBA9 JUMP JUMPDEST DUP4 DUP4 PUSH2 0xDEF JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0x3 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x973 PUSH2 0xBA9 JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x9B8 JUMPI POP PUSH2 0x9B6 DUP7 DUP3 PUSH2 0x8DC JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x9FC JUMPI DUP1 DUP7 PUSH1 0x40 MLOAD PUSH32 0xE237D92200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9F3 SWAP3 SWAP2 SWAP1 PUSH2 0x25FC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA09 DUP7 DUP7 DUP7 DUP7 DUP7 PUSH2 0xF58 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xA19 PUSH2 0xBA9 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0xA62 JUMPI POP PUSH2 0xA60 DUP4 PUSH2 0xA5B PUSH2 0xBA9 JUMP JUMPDEST PUSH2 0x8DC JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0xAAD JUMPI PUSH2 0xA6F PUSH2 0xBA9 JUMP JUMPDEST DUP4 PUSH1 0x40 MLOAD PUSH32 0xE237D92200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAA4 SWAP3 SWAP2 SWAP1 PUSH2 0x25FC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xAB8 DUP4 DUP4 DUP4 PUSH2 0x105E JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB96 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB8D SWAP2 SWAP1 PUSH2 0x26EB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xBA3 PUSH0 DUP6 DUP6 DUP6 DUP6 PUSH2 0x1100 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xC20 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC17 SWAP2 SWAP1 PUSH2 0x26EB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xC90 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1A8351400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC87 SWAP2 SWAP1 PUSH2 0x26EB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xC9D DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0x1100 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 MUL PUSH1 0x20 DUP5 ADD ADD MLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 MUL PUSH1 0x20 DUP5 ADD ADD MLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xD3A JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1A8351400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD31 SWAP2 SWAP1 PUSH2 0x26EB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xD55 DUP4 PUSH0 DUP5 DUP5 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0x1100 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xDCA JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDC1 SWAP2 SWAP1 PUSH2 0x26EB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 PUSH2 0xDD6 DUP6 DUP6 PUSH2 0x11AC JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0xDE7 PUSH0 DUP8 DUP5 DUP5 DUP8 PUSH2 0x1100 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xE5F JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xCED3E10000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE56 SWAP2 SWAP1 PUSH2 0x26EB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0xF4B SWAP2 SWAP1 PUSH2 0x1C29 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xFC8 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFBF SWAP2 SWAP1 PUSH2 0x26EB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1038 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1A8351400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x102F SWAP2 SWAP1 PUSH2 0x26EB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 PUSH2 0x1044 DUP6 DUP6 PUSH2 0x11AC JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0x1055 DUP8 DUP8 DUP5 DUP5 DUP8 PUSH2 0x1100 JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x10CE JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1A8351400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10C5 SWAP2 SWAP1 PUSH2 0x26EB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 PUSH2 0x10DA DUP5 DUP5 PUSH2 0x11AC JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0x10F9 DUP6 PUSH0 DUP5 DUP5 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0x1100 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH2 0x110C DUP6 DUP6 DUP6 DUP6 PUSH2 0x11DC JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x11A5 JUMPI PUSH0 PUSH2 0x1148 PUSH2 0xBA9 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 DUP5 MLOAD SUB PUSH2 0x1194 JUMPI PUSH0 PUSH2 0x1167 PUSH0 DUP7 PUSH2 0xCB7 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x117D PUSH0 DUP7 PUSH2 0xCB7 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x118D DUP4 DUP10 DUP10 DUP6 DUP6 DUP10 PUSH2 0x11EE JUMP JUMPDEST POP POP PUSH2 0x11A3 JUMP JUMPDEST PUSH2 0x11A2 DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0x139D JUMP JUMPDEST JUMPDEST POP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP1 PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1 DUP3 MSTORE DUP4 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH1 0x1 DUP2 MSTORE DUP3 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD PUSH1 0x40 MSTORE SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x11E8 DUP5 DUP5 DUP5 DUP5 PUSH2 0x154C JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT ISZERO PUSH2 0x1395 JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xF23A6E61 DUP8 DUP8 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x124E SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2756 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1289 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1286 SWAP2 SWAP1 PUSH2 0x27C2 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x130A JUMPI RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x12B7 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x12BC JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH0 DUP2 MLOAD SUB PUSH2 0x1302 JUMPI DUP5 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12F9 SWAP2 SWAP1 PUSH2 0x26EB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0xF23A6E61 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x1393 JUMPI DUP5 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x138A SWAP2 SWAP1 PUSH2 0x26EB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT ISZERO PUSH2 0x1544 JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xBC197C81 DUP8 DUP8 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13FD SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x27ED JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1438 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1435 SWAP2 SWAP1 PUSH2 0x27C2 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x14B9 JUMPI RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x1466 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x146B JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH0 DUP2 MLOAD SUB PUSH2 0x14B1 JUMPI DUP5 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14A8 SWAP2 SWAP1 PUSH2 0x26EB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0xBC197C81 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x1542 JUMPI DUP5 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1539 SWAP2 SWAP1 PUSH2 0x26EB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1558 DUP5 DUP5 DUP5 DUP5 PUSH2 0x16F5 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1631 JUMPI PUSH0 DUP1 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x1616 JUMPI PUSH0 DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x15AB JUMPI PUSH2 0x15AA PUSH2 0x264A JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP DUP1 PUSH1 0x3 PUSH0 DUP8 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x15CC JUMPI PUSH2 0x15CB PUSH2 0x264A JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x15EF SWAP2 SWAP1 PUSH2 0x2853 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 DUP4 PUSH2 0x1602 SWAP2 SWAP1 PUSH2 0x2853 JUMP JUMPDEST SWAP3 POP POP DUP1 PUSH2 0x160F SWAP1 PUSH2 0x26A4 JUMP JUMPDEST SWAP1 POP PUSH2 0x158E JUMP JUMPDEST POP DUP1 PUSH1 0x4 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1628 SWAP2 SWAP1 PUSH2 0x2853 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x16EF JUMPI PUSH0 DUP1 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x16DD JUMPI PUSH0 DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1684 JUMPI PUSH2 0x1683 PUSH2 0x264A JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP DUP1 PUSH1 0x3 PUSH0 DUP8 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x16A5 JUMPI PUSH2 0x16A4 PUSH2 0x264A JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 DUP4 ADD SWAP3 POP POP DUP1 PUSH2 0x16D6 SWAP1 PUSH2 0x26A4 JUMP JUMPDEST SWAP1 POP PUSH2 0x1667 JUMP JUMPDEST POP DUP1 PUSH1 0x4 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP JUMPDEST POP POP POP POP JUMP JUMPDEST DUP1 MLOAD DUP3 MLOAD EQ PUSH2 0x173F JUMPI DUP2 MLOAD DUP2 MLOAD PUSH1 0x40 MLOAD PUSH32 0x5B05999100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1736 SWAP3 SWAP2 SWAP1 PUSH2 0x2623 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x1748 PUSH2 0xBA9 JUMP JUMPDEST SWAP1 POP PUSH0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x194A JUMPI PUSH0 PUSH2 0x1769 DUP3 DUP7 PUSH2 0xCB7 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x177F DUP4 DUP7 PUSH2 0xCB7 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x18A2 JUMPI PUSH0 DUP1 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x184E JUMPI DUP9 DUP2 DUP4 DUP6 PUSH1 0x40 MLOAD PUSH32 0x3DEE4C500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1845 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2886 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1937 JUMPI DUP1 PUSH0 DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x192F SWAP2 SWAP1 PUSH2 0x2853 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST POP POP DUP1 PUSH2 0x1943 SWAP1 PUSH2 0x26A4 JUMP JUMPDEST SWAP1 POP PUSH2 0x174C JUMP JUMPDEST POP PUSH1 0x1 DUP4 MLOAD SUB PUSH2 0x1A05 JUMPI PUSH0 PUSH2 0x1968 PUSH0 DUP6 PUSH2 0xCB7 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x197E PUSH0 DUP6 PUSH2 0xCB7 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH2 0x19F6 SWAP3 SWAP2 SWAP1 PUSH2 0x2623 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP PUSH2 0x1A84 JUMP JUMPDEST DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB DUP7 DUP7 PUSH1 0x40 MLOAD PUSH2 0x1A7B SWAP3 SWAP2 SWAP1 PUSH2 0x28C9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1AC5 DUP3 PUSH2 0x1A9C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1AD5 DUP2 PUSH2 0x1ABB JUMP JUMPDEST DUP2 EQ PUSH2 0x1ADF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1AF0 DUP2 PUSH2 0x1ACC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1B08 DUP2 PUSH2 0x1AF6 JUMP JUMPDEST DUP2 EQ PUSH2 0x1B12 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1B23 DUP2 PUSH2 0x1AFF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1B3F JUMPI PUSH2 0x1B3E PUSH2 0x1A94 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1B4C DUP6 DUP3 DUP7 ADD PUSH2 0x1AE2 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1B5D DUP6 DUP3 DUP7 ADD PUSH2 0x1B15 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x1B70 DUP2 PUSH2 0x1AF6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1B89 PUSH0 DUP4 ADD DUP5 PUSH2 0x1B67 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1BC3 DUP2 PUSH2 0x1B8F JUMP JUMPDEST DUP2 EQ PUSH2 0x1BCD JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1BDE DUP2 PUSH2 0x1BBA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1BF9 JUMPI PUSH2 0x1BF8 PUSH2 0x1A94 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1C06 DUP5 DUP3 DUP6 ADD PUSH2 0x1BD0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1C23 DUP2 PUSH2 0x1C0F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1C3C PUSH0 DUP4 ADD DUP5 PUSH2 0x1C1A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1C57 JUMPI PUSH2 0x1C56 PUSH2 0x1A94 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1C64 DUP5 DUP3 DUP6 ADD PUSH2 0x1B15 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1CA4 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1C89 JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1CC9 DUP3 PUSH2 0x1C6D JUMP JUMPDEST PUSH2 0x1CD3 DUP2 DUP6 PUSH2 0x1C77 JUMP JUMPDEST SWAP4 POP PUSH2 0x1CE3 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1C87 JUMP JUMPDEST PUSH2 0x1CEC DUP2 PUSH2 0x1CAF JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1D0F DUP2 DUP5 PUSH2 0x1CBF JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x1D51 DUP3 PUSH2 0x1CAF JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1D70 JUMPI PUSH2 0x1D6F PUSH2 0x1D1B JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1D82 PUSH2 0x1A8B JUMP JUMPDEST SWAP1 POP PUSH2 0x1D8E DUP3 DUP3 PUSH2 0x1D48 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1DAD JUMPI PUSH2 0x1DAC PUSH2 0x1D1B JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH2 0x1DD4 PUSH2 0x1DCF DUP5 PUSH2 0x1D93 JUMP JUMPDEST PUSH2 0x1D79 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x1DF7 JUMPI PUSH2 0x1DF6 PUSH2 0x1DBE JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1E20 JUMPI DUP1 PUSH2 0x1E0C DUP9 DUP3 PUSH2 0x1B15 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1DF9 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1E3E JUMPI PUSH2 0x1E3D PUSH2 0x1D17 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1E4E DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1DC2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1E75 JUMPI PUSH2 0x1E74 PUSH2 0x1D1B JUMP JUMPDEST JUMPDEST PUSH2 0x1E7E DUP3 PUSH2 0x1CAF JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1EAB PUSH2 0x1EA6 DUP5 PUSH2 0x1E5B JUMP JUMPDEST PUSH2 0x1D79 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1EC7 JUMPI PUSH2 0x1EC6 PUSH2 0x1E57 JUMP JUMPDEST JUMPDEST PUSH2 0x1ED2 DUP5 DUP3 DUP6 PUSH2 0x1E8B JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1EEE JUMPI PUSH2 0x1EED PUSH2 0x1D17 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1EFE DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1E99 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1F1F JUMPI PUSH2 0x1F1E PUSH2 0x1A94 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1F2C DUP8 DUP3 DUP9 ADD PUSH2 0x1AE2 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1F4D JUMPI PUSH2 0x1F4C PUSH2 0x1A98 JUMP JUMPDEST JUMPDEST PUSH2 0x1F59 DUP8 DUP3 DUP9 ADD PUSH2 0x1E2A JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1F7A JUMPI PUSH2 0x1F79 PUSH2 0x1A98 JUMP JUMPDEST JUMPDEST PUSH2 0x1F86 DUP8 DUP3 DUP9 ADD PUSH2 0x1E2A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1FA7 JUMPI PUSH2 0x1FA6 PUSH2 0x1A98 JUMP JUMPDEST JUMPDEST PUSH2 0x1FB3 DUP8 DUP3 DUP9 ADD PUSH2 0x1EDA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1FD8 JUMPI PUSH2 0x1FD7 PUSH2 0x1A94 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1FE5 DUP9 DUP3 DUP10 ADD PUSH2 0x1AE2 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x1FF6 DUP9 DUP3 DUP10 ADD PUSH2 0x1AE2 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2017 JUMPI PUSH2 0x2016 PUSH2 0x1A98 JUMP JUMPDEST JUMPDEST PUSH2 0x2023 DUP9 DUP3 DUP10 ADD PUSH2 0x1E2A JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2044 JUMPI PUSH2 0x2043 PUSH2 0x1A98 JUMP JUMPDEST JUMPDEST PUSH2 0x2050 DUP9 DUP3 DUP10 ADD PUSH2 0x1E2A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2071 JUMPI PUSH2 0x2070 PUSH2 0x1A98 JUMP JUMPDEST JUMPDEST PUSH2 0x207D DUP9 DUP3 DUP10 ADD PUSH2 0x1EDA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x20A4 JUMPI PUSH2 0x20A3 PUSH2 0x1D1B JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x20C7 PUSH2 0x20C2 DUP5 PUSH2 0x208A JUMP JUMPDEST PUSH2 0x1D79 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x20EA JUMPI PUSH2 0x20E9 PUSH2 0x1DBE JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2113 JUMPI DUP1 PUSH2 0x20FF DUP9 DUP3 PUSH2 0x1AE2 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x20EC JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2131 JUMPI PUSH2 0x2130 PUSH2 0x1D17 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2141 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x20B5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2160 JUMPI PUSH2 0x215F PUSH2 0x1A94 JUMP JUMPDEST JUMPDEST PUSH0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x217D JUMPI PUSH2 0x217C PUSH2 0x1A98 JUMP JUMPDEST JUMPDEST PUSH2 0x2189 DUP6 DUP3 DUP7 ADD PUSH2 0x211D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x21AA JUMPI PUSH2 0x21A9 PUSH2 0x1A98 JUMP JUMPDEST JUMPDEST PUSH2 0x21B6 DUP6 DUP3 DUP7 ADD PUSH2 0x1E2A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x21F2 DUP2 PUSH2 0x1AF6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2203 DUP4 DUP4 PUSH2 0x21E9 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2225 DUP3 PUSH2 0x21C0 JUMP JUMPDEST PUSH2 0x222F DUP2 DUP6 PUSH2 0x21CA JUMP JUMPDEST SWAP4 POP PUSH2 0x223A DUP4 PUSH2 0x21DA JUMP JUMPDEST DUP1 PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x226A JUMPI DUP2 MLOAD PUSH2 0x2251 DUP9 DUP3 PUSH2 0x21F8 JUMP JUMPDEST SWAP8 POP PUSH2 0x225C DUP4 PUSH2 0x220F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x223D JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x228F DUP2 DUP5 PUSH2 0x221B JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x22AE JUMPI PUSH2 0x22AD PUSH2 0x1A94 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x22BB DUP7 DUP3 DUP8 ADD PUSH2 0x1AE2 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x22DC JUMPI PUSH2 0x22DB PUSH2 0x1A98 JUMP JUMPDEST JUMPDEST PUSH2 0x22E8 DUP7 DUP3 DUP8 ADD PUSH2 0x1E2A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2309 JUMPI PUSH2 0x2308 PUSH2 0x1A98 JUMP JUMPDEST JUMPDEST PUSH2 0x2315 DUP7 DUP3 DUP8 ADD PUSH2 0x1E2A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x2337 JUMPI PUSH2 0x2336 PUSH2 0x1A94 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2344 DUP8 DUP3 DUP9 ADD PUSH2 0x1AE2 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x2355 DUP8 DUP3 DUP9 ADD PUSH2 0x1B15 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x2366 DUP8 DUP3 DUP9 ADD PUSH2 0x1B15 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2387 JUMPI PUSH2 0x2386 PUSH2 0x1A98 JUMP JUMPDEST JUMPDEST PUSH2 0x2393 DUP8 DUP3 DUP9 ADD PUSH2 0x1EDA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH2 0x23A8 DUP2 PUSH2 0x1C0F JUMP JUMPDEST DUP2 EQ PUSH2 0x23B2 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x23C3 DUP2 PUSH2 0x239F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x23DF JUMPI PUSH2 0x23DE PUSH2 0x1A94 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x23EC DUP6 DUP3 DUP7 ADD PUSH2 0x1AE2 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x23FD DUP6 DUP3 DUP7 ADD PUSH2 0x23B5 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x241D JUMPI PUSH2 0x241C PUSH2 0x1A94 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x242A DUP6 DUP3 DUP7 ADD PUSH2 0x1AE2 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x243B DUP6 DUP3 DUP7 ADD PUSH2 0x1AE2 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x245E JUMPI PUSH2 0x245D PUSH2 0x1A94 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x246B DUP9 DUP3 DUP10 ADD PUSH2 0x1AE2 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x247C DUP9 DUP3 DUP10 ADD PUSH2 0x1AE2 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x248D DUP9 DUP3 DUP10 ADD PUSH2 0x1B15 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x249E DUP9 DUP3 DUP10 ADD PUSH2 0x1B15 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x24BF JUMPI PUSH2 0x24BE PUSH2 0x1A98 JUMP JUMPDEST JUMPDEST PUSH2 0x24CB DUP9 DUP3 DUP10 ADD PUSH2 0x1EDA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x24EF JUMPI PUSH2 0x24EE PUSH2 0x1A94 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x24FC DUP7 DUP3 DUP8 ADD PUSH2 0x1AE2 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x250D DUP7 DUP3 DUP8 ADD PUSH2 0x1B15 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x251E DUP7 DUP3 DUP8 ADD PUSH2 0x1B15 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x256C JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x257F JUMPI PUSH2 0x257E PUSH2 0x2528 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F6E6C792067616D6520636F6E74726163742063616E2063616C6C2E00000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x25B9 PUSH1 0x1C DUP4 PUSH2 0x1C77 JUMP JUMPDEST SWAP2 POP PUSH2 0x25C4 DUP3 PUSH2 0x2585 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x25E6 DUP2 PUSH2 0x25AD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x25F6 DUP2 PUSH2 0x1ABB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x260F PUSH0 DUP4 ADD DUP6 PUSH2 0x25ED JUMP JUMPDEST PUSH2 0x261C PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x25ED JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2636 PUSH0 DUP4 ADD DUP6 PUSH2 0x1B67 JUMP JUMPDEST PUSH2 0x2643 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1B67 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x26AE DUP3 PUSH2 0x1AF6 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x26E0 JUMPI PUSH2 0x26DF PUSH2 0x2677 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x26FE PUSH0 DUP4 ADD DUP5 PUSH2 0x25ED JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2728 DUP3 PUSH2 0x2704 JUMP JUMPDEST PUSH2 0x2732 DUP2 DUP6 PUSH2 0x270E JUMP JUMPDEST SWAP4 POP PUSH2 0x2742 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1C87 JUMP JUMPDEST PUSH2 0x274B DUP2 PUSH2 0x1CAF JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x2769 PUSH0 DUP4 ADD DUP9 PUSH2 0x25ED JUMP JUMPDEST PUSH2 0x2776 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x25ED JUMP JUMPDEST PUSH2 0x2783 PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x1B67 JUMP JUMPDEST PUSH2 0x2790 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x1B67 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x27A2 DUP2 DUP5 PUSH2 0x271E JUMP JUMPDEST SWAP1 POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x27BC DUP2 PUSH2 0x1BBA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x27D7 JUMPI PUSH2 0x27D6 PUSH2 0x1A94 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x27E4 DUP5 DUP3 DUP6 ADD PUSH2 0x27AE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x2800 PUSH0 DUP4 ADD DUP9 PUSH2 0x25ED JUMP JUMPDEST PUSH2 0x280D PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x25ED JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x281F DUP2 DUP7 PUSH2 0x221B JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x2833 DUP2 DUP6 PUSH2 0x221B JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x2847 DUP2 DUP5 PUSH2 0x271E JUMP JUMPDEST SWAP1 POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x285D DUP3 PUSH2 0x1AF6 JUMP JUMPDEST SWAP2 POP PUSH2 0x2868 DUP4 PUSH2 0x1AF6 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x2880 JUMPI PUSH2 0x287F PUSH2 0x2677 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x2899 PUSH0 DUP4 ADD DUP8 PUSH2 0x25ED JUMP JUMPDEST PUSH2 0x28A6 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1B67 JUMP JUMPDEST PUSH2 0x28B3 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1B67 JUMP JUMPDEST PUSH2 0x28C0 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x1B67 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x28E1 DUP2 DUP6 PUSH2 0x221B JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x28F5 DUP2 DUP5 PUSH2 0x221B JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP8 PC CALLCODE DUP4 CREATE2 0xB2 LOG1 MSTORE8 DUP16 REVERT 0xD8 0xD6 0xBD PUSH3 0x3A646 0xEE MLOAD 0xC 0xC9 0xCD DUP15 0x4A 0xA7 0xBA 0x21 PUSH30 0xE96A48B764736F6C63430008140033000000000000000000000000000000 ",
							"sourceMap": "323:876:13:-:0;;;428:117;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1251:62:1;;;;;;;;;;;;;;;;;1293:13;1301:4;1293:7;;;:13;;:::i;:::-;1251:62;529:11:13::1;514:26;;;;;;;;::::0;::::1;428:117:::0;323:876;;10282:86:1;10355:6;10348:4;:13;;;;;;:::i;:::-;;10282:86;:::o;88:117:14:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:351::-;915:6;964:2;952:9;943:7;939:23;935:32;932:119;;;970:79;;:::i;:::-;932:119;1090:1;1115:64;1171:7;1162:6;1151:9;1147:22;1115:64;:::i;:::-;1105:74;;1061:128;845:351;;;;:::o;1202:99::-;1254:6;1288:5;1282:12;1272:22;;1202:99;;;:::o;1307:180::-;1355:77;1352:1;1345:88;1452:4;1449:1;1442:15;1476:4;1473:1;1466:15;1493:180;1541:77;1538:1;1531:88;1638:4;1635:1;1628:15;1662:4;1659:1;1652:15;1679:320;1723:6;1760:1;1754:4;1750:12;1740:22;;1807:1;1801:4;1797:12;1828:18;1818:81;;1884:4;1876:6;1872:17;1862:27;;1818:81;1946:2;1938:6;1935:14;1915:18;1912:38;1909:84;;1965:18;;:::i;:::-;1909:84;1730:269;1679:320;;;:::o;2005:141::-;2054:4;2077:3;2069:11;;2100:3;2097:1;2090:14;2134:4;2131:1;2121:18;2113:26;;2005:141;;;:::o;2152:93::-;2189:6;2236:2;2231;2224:5;2220:14;2216:23;2206:33;;2152:93;;;:::o;2251:107::-;2295:8;2345:5;2339:4;2335:16;2314:37;;2251:107;;;;:::o;2364:393::-;2433:6;2483:1;2471:10;2467:18;2506:97;2536:66;2525:9;2506:97;:::i;:::-;2624:39;2654:8;2643:9;2624:39;:::i;:::-;2612:51;;2696:4;2692:9;2685:5;2681:21;2672:30;;2745:4;2735:8;2731:19;2724:5;2721:30;2711:40;;2440:317;;2364:393;;;;;:::o;2763:77::-;2800:7;2829:5;2818:16;;2763:77;;;:::o;2846:60::-;2874:3;2895:5;2888:12;;2846:60;;;:::o;2912:142::-;2962:9;2995:53;3013:34;3022:24;3040:5;3022:24;:::i;:::-;3013:34;:::i;:::-;2995:53;:::i;:::-;2982:66;;2912:142;;;:::o;3060:75::-;3103:3;3124:5;3117:12;;3060:75;;;:::o;3141:269::-;3251:39;3282:7;3251:39;:::i;:::-;3312:91;3361:41;3385:16;3361:41;:::i;:::-;3353:6;3346:4;3340:11;3312:91;:::i;:::-;3306:4;3299:105;3217:193;3141:269;;;:::o;3416:73::-;3461:3;3416:73;:::o;3495:189::-;3572:32;;:::i;:::-;3613:65;3671:6;3663;3657:4;3613:65;:::i;:::-;3548:136;3495:189;;:::o;3690:186::-;3750:120;3767:3;3760:5;3757:14;3750:120;;;3821:39;3858:1;3851:5;3821:39;:::i;:::-;3794:1;3787:5;3783:13;3774:22;;3750:120;;;3690:186;;:::o;3882:543::-;3983:2;3978:3;3975:11;3972:446;;;4017:38;4049:5;4017:38;:::i;:::-;4101:29;4119:10;4101:29;:::i;:::-;4091:8;4087:44;4284:2;4272:10;4269:18;4266:49;;;4305:8;4290:23;;4266:49;4328:80;4384:22;4402:3;4384:22;:::i;:::-;4374:8;4370:37;4357:11;4328:80;:::i;:::-;3987:431;;3972:446;3882:543;;;:::o;4431:117::-;4485:8;4535:5;4529:4;4525:16;4504:37;;4431:117;;;;:::o;4554:169::-;4598:6;4631:51;4679:1;4675:6;4667:5;4664:1;4660:13;4631:51;:::i;:::-;4627:56;4712:4;4706;4702:15;4692:25;;4605:118;4554:169;;;;:::o;4728:295::-;4804:4;4950:29;4975:3;4969:4;4950:29;:::i;:::-;4942:37;;5012:3;5009:1;5005:11;4999:4;4996:21;4988:29;;4728:295;;;;:::o;5028:1395::-;5145:37;5178:3;5145:37;:::i;:::-;5247:18;5239:6;5236:30;5233:56;;;5269:18;;:::i;:::-;5233:56;5313:38;5345:4;5339:11;5313:38;:::i;:::-;5398:67;5458:6;5450;5444:4;5398:67;:::i;:::-;5492:1;5516:4;5503:17;;5548:2;5540:6;5537:14;5565:1;5560:618;;;;6222:1;6239:6;6236:77;;;6288:9;6283:3;6279:19;6273:26;6264:35;;6236:77;6339:67;6399:6;6392:5;6339:67;:::i;:::-;6333:4;6326:81;6195:222;5530:887;;5560:618;5612:4;5608:9;5600:6;5596:22;5646:37;5678:4;5646:37;:::i;:::-;5705:1;5719:208;5733:7;5730:1;5727:14;5719:208;;;5812:9;5807:3;5803:19;5797:26;5789:6;5782:42;5863:1;5855:6;5851:14;5841:24;;5910:2;5899:9;5895:18;5882:31;;5756:4;5753:1;5749:12;5744:17;;5719:208;;;5955:6;5946:7;5943:19;5940:179;;;6013:9;6008:3;6004:19;5998:26;6056:48;6098:4;6090:6;6086:17;6075:9;6056:48;:::i;:::-;6048:6;6041:64;5963:156;5940:179;6165:1;6161;6153:6;6149:14;6145:22;6139:4;6132:36;5567:611;;;5530:887;;5120:1303;;;5028:1395;;:::o;323:876:13:-;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_asSingletonArrays_1186": {
									"entryPoint": 4524,
									"id": 1186,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"@_burnBatch_992": {
									"entryPoint": 3274,
									"id": 992,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_burn_953": {
									"entryPoint": 4190,
									"id": 953,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_doSafeBatchTransferAcceptanceCheck_1170": {
									"entryPoint": 5021,
									"id": 1170,
									"parameterSlots": 6,
									"returnSlots": 0
								},
								"@_doSafeTransferAcceptanceCheck_1100": {
									"entryPoint": 4590,
									"id": 1100,
									"parameterSlots": 6,
									"returnSlots": 0
								},
								"@_mintBatch_903": {
									"entryPoint": 2854,
									"id": 903,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_mint_862": {
									"entryPoint": 3418,
									"id": 862,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_msgSender_1815": {
									"entryPoint": 2985,
									"id": 1815,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_safeBatchTransferFrom_799": {
									"entryPoint": 2992,
									"id": 799,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@_safeTransferFrom_744": {
									"entryPoint": 3928,
									"id": 744,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@_setApprovalForAll_1032": {
									"entryPoint": 3567,
									"id": 1032,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_updateWithAcceptanceCheck_678": {
									"entryPoint": 4352,
									"id": 678,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@_update_1603": {
									"entryPoint": 5452,
									"id": 1603,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_update_3142": {
									"entryPoint": 4572,
									"id": 3142,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_update_602": {
									"entryPoint": 5877,
									"id": 602,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@balanceOfBatch_326": {
									"entryPoint": 1600,
									"id": 326,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_256": {
									"entryPoint": 808,
									"id": 256,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@burnBatch_1431": {
									"entryPoint": 1888,
									"id": 1431,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@burn_1394": {
									"entryPoint": 2577,
									"id": 1394,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@exists_1482": {
									"entryPoint": 1869,
									"id": 1482,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@isApprovedForAll_359": {
									"entryPoint": 2268,
									"id": 359,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@mintBatch_3116": {
									"entryPoint": 1273,
									"id": 3116,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@mint_3093": {
									"entryPoint": 2060,
									"id": 3093,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@safeBatchTransferFrom_449": {
									"entryPoint": 1433,
									"id": 449,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@safeTransferFrom_403": {
									"entryPoint": 2410,
									"id": 403,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@setApprovalForAll_342": {
									"entryPoint": 2220,
									"id": 342,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@supportsInterface_1966": {
									"entryPoint": 2749,
									"id": 1966,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_228": {
									"entryPoint": 893,
									"id": 228,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@totalSupply_1458": {
									"entryPoint": 2242,
									"id": 1458,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@totalSupply_1467": {
									"entryPoint": 1264,
									"id": 1467,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@unsafeMemoryAccess_1789": {
									"entryPoint": 3255,
									"id": 1789,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@unsafeMemoryAccess_1802": {
									"entryPoint": 3236,
									"id": 1802,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@uri_239": {
									"entryPoint": 1118,
									"id": 239,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr": {
									"entryPoint": 8373,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 7618,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_bytes_memory_ptr": {
									"entryPoint": 7833,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 6882,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_array$_t_address_$dyn_memory_ptr": {
									"entryPoint": 8477,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 7722,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool": {
									"entryPoint": 9141,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4": {
									"entryPoint": 7120,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4_fromMemory": {
									"entryPoint": 10158,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes_memory_ptr": {
									"entryPoint": 7898,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 6933,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 9223,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr": {
									"entryPoint": 8127,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr": {
									"entryPoint": 9285,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_decode_tuple_t_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 8855,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr": {
									"entryPoint": 7943,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_addresst_bool": {
									"entryPoint": 9161,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 6953,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256t_uint256": {
									"entryPoint": 9432,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256t_uint256t_bytes_memory_ptr": {
									"entryPoint": 8991,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 8522,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 7140,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes4_fromMemory": {
									"entryPoint": 10178,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 7234,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encodeUpdatedPos_t_uint256_to_t_uint256": {
									"entryPoint": 8696,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 9709,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack": {
									"entryPoint": 8731,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 7194,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 10014,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7359,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_1bc1562e94238003917761236421517f1e0102048098634d927432356ee253a7_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9645,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256": {
									"entryPoint": 8681,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 7015,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 9963,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed": {
									"entryPoint": 9724,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 10221,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 10070,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 10374,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 8823,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 10441,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 7209,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7415,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1bc1562e94238003917761236421517f1e0102048098634d927432356ee253a7__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9679,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 7030,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 9763,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 7545,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 6795,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_array$_t_address_$dyn_memory_ptr": {
									"entryPoint": 8330,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 7571,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_allocation_size_t_bytes_memory_ptr": {
									"entryPoint": 7771,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 8666,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 8640,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 9988,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 7277,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 8719,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack": {
									"entryPoint": 8650,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 9998,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 7287,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 10323,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 6843,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 7183,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes4": {
									"entryPoint": 7055,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 6812,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 6902,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_calldata_to_memory_with_cleanup": {
									"entryPoint": 7819,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 7303,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 9557,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 7496,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"increment_t_uint256": {
									"entryPoint": 9892,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 9847,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 9512,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 9802,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 7451,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 7447,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef": {
									"entryPoint": 7614,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 7767,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 6808,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 6804,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 7343,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_1bc1562e94238003917761236421517f1e0102048098634d927432356ee253a7": {
									"entryPoint": 9605,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 6860,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 9119,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes4": {
									"entryPoint": 7098,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 6911,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:28230:14",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:14",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:14",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:14"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:14"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:14",
														"type": ""
													}
												],
												"src": "7:75:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:14",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:14"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:14",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:14"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:81:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:65:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "411:42:14",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "400:54:14"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:14"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:14",
														"type": ""
													}
												],
												"src": "334:126:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "511:51:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "521:35:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "532:24:14"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:14"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "493:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "503:7:14",
														"type": ""
													}
												],
												"src": "466:96:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "611:79:14",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "668:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "677:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "680:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:14"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:14"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:14"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "624:43:14"
															},
															"nodeType": "YulIf",
															"src": "621:63:14"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "604:5:14",
														"type": ""
													}
												],
												"src": "568:122:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "748:87:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "758:29:14",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "780:6:14"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "767:12:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "767:20:14"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "758:5:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "823:5:14"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "796:26:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "796:33:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "796:33:14"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "726:6:14",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "734:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "742:5:14",
														"type": ""
													}
												],
												"src": "696:139:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "886:32:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "896:16:14",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "907:5:14"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "896:7:14"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "868:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "878:7:14",
														"type": ""
													}
												],
												"src": "841:77:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "967:79:14",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1024:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1033:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1036:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1026:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1026:12:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1026:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "990:5:14"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1015:5:14"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "997:17:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "997:24:14"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "987:2:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "987:35:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "980:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "980:43:14"
															},
															"nodeType": "YulIf",
															"src": "977:63:14"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "960:5:14",
														"type": ""
													}
												],
												"src": "924:122:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1104:87:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1114:29:14",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1136:6:14"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1123:12:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "1123:20:14"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1114:5:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1179:5:14"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1152:26:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "1152:33:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1152:33:14"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1082:6:14",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1090:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1098:5:14",
														"type": ""
													}
												],
												"src": "1052:139:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1280:391:14",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1326:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1328:77:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1328:79:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1328:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1301:7:14"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1310:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1297:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1297:23:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1322:2:14",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1293:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "1293:32:14"
															},
															"nodeType": "YulIf",
															"src": "1290:119:14"
														},
														{
															"nodeType": "YulBlock",
															"src": "1419:117:14",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1434:15:14",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1448:1:14",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1438:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1463:63:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1498:9:14"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1509:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1494:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1494:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1518:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1473:20:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1473:53:14"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1463:6:14"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1546:118:14",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1561:16:14",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1575:2:14",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1565:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1591:63:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1626:9:14"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1637:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1622:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1622:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1646:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1601:20:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1601:53:14"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "1591:6:14"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1242:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1253:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1265:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1273:6:14",
														"type": ""
													}
												],
												"src": "1197:474:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1742:53:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1759:3:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1782:5:14"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1764:17:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1764:24:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1752:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "1752:37:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1752:37:14"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1730:5:14",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1737:3:14",
														"type": ""
													}
												],
												"src": "1677:118:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1899:124:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1909:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1921:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1932:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1917:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "1917:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1909:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1989:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2002:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2013:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1998:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1998:17:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1945:43:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "1945:71:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1945:71:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1871:9:14",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1883:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1894:4:14",
														"type": ""
													}
												],
												"src": "1801:222:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2073:105:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2083:89:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2098:5:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2105:66:14",
																		"type": "",
																		"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2094:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "2094:78:14"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2083:7:14"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2055:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2065:7:14",
														"type": ""
													}
												],
												"src": "2029:149:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2226:78:14",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2282:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2291:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2294:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2284:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2284:12:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2284:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2249:5:14"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2273:5:14"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes4",
																					"nodeType": "YulIdentifier",
																					"src": "2256:16:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2256:23:14"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2246:2:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2246:34:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2239:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "2239:42:14"
															},
															"nodeType": "YulIf",
															"src": "2236:62:14"
														}
													]
												},
												"name": "validator_revert_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2219:5:14",
														"type": ""
													}
												],
												"src": "2184:120:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2361:86:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2371:29:14",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2393:6:14"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2380:12:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "2380:20:14"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2371:5:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2435:5:14"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "2409:25:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "2409:32:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2409:32:14"
														}
													]
												},
												"name": "abi_decode_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2339:6:14",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2347:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2355:5:14",
														"type": ""
													}
												],
												"src": "2310:137:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2518:262:14",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2564:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2566:77:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2566:79:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2566:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2539:7:14"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2548:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2535:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2535:23:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2560:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2531:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "2531:32:14"
															},
															"nodeType": "YulIf",
															"src": "2528:119:14"
														},
														{
															"nodeType": "YulBlock",
															"src": "2657:116:14",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2672:15:14",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2686:1:14",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2676:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2701:62:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2735:9:14"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2746:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2731:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2731:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2755:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4",
																			"nodeType": "YulIdentifier",
																			"src": "2711:19:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2711:52:14"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2701:6:14"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2488:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2499:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2511:6:14",
														"type": ""
													}
												],
												"src": "2453:327:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2828:48:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2838:32:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2863:5:14"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "2856:6:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2856:13:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2849:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "2849:21:14"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2838:7:14"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2810:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2820:7:14",
														"type": ""
													}
												],
												"src": "2786:90:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2941:50:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2958:3:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2978:5:14"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "2963:14:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2963:21:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2951:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "2951:34:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2951:34:14"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2929:5:14",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2936:3:14",
														"type": ""
													}
												],
												"src": "2882:109:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3089:118:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3099:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3111:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3122:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3107:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "3107:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3099:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3173:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3186:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3197:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3182:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3182:17:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3135:37:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "3135:65:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3135:65:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3061:9:14",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3073:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3084:4:14",
														"type": ""
													}
												],
												"src": "2997:210:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3279:263:14",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3325:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "3327:77:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3327:79:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3327:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3300:7:14"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3309:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3296:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3296:23:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3321:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3292:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "3292:32:14"
															},
															"nodeType": "YulIf",
															"src": "3289:119:14"
														},
														{
															"nodeType": "YulBlock",
															"src": "3418:117:14",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3433:15:14",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3447:1:14",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3437:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3462:63:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3497:9:14"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3508:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3493:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3493:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3517:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "3472:20:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3472:53:14"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3462:6:14"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3249:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3260:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3272:6:14",
														"type": ""
													}
												],
												"src": "3213:329:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3607:40:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3618:22:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3634:5:14"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3628:5:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "3628:12:14"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "3618:6:14"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3590:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "3600:6:14",
														"type": ""
													}
												],
												"src": "3548:99:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3749:73:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3766:3:14"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3771:6:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3759:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "3759:19:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3759:19:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3787:29:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3806:3:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3811:4:14",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3802:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "3802:14:14"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "3787:11:14"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3721:3:14",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "3726:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "3737:11:14",
														"type": ""
													}
												],
												"src": "3653:169:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3890:184:14",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3900:10:14",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3909:1:14",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "3904:1:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3969:63:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "3994:3:14"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "3999:1:14"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "3990:3:14"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3990:11:14"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "4013:3:14"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "4018:1:14"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "4009:3:14"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "4009:11:14"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "4003:5:14"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4003:18:14"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "3983:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3983:39:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3983:39:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "3930:1:14"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3933:6:14"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "3927:2:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "3927:13:14"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "3941:19:14",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "3943:15:14",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "3952:1:14"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3955:2:14",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "3948:3:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3948:10:14"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "3943:1:14"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "3923:3:14",
																"statements": []
															},
															"src": "3919:113:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "4052:3:14"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "4057:6:14"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4048:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4048:16:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4066:1:14",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4041:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "4041:27:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4041:27:14"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "3872:3:14",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "3877:3:14",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "3882:6:14",
														"type": ""
													}
												],
												"src": "3828:246:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4128:54:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4138:38:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4156:5:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4163:2:14",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4152:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4152:14:14"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4172:2:14",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "4168:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4168:7:14"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "4148:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "4148:28:14"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "4138:6:14"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4111:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "4121:6:14",
														"type": ""
													}
												],
												"src": "4080:102:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4280:285:14",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4290:53:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4337:5:14"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "4304:32:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "4304:39:14"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "4294:6:14",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4352:78:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4418:3:14"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4423:6:14"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4359:58:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "4359:71:14"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "4352:3:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4478:5:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4485:4:14",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4474:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4474:16:14"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4492:3:14"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4497:6:14"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "4439:34:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "4439:65:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4439:65:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4513:46:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4524:3:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "4551:6:14"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "4529:21:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4529:29:14"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4520:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "4520:39:14"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "4513:3:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4261:5:14",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4268:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4276:3:14",
														"type": ""
													}
												],
												"src": "4188:377:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4689:195:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4699:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4711:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4722:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4707:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "4707:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4699:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4746:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4757:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4742:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4742:17:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "4765:4:14"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4771:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4761:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4761:20:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4735:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "4735:47:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4735:47:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4791:86:14",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4863:6:14"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "4872:4:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4799:63:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "4799:78:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4791:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4661:9:14",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4673:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4684:4:14",
														"type": ""
													}
												],
												"src": "4571:313:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4979:28:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4996:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4999:1:14",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "4989:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "4989:12:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4989:12:14"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nodeType": "YulFunctionDefinition",
												"src": "4890:117:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5041:152:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5058:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5061:77:14",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5051:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "5051:88:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5051:88:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5155:1:14",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5158:4:14",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5148:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "5148:15:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5148:15:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5179:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5182:4:14",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "5172:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "5172:15:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5172:15:14"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "5013:180:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5242:238:14",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5252:58:14",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "5274:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nodeType": "YulIdentifier",
																				"src": "5304:4:14"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "5282:21:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5282:27:14"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5270:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "5270:40:14"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "5256:10:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5421:22:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "5423:16:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5423:18:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5423:18:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "5364:10:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5376:18:14",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "5361:2:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5361:34:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "5400:10:14"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "5412:6:14"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "5397:2:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5397:22:14"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "5358:2:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "5358:62:14"
															},
															"nodeType": "YulIf",
															"src": "5355:88:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5459:2:14",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "5463:10:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5452:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "5452:22:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5452:22:14"
														}
													]
												},
												"name": "finalize_allocation",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "5228:6:14",
														"type": ""
													},
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "5236:4:14",
														"type": ""
													}
												],
												"src": "5199:281:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5527:88:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5537:30:14",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nodeType": "YulIdentifier",
																	"src": "5547:18:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "5547:20:14"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "5537:6:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "5596:6:14"
																	},
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "5604:4:14"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "5576:19:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "5576:33:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5576:33:14"
														}
													]
												},
												"name": "allocate_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "5511:4:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "5520:6:14",
														"type": ""
													}
												],
												"src": "5486:129:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5703:229:14",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5808:22:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "5810:16:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5810:18:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5810:18:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "5780:6:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5788:18:14",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5777:2:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "5777:30:14"
															},
															"nodeType": "YulIf",
															"src": "5774:56:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5840:25:14",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "5852:6:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5860:4:14",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "5848:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "5848:17:14"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "5840:4:14"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5902:23:14",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "5914:4:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5920:4:14",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5910:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "5910:15:14"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "5902:4:14"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "5687:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "5698:4:14",
														"type": ""
													}
												],
												"src": "5621:311:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6027:28:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6044:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6047:1:14",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "6037:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "6037:12:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6037:12:14"
														}
													]
												},
												"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
												"nodeType": "YulFunctionDefinition",
												"src": "5938:117:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6180:608:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6190:90:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "6272:6:14"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "6215:56:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6215:64:14"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "6199:15:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "6199:81:14"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "6190:5:14"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6289:16:14",
															"value": {
																"name": "array",
																"nodeType": "YulIdentifier",
																"src": "6300:5:14"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "6293:3:14",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "6322:5:14"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6329:6:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6315:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "6315:21:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6315:21:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6345:23:14",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "6356:5:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6363:4:14",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6352:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "6352:16:14"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nodeType": "YulIdentifier",
																	"src": "6345:3:14"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6378:44:14",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "6396:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "6408:6:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6416:4:14",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "6404:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6404:17:14"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6392:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "6392:30:14"
															},
															"variables": [
																{
																	"name": "srcEnd",
																	"nodeType": "YulTypedName",
																	"src": "6382:6:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6450:103:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
																				"nodeType": "YulIdentifier",
																				"src": "6464:77:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6464:79:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6464:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "6437:6:14"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "6445:3:14"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "6434:2:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "6434:15:14"
															},
															"nodeType": "YulIf",
															"src": "6431:122:14"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6638:144:14",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "6653:21:14",
																		"value": {
																			"name": "src",
																			"nodeType": "YulIdentifier",
																			"src": "6671:3:14"
																		},
																		"variables": [
																			{
																				"name": "elementPos",
																				"nodeType": "YulTypedName",
																				"src": "6657:10:14",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "6695:3:14"
																				},
																				{
																					"arguments": [
																						{
																							"name": "elementPos",
																							"nodeType": "YulIdentifier",
																							"src": "6721:10:14"
																						},
																						{
																							"name": "end",
																							"nodeType": "YulIdentifier",
																							"src": "6733:3:14"
																						}
																					],
																					"functionName": {
																						"name": "abi_decode_t_uint256",
																						"nodeType": "YulIdentifier",
																						"src": "6700:20:14"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6700:37:14"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "6688:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6688:50:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6688:50:14"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "6751:21:14",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "6762:3:14"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6767:4:14",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "6758:3:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6758:14:14"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "6751:3:14"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "6591:3:14"
																	},
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "6596:6:14"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "6588:2:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "6588:15:14"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "6604:25:14",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "6606:21:14",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "6617:3:14"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6622:4:14",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "6613:3:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6613:14:14"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "6606:3:14"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "6566:21:14",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "6568:17:14",
																		"value": {
																			"name": "offset",
																			"nodeType": "YulIdentifier",
																			"src": "6579:6:14"
																		},
																		"variables": [
																			{
																				"name": "src",
																				"nodeType": "YulTypedName",
																				"src": "6572:3:14",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "6562:220:14"
														}
													]
												},
												"name": "abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "6150:6:14",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "6158:6:14",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6166:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "6174:5:14",
														"type": ""
													}
												],
												"src": "6078:710:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6888:293:14",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6937:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "6939:77:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6939:79:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6939:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6916:6:14"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6924:4:14",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6912:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6912:17:14"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "6931:3:14"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "6908:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6908:27:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "6901:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "6901:35:14"
															},
															"nodeType": "YulIf",
															"src": "6898:122:14"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7029:34:14",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "7056:6:14"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "7043:12:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "7043:20:14"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "7033:6:14",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7072:103:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "7148:6:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7156:4:14",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7144:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7144:17:14"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7163:6:14"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "7171:3:14"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "7081:62:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "7081:94:14"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "7072:5:14"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "6866:6:14",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6874:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "6882:5:14",
														"type": ""
													}
												],
												"src": "6811:370:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7276:28:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7293:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7296:1:14",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "7286:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "7286:12:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7286:12:14"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nodeType": "YulFunctionDefinition",
												"src": "7187:117:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7376:241:14",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7481:22:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "7483:16:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7483:18:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7483:18:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7453:6:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7461:18:14",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "7450:2:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "7450:30:14"
															},
															"nodeType": "YulIf",
															"src": "7447:56:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7513:37:14",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7543:6:14"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nodeType": "YulIdentifier",
																	"src": "7521:21:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "7521:29:14"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "7513:4:14"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7587:23:14",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "7599:4:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7605:4:14",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7595:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "7595:15:14"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "7587:4:14"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "7360:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "7371:4:14",
														"type": ""
													}
												],
												"src": "7310:307:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7687:82:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "7710:3:14"
																	},
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "7715:3:14"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7720:6:14"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "7697:12:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "7697:30:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7697:30:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "7747:3:14"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "7752:6:14"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7743:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7743:16:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7761:1:14",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7736:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "7736:27:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7736:27:14"
														}
													]
												},
												"name": "copy_calldata_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "7669:3:14",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "7674:3:14",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "7679:6:14",
														"type": ""
													}
												],
												"src": "7623:146:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7858:340:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7868:74:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "7934:6:14"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_bytes_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "7893:40:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7893:48:14"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "7877:15:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "7877:65:14"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "7868:5:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "7958:5:14"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7965:6:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7951:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "7951:21:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7951:21:14"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7981:27:14",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "7996:5:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8003:4:14",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7992:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "7992:16:14"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "7985:3:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8046:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nodeType": "YulIdentifier",
																				"src": "8048:77:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8048:79:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8048:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "8027:3:14"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "8032:6:14"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8023:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8023:16:14"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "8041:3:14"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "8020:2:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "8020:25:14"
															},
															"nodeType": "YulIf",
															"src": "8017:112:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "8175:3:14"
																	},
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "8180:3:14"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "8185:6:14"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "8138:36:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "8138:54:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8138:54:14"
														}
													]
												},
												"name": "abi_decode_available_length_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "7831:3:14",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "7836:6:14",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "7844:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "7852:5:14",
														"type": ""
													}
												],
												"src": "7775:423:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8278:277:14",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8327:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "8329:77:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8329:79:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8329:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "8306:6:14"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "8314:4:14",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "8302:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8302:17:14"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "8321:3:14"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "8298:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8298:27:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "8291:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "8291:35:14"
															},
															"nodeType": "YulIf",
															"src": "8288:122:14"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8419:34:14",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "8446:6:14"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "8433:12:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "8433:20:14"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "8423:6:14",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8462:87:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "8522:6:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8530:4:14",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8518:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8518:17:14"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "8537:6:14"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "8545:3:14"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_bytes_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "8471:46:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "8471:78:14"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "8462:5:14"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "8256:6:14",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "8264:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "8272:5:14",
														"type": ""
													}
												],
												"src": "8217:338:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8737:1187:14",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8784:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "8786:77:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8786:79:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8786:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "8758:7:14"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8767:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8754:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8754:23:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8779:3:14",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "8750:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "8750:33:14"
															},
															"nodeType": "YulIf",
															"src": "8747:120:14"
														},
														{
															"nodeType": "YulBlock",
															"src": "8877:117:14",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "8892:15:14",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8906:1:14",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "8896:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "8921:63:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "8956:9:14"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "8967:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "8952:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8952:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "8976:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "8931:20:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8931:53:14"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "8921:6:14"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "9004:303:14",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "9019:46:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9050:9:14"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "9061:2:14",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9046:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9046:18:14"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "9033:12:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9033:32:14"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "9023:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "9112:83:14",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "9114:77:14"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "9114:79:14"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "9114:79:14"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "9084:6:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9092:18:14",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "9081:2:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9081:30:14"
																	},
																	"nodeType": "YulIf",
																	"src": "9078:117:14"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "9209:88:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9269:9:14"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "9280:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9265:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9265:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9289:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "9219:45:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9219:78:14"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "9209:6:14"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "9317:303:14",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "9332:46:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9363:9:14"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "9374:2:14",
																						"type": "",
																						"value": "64"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9359:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9359:18:14"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "9346:12:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9346:32:14"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "9336:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "9425:83:14",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "9427:77:14"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "9427:79:14"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "9427:79:14"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "9397:6:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9405:18:14",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "9394:2:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9394:30:14"
																	},
																	"nodeType": "YulIf",
																	"src": "9391:117:14"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "9522:88:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9582:9:14"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "9593:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9578:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9578:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9602:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "9532:45:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9532:78:14"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "9522:6:14"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "9630:287:14",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "9645:46:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9676:9:14"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "9687:2:14",
																						"type": "",
																						"value": "96"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9672:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9672:18:14"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "9659:12:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9659:32:14"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "9649:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "9738:83:14",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "9740:77:14"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "9740:79:14"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "9740:79:14"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "9710:6:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9718:18:14",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "9707:2:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9707:30:14"
																	},
																	"nodeType": "YulIf",
																	"src": "9704:117:14"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "9835:72:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9879:9:14"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "9890:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9875:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9875:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9899:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "9845:29:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9845:62:14"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nodeType": "YulIdentifier",
																			"src": "9835:6:14"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8683:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "8694:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8706:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "8714:6:14",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "8722:6:14",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "8730:6:14",
														"type": ""
													}
												],
												"src": "8561:1363:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10123:1316:14",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10170:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "10172:77:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10172:79:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10172:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "10144:7:14"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10153:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "10140:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10140:23:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10165:3:14",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "10136:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "10136:33:14"
															},
															"nodeType": "YulIf",
															"src": "10133:120:14"
														},
														{
															"nodeType": "YulBlock",
															"src": "10263:117:14",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "10278:15:14",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10292:1:14",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "10282:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "10307:63:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "10342:9:14"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "10353:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "10338:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10338:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "10362:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "10317:20:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10317:53:14"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "10307:6:14"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "10390:118:14",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "10405:16:14",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10419:2:14",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "10409:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "10435:63:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "10470:9:14"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "10481:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "10466:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10466:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "10490:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "10445:20:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10445:53:14"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "10435:6:14"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "10518:303:14",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "10533:46:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "10564:9:14"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "10575:2:14",
																						"type": "",
																						"value": "64"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "10560:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10560:18:14"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "10547:12:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10547:32:14"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "10537:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "10626:83:14",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "10628:77:14"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "10628:79:14"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "10628:79:14"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "10598:6:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10606:18:14",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "10595:2:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10595:30:14"
																	},
																	"nodeType": "YulIf",
																	"src": "10592:117:14"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "10723:88:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "10783:9:14"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "10794:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "10779:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10779:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "10803:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "10733:45:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10733:78:14"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "10723:6:14"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "10831:303:14",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "10846:46:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "10877:9:14"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "10888:2:14",
																						"type": "",
																						"value": "96"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "10873:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10873:18:14"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "10860:12:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10860:32:14"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "10850:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "10939:83:14",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "10941:77:14"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "10941:79:14"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "10941:79:14"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "10911:6:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10919:18:14",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "10908:2:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10908:30:14"
																	},
																	"nodeType": "YulIf",
																	"src": "10905:117:14"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "11036:88:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "11096:9:14"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "11107:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "11092:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11092:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "11116:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "11046:45:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11046:78:14"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nodeType": "YulIdentifier",
																			"src": "11036:6:14"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "11144:288:14",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "11159:47:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "11190:9:14"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "11201:3:14",
																						"type": "",
																						"value": "128"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "11186:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11186:19:14"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "11173:12:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11173:33:14"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "11163:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "11253:83:14",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "11255:77:14"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "11255:79:14"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "11255:79:14"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "11225:6:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11233:18:14",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "11222:2:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11222:30:14"
																	},
																	"nodeType": "YulIf",
																	"src": "11219:117:14"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "11350:72:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "11394:9:14"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "11405:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "11390:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11390:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "11414:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "11360:29:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11360:62:14"
																	},
																	"variableNames": [
																		{
																			"name": "value4",
																			"nodeType": "YulIdentifier",
																			"src": "11350:6:14"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10061:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "10072:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "10084:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "10092:6:14",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "10100:6:14",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "10108:6:14",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "10116:6:14",
														"type": ""
													}
												],
												"src": "9930:1509:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11527:229:14",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11632:22:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "11634:16:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11634:18:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11634:18:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "11604:6:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11612:18:14",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "11601:2:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "11601:30:14"
															},
															"nodeType": "YulIf",
															"src": "11598:56:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11664:25:14",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "11676:6:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11684:4:14",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "11672:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "11672:17:14"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "11664:4:14"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "11726:23:14",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "11738:4:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11744:4:14",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11734:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "11734:15:14"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "11726:4:14"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_array$_t_address_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "11511:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "11522:4:14",
														"type": ""
													}
												],
												"src": "11445:311:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11881:608:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11891:90:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "11973:6:14"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_array$_t_address_$dyn_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "11916:56:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11916:64:14"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "11900:15:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "11900:81:14"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "11891:5:14"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11990:16:14",
															"value": {
																"name": "array",
																"nodeType": "YulIdentifier",
																"src": "12001:5:14"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "11994:3:14",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "12023:5:14"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "12030:6:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12016:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "12016:21:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12016:21:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12046:23:14",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "12057:5:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12064:4:14",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12053:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "12053:16:14"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nodeType": "YulIdentifier",
																	"src": "12046:3:14"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "12079:44:14",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "12097:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "12109:6:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12117:4:14",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "12105:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12105:17:14"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12093:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "12093:30:14"
															},
															"variables": [
																{
																	"name": "srcEnd",
																	"nodeType": "YulTypedName",
																	"src": "12083:6:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12151:103:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
																				"nodeType": "YulIdentifier",
																				"src": "12165:77:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12165:79:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12165:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "12138:6:14"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "12146:3:14"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "12135:2:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "12135:15:14"
															},
															"nodeType": "YulIf",
															"src": "12132:122:14"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12339:144:14",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "12354:21:14",
																		"value": {
																			"name": "src",
																			"nodeType": "YulIdentifier",
																			"src": "12372:3:14"
																		},
																		"variables": [
																			{
																				"name": "elementPos",
																				"nodeType": "YulTypedName",
																				"src": "12358:10:14",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "12396:3:14"
																				},
																				{
																					"arguments": [
																						{
																							"name": "elementPos",
																							"nodeType": "YulIdentifier",
																							"src": "12422:10:14"
																						},
																						{
																							"name": "end",
																							"nodeType": "YulIdentifier",
																							"src": "12434:3:14"
																						}
																					],
																					"functionName": {
																						"name": "abi_decode_t_address",
																						"nodeType": "YulIdentifier",
																						"src": "12401:20:14"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "12401:37:14"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "12389:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12389:50:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12389:50:14"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "12452:21:14",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "12463:3:14"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "12468:4:14",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "12459:3:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12459:14:14"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "12452:3:14"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "12292:3:14"
																	},
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "12297:6:14"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "12289:2:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "12289:15:14"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "12305:25:14",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "12307:21:14",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "12318:3:14"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "12323:4:14",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "12314:3:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12314:14:14"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "12307:3:14"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "12267:21:14",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "12269:17:14",
																		"value": {
																			"name": "offset",
																			"nodeType": "YulIdentifier",
																			"src": "12280:6:14"
																		},
																		"variables": [
																			{
																				"name": "src",
																				"nodeType": "YulTypedName",
																				"src": "12273:3:14",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "12263:220:14"
														}
													]
												},
												"name": "abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "11851:6:14",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "11859:6:14",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "11867:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "11875:5:14",
														"type": ""
													}
												],
												"src": "11779:710:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12589:293:14",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12638:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "12640:77:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12640:79:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12640:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "12617:6:14"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "12625:4:14",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "12613:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "12613:17:14"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "12632:3:14"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "12609:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12609:27:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "12602:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "12602:35:14"
															},
															"nodeType": "YulIf",
															"src": "12599:122:14"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "12730:34:14",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "12757:6:14"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "12744:12:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "12744:20:14"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "12734:6:14",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "12773:103:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "12849:6:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12857:4:14",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12845:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12845:17:14"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "12864:6:14"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "12872:3:14"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "12782:62:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "12782:94:14"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "12773:5:14"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_array$_t_address_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "12567:6:14",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "12575:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "12583:5:14",
														"type": ""
													}
												],
												"src": "12512:370:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13021:761:14",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13067:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "13069:77:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13069:79:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13069:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "13042:7:14"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13051:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "13038:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13038:23:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13063:2:14",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "13034:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "13034:32:14"
															},
															"nodeType": "YulIf",
															"src": "13031:119:14"
														},
														{
															"nodeType": "YulBlock",
															"src": "13160:302:14",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "13175:45:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "13206:9:14"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "13217:1:14",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "13202:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "13202:17:14"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "13189:12:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13189:31:14"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "13179:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "13267:83:14",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "13269:77:14"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "13269:79:14"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "13269:79:14"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "13239:6:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13247:18:14",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "13236:2:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13236:30:14"
																	},
																	"nodeType": "YulIf",
																	"src": "13233:117:14"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "13364:88:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "13424:9:14"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "13435:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "13420:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "13420:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "13444:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_address_$dyn_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "13374:45:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13374:78:14"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "13364:6:14"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "13472:303:14",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "13487:46:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "13518:9:14"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "13529:2:14",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "13514:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "13514:18:14"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "13501:12:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13501:32:14"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "13491:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "13580:83:14",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "13582:77:14"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "13582:79:14"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "13582:79:14"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "13552:6:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13560:18:14",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "13549:2:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13549:30:14"
																	},
																	"nodeType": "YulIf",
																	"src": "13546:117:14"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "13677:88:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "13737:9:14"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "13748:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "13733:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "13733:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "13757:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "13687:45:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13687:78:14"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "13677:6:14"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12983:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "12994:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "13006:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "13014:6:14",
														"type": ""
													}
												],
												"src": "12888:894:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13862:40:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13873:22:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "13889:5:14"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "13883:5:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "13883:12:14"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "13873:6:14"
																}
															]
														}
													]
												},
												"name": "array_length_t_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "13845:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "13855:6:14",
														"type": ""
													}
												],
												"src": "13788:114:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14019:73:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14036:3:14"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "14041:6:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14029:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "14029:19:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14029:19:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14057:29:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14076:3:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14081:4:14",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14072:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "14072:14:14"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "14057:11:14"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "13991:3:14",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "13996:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "14007:11:14",
														"type": ""
													}
												],
												"src": "13908:184:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14170:60:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14180:11:14",
															"value": {
																"name": "ptr",
																"nodeType": "YulIdentifier",
																"src": "14188:3:14"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "14180:4:14"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "14201:22:14",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "14213:3:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14218:4:14",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14209:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "14209:14:14"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "14201:4:14"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "14157:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "14165:4:14",
														"type": ""
													}
												],
												"src": "14098:132:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14291:53:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14308:3:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "14331:5:14"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "14313:17:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14313:24:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14301:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "14301:37:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14301:37:14"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "14279:5:14",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "14286:3:14",
														"type": ""
													}
												],
												"src": "14236:108:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14430:99:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "14474:6:14"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14482:3:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "14440:33:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "14440:46:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14440:46:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14495:28:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14513:3:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14518:4:14",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14509:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "14509:14:14"
															},
															"variableNames": [
																{
																	"name": "updatedPos",
																	"nodeType": "YulIdentifier",
																	"src": "14495:10:14"
																}
															]
														}
													]
												},
												"name": "abi_encodeUpdatedPos_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "14403:6:14",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "14411:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updatedPos",
														"nodeType": "YulTypedName",
														"src": "14419:10:14",
														"type": ""
													}
												],
												"src": "14350:179:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14610:38:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14620:22:14",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "14632:3:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14637:4:14",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14628:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "14628:14:14"
															},
															"variableNames": [
																{
																	"name": "next",
																	"nodeType": "YulIdentifier",
																	"src": "14620:4:14"
																}
															]
														}
													]
												},
												"name": "array_nextElement_t_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "14597:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "next",
														"nodeType": "YulTypedName",
														"src": "14605:4:14",
														"type": ""
													}
												],
												"src": "14535:113:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14808:608:14",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "14818:68:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "14880:5:14"
																	}
																],
																"functionName": {
																	"name": "array_length_t_array$_t_uint256_$dyn_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "14832:47:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "14832:54:14"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "14822:6:14",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "14895:93:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14976:3:14"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "14981:6:14"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14902:73:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "14902:86:14"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "14895:3:14"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "14997:71:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "15062:5:14"
																	}
																],
																"functionName": {
																	"name": "array_dataslot_t_array$_t_uint256_$dyn_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "15012:49:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "15012:56:14"
															},
															"variables": [
																{
																	"name": "baseRef",
																	"nodeType": "YulTypedName",
																	"src": "15001:7:14",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "15077:21:14",
															"value": {
																"name": "baseRef",
																"nodeType": "YulIdentifier",
																"src": "15091:7:14"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nodeType": "YulTypedName",
																	"src": "15081:6:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "15167:224:14",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "15181:34:14",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "15208:6:14"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "15202:5:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15202:13:14"
																		},
																		"variables": [
																			{
																				"name": "elementValue0",
																				"nodeType": "YulTypedName",
																				"src": "15185:13:14",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "15228:70:14",
																		"value": {
																			"arguments": [
																				{
																					"name": "elementValue0",
																					"nodeType": "YulIdentifier",
																					"src": "15279:13:14"
																				},
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "15294:3:14"
																				}
																			],
																			"functionName": {
																				"name": "abi_encodeUpdatedPos_t_uint256_to_t_uint256",
																				"nodeType": "YulIdentifier",
																				"src": "15235:43:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15235:63:14"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "15228:3:14"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "15311:70:14",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "15374:6:14"
																				}
																			],
																			"functionName": {
																				"name": "array_nextElement_t_array$_t_uint256_$dyn_memory_ptr",
																				"nodeType": "YulIdentifier",
																				"src": "15321:52:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15321:60:14"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nodeType": "YulIdentifier",
																				"src": "15311:6:14"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "15129:1:14"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "15132:6:14"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "15126:2:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "15126:13:14"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "15140:18:14",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "15142:14:14",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "15151:1:14"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "15154:1:14",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "15147:3:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15147:9:14"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "15142:1:14"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "15111:14:14",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "15113:10:14",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "15122:1:14",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "i",
																				"nodeType": "YulTypedName",
																				"src": "15117:1:14",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "15107:284:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15400:10:14",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "15407:3:14"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "15400:3:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "14787:5:14",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "14794:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "14803:3:14",
														"type": ""
													}
												],
												"src": "14684:732:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15570:225:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15580:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15592:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15603:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15588:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "15588:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15580:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15627:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15638:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15623:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15623:17:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "15646:4:14"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15652:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "15642:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15642:20:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15616:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "15616:47:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15616:47:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15672:116:14",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "15774:6:14"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "15783:4:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15680:93:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "15680:108:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15672:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15542:9:14",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "15554:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "15565:4:14",
														"type": ""
													}
												],
												"src": "15422:373:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15951:889:14",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "15997:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "15999:77:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15999:79:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "15999:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "15972:7:14"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15981:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "15968:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15968:23:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15993:2:14",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "15964:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "15964:32:14"
															},
															"nodeType": "YulIf",
															"src": "15961:119:14"
														},
														{
															"nodeType": "YulBlock",
															"src": "16090:117:14",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "16105:15:14",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16119:1:14",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "16109:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "16134:63:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "16169:9:14"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "16180:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "16165:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "16165:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "16189:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "16144:20:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16144:53:14"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "16134:6:14"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "16217:303:14",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "16232:46:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "16263:9:14"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "16274:2:14",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "16259:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "16259:18:14"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "16246:12:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16246:32:14"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "16236:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "16325:83:14",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "16327:77:14"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "16327:79:14"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "16327:79:14"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "16297:6:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16305:18:14",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "16294:2:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16294:30:14"
																	},
																	"nodeType": "YulIf",
																	"src": "16291:117:14"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "16422:88:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "16482:9:14"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "16493:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "16478:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "16478:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "16502:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "16432:45:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16432:78:14"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "16422:6:14"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "16530:303:14",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "16545:46:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "16576:9:14"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "16587:2:14",
																						"type": "",
																						"value": "64"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "16572:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "16572:18:14"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "16559:12:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16559:32:14"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "16549:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "16638:83:14",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "16640:77:14"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "16640:79:14"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "16640:79:14"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "16610:6:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16618:18:14",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "16607:2:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16607:30:14"
																	},
																	"nodeType": "YulIf",
																	"src": "16604:117:14"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "16735:88:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "16795:9:14"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "16806:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "16791:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "16791:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "16815:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "16745:45:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16745:78:14"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "16735:6:14"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15905:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "15916:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "15928:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "15936:6:14",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "15944:6:14",
														"type": ""
													}
												],
												"src": "15801:1039:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16972:817:14",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "17019:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "17021:77:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "17021:79:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "17021:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "16993:7:14"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17002:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "16989:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16989:23:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17014:3:14",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "16985:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "16985:33:14"
															},
															"nodeType": "YulIf",
															"src": "16982:120:14"
														},
														{
															"nodeType": "YulBlock",
															"src": "17112:117:14",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "17127:15:14",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17141:1:14",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "17131:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "17156:63:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "17191:9:14"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "17202:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "17187:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "17187:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "17211:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "17166:20:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17166:53:14"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "17156:6:14"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "17239:118:14",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "17254:16:14",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17268:2:14",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "17258:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "17284:63:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "17319:9:14"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "17330:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "17315:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "17315:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "17339:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "17294:20:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17294:53:14"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "17284:6:14"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "17367:118:14",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "17382:16:14",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17396:2:14",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "17386:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "17412:63:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "17447:9:14"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "17458:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "17443:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "17443:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "17467:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "17422:20:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17422:53:14"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "17412:6:14"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "17495:287:14",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "17510:46:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "17541:9:14"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "17552:2:14",
																						"type": "",
																						"value": "96"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "17537:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "17537:18:14"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "17524:12:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17524:32:14"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "17514:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "17603:83:14",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "17605:77:14"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "17605:79:14"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "17605:79:14"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "17575:6:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17583:18:14",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "17572:2:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17572:30:14"
																	},
																	"nodeType": "YulIf",
																	"src": "17569:117:14"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "17700:72:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "17744:9:14"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "17755:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "17740:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "17740:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "17764:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "17710:29:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17710:62:14"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nodeType": "YulIdentifier",
																			"src": "17700:6:14"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256t_uint256t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "16918:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "16929:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "16941:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "16949:6:14",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "16957:6:14",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "16965:6:14",
														"type": ""
													}
												],
												"src": "16846:943:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17835:76:14",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "17889:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "17898:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "17901:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "17891:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "17891:12:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "17891:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "17858:5:14"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "17880:5:14"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "17865:14:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "17865:21:14"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "17855:2:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17855:32:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "17848:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "17848:40:14"
															},
															"nodeType": "YulIf",
															"src": "17845:60:14"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "17828:5:14",
														"type": ""
													}
												],
												"src": "17795:116:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17966:84:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17976:29:14",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "17998:6:14"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "17985:12:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "17985:20:14"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "17976:5:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "18038:5:14"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "18014:23:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "18014:30:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18014:30:14"
														}
													]
												},
												"name": "abi_decode_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "17944:6:14",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "17952:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "17960:5:14",
														"type": ""
													}
												],
												"src": "17917:133:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18136:388:14",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "18182:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "18184:77:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "18184:79:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "18184:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "18157:7:14"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18166:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "18153:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18153:23:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18178:2:14",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "18149:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "18149:32:14"
															},
															"nodeType": "YulIf",
															"src": "18146:119:14"
														},
														{
															"nodeType": "YulBlock",
															"src": "18275:117:14",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "18290:15:14",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18304:1:14",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "18294:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "18319:63:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "18354:9:14"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "18365:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "18350:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "18350:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "18374:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "18329:20:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18329:53:14"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "18319:6:14"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "18402:115:14",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "18417:16:14",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18431:2:14",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "18421:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "18447:60:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "18479:9:14"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "18490:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "18475:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "18475:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "18499:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "18457:17:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18457:50:14"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "18447:6:14"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "18098:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "18109:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "18121:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "18129:6:14",
														"type": ""
													}
												],
												"src": "18056:468:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18613:391:14",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "18659:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "18661:77:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "18661:79:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "18661:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "18634:7:14"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18643:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "18630:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18630:23:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18655:2:14",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "18626:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "18626:32:14"
															},
															"nodeType": "YulIf",
															"src": "18623:119:14"
														},
														{
															"nodeType": "YulBlock",
															"src": "18752:117:14",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "18767:15:14",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18781:1:14",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "18771:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "18796:63:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "18831:9:14"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "18842:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "18827:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "18827:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "18851:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "18806:20:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18806:53:14"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "18796:6:14"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "18879:118:14",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "18894:16:14",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18908:2:14",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "18898:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "18924:63:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "18959:9:14"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "18970:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "18955:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "18955:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "18979:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "18934:20:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18934:53:14"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "18924:6:14"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "18575:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "18586:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "18598:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "18606:6:14",
														"type": ""
													}
												],
												"src": "18530:474:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19153:946:14",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "19200:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "19202:77:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "19202:79:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "19202:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "19174:7:14"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19183:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "19170:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19170:23:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19195:3:14",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "19166:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "19166:33:14"
															},
															"nodeType": "YulIf",
															"src": "19163:120:14"
														},
														{
															"nodeType": "YulBlock",
															"src": "19293:117:14",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "19308:15:14",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19322:1:14",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "19312:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "19337:63:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "19372:9:14"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "19383:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "19368:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "19368:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "19392:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "19347:20:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19347:53:14"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "19337:6:14"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "19420:118:14",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "19435:16:14",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19449:2:14",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "19439:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "19465:63:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "19500:9:14"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "19511:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "19496:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "19496:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "19520:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "19475:20:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19475:53:14"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "19465:6:14"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "19548:118:14",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "19563:16:14",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19577:2:14",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "19567:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "19593:63:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "19628:9:14"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "19639:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "19624:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "19624:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "19648:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "19603:20:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19603:53:14"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "19593:6:14"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "19676:118:14",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "19691:16:14",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19705:2:14",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "19695:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "19721:63:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "19756:9:14"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "19767:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "19752:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "19752:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "19776:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "19731:20:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19731:53:14"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nodeType": "YulIdentifier",
																			"src": "19721:6:14"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "19804:288:14",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "19819:47:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "19850:9:14"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "19861:3:14",
																						"type": "",
																						"value": "128"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "19846:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "19846:19:14"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "19833:12:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19833:33:14"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "19823:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "19913:83:14",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "19915:77:14"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "19915:79:14"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "19915:79:14"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "19885:6:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19893:18:14",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "19882:2:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19882:30:14"
																	},
																	"nodeType": "YulIf",
																	"src": "19879:117:14"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "20010:72:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "20054:9:14"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "20065:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "20050:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "20050:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "20074:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "20020:29:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20020:62:14"
																	},
																	"variableNames": [
																		{
																			"name": "value4",
																			"nodeType": "YulIdentifier",
																			"src": "20010:6:14"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "19091:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "19102:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "19114:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "19122:6:14",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "19130:6:14",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "19138:6:14",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "19146:6:14",
														"type": ""
													}
												],
												"src": "19010:1089:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20205:519:14",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "20251:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "20253:77:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "20253:79:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "20253:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "20226:7:14"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20235:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "20222:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20222:23:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20247:2:14",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "20218:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "20218:32:14"
															},
															"nodeType": "YulIf",
															"src": "20215:119:14"
														},
														{
															"nodeType": "YulBlock",
															"src": "20344:117:14",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "20359:15:14",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20373:1:14",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "20363:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "20388:63:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "20423:9:14"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "20434:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "20419:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "20419:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "20443:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "20398:20:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20398:53:14"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "20388:6:14"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "20471:118:14",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "20486:16:14",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20500:2:14",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "20490:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "20516:63:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "20551:9:14"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "20562:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "20547:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "20547:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "20571:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "20526:20:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20526:53:14"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "20516:6:14"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "20599:118:14",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "20614:16:14",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20628:2:14",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "20618:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "20644:63:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "20679:9:14"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "20690:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "20675:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "20675:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "20699:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "20654:20:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20654:53:14"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "20644:6:14"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "20159:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "20170:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "20182:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "20190:6:14",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "20198:6:14",
														"type": ""
													}
												],
												"src": "20105:619:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20758:152:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20775:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20778:77:14",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20768:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "20768:88:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20768:88:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20872:1:14",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20875:4:14",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20865:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "20865:15:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20865:15:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20896:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20899:4:14",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "20889:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "20889:15:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20889:15:14"
														}
													]
												},
												"name": "panic_error_0x22",
												"nodeType": "YulFunctionDefinition",
												"src": "20730:180:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20967:269:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "20977:22:14",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "20991:4:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20997:1:14",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "20987:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "20987:12:14"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "20977:6:14"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "21008:38:14",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "21038:4:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21044:1:14",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "21034:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "21034:12:14"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "21012:18:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "21085:51:14",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "21099:27:14",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "21113:6:14"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "21121:4:14",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "21109:3:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "21109:17:14"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "21099:6:14"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "21065:18:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "21058:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "21058:26:14"
															},
															"nodeType": "YulIf",
															"src": "21055:81:14"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "21188:42:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nodeType": "YulIdentifier",
																				"src": "21202:16:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "21202:18:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "21202:18:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "21152:18:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "21175:6:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21183:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "21172:2:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21172:14:14"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "21149:2:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "21149:38:14"
															},
															"nodeType": "YulIf",
															"src": "21146:84:14"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "20951:4:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "20960:6:14",
														"type": ""
													}
												],
												"src": "20916:320:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21348:72:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "21370:6:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21378:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21366:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21366:14:14"
																	},
																	{
																		"hexValue": "4f6e6c792067616d6520636f6e74726163742063616e2063616c6c2e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "21382:30:14",
																		"type": "",
																		"value": "Only game contract can call."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21359:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "21359:54:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21359:54:14"
														}
													]
												},
												"name": "store_literal_in_memory_1bc1562e94238003917761236421517f1e0102048098634d927432356ee253a7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "21340:6:14",
														"type": ""
													}
												],
												"src": "21242:178:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21572:220:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "21582:74:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "21648:3:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21653:2:14",
																		"type": "",
																		"value": "28"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "21589:58:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "21589:67:14"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "21582:3:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "21754:3:14"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_1bc1562e94238003917761236421517f1e0102048098634d927432356ee253a7",
																	"nodeType": "YulIdentifier",
																	"src": "21665:88:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "21665:93:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21665:93:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "21767:19:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "21778:3:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21783:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "21774:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "21774:12:14"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "21767:3:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_1bc1562e94238003917761236421517f1e0102048098634d927432356ee253a7_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "21560:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "21568:3:14",
														"type": ""
													}
												],
												"src": "21426:366:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21969:248:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "21979:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "21991:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22002:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "21987:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "21987:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "21979:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "22026:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22037:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "22022:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22022:17:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "22045:4:14"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "22051:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "22041:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22041:20:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "22015:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "22015:47:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22015:47:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "22071:139:14",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "22205:4:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_1bc1562e94238003917761236421517f1e0102048098634d927432356ee253a7_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "22079:124:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "22079:131:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "22071:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1bc1562e94238003917761236421517f1e0102048098634d927432356ee253a7__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "21949:9:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "21964:4:14",
														"type": ""
													}
												],
												"src": "21798:419:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22288:53:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "22305:3:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "22328:5:14"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "22310:17:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22310:24:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "22298:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "22298:37:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22298:37:14"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "22276:5:14",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "22283:3:14",
														"type": ""
													}
												],
												"src": "22223:118:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22473:206:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "22483:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "22495:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22506:2:14",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "22491:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "22491:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "22483:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "22563:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "22576:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22587:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "22572:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22572:17:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "22519:43:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "22519:71:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22519:71:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "22644:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "22657:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22668:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "22653:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22653:18:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "22600:43:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "22600:72:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22600:72:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "22437:9:14",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "22449:6:14",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "22457:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "22468:4:14",
														"type": ""
													}
												],
												"src": "22347:332:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22811:206:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "22821:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "22833:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22844:2:14",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "22829:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "22829:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "22821:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "22901:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "22914:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22925:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "22910:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22910:17:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "22857:43:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "22857:71:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22857:71:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "22982:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "22995:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "23006:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "22991:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22991:18:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "22938:43:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "22938:72:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22938:72:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "22775:9:14",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "22787:6:14",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "22795:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "22806:4:14",
														"type": ""
													}
												],
												"src": "22685:332:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23051:152:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23068:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23071:77:14",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "23061:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "23061:88:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23061:88:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23165:1:14",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23168:4:14",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "23158:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "23158:15:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23158:15:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23189:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23192:4:14",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "23182:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "23182:15:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23182:15:14"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "23023:180:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23237:152:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23254:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23257:77:14",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "23247:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "23247:88:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23247:88:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23351:1:14",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23354:4:14",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "23344:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "23344:15:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23344:15:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23375:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23378:4:14",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "23368:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "23368:15:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23368:15:14"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "23209:180:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23438:190:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "23448:33:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "23475:5:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "23457:17:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "23457:24:14"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "23448:5:14"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "23571:22:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "23573:16:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "23573:18:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "23573:18:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "23496:5:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23503:66:14",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "23493:2:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "23493:77:14"
															},
															"nodeType": "YulIf",
															"src": "23490:103:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "23602:20:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "23613:5:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23620:1:14",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "23609:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "23609:13:14"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "23602:3:14"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "23424:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "23434:3:14",
														"type": ""
													}
												],
												"src": "23395:233:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23732:124:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "23742:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "23754:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23765:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "23750:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "23750:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "23742:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "23822:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "23835:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "23846:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "23831:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23831:17:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "23778:43:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "23778:71:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23778:71:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "23704:9:14",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "23716:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "23727:4:14",
														"type": ""
													}
												],
												"src": "23634:222:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23920:40:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "23931:22:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "23947:5:14"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "23941:5:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "23941:12:14"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "23931:6:14"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "23903:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "23913:6:14",
														"type": ""
													}
												],
												"src": "23862:98:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "24061:73:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "24078:3:14"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "24083:6:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "24071:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "24071:19:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "24071:19:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "24099:29:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "24118:3:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "24123:4:14",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "24114:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "24114:14:14"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "24099:11:14"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "24033:3:14",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "24038:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "24049:11:14",
														"type": ""
													}
												],
												"src": "23966:168:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "24230:283:14",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "24240:52:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "24286:5:14"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "24254:31:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "24254:38:14"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "24244:6:14",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "24301:77:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "24366:3:14"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "24371:6:14"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "24308:57:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "24308:70:14"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "24301:3:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "24426:5:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "24433:4:14",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "24422:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24422:16:14"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "24440:3:14"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "24445:6:14"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "24387:34:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "24387:65:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "24387:65:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "24461:46:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "24472:3:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "24499:6:14"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "24477:21:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24477:29:14"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "24468:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "24468:39:14"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "24461:3:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "24211:5:14",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "24218:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "24226:3:14",
														"type": ""
													}
												],
												"src": "24140:373:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "24747:523:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "24757:27:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "24769:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "24780:3:14",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "24765:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "24765:19:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "24757:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "24838:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "24851:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "24862:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "24847:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24847:17:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "24794:43:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "24794:71:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "24794:71:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "24919:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "24932:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "24943:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "24928:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24928:18:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "24875:43:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "24875:72:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "24875:72:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "25001:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "25014:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "25025:2:14",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "25010:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "25010:18:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "24957:43:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "24957:72:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "24957:72:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "25083:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "25096:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "25107:2:14",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "25092:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "25092:18:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "25039:43:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "25039:72:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "25039:72:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "25132:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "25143:3:14",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "25128:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "25128:19:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "25153:4:14"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "25159:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "25149:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "25149:20:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "25121:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "25121:49:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "25121:49:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "25179:84:14",
															"value": {
																"arguments": [
																	{
																		"name": "value4",
																		"nodeType": "YulIdentifier",
																		"src": "25249:6:14"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "25258:4:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "25187:61:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "25187:76:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "25179:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "24687:9:14",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "24699:6:14",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "24707:6:14",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "24715:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "24723:6:14",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "24731:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "24742:4:14",
														"type": ""
													}
												],
												"src": "24519:751:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "25338:79:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "25348:22:14",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "25363:6:14"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "25357:5:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "25357:13:14"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "25348:5:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "25405:5:14"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "25379:25:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "25379:32:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "25379:32:14"
														}
													]
												},
												"name": "abi_decode_t_bytes4_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "25316:6:14",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "25324:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "25332:5:14",
														"type": ""
													}
												],
												"src": "25276:141:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "25499:273:14",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "25545:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "25547:77:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "25547:79:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "25547:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "25520:7:14"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "25529:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "25516:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "25516:23:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "25541:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "25512:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "25512:32:14"
															},
															"nodeType": "YulIf",
															"src": "25509:119:14"
														},
														{
															"nodeType": "YulBlock",
															"src": "25638:127:14",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "25653:15:14",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "25667:1:14",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "25657:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "25682:73:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "25727:9:14"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "25738:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "25723:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "25723:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "25747:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "25692:30:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "25692:63:14"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "25682:6:14"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "25469:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "25480:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "25492:6:14",
														"type": ""
													}
												],
												"src": "25423:349:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "26106:725:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "26116:27:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "26128:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "26139:3:14",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "26124:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "26124:19:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "26116:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "26197:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "26210:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "26221:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "26206:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "26206:17:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "26153:43:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "26153:71:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "26153:71:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "26278:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "26291:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "26302:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "26287:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "26287:18:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "26234:43:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "26234:72:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "26234:72:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "26327:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "26338:2:14",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "26323:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "26323:18:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "26347:4:14"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "26353:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "26343:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "26343:20:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "26316:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "26316:48:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "26316:48:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "26373:116:14",
															"value": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "26475:6:14"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "26484:4:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "26381:93:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "26381:108:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "26373:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "26510:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "26521:2:14",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "26506:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "26506:18:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "26530:4:14"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "26536:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "26526:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "26526:20:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "26499:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "26499:48:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "26499:48:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "26556:116:14",
															"value": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "26658:6:14"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "26667:4:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "26564:93:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "26564:108:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "26556:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "26693:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "26704:3:14",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "26689:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "26689:19:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "26714:4:14"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "26720:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "26710:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "26710:20:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "26682:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "26682:49:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "26682:49:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "26740:84:14",
															"value": {
																"arguments": [
																	{
																		"name": "value4",
																		"nodeType": "YulIdentifier",
																		"src": "26810:6:14"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "26819:4:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "26748:61:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "26748:76:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "26740:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "26046:9:14",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "26058:6:14",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "26066:6:14",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "26074:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "26082:6:14",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "26090:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "26101:4:14",
														"type": ""
													}
												],
												"src": "25778:1053:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "26881:147:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "26891:25:14",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "26914:1:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "26896:17:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "26896:20:14"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "26891:1:14"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "26925:25:14",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "26948:1:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "26930:17:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "26930:20:14"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "26925:1:14"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "26959:16:14",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "26970:1:14"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "26973:1:14"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "26966:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "26966:9:14"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "26959:3:14"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "26999:22:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "27001:16:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "27001:18:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "27001:18:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "26991:1:14"
																	},
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "26994:3:14"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "26988:2:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "26988:10:14"
															},
															"nodeType": "YulIf",
															"src": "26985:36:14"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "26868:1:14",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "26871:1:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "26877:3:14",
														"type": ""
													}
												],
												"src": "26837:191:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "27216:371:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "27226:27:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "27238:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "27249:3:14",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "27234:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "27234:19:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "27226:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "27307:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "27320:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "27331:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "27316:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "27316:17:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "27263:43:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "27263:71:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "27263:71:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "27388:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "27401:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "27412:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "27397:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "27397:18:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "27344:43:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "27344:72:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "27344:72:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "27470:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "27483:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "27494:2:14",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "27479:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "27479:18:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "27426:43:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "27426:72:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "27426:72:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "27552:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "27565:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "27576:2:14",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "27561:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "27561:18:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "27508:43:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "27508:72:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "27508:72:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "27164:9:14",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "27176:6:14",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "27184:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "27192:6:14",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "27200:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "27211:4:14",
														"type": ""
													}
												],
												"src": "27034:553:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "27819:408:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "27829:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "27841:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "27852:2:14",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "27837:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "27837:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "27829:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "27876:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "27887:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "27872:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "27872:17:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "27895:4:14"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "27901:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "27891:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "27891:20:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "27865:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "27865:47:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "27865:47:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "27921:116:14",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "28023:6:14"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "28032:4:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "27929:93:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "27929:108:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "27921:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "28058:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "28069:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "28054:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "28054:18:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "28078:4:14"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "28084:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "28074:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "28074:20:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "28047:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "28047:48:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "28047:48:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "28104:116:14",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "28206:6:14"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "28215:4:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "28112:93:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "28112:108:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "28104:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "27783:9:14",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "27795:6:14",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "27803:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "27814:4:14",
														"type": ""
													}
												],
												"src": "27593:634:14"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    // uint256[]\n    function abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let srcEnd := add(offset, mul(length, 0x20))\n        if gt(srcEnd, end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let src := offset } lt(src, srcEnd) { src := add(src, 0x20) }\n        {\n\n            let elementPos := src\n\n            mstore(dst, abi_decode_t_uint256(elementPos, end))\n            dst := add(dst, 0x20)\n        }\n    }\n\n    // uint256[]\n    function abi_decode_t_array$_t_uint256_$dyn_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_array$_t_uint256_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2 := abi_decode_t_array$_t_uint256_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2 := abi_decode_t_array$_t_uint256_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_array$_t_uint256_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 128))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value4 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_allocation_size_t_array$_t_address_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    // address[]\n    function abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_address_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let srcEnd := add(offset, mul(length, 0x20))\n        if gt(srcEnd, end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let src := offset } lt(src, srcEnd) { src := add(src, 0x20) }\n        {\n\n            let elementPos := src\n\n            mstore(dst, abi_decode_t_address(elementPos, end))\n            dst := add(dst, 0x20)\n        }\n    }\n\n    // address[]\n    function abi_decode_t_array$_t_address_$dyn_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_array$_t_address_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_array$_t_uint256_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_array$_t_uint256_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encodeUpdatedPos_t_uint256_to_t_uint256(value0, pos) -> updatedPos {\n        abi_encode_t_uint256_to_t_uint256(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // uint256[] -> uint256[]\n    function abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_uint256_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_uint256_to_t_uint256(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_decode_tuple_t_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_array$_t_uint256_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2 := abi_decode_t_array$_t_uint256_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256t_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 128))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value4 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function store_literal_in_memory_1bc1562e94238003917761236421517f1e0102048098634d927432356ee253a7(memPtr) {\n\n        mstore(add(memPtr, 0), \"Only game contract can call.\")\n\n    }\n\n    function abi_encode_t_stringliteral_1bc1562e94238003917761236421517f1e0102048098634d927432356ee253a7_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 28)\n        store_literal_in_memory_1bc1562e94238003917761236421517f1e0102048098634d927432356ee253a7(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_1bc1562e94238003917761236421517f1e0102048098634d927432356ee253a7__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1bc1562e94238003917761236421517f1e0102048098634d927432356ee253a7_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        mstore(add(headStart, 128), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value4,  tail)\n\n    }\n\n    function abi_decode_t_bytes4_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        mstore(add(headStart, 64), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value2,  tail)\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value3,  tail)\n\n        mstore(add(headStart, 128), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value4,  tail)\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value0,  tail)\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value1,  tail)\n\n    }\n\n}\n",
									"id": 14,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"3047": [
									{
										"length": 32,
										"start": 1275
									},
									{
										"length": 32,
										"start": 2062
									}
								]
							},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b50600436106100f2575f3560e01c80634f558e7911610095578063bd85b03911610064578063bd85b03914610290578063e985e9c5146102c0578063f242432a146102f0578063f5298aca1461030c576100f2565b80634f558e791461020c5780636b20c4541461023c578063731133e914610258578063a22cb46514610274576100f2565b806318160ddd116100d157806318160ddd146101865780631f7fdffa146101a45780632eb2c2d6146101c05780634e1273f4146101dc576100f2565b8062fdd58e146100f657806301ffc9a7146101265780630e89341c14610156575b5f80fd5b610110600480360381019061010b9190611b29565b610328565b60405161011d9190611b76565b60405180910390f35b610140600480360381019061013b9190611be4565b61037d565b60405161014d9190611c29565b60405180910390f35b610170600480360381019061016b9190611c42565b61045e565b60405161017d9190611cf7565b60405180910390f35b61018e6104f0565b60405161019b9190611b76565b60405180910390f35b6101be60048036038101906101b99190611f07565b6104f9565b005b6101da60048036038101906101d59190611fbf565b610599565b005b6101f660048036038101906101f1919061214a565b610640565b6040516102039190612277565b60405180910390f35b61022660048036038101906102219190611c42565b61074d565b6040516102339190611c29565b60405180910390f35b61025660048036038101906102519190612297565b610760565b005b610272600480360381019061026d919061231f565b61080c565b005b61028e600480360381019061028991906123c9565b6108ac565b005b6102aa60048036038101906102a59190611c42565b6108c2565b6040516102b79190611b76565b60405180910390f35b6102da60048036038101906102d59190612407565b6108dc565b6040516102e79190611c29565b60405180910390f35b61030a60048036038101906103059190612445565b61096a565b005b610326600480360381019061032191906124d8565b610a11565b005b5f805f8381526020019081526020015f205f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b5f7fd9b67a26000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061044757507f0e89341c000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b80610457575061045682610abd565b5b9050919050565b60606002805461046d90612555565b80601f016020809104026020016040519081016040528092919081815260200182805461049990612555565b80156104e45780601f106104bb576101008083540402835291602001916104e4565b820191905f5260205f20905b8154815290600101906020018083116104c757829003601f168201915b50505050509050919050565b5f600454905090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610587576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161057e906125cf565b60405180910390fd5b61059384848484610b26565b50505050565b5f6105a2610ba9565b90508073ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff16141580156105e757506105e586826108dc565b155b1561062b5780866040517fe237d9220000000000000000000000000000000000000000000000000000000081526004016106229291906125fc565b60405180910390fd5b6106388686868686610bb0565b505050505050565b6060815183511461068c57815183516040517f5b059991000000000000000000000000000000000000000000000000000000008152600401610683929190612623565b60405180910390fd5b5f835167ffffffffffffffff8111156106a8576106a7611d1b565b5b6040519080825280602002602001820160405280156106d65781602001602082028036833780820191505090505b5090505f5b8451811015610742576107126106fa8287610ca490919063ffffffff16565b61070d8387610cb790919063ffffffff16565b610328565b8282815181106107255761072461264a565b5b6020026020010181815250508061073b906126a4565b90506106db565b508091505092915050565b5f80610758836108c2565b119050919050565b610768610ba9565b73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141580156107b157506107af836107aa610ba9565b6108dc565b155b156107fc576107be610ba9565b836040517fe237d9220000000000000000000000000000000000000000000000000000000081526004016107f39291906125fc565b60405180910390fd5b610807838383610cca565b505050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461089a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610891906125cf565b60405180910390fd5b6108a684848484610d5a565b50505050565b6108be6108b7610ba9565b8383610def565b5050565b5f60035f8381526020019081526020015f20549050919050565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16905092915050565b5f610973610ba9565b90508073ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff16141580156109b857506109b686826108dc565b155b156109fc5780866040517fe237d9220000000000000000000000000000000000000000000000000000000081526004016109f39291906125fc565b60405180910390fd5b610a098686868686610f58565b505050505050565b610a19610ba9565b73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614158015610a625750610a6083610a5b610ba9565b6108dc565b155b15610aad57610a6f610ba9565b836040517fe237d922000000000000000000000000000000000000000000000000000000008152600401610aa49291906125fc565b60405180910390fd5b610ab883838361105e565b505050565b5f7f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610b96575f6040517f57f447ce000000000000000000000000000000000000000000000000000000008152600401610b8d91906126eb565b60405180910390fd5b610ba35f85858585611100565b50505050565b5f33905090565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610c20575f6040517f57f447ce000000000000000000000000000000000000000000000000000000008152600401610c1791906126eb565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1603610c90575f6040517f01a83514000000000000000000000000000000000000000000000000000000008152600401610c8791906126eb565b60405180910390fd5b610c9d8585858585611100565b5050505050565b5f60208202602084010151905092915050565b5f60208202602084010151905092915050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610d3a575f6040517f01a83514000000000000000000000000000000000000000000000000000000008152600401610d3191906126eb565b60405180910390fd5b610d55835f848460405180602001604052805f815250611100565b505050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610dca575f6040517f57f447ce000000000000000000000000000000000000000000000000000000008152600401610dc191906126eb565b60405180910390fd5b5f80610dd685856111ac565b91509150610de75f87848487611100565b505050505050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610e5f575f6040517fced3e100000000000000000000000000000000000000000000000000000000008152600401610e5691906126eb565b60405180910390fd5b8060015f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051610f4b9190611c29565b60405180910390a3505050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610fc8575f6040517f57f447ce000000000000000000000000000000000000000000000000000000008152600401610fbf91906126eb565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1603611038575f6040517f01a8351400000000000000000000000000000000000000000000000000000000815260040161102f91906126eb565b60405180910390fd5b5f8061104485856111ac565b915091506110558787848487611100565b50505050505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036110ce575f6040517f01a835140000000000000000000000000000000000000000000000000000000081526004016110c591906126eb565b60405180910390fd5b5f806110da84846111ac565b915091506110f9855f848460405180602001604052805f815250611100565b5050505050565b61110c858585856111dc565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16146111a5575f611148610ba9565b90506001845103611194575f6111675f86610cb790919063ffffffff16565b90505f61117d5f86610cb790919063ffffffff16565b905061118d8389898585896111ee565b50506111a3565b6111a281878787878761139d565b5b505b5050505050565b60608060405191506001825283602083015260408201905060018152826020820152604081016040529250929050565b6111e88484848461154c565b50505050565b5f8473ffffffffffffffffffffffffffffffffffffffff163b1115611395578373ffffffffffffffffffffffffffffffffffffffff1663f23a6e6187878686866040518663ffffffff1660e01b815260040161124e959493929190612756565b6020604051808303815f875af192505050801561128957506040513d601f19601f8201168201806040525081019061128691906127c2565b60015b61130a573d805f81146112b7576040519150601f19603f3d011682016040523d82523d5f602084013e6112bc565b606091505b505f81510361130257846040517f57f447ce0000000000000000000000000000000000000000000000000000000081526004016112f991906126eb565b60405180910390fd5b805181602001fd5b63f23a6e6160e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161461139357846040517f57f447ce00000000000000000000000000000000000000000000000000000000815260040161138a91906126eb565b60405180910390fd5b505b505050505050565b5f8473ffffffffffffffffffffffffffffffffffffffff163b1115611544578373ffffffffffffffffffffffffffffffffffffffff1663bc197c8187878686866040518663ffffffff1660e01b81526004016113fd9594939291906127ed565b6020604051808303815f875af192505050801561143857506040513d601f19601f8201168201806040525081019061143591906127c2565b60015b6114b9573d805f8114611466576040519150601f19603f3d011682016040523d82523d5f602084013e61146b565b606091505b505f8151036114b157846040517f57f447ce0000000000000000000000000000000000000000000000000000000081526004016114a891906126eb565b60405180910390fd5b805181602001fd5b63bc197c8160e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161461154257846040517f57f447ce00000000000000000000000000000000000000000000000000000000815260040161153991906126eb565b60405180910390fd5b505b505050505050565b611558848484846116f5565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603611631575f805b8351811015611616575f8382815181106115ab576115aa61264a565b5b602002602001015190508060035f8785815181106115cc576115cb61264a565b5b602002602001015181526020019081526020015f205f8282546115ef9190612853565b9250508190555080836116029190612853565b9250508061160f906126a4565b905061158e565b508060045f8282546116289190612853565b92505081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036116ef575f805b83518110156116dd575f8382815181106116845761168361264a565b5b602002602001015190508060035f8785815181106116a5576116a461264a565b5b602002602001015181526020019081526020015f205f8282540392505081905550808301925050806116d6906126a4565b9050611667565b508060045f8282540392505081905550505b50505050565b805182511461173f57815181516040517f5b059991000000000000000000000000000000000000000000000000000000008152600401611736929190612623565b60405180910390fd5b5f611748610ba9565b90505f5b835181101561194a575f6117698286610cb790919063ffffffff16565b90505f61177f8386610cb790919063ffffffff16565b90505f73ffffffffffffffffffffffffffffffffffffffff168873ffffffffffffffffffffffffffffffffffffffff16146118a2575f805f8481526020019081526020015f205f8a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205490508181101561184e57888183856040517f03dee4c50000000000000000000000000000000000000000000000000000000081526004016118459493929190612886565b60405180910390fd5b8181035f808581526020019081526020015f205f8b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff161461193757805f808481526020019081526020015f205f8973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825461192f9190612853565b925050819055505b505080611943906126a4565b905061174c565b506001835103611a05575f6119685f85610cb790919063ffffffff16565b90505f61197e5f85610cb790919063ffffffff16565b90508573ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f6285856040516119f6929190612623565b60405180910390a45050611a84565b8373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8686604051611a7b9291906128c9565b60405180910390a45b5050505050565b5f604051905090565b5f80fd5b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f611ac582611a9c565b9050919050565b611ad581611abb565b8114611adf575f80fd5b50565b5f81359050611af081611acc565b92915050565b5f819050919050565b611b0881611af6565b8114611b12575f80fd5b50565b5f81359050611b2381611aff565b92915050565b5f8060408385031215611b3f57611b3e611a94565b5b5f611b4c85828601611ae2565b9250506020611b5d85828601611b15565b9150509250929050565b611b7081611af6565b82525050565b5f602082019050611b895f830184611b67565b92915050565b5f7fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b611bc381611b8f565b8114611bcd575f80fd5b50565b5f81359050611bde81611bba565b92915050565b5f60208284031215611bf957611bf8611a94565b5b5f611c0684828501611bd0565b91505092915050565b5f8115159050919050565b611c2381611c0f565b82525050565b5f602082019050611c3c5f830184611c1a565b92915050565b5f60208284031215611c5757611c56611a94565b5b5f611c6484828501611b15565b91505092915050565b5f81519050919050565b5f82825260208201905092915050565b5f5b83811015611ca4578082015181840152602081019050611c89565b5f8484015250505050565b5f601f19601f8301169050919050565b5f611cc982611c6d565b611cd38185611c77565b9350611ce3818560208601611c87565b611cec81611caf565b840191505092915050565b5f6020820190508181035f830152611d0f8184611cbf565b905092915050565b5f80fd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b611d5182611caf565b810181811067ffffffffffffffff82111715611d7057611d6f611d1b565b5b80604052505050565b5f611d82611a8b565b9050611d8e8282611d48565b919050565b5f67ffffffffffffffff821115611dad57611dac611d1b565b5b602082029050602081019050919050565b5f80fd5b5f611dd4611dcf84611d93565b611d79565b90508083825260208201905060208402830185811115611df757611df6611dbe565b5b835b81811015611e205780611e0c8882611b15565b845260208401935050602081019050611df9565b5050509392505050565b5f82601f830112611e3e57611e3d611d17565b5b8135611e4e848260208601611dc2565b91505092915050565b5f80fd5b5f67ffffffffffffffff821115611e7557611e74611d1b565b5b611e7e82611caf565b9050602081019050919050565b828183375f83830152505050565b5f611eab611ea684611e5b565b611d79565b905082815260208101848484011115611ec757611ec6611e57565b5b611ed2848285611e8b565b509392505050565b5f82601f830112611eee57611eed611d17565b5b8135611efe848260208601611e99565b91505092915050565b5f805f8060808587031215611f1f57611f1e611a94565b5b5f611f2c87828801611ae2565b945050602085013567ffffffffffffffff811115611f4d57611f4c611a98565b5b611f5987828801611e2a565b935050604085013567ffffffffffffffff811115611f7a57611f79611a98565b5b611f8687828801611e2a565b925050606085013567ffffffffffffffff811115611fa757611fa6611a98565b5b611fb387828801611eda565b91505092959194509250565b5f805f805f60a08688031215611fd857611fd7611a94565b5b5f611fe588828901611ae2565b9550506020611ff688828901611ae2565b945050604086013567ffffffffffffffff81111561201757612016611a98565b5b61202388828901611e2a565b935050606086013567ffffffffffffffff81111561204457612043611a98565b5b61205088828901611e2a565b925050608086013567ffffffffffffffff81111561207157612070611a98565b5b61207d88828901611eda565b9150509295509295909350565b5f67ffffffffffffffff8211156120a4576120a3611d1b565b5b602082029050602081019050919050565b5f6120c76120c28461208a565b611d79565b905080838252602082019050602084028301858111156120ea576120e9611dbe565b5b835b8181101561211357806120ff8882611ae2565b8452602084019350506020810190506120ec565b5050509392505050565b5f82601f83011261213157612130611d17565b5b81356121418482602086016120b5565b91505092915050565b5f80604083850312156121605761215f611a94565b5b5f83013567ffffffffffffffff81111561217d5761217c611a98565b5b6121898582860161211d565b925050602083013567ffffffffffffffff8111156121aa576121a9611a98565b5b6121b685828601611e2a565b9150509250929050565b5f81519050919050565b5f82825260208201905092915050565b5f819050602082019050919050565b6121f281611af6565b82525050565b5f61220383836121e9565b60208301905092915050565b5f602082019050919050565b5f612225826121c0565b61222f81856121ca565b935061223a836121da565b805f5b8381101561226a57815161225188826121f8565b975061225c8361220f565b92505060018101905061223d565b5085935050505092915050565b5f6020820190508181035f83015261228f818461221b565b905092915050565b5f805f606084860312156122ae576122ad611a94565b5b5f6122bb86828701611ae2565b935050602084013567ffffffffffffffff8111156122dc576122db611a98565b5b6122e886828701611e2a565b925050604084013567ffffffffffffffff81111561230957612308611a98565b5b61231586828701611e2a565b9150509250925092565b5f805f806080858703121561233757612336611a94565b5b5f61234487828801611ae2565b945050602061235587828801611b15565b935050604061236687828801611b15565b925050606085013567ffffffffffffffff81111561238757612386611a98565b5b61239387828801611eda565b91505092959194509250565b6123a881611c0f565b81146123b2575f80fd5b50565b5f813590506123c38161239f565b92915050565b5f80604083850312156123df576123de611a94565b5b5f6123ec85828601611ae2565b92505060206123fd858286016123b5565b9150509250929050565b5f806040838503121561241d5761241c611a94565b5b5f61242a85828601611ae2565b925050602061243b85828601611ae2565b9150509250929050565b5f805f805f60a0868803121561245e5761245d611a94565b5b5f61246b88828901611ae2565b955050602061247c88828901611ae2565b945050604061248d88828901611b15565b935050606061249e88828901611b15565b925050608086013567ffffffffffffffff8111156124bf576124be611a98565b5b6124cb88828901611eda565b9150509295509295909350565b5f805f606084860312156124ef576124ee611a94565b5b5f6124fc86828701611ae2565b935050602061250d86828701611b15565b925050604061251e86828701611b15565b9150509250925092565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061256c57607f821691505b60208210810361257f5761257e612528565b5b50919050565b7f4f6e6c792067616d6520636f6e74726163742063616e2063616c6c2e000000005f82015250565b5f6125b9601c83611c77565b91506125c482612585565b602082019050919050565b5f6020820190508181035f8301526125e6816125ad565b9050919050565b6125f681611abb565b82525050565b5f60408201905061260f5f8301856125ed565b61261c60208301846125ed565b9392505050565b5f6040820190506126365f830185611b67565b6126436020830184611b67565b9392505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6126ae82611af6565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036126e0576126df612677565b5b600182019050919050565b5f6020820190506126fe5f8301846125ed565b92915050565b5f81519050919050565b5f82825260208201905092915050565b5f61272882612704565b612732818561270e565b9350612742818560208601611c87565b61274b81611caf565b840191505092915050565b5f60a0820190506127695f8301886125ed565b61277660208301876125ed565b6127836040830186611b67565b6127906060830185611b67565b81810360808301526127a2818461271e565b90509695505050505050565b5f815190506127bc81611bba565b92915050565b5f602082840312156127d7576127d6611a94565b5b5f6127e4848285016127ae565b91505092915050565b5f60a0820190506128005f8301886125ed565b61280d60208301876125ed565b818103604083015261281f818661221b565b90508181036060830152612833818561221b565b90508181036080830152612847818461271e565b90509695505050505050565b5f61285d82611af6565b915061286883611af6565b92508282019050808211156128805761287f612677565b5b92915050565b5f6080820190506128995f8301876125ed565b6128a66020830186611b67565b6128b36040830185611b67565b6128c06060830184611b67565b95945050505050565b5f6040820190508181035f8301526128e1818561221b565b905081810360208301526128f5818461221b565b9050939250505056fea26469706673582212208758f283f5b2a1538ffdd8d6bd6203a646ee510cc9cd8e4aa7ba217de96a48b764736f6c63430008140033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xF2 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4F558E79 GT PUSH2 0x95 JUMPI DUP1 PUSH4 0xBD85B039 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xBD85B039 EQ PUSH2 0x290 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x2C0 JUMPI DUP1 PUSH4 0xF242432A EQ PUSH2 0x2F0 JUMPI DUP1 PUSH4 0xF5298ACA EQ PUSH2 0x30C JUMPI PUSH2 0xF2 JUMP JUMPDEST DUP1 PUSH4 0x4F558E79 EQ PUSH2 0x20C JUMPI DUP1 PUSH4 0x6B20C454 EQ PUSH2 0x23C JUMPI DUP1 PUSH4 0x731133E9 EQ PUSH2 0x258 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x274 JUMPI PUSH2 0xF2 JUMP JUMPDEST DUP1 PUSH4 0x18160DDD GT PUSH2 0xD1 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x186 JUMPI DUP1 PUSH4 0x1F7FDFFA EQ PUSH2 0x1A4 JUMPI DUP1 PUSH4 0x2EB2C2D6 EQ PUSH2 0x1C0 JUMPI DUP1 PUSH4 0x4E1273F4 EQ PUSH2 0x1DC JUMPI PUSH2 0xF2 JUMP JUMPDEST DUP1 PUSH3 0xFDD58E EQ PUSH2 0xF6 JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x126 JUMPI DUP1 PUSH4 0xE89341C EQ PUSH2 0x156 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x110 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x10B SWAP2 SWAP1 PUSH2 0x1B29 JUMP JUMPDEST PUSH2 0x328 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x11D SWAP2 SWAP1 PUSH2 0x1B76 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x140 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x13B SWAP2 SWAP1 PUSH2 0x1BE4 JUMP JUMPDEST PUSH2 0x37D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14D SWAP2 SWAP1 PUSH2 0x1C29 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x170 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x16B SWAP2 SWAP1 PUSH2 0x1C42 JUMP JUMPDEST PUSH2 0x45E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x17D SWAP2 SWAP1 PUSH2 0x1CF7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x18E PUSH2 0x4F0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x19B SWAP2 SWAP1 PUSH2 0x1B76 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1BE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B9 SWAP2 SWAP1 PUSH2 0x1F07 JUMP JUMPDEST PUSH2 0x4F9 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1DA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1D5 SWAP2 SWAP1 PUSH2 0x1FBF JUMP JUMPDEST PUSH2 0x599 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1F6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1F1 SWAP2 SWAP1 PUSH2 0x214A JUMP JUMPDEST PUSH2 0x640 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x203 SWAP2 SWAP1 PUSH2 0x2277 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x226 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x221 SWAP2 SWAP1 PUSH2 0x1C42 JUMP JUMPDEST PUSH2 0x74D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x233 SWAP2 SWAP1 PUSH2 0x1C29 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x256 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x251 SWAP2 SWAP1 PUSH2 0x2297 JUMP JUMPDEST PUSH2 0x760 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x272 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x26D SWAP2 SWAP1 PUSH2 0x231F JUMP JUMPDEST PUSH2 0x80C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x28E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x289 SWAP2 SWAP1 PUSH2 0x23C9 JUMP JUMPDEST PUSH2 0x8AC JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2AA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A5 SWAP2 SWAP1 PUSH2 0x1C42 JUMP JUMPDEST PUSH2 0x8C2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B7 SWAP2 SWAP1 PUSH2 0x1B76 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2DA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2D5 SWAP2 SWAP1 PUSH2 0x2407 JUMP JUMPDEST PUSH2 0x8DC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2E7 SWAP2 SWAP1 PUSH2 0x1C29 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x30A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x305 SWAP2 SWAP1 PUSH2 0x2445 JUMP JUMPDEST PUSH2 0x96A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x326 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x321 SWAP2 SWAP1 PUSH2 0x24D8 JUMP JUMPDEST PUSH2 0xA11 JUMP JUMPDEST STOP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH32 0xD9B67A2600000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x447 JUMPI POP PUSH32 0xE89341C00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x457 JUMPI POP PUSH2 0x456 DUP3 PUSH2 0xABD JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0x46D SWAP1 PUSH2 0x2555 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x499 SWAP1 PUSH2 0x2555 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4E4 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x4BB JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4E4 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x4C7 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x4 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x587 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x57E SWAP1 PUSH2 0x25CF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x593 DUP5 DUP5 DUP5 DUP5 PUSH2 0xB26 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x5A2 PUSH2 0xBA9 JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x5E7 JUMPI POP PUSH2 0x5E5 DUP7 DUP3 PUSH2 0x8DC JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x62B JUMPI DUP1 DUP7 PUSH1 0x40 MLOAD PUSH32 0xE237D92200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x622 SWAP3 SWAP2 SWAP1 PUSH2 0x25FC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x638 DUP7 DUP7 DUP7 DUP7 DUP7 PUSH2 0xBB0 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x68C JUMPI DUP2 MLOAD DUP4 MLOAD PUSH1 0x40 MLOAD PUSH32 0x5B05999100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x683 SWAP3 SWAP2 SWAP1 PUSH2 0x2623 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP4 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x6A8 JUMPI PUSH2 0x6A7 PUSH2 0x1D1B JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x6D6 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x742 JUMPI PUSH2 0x712 PUSH2 0x6FA DUP3 DUP8 PUSH2 0xCA4 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x70D DUP4 DUP8 PUSH2 0xCB7 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x328 JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x725 JUMPI PUSH2 0x724 PUSH2 0x264A JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP1 PUSH2 0x73B SWAP1 PUSH2 0x26A4 JUMP JUMPDEST SWAP1 POP PUSH2 0x6DB JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x758 DUP4 PUSH2 0x8C2 JUMP JUMPDEST GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x768 PUSH2 0xBA9 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x7B1 JUMPI POP PUSH2 0x7AF DUP4 PUSH2 0x7AA PUSH2 0xBA9 JUMP JUMPDEST PUSH2 0x8DC JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x7FC JUMPI PUSH2 0x7BE PUSH2 0xBA9 JUMP JUMPDEST DUP4 PUSH1 0x40 MLOAD PUSH32 0xE237D92200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7F3 SWAP3 SWAP2 SWAP1 PUSH2 0x25FC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x807 DUP4 DUP4 DUP4 PUSH2 0xCCA JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x89A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x891 SWAP1 PUSH2 0x25CF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x8A6 DUP5 DUP5 DUP5 DUP5 PUSH2 0xD5A JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x8BE PUSH2 0x8B7 PUSH2 0xBA9 JUMP JUMPDEST DUP4 DUP4 PUSH2 0xDEF JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0x3 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x973 PUSH2 0xBA9 JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x9B8 JUMPI POP PUSH2 0x9B6 DUP7 DUP3 PUSH2 0x8DC JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x9FC JUMPI DUP1 DUP7 PUSH1 0x40 MLOAD PUSH32 0xE237D92200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9F3 SWAP3 SWAP2 SWAP1 PUSH2 0x25FC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA09 DUP7 DUP7 DUP7 DUP7 DUP7 PUSH2 0xF58 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xA19 PUSH2 0xBA9 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0xA62 JUMPI POP PUSH2 0xA60 DUP4 PUSH2 0xA5B PUSH2 0xBA9 JUMP JUMPDEST PUSH2 0x8DC JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0xAAD JUMPI PUSH2 0xA6F PUSH2 0xBA9 JUMP JUMPDEST DUP4 PUSH1 0x40 MLOAD PUSH32 0xE237D92200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAA4 SWAP3 SWAP2 SWAP1 PUSH2 0x25FC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xAB8 DUP4 DUP4 DUP4 PUSH2 0x105E JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB96 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB8D SWAP2 SWAP1 PUSH2 0x26EB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xBA3 PUSH0 DUP6 DUP6 DUP6 DUP6 PUSH2 0x1100 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xC20 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC17 SWAP2 SWAP1 PUSH2 0x26EB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xC90 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1A8351400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC87 SWAP2 SWAP1 PUSH2 0x26EB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xC9D DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0x1100 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 MUL PUSH1 0x20 DUP5 ADD ADD MLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 MUL PUSH1 0x20 DUP5 ADD ADD MLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xD3A JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1A8351400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD31 SWAP2 SWAP1 PUSH2 0x26EB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xD55 DUP4 PUSH0 DUP5 DUP5 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0x1100 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xDCA JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDC1 SWAP2 SWAP1 PUSH2 0x26EB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 PUSH2 0xDD6 DUP6 DUP6 PUSH2 0x11AC JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0xDE7 PUSH0 DUP8 DUP5 DUP5 DUP8 PUSH2 0x1100 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xE5F JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xCED3E10000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE56 SWAP2 SWAP1 PUSH2 0x26EB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0xF4B SWAP2 SWAP1 PUSH2 0x1C29 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xFC8 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFBF SWAP2 SWAP1 PUSH2 0x26EB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1038 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1A8351400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x102F SWAP2 SWAP1 PUSH2 0x26EB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 PUSH2 0x1044 DUP6 DUP6 PUSH2 0x11AC JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0x1055 DUP8 DUP8 DUP5 DUP5 DUP8 PUSH2 0x1100 JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x10CE JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1A8351400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10C5 SWAP2 SWAP1 PUSH2 0x26EB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 PUSH2 0x10DA DUP5 DUP5 PUSH2 0x11AC JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0x10F9 DUP6 PUSH0 DUP5 DUP5 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0x1100 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH2 0x110C DUP6 DUP6 DUP6 DUP6 PUSH2 0x11DC JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x11A5 JUMPI PUSH0 PUSH2 0x1148 PUSH2 0xBA9 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 DUP5 MLOAD SUB PUSH2 0x1194 JUMPI PUSH0 PUSH2 0x1167 PUSH0 DUP7 PUSH2 0xCB7 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x117D PUSH0 DUP7 PUSH2 0xCB7 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x118D DUP4 DUP10 DUP10 DUP6 DUP6 DUP10 PUSH2 0x11EE JUMP JUMPDEST POP POP PUSH2 0x11A3 JUMP JUMPDEST PUSH2 0x11A2 DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0x139D JUMP JUMPDEST JUMPDEST POP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP1 PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1 DUP3 MSTORE DUP4 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH1 0x1 DUP2 MSTORE DUP3 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD PUSH1 0x40 MSTORE SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x11E8 DUP5 DUP5 DUP5 DUP5 PUSH2 0x154C JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT ISZERO PUSH2 0x1395 JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xF23A6E61 DUP8 DUP8 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x124E SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2756 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1289 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1286 SWAP2 SWAP1 PUSH2 0x27C2 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x130A JUMPI RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x12B7 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x12BC JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH0 DUP2 MLOAD SUB PUSH2 0x1302 JUMPI DUP5 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12F9 SWAP2 SWAP1 PUSH2 0x26EB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0xF23A6E61 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x1393 JUMPI DUP5 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x138A SWAP2 SWAP1 PUSH2 0x26EB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT ISZERO PUSH2 0x1544 JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xBC197C81 DUP8 DUP8 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13FD SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x27ED JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1438 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1435 SWAP2 SWAP1 PUSH2 0x27C2 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x14B9 JUMPI RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x1466 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x146B JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH0 DUP2 MLOAD SUB PUSH2 0x14B1 JUMPI DUP5 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14A8 SWAP2 SWAP1 PUSH2 0x26EB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0xBC197C81 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x1542 JUMPI DUP5 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1539 SWAP2 SWAP1 PUSH2 0x26EB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1558 DUP5 DUP5 DUP5 DUP5 PUSH2 0x16F5 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1631 JUMPI PUSH0 DUP1 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x1616 JUMPI PUSH0 DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x15AB JUMPI PUSH2 0x15AA PUSH2 0x264A JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP DUP1 PUSH1 0x3 PUSH0 DUP8 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x15CC JUMPI PUSH2 0x15CB PUSH2 0x264A JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x15EF SWAP2 SWAP1 PUSH2 0x2853 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 DUP4 PUSH2 0x1602 SWAP2 SWAP1 PUSH2 0x2853 JUMP JUMPDEST SWAP3 POP POP DUP1 PUSH2 0x160F SWAP1 PUSH2 0x26A4 JUMP JUMPDEST SWAP1 POP PUSH2 0x158E JUMP JUMPDEST POP DUP1 PUSH1 0x4 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1628 SWAP2 SWAP1 PUSH2 0x2853 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x16EF JUMPI PUSH0 DUP1 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x16DD JUMPI PUSH0 DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1684 JUMPI PUSH2 0x1683 PUSH2 0x264A JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP DUP1 PUSH1 0x3 PUSH0 DUP8 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x16A5 JUMPI PUSH2 0x16A4 PUSH2 0x264A JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 DUP4 ADD SWAP3 POP POP DUP1 PUSH2 0x16D6 SWAP1 PUSH2 0x26A4 JUMP JUMPDEST SWAP1 POP PUSH2 0x1667 JUMP JUMPDEST POP DUP1 PUSH1 0x4 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP JUMPDEST POP POP POP POP JUMP JUMPDEST DUP1 MLOAD DUP3 MLOAD EQ PUSH2 0x173F JUMPI DUP2 MLOAD DUP2 MLOAD PUSH1 0x40 MLOAD PUSH32 0x5B05999100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1736 SWAP3 SWAP2 SWAP1 PUSH2 0x2623 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x1748 PUSH2 0xBA9 JUMP JUMPDEST SWAP1 POP PUSH0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x194A JUMPI PUSH0 PUSH2 0x1769 DUP3 DUP7 PUSH2 0xCB7 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x177F DUP4 DUP7 PUSH2 0xCB7 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x18A2 JUMPI PUSH0 DUP1 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x184E JUMPI DUP9 DUP2 DUP4 DUP6 PUSH1 0x40 MLOAD PUSH32 0x3DEE4C500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1845 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2886 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1937 JUMPI DUP1 PUSH0 DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x192F SWAP2 SWAP1 PUSH2 0x2853 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST POP POP DUP1 PUSH2 0x1943 SWAP1 PUSH2 0x26A4 JUMP JUMPDEST SWAP1 POP PUSH2 0x174C JUMP JUMPDEST POP PUSH1 0x1 DUP4 MLOAD SUB PUSH2 0x1A05 JUMPI PUSH0 PUSH2 0x1968 PUSH0 DUP6 PUSH2 0xCB7 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x197E PUSH0 DUP6 PUSH2 0xCB7 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH2 0x19F6 SWAP3 SWAP2 SWAP1 PUSH2 0x2623 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP PUSH2 0x1A84 JUMP JUMPDEST DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB DUP7 DUP7 PUSH1 0x40 MLOAD PUSH2 0x1A7B SWAP3 SWAP2 SWAP1 PUSH2 0x28C9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1AC5 DUP3 PUSH2 0x1A9C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1AD5 DUP2 PUSH2 0x1ABB JUMP JUMPDEST DUP2 EQ PUSH2 0x1ADF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1AF0 DUP2 PUSH2 0x1ACC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1B08 DUP2 PUSH2 0x1AF6 JUMP JUMPDEST DUP2 EQ PUSH2 0x1B12 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1B23 DUP2 PUSH2 0x1AFF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1B3F JUMPI PUSH2 0x1B3E PUSH2 0x1A94 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1B4C DUP6 DUP3 DUP7 ADD PUSH2 0x1AE2 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1B5D DUP6 DUP3 DUP7 ADD PUSH2 0x1B15 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x1B70 DUP2 PUSH2 0x1AF6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1B89 PUSH0 DUP4 ADD DUP5 PUSH2 0x1B67 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1BC3 DUP2 PUSH2 0x1B8F JUMP JUMPDEST DUP2 EQ PUSH2 0x1BCD JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1BDE DUP2 PUSH2 0x1BBA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1BF9 JUMPI PUSH2 0x1BF8 PUSH2 0x1A94 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1C06 DUP5 DUP3 DUP6 ADD PUSH2 0x1BD0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1C23 DUP2 PUSH2 0x1C0F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1C3C PUSH0 DUP4 ADD DUP5 PUSH2 0x1C1A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1C57 JUMPI PUSH2 0x1C56 PUSH2 0x1A94 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1C64 DUP5 DUP3 DUP6 ADD PUSH2 0x1B15 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1CA4 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1C89 JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1CC9 DUP3 PUSH2 0x1C6D JUMP JUMPDEST PUSH2 0x1CD3 DUP2 DUP6 PUSH2 0x1C77 JUMP JUMPDEST SWAP4 POP PUSH2 0x1CE3 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1C87 JUMP JUMPDEST PUSH2 0x1CEC DUP2 PUSH2 0x1CAF JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1D0F DUP2 DUP5 PUSH2 0x1CBF JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x1D51 DUP3 PUSH2 0x1CAF JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1D70 JUMPI PUSH2 0x1D6F PUSH2 0x1D1B JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1D82 PUSH2 0x1A8B JUMP JUMPDEST SWAP1 POP PUSH2 0x1D8E DUP3 DUP3 PUSH2 0x1D48 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1DAD JUMPI PUSH2 0x1DAC PUSH2 0x1D1B JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH2 0x1DD4 PUSH2 0x1DCF DUP5 PUSH2 0x1D93 JUMP JUMPDEST PUSH2 0x1D79 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x1DF7 JUMPI PUSH2 0x1DF6 PUSH2 0x1DBE JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1E20 JUMPI DUP1 PUSH2 0x1E0C DUP9 DUP3 PUSH2 0x1B15 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1DF9 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1E3E JUMPI PUSH2 0x1E3D PUSH2 0x1D17 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1E4E DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1DC2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1E75 JUMPI PUSH2 0x1E74 PUSH2 0x1D1B JUMP JUMPDEST JUMPDEST PUSH2 0x1E7E DUP3 PUSH2 0x1CAF JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1EAB PUSH2 0x1EA6 DUP5 PUSH2 0x1E5B JUMP JUMPDEST PUSH2 0x1D79 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1EC7 JUMPI PUSH2 0x1EC6 PUSH2 0x1E57 JUMP JUMPDEST JUMPDEST PUSH2 0x1ED2 DUP5 DUP3 DUP6 PUSH2 0x1E8B JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1EEE JUMPI PUSH2 0x1EED PUSH2 0x1D17 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1EFE DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1E99 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1F1F JUMPI PUSH2 0x1F1E PUSH2 0x1A94 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1F2C DUP8 DUP3 DUP9 ADD PUSH2 0x1AE2 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1F4D JUMPI PUSH2 0x1F4C PUSH2 0x1A98 JUMP JUMPDEST JUMPDEST PUSH2 0x1F59 DUP8 DUP3 DUP9 ADD PUSH2 0x1E2A JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1F7A JUMPI PUSH2 0x1F79 PUSH2 0x1A98 JUMP JUMPDEST JUMPDEST PUSH2 0x1F86 DUP8 DUP3 DUP9 ADD PUSH2 0x1E2A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1FA7 JUMPI PUSH2 0x1FA6 PUSH2 0x1A98 JUMP JUMPDEST JUMPDEST PUSH2 0x1FB3 DUP8 DUP3 DUP9 ADD PUSH2 0x1EDA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1FD8 JUMPI PUSH2 0x1FD7 PUSH2 0x1A94 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1FE5 DUP9 DUP3 DUP10 ADD PUSH2 0x1AE2 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x1FF6 DUP9 DUP3 DUP10 ADD PUSH2 0x1AE2 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2017 JUMPI PUSH2 0x2016 PUSH2 0x1A98 JUMP JUMPDEST JUMPDEST PUSH2 0x2023 DUP9 DUP3 DUP10 ADD PUSH2 0x1E2A JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2044 JUMPI PUSH2 0x2043 PUSH2 0x1A98 JUMP JUMPDEST JUMPDEST PUSH2 0x2050 DUP9 DUP3 DUP10 ADD PUSH2 0x1E2A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2071 JUMPI PUSH2 0x2070 PUSH2 0x1A98 JUMP JUMPDEST JUMPDEST PUSH2 0x207D DUP9 DUP3 DUP10 ADD PUSH2 0x1EDA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x20A4 JUMPI PUSH2 0x20A3 PUSH2 0x1D1B JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x20C7 PUSH2 0x20C2 DUP5 PUSH2 0x208A JUMP JUMPDEST PUSH2 0x1D79 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x20EA JUMPI PUSH2 0x20E9 PUSH2 0x1DBE JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2113 JUMPI DUP1 PUSH2 0x20FF DUP9 DUP3 PUSH2 0x1AE2 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x20EC JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2131 JUMPI PUSH2 0x2130 PUSH2 0x1D17 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2141 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x20B5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2160 JUMPI PUSH2 0x215F PUSH2 0x1A94 JUMP JUMPDEST JUMPDEST PUSH0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x217D JUMPI PUSH2 0x217C PUSH2 0x1A98 JUMP JUMPDEST JUMPDEST PUSH2 0x2189 DUP6 DUP3 DUP7 ADD PUSH2 0x211D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x21AA JUMPI PUSH2 0x21A9 PUSH2 0x1A98 JUMP JUMPDEST JUMPDEST PUSH2 0x21B6 DUP6 DUP3 DUP7 ADD PUSH2 0x1E2A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x21F2 DUP2 PUSH2 0x1AF6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2203 DUP4 DUP4 PUSH2 0x21E9 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2225 DUP3 PUSH2 0x21C0 JUMP JUMPDEST PUSH2 0x222F DUP2 DUP6 PUSH2 0x21CA JUMP JUMPDEST SWAP4 POP PUSH2 0x223A DUP4 PUSH2 0x21DA JUMP JUMPDEST DUP1 PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x226A JUMPI DUP2 MLOAD PUSH2 0x2251 DUP9 DUP3 PUSH2 0x21F8 JUMP JUMPDEST SWAP8 POP PUSH2 0x225C DUP4 PUSH2 0x220F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x223D JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x228F DUP2 DUP5 PUSH2 0x221B JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x22AE JUMPI PUSH2 0x22AD PUSH2 0x1A94 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x22BB DUP7 DUP3 DUP8 ADD PUSH2 0x1AE2 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x22DC JUMPI PUSH2 0x22DB PUSH2 0x1A98 JUMP JUMPDEST JUMPDEST PUSH2 0x22E8 DUP7 DUP3 DUP8 ADD PUSH2 0x1E2A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2309 JUMPI PUSH2 0x2308 PUSH2 0x1A98 JUMP JUMPDEST JUMPDEST PUSH2 0x2315 DUP7 DUP3 DUP8 ADD PUSH2 0x1E2A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x2337 JUMPI PUSH2 0x2336 PUSH2 0x1A94 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2344 DUP8 DUP3 DUP9 ADD PUSH2 0x1AE2 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x2355 DUP8 DUP3 DUP9 ADD PUSH2 0x1B15 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x2366 DUP8 DUP3 DUP9 ADD PUSH2 0x1B15 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2387 JUMPI PUSH2 0x2386 PUSH2 0x1A98 JUMP JUMPDEST JUMPDEST PUSH2 0x2393 DUP8 DUP3 DUP9 ADD PUSH2 0x1EDA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH2 0x23A8 DUP2 PUSH2 0x1C0F JUMP JUMPDEST DUP2 EQ PUSH2 0x23B2 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x23C3 DUP2 PUSH2 0x239F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x23DF JUMPI PUSH2 0x23DE PUSH2 0x1A94 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x23EC DUP6 DUP3 DUP7 ADD PUSH2 0x1AE2 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x23FD DUP6 DUP3 DUP7 ADD PUSH2 0x23B5 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x241D JUMPI PUSH2 0x241C PUSH2 0x1A94 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x242A DUP6 DUP3 DUP7 ADD PUSH2 0x1AE2 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x243B DUP6 DUP3 DUP7 ADD PUSH2 0x1AE2 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x245E JUMPI PUSH2 0x245D PUSH2 0x1A94 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x246B DUP9 DUP3 DUP10 ADD PUSH2 0x1AE2 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x247C DUP9 DUP3 DUP10 ADD PUSH2 0x1AE2 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x248D DUP9 DUP3 DUP10 ADD PUSH2 0x1B15 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x249E DUP9 DUP3 DUP10 ADD PUSH2 0x1B15 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x24BF JUMPI PUSH2 0x24BE PUSH2 0x1A98 JUMP JUMPDEST JUMPDEST PUSH2 0x24CB DUP9 DUP3 DUP10 ADD PUSH2 0x1EDA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x24EF JUMPI PUSH2 0x24EE PUSH2 0x1A94 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x24FC DUP7 DUP3 DUP8 ADD PUSH2 0x1AE2 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x250D DUP7 DUP3 DUP8 ADD PUSH2 0x1B15 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x251E DUP7 DUP3 DUP8 ADD PUSH2 0x1B15 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x256C JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x257F JUMPI PUSH2 0x257E PUSH2 0x2528 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F6E6C792067616D6520636F6E74726163742063616E2063616C6C2E00000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x25B9 PUSH1 0x1C DUP4 PUSH2 0x1C77 JUMP JUMPDEST SWAP2 POP PUSH2 0x25C4 DUP3 PUSH2 0x2585 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x25E6 DUP2 PUSH2 0x25AD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x25F6 DUP2 PUSH2 0x1ABB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x260F PUSH0 DUP4 ADD DUP6 PUSH2 0x25ED JUMP JUMPDEST PUSH2 0x261C PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x25ED JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2636 PUSH0 DUP4 ADD DUP6 PUSH2 0x1B67 JUMP JUMPDEST PUSH2 0x2643 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1B67 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x26AE DUP3 PUSH2 0x1AF6 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x26E0 JUMPI PUSH2 0x26DF PUSH2 0x2677 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x26FE PUSH0 DUP4 ADD DUP5 PUSH2 0x25ED JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2728 DUP3 PUSH2 0x2704 JUMP JUMPDEST PUSH2 0x2732 DUP2 DUP6 PUSH2 0x270E JUMP JUMPDEST SWAP4 POP PUSH2 0x2742 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1C87 JUMP JUMPDEST PUSH2 0x274B DUP2 PUSH2 0x1CAF JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x2769 PUSH0 DUP4 ADD DUP9 PUSH2 0x25ED JUMP JUMPDEST PUSH2 0x2776 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x25ED JUMP JUMPDEST PUSH2 0x2783 PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x1B67 JUMP JUMPDEST PUSH2 0x2790 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x1B67 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x27A2 DUP2 DUP5 PUSH2 0x271E JUMP JUMPDEST SWAP1 POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x27BC DUP2 PUSH2 0x1BBA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x27D7 JUMPI PUSH2 0x27D6 PUSH2 0x1A94 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x27E4 DUP5 DUP3 DUP6 ADD PUSH2 0x27AE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x2800 PUSH0 DUP4 ADD DUP9 PUSH2 0x25ED JUMP JUMPDEST PUSH2 0x280D PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x25ED JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x281F DUP2 DUP7 PUSH2 0x221B JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x2833 DUP2 DUP6 PUSH2 0x221B JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x2847 DUP2 DUP5 PUSH2 0x271E JUMP JUMPDEST SWAP1 POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x285D DUP3 PUSH2 0x1AF6 JUMP JUMPDEST SWAP2 POP PUSH2 0x2868 DUP4 PUSH2 0x1AF6 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x2880 JUMPI PUSH2 0x287F PUSH2 0x2677 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x2899 PUSH0 DUP4 ADD DUP8 PUSH2 0x25ED JUMP JUMPDEST PUSH2 0x28A6 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1B67 JUMP JUMPDEST PUSH2 0x28B3 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1B67 JUMP JUMPDEST PUSH2 0x28C0 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x1B67 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x28E1 DUP2 DUP6 PUSH2 0x221B JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x28F5 DUP2 DUP5 PUSH2 0x221B JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP8 PC CALLCODE DUP4 CREATE2 0xB2 LOG1 MSTORE8 DUP16 REVERT 0xD8 0xD6 0xBD PUSH3 0x3A646 0xEE MLOAD 0xC 0xC9 0xCD DUP15 0x4A 0xA7 0xBA 0x21 PUSH30 0xE96A48B764736F6C63430008140033000000000000000000000000000000 ",
							"sourceMap": "323:876:13:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2247:132:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1380:305;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2084:103;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1127:100:5;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;813:180:13;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4014:429:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2536:552;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1320:106:5;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;681:313:4;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;651:158:13;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3156:144:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;959:111:5;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3367:157:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3591:351;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;394:281:4;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2247:132:1;2324:7;2350:9;:13;2360:2;2350:13;;;;;;;;;;;:22;2364:7;2350:22;;;;;;;;;;;;;;;;2343:29;;2247:132;;;;:::o;1380:305::-;1482:4;1532:26;1517:41;;;:11;:41;;;;:109;;;;1589:37;1574:52;;;:11;:52;;;;1517:109;:161;;;;1642:36;1666:11;1642:23;:36::i;:::-;1517:161;1498:180;;1380:305;;;:::o;2084:103::-;2144:13;2176:4;2169:11;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2084:103;;;:::o;1127:100:5:-;1179:7;1205:15;;1198:22;;1127:100;:::o;813:180:13:-;595:12;581:26;;:10;:26;;;573:67;;;;;;;;;;;;:::i;:::-;;;;;;;;;954:34:::1;965:2;969:3;974:7;983:4;954:10;:34::i;:::-;813:180:::0;;;;:::o;4014:429:1:-;4208:14;4225:12;:10;:12::i;:::-;4208:29;;4259:6;4251:14;;:4;:14;;;;:49;;;;;4270:30;4287:4;4293:6;4270:16;:30::i;:::-;4269:31;4251:49;4247:129;;;4352:6;4360:4;4323:42;;;;;;;;;;;;:::i;:::-;;;;;;;;4247:129;4385:51;4408:4;4414:2;4418:3;4423:6;4431:4;4385:22;:51::i;:::-;4198:245;4014:429;;;;;:::o;2536:552::-;2660:16;2711:3;:10;2692:8;:15;:29;2688:121;;2770:3;:10;2782:8;:15;2744:54;;;;;;;;;;;;:::i;:::-;;;;;;;;2688:121;2819:30;2866:8;:15;2852:30;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2819:63;;2898:9;2893:158;2917:8;:15;2913:1;:19;2893:158;;;2972:68;2982:30;3010:1;2982:8;:27;;:30;;;;:::i;:::-;3014:25;3037:1;3014:3;:22;;:25;;;;:::i;:::-;2972:9;:68::i;:::-;2953:13;2967:1;2953:16;;;;;;;;:::i;:::-;;;;;;;:87;;;;;2934:3;;;;:::i;:::-;;;2893:158;;;;3068:13;3061:20;;;2536:552;;;;:::o;1320:106:5:-;1377:4;1418:1;1400:15;1412:2;1400:11;:15::i;:::-;:19;1393:26;;1320:106;;;:::o;681:313:4:-;804:12;:10;:12::i;:::-;793:23;;:7;:23;;;;:67;;;;;821:39;838:7;847:12;:10;:12::i;:::-;821:16;:39::i;:::-;820:40;793:67;789:156;;;912:12;:10;:12::i;:::-;926:7;883:51;;;;;;;;;;;;:::i;:::-;;;;;;;;789:156;955:32;966:7;975:3;980:6;955:10;:32::i;:::-;681:313;;;:::o;651:158:13:-;595:12;581:26;;:10;:26;;;573:67;;;;;;;;;;;;:::i;:::-;;;;;;;;;772:32:::1;778:7;787:2;791:6;799:4;772:5;:32::i;:::-;651:158:::0;;;;:::o;3156:144:1:-;3241:52;3260:12;:10;:12::i;:::-;3274:8;3284;3241:18;:52::i;:::-;3156:144;;:::o;959:111:5:-;1021:7;1047:12;:16;1060:2;1047:16;;;;;;;;;;;;1040:23;;959:111;;;:::o;3367:157:1:-;3457:4;3480:18;:27;3499:7;3480:27;;;;;;;;;;;;;;;:37;3508:8;3480:37;;;;;;;;;;;;;;;;;;;;;;;;;3473:44;;3367:157;;;;:::o;3591:351::-;3714:14;3731:12;:10;:12::i;:::-;3714:29;;3765:6;3757:14;;:4;:14;;;;:49;;;;;3776:30;3793:4;3799:6;3776:16;:30::i;:::-;3775:31;3757:49;3753:129;;;3858:6;3866:4;3829:42;;;;;;;;;;;;:::i;:::-;;;;;;;;3753:129;3891:44;3909:4;3915:2;3919;3923:5;3930:4;3891:17;:44::i;:::-;3704:238;3591:351;;;;;:::o;394:281:4:-;492:12;:10;:12::i;:::-;481:23;;:7;:23;;;;:67;;;;;509:39;526:7;535:12;:10;:12::i;:::-;509:16;:39::i;:::-;508:40;481:67;477:156;;;600:12;:10;:12::i;:::-;614:7;571:51;;;;;;;;;;;;:::i;:::-;;;;;;;;477:156;643:25;649:7;658:2;662:5;643;:25::i;:::-;394:281;;;:::o;762:146:10:-;838:4;876:25;861:40;;;:11;:40;;;;854:47;;762:146;;;:::o;11523:282:1:-;11658:1;11644:16;;:2;:16;;;11640:88;;11714:1;11683:34;;;;;;;;;;;:::i;:::-;;;;;;;;11640:88;11737:61;11772:1;11776:2;11780:3;11785:6;11793:4;11737:26;:61::i;:::-;11523:282;;;;:::o;656:96:8:-;709:7;735:10;728:17;;656:96;:::o;9015:445:1:-;9222:1;9208:16;;:2;:16;;;9204:88;;9278:1;9247:34;;;;;;;;;;;:::i;:::-;;;;;;;;9204:88;9321:1;9305:18;;:4;:18;;;9301:88;;9375:1;9346:32;;;;;;;;;;;:::i;:::-;;;;;;;;9301:88;9398:55;9425:4;9431:2;9435:3;9440:6;9448:4;9398:26;:55::i;:::-;9015:445;;;;;:::o;4603:197:7:-;4689:11;4777:4;4772:3;4768:14;4761:4;4756:3;4752:14;4748:35;4742:42;4735:49;;4603:197;;;;:::o;4204:::-;4290:11;4378:4;4373:3;4369:14;4362:4;4357:3;4353:14;4349:35;4343:42;4336:49;;4204:197;;;;:::o;12784:265:1:-;12904:1;12888:18;;:4;:18;;;12884:88;;12958:1;12929:32;;;;;;;;;;;:::i;:::-;;;;;;;;12884:88;12981:61;13008:4;13022:1;13026:3;13031:6;12981:61;;;;;;;;;;;;:26;:61::i;:::-;12784:265;;;:::o;10746:346::-;10856:1;10842:16;;:2;:16;;;10838:88;;10912:1;10881:34;;;;;;;;;;;:::i;:::-;;;;;;;;10838:88;10936:20;10958:23;10985:29;11004:2;11008:5;10985:18;:29::i;:::-;10935:79;;;;11024:61;11059:1;11063:2;11067:3;11072:6;11080:4;11024:26;:61::i;:::-;10828:264;;10746:346;;;;:::o;13268:315::-;13395:1;13375:22;;:8;:22;;;13371:94;;13451:1;13420:34;;;;;;;;;;;:::i;:::-;;;;;;;;13371:94;13512:8;13474:18;:25;13493:5;13474:25;;;;;;;;;;;;;;;:35;13500:8;13474:35;;;;;;;;;;;;;;;;:46;;;;;;;;;;;;;;;;;;13557:8;13535:41;;13550:5;13535:41;;;13567:8;13535:41;;;;;;:::i;:::-;;;;;;;;13268:315;;;:::o;8151:463::-;8287:1;8273:16;;:2;:16;;;8269:88;;8343:1;8312:34;;;;;;;;;;;:::i;:::-;;;;;;;;8269:88;8386:1;8370:18;;:4;:18;;;8366:88;;8440:1;8411:32;;;;;;;;;;;:::i;:::-;;;;;;;;8366:88;8464:20;8486:23;8513:29;8532:2;8536:5;8513:18;:29::i;:::-;8463:79;;;;8552:55;8579:4;8585:2;8589:3;8594:6;8602:4;8552:26;:55::i;:::-;8259:355;;8151:463;;;;;:::o;12099:329::-;12194:1;12178:18;;:4;:18;;;12174:88;;12248:1;12219:32;;;;;;;;;;;:::i;:::-;;;;;;;;12174:88;12272:20;12294:23;12321:29;12340:2;12344:5;12321:18;:29::i;:::-;12271:79;;;;12360:61;12387:4;12401:1;12405:3;12410:6;12360:61;;;;;;;;;;;;:26;:61::i;:::-;12164:264;;12099:329;;;:::o;7004:690::-;7205:30;7213:4;7219:2;7223:3;7228:6;7205:7;:30::i;:::-;7263:1;7249:16;;:2;:16;;;7245:443;;7281:16;7300:12;:10;:12::i;:::-;7281:31;;7344:1;7330:3;:10;:15;7326:352;;7365:10;7378:25;7401:1;7378:3;:22;;:25;;;;:::i;:::-;7365:38;;7421:13;7437:28;7463:1;7437:6;:25;;:28;;;;:::i;:::-;7421:44;;7483:67;7514:8;7524:4;7530:2;7534;7538:5;7545:4;7483:30;:67::i;:::-;7347:218;;7326:352;;;7589:74;7625:8;7635:4;7641:2;7645:3;7650:6;7658:4;7589:35;:74::i;:::-;7326:352;7267:421;7245:443;7004:690;;;;;:::o;16080:849::-;16188:23;16213;16374:4;16368:11;16358:21;;16444:1;16436:6;16429:17;16582:8;16575:4;16567:6;16563:17;16556:35;16704:4;16696:6;16692:17;16682:27;;16737:1;16729:6;16722:17;16778:8;16771:4;16763:6;16759:17;16752:35;16907:4;16899:6;16895:17;16889:4;16882:31;16080:849;;;;;:::o;997:200:13:-;1156:36;1170:4;1176:2;1180:3;1185:6;1156:13;:36::i;:::-;997:200;;;;:::o;13761:974:1:-;13984:1;13967:2;:14;;;:18;13963:766;;;14022:2;14005:38;;;14044:8;14054:4;14060:2;14064:5;14071:4;14005:71;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;14001:718;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14377:1;14360:6;:13;:18;14356:349;;14487:2;14464:26;;;;;;;;;;;:::i;:::-;;;;;;;;14356:349;14657:6;14651:13;14642:6;14638:2;14634:15;14627:38;14001:718;14137:43;;;14125:55;;;:8;:55;;;;14121:174;;14273:2;14250:26;;;;;;;;;;;:::i;:::-;;;;;;;;14121:174;14077:232;13963:766;13761:974;;;;;;:::o;14923:1041::-;15171:1;15154:2;:14;;;:18;15150:808;;;15209:2;15192:43;;;15236:8;15246:4;15252:3;15257:6;15265:4;15192:78;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;15188:760;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15606:1;15589:6;:13;:18;15585:349;;15716:2;15693:26;;;;;;;;;;;:::i;:::-;;;;;;;;15585:349;15886:6;15880:13;15871:6;15867:2;15863:15;15856:38;15188:760;15361:48;;;15349:60;;;:8;:60;;;;15345:179;;15502:2;15479:26;;;;;;;;;;;:::i;:::-;;;;;;;;15345:179;15271:267;15150:808;14923:1041;;;;;;:::o;1483:1518:5:-;1647:36;1661:4;1667:2;1671:3;1676:6;1647:13;:36::i;:::-;1714:1;1698:18;;:4;:18;;;1694:533;;1732:22;1777:9;1772:293;1796:3;:10;1792:1;:14;1772:293;;;1831:13;1847:6;1854:1;1847:9;;;;;;;;:::i;:::-;;;;;;;;1831:25;;2004:5;1980:12;:20;1993:3;1997:1;1993:6;;;;;;;;:::i;:::-;;;;;;;;1980:20;;;;;;;;;;;;:29;;;;;;;:::i;:::-;;;;;;;;2045:5;2027:23;;;;;:::i;:::-;;;1813:252;1808:3;;;;:::i;:::-;;;1772:293;;;;2202:14;2183:15;;:33;;;;;;;:::i;:::-;;;;;;;;1718:509;1694:533;2255:1;2241:16;;:2;:16;;;2237:758;;2273:22;2318:9;2313:459;2337:3;:10;2333:1;:14;2313:459;;;2372:13;2388:6;2395:1;2388:9;;;;;;;;:::i;:::-;;;;;;;;2372:25;;2578:5;2554:12;:20;2567:3;2571:1;2567:6;;;;;;;;:::i;:::-;;;;;;;;2554:20;;;;;;;;;;;;:29;;;;;;;;;;;2734:5;2716:23;;;;2354:418;2349:3;;;;:::i;:::-;;;2313:459;;;;2956:14;2937:15;;:33;;;;;;;;;;;2259:736;2237:758;1483:1518;;;;:::o;5144:1281:1:-;5279:6;:13;5265:3;:10;:27;5261:117;;5341:3;:10;5353:6;:13;5315:52;;;;;;;;;;;;:::i;:::-;;;;;;;;5261:117;5388:16;5407:12;:10;:12::i;:::-;5388:31;;5435:9;5430:691;5454:3;:10;5450:1;:14;5430:691;;;5485:10;5498:25;5521:1;5498:3;:22;;:25;;;;:::i;:::-;5485:38;;5537:13;5553:28;5579:1;5553:6;:25;;:28;;;;:::i;:::-;5537:44;;5616:1;5600:18;;:4;:18;;;5596:420;;5638:19;5660:9;:13;5670:2;5660:13;;;;;;;;;;;:19;5674:4;5660:19;;;;;;;;;;;;;;;;5638:41;;5715:5;5701:11;:19;5697:129;;;5778:4;5784:11;5797:5;5804:2;5751:56;;;;;;;;;;;;;;:::i;:::-;;;;;;;;5697:129;5978:5;5964:11;:19;5942:9;:13;5952:2;5942:13;;;;;;;;;;;:19;5956:4;5942:19;;;;;;;;;;;;;;;:41;;;;5620:396;5596:420;6048:1;6034:16;;:2;:16;;;6030:81;;6091:5;6070:9;:13;6080:2;6070:13;;;;;;;;;;;:17;6084:2;6070:17;;;;;;;;;;;;;;;;:26;;;;;;;:::i;:::-;;;;;;;;6030:81;5471:650;;5466:3;;;;:::i;:::-;;;5430:691;;;;6149:1;6135:3;:10;:15;6131:288;;6166:10;6179:25;6202:1;6179:3;:22;;:25;;;;:::i;:::-;6166:38;;6218:13;6234:28;6260:1;6234:6;:25;;:28;;;;:::i;:::-;6218:44;;6312:2;6281:45;;6306:4;6281:45;;6296:8;6281:45;;;6316:2;6320:5;6281:45;;;;;;;:::i;:::-;;;;;;;;6152:185;;6131:288;;;6392:2;6362:46;;6386:4;6362:46;;6376:8;6362:46;;;6396:3;6401:6;6362:46;;;;;;;:::i;:::-;;;;;;;;6131:288;5251:1174;5144:1281;;;;:::o;7:75:14:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:77::-;878:7;907:5;896:16;;841:77;;;:::o;924:122::-;997:24;1015:5;997:24;:::i;:::-;990:5;987:35;977:63;;1036:1;1033;1026:12;977:63;924:122;:::o;1052:139::-;1098:5;1136:6;1123:20;1114:29;;1152:33;1179:5;1152:33;:::i;:::-;1052:139;;;;:::o;1197:474::-;1265:6;1273;1322:2;1310:9;1301:7;1297:23;1293:32;1290:119;;;1328:79;;:::i;:::-;1290:119;1448:1;1473:53;1518:7;1509:6;1498:9;1494:22;1473:53;:::i;:::-;1463:63;;1419:117;1575:2;1601:53;1646:7;1637:6;1626:9;1622:22;1601:53;:::i;:::-;1591:63;;1546:118;1197:474;;;;;:::o;1677:118::-;1764:24;1782:5;1764:24;:::i;:::-;1759:3;1752:37;1677:118;;:::o;1801:222::-;1894:4;1932:2;1921:9;1917:18;1909:26;;1945:71;2013:1;2002:9;1998:17;1989:6;1945:71;:::i;:::-;1801:222;;;;:::o;2029:149::-;2065:7;2105:66;2098:5;2094:78;2083:89;;2029:149;;;:::o;2184:120::-;2256:23;2273:5;2256:23;:::i;:::-;2249:5;2246:34;2236:62;;2294:1;2291;2284:12;2236:62;2184:120;:::o;2310:137::-;2355:5;2393:6;2380:20;2371:29;;2409:32;2435:5;2409:32;:::i;:::-;2310:137;;;;:::o;2453:327::-;2511:6;2560:2;2548:9;2539:7;2535:23;2531:32;2528:119;;;2566:79;;:::i;:::-;2528:119;2686:1;2711:52;2755:7;2746:6;2735:9;2731:22;2711:52;:::i;:::-;2701:62;;2657:116;2453:327;;;;:::o;2786:90::-;2820:7;2863:5;2856:13;2849:21;2838:32;;2786:90;;;:::o;2882:109::-;2963:21;2978:5;2963:21;:::i;:::-;2958:3;2951:34;2882:109;;:::o;2997:210::-;3084:4;3122:2;3111:9;3107:18;3099:26;;3135:65;3197:1;3186:9;3182:17;3173:6;3135:65;:::i;:::-;2997:210;;;;:::o;3213:329::-;3272:6;3321:2;3309:9;3300:7;3296:23;3292:32;3289:119;;;3327:79;;:::i;:::-;3289:119;3447:1;3472:53;3517:7;3508:6;3497:9;3493:22;3472:53;:::i;:::-;3462:63;;3418:117;3213:329;;;;:::o;3548:99::-;3600:6;3634:5;3628:12;3618:22;;3548:99;;;:::o;3653:169::-;3737:11;3771:6;3766:3;3759:19;3811:4;3806:3;3802:14;3787:29;;3653:169;;;;:::o;3828:246::-;3909:1;3919:113;3933:6;3930:1;3927:13;3919:113;;;4018:1;4013:3;4009:11;4003:18;3999:1;3994:3;3990:11;3983:39;3955:2;3952:1;3948:10;3943:15;;3919:113;;;4066:1;4057:6;4052:3;4048:16;4041:27;3890:184;3828:246;;;:::o;4080:102::-;4121:6;4172:2;4168:7;4163:2;4156:5;4152:14;4148:28;4138:38;;4080:102;;;:::o;4188:377::-;4276:3;4304:39;4337:5;4304:39;:::i;:::-;4359:71;4423:6;4418:3;4359:71;:::i;:::-;4352:78;;4439:65;4497:6;4492:3;4485:4;4478:5;4474:16;4439:65;:::i;:::-;4529:29;4551:6;4529:29;:::i;:::-;4524:3;4520:39;4513:46;;4280:285;4188:377;;;;:::o;4571:313::-;4684:4;4722:2;4711:9;4707:18;4699:26;;4771:9;4765:4;4761:20;4757:1;4746:9;4742:17;4735:47;4799:78;4872:4;4863:6;4799:78;:::i;:::-;4791:86;;4571:313;;;;:::o;4890:117::-;4999:1;4996;4989:12;5013:180;5061:77;5058:1;5051:88;5158:4;5155:1;5148:15;5182:4;5179:1;5172:15;5199:281;5282:27;5304:4;5282:27;:::i;:::-;5274:6;5270:40;5412:6;5400:10;5397:22;5376:18;5364:10;5361:34;5358:62;5355:88;;;5423:18;;:::i;:::-;5355:88;5463:10;5459:2;5452:22;5242:238;5199:281;;:::o;5486:129::-;5520:6;5547:20;;:::i;:::-;5537:30;;5576:33;5604:4;5596:6;5576:33;:::i;:::-;5486:129;;;:::o;5621:311::-;5698:4;5788:18;5780:6;5777:30;5774:56;;;5810:18;;:::i;:::-;5774:56;5860:4;5852:6;5848:17;5840:25;;5920:4;5914;5910:15;5902:23;;5621:311;;;:::o;5938:117::-;6047:1;6044;6037:12;6078:710;6174:5;6199:81;6215:64;6272:6;6215:64;:::i;:::-;6199:81;:::i;:::-;6190:90;;6300:5;6329:6;6322:5;6315:21;6363:4;6356:5;6352:16;6345:23;;6416:4;6408:6;6404:17;6396:6;6392:30;6445:3;6437:6;6434:15;6431:122;;;6464:79;;:::i;:::-;6431:122;6579:6;6562:220;6596:6;6591:3;6588:15;6562:220;;;6671:3;6700:37;6733:3;6721:10;6700:37;:::i;:::-;6695:3;6688:50;6767:4;6762:3;6758:14;6751:21;;6638:144;6622:4;6617:3;6613:14;6606:21;;6562:220;;;6566:21;6180:608;;6078:710;;;;;:::o;6811:370::-;6882:5;6931:3;6924:4;6916:6;6912:17;6908:27;6898:122;;6939:79;;:::i;:::-;6898:122;7056:6;7043:20;7081:94;7171:3;7163:6;7156:4;7148:6;7144:17;7081:94;:::i;:::-;7072:103;;6888:293;6811:370;;;;:::o;7187:117::-;7296:1;7293;7286:12;7310:307;7371:4;7461:18;7453:6;7450:30;7447:56;;;7483:18;;:::i;:::-;7447:56;7521:29;7543:6;7521:29;:::i;:::-;7513:37;;7605:4;7599;7595:15;7587:23;;7310:307;;;:::o;7623:146::-;7720:6;7715:3;7710;7697:30;7761:1;7752:6;7747:3;7743:16;7736:27;7623:146;;;:::o;7775:423::-;7852:5;7877:65;7893:48;7934:6;7893:48;:::i;:::-;7877:65;:::i;:::-;7868:74;;7965:6;7958:5;7951:21;8003:4;7996:5;7992:16;8041:3;8032:6;8027:3;8023:16;8020:25;8017:112;;;8048:79;;:::i;:::-;8017:112;8138:54;8185:6;8180:3;8175;8138:54;:::i;:::-;7858:340;7775:423;;;;;:::o;8217:338::-;8272:5;8321:3;8314:4;8306:6;8302:17;8298:27;8288:122;;8329:79;;:::i;:::-;8288:122;8446:6;8433:20;8471:78;8545:3;8537:6;8530:4;8522:6;8518:17;8471:78;:::i;:::-;8462:87;;8278:277;8217:338;;;;:::o;8561:1363::-;8706:6;8714;8722;8730;8779:3;8767:9;8758:7;8754:23;8750:33;8747:120;;;8786:79;;:::i;:::-;8747:120;8906:1;8931:53;8976:7;8967:6;8956:9;8952:22;8931:53;:::i;:::-;8921:63;;8877:117;9061:2;9050:9;9046:18;9033:32;9092:18;9084:6;9081:30;9078:117;;;9114:79;;:::i;:::-;9078:117;9219:78;9289:7;9280:6;9269:9;9265:22;9219:78;:::i;:::-;9209:88;;9004:303;9374:2;9363:9;9359:18;9346:32;9405:18;9397:6;9394:30;9391:117;;;9427:79;;:::i;:::-;9391:117;9532:78;9602:7;9593:6;9582:9;9578:22;9532:78;:::i;:::-;9522:88;;9317:303;9687:2;9676:9;9672:18;9659:32;9718:18;9710:6;9707:30;9704:117;;;9740:79;;:::i;:::-;9704:117;9845:62;9899:7;9890:6;9879:9;9875:22;9845:62;:::i;:::-;9835:72;;9630:287;8561:1363;;;;;;;:::o;9930:1509::-;10084:6;10092;10100;10108;10116;10165:3;10153:9;10144:7;10140:23;10136:33;10133:120;;;10172:79;;:::i;:::-;10133:120;10292:1;10317:53;10362:7;10353:6;10342:9;10338:22;10317:53;:::i;:::-;10307:63;;10263:117;10419:2;10445:53;10490:7;10481:6;10470:9;10466:22;10445:53;:::i;:::-;10435:63;;10390:118;10575:2;10564:9;10560:18;10547:32;10606:18;10598:6;10595:30;10592:117;;;10628:79;;:::i;:::-;10592:117;10733:78;10803:7;10794:6;10783:9;10779:22;10733:78;:::i;:::-;10723:88;;10518:303;10888:2;10877:9;10873:18;10860:32;10919:18;10911:6;10908:30;10905:117;;;10941:79;;:::i;:::-;10905:117;11046:78;11116:7;11107:6;11096:9;11092:22;11046:78;:::i;:::-;11036:88;;10831:303;11201:3;11190:9;11186:19;11173:33;11233:18;11225:6;11222:30;11219:117;;;11255:79;;:::i;:::-;11219:117;11360:62;11414:7;11405:6;11394:9;11390:22;11360:62;:::i;:::-;11350:72;;11144:288;9930:1509;;;;;;;;:::o;11445:311::-;11522:4;11612:18;11604:6;11601:30;11598:56;;;11634:18;;:::i;:::-;11598:56;11684:4;11676:6;11672:17;11664:25;;11744:4;11738;11734:15;11726:23;;11445:311;;;:::o;11779:710::-;11875:5;11900:81;11916:64;11973:6;11916:64;:::i;:::-;11900:81;:::i;:::-;11891:90;;12001:5;12030:6;12023:5;12016:21;12064:4;12057:5;12053:16;12046:23;;12117:4;12109:6;12105:17;12097:6;12093:30;12146:3;12138:6;12135:15;12132:122;;;12165:79;;:::i;:::-;12132:122;12280:6;12263:220;12297:6;12292:3;12289:15;12263:220;;;12372:3;12401:37;12434:3;12422:10;12401:37;:::i;:::-;12396:3;12389:50;12468:4;12463:3;12459:14;12452:21;;12339:144;12323:4;12318:3;12314:14;12307:21;;12263:220;;;12267:21;11881:608;;11779:710;;;;;:::o;12512:370::-;12583:5;12632:3;12625:4;12617:6;12613:17;12609:27;12599:122;;12640:79;;:::i;:::-;12599:122;12757:6;12744:20;12782:94;12872:3;12864:6;12857:4;12849:6;12845:17;12782:94;:::i;:::-;12773:103;;12589:293;12512:370;;;;:::o;12888:894::-;13006:6;13014;13063:2;13051:9;13042:7;13038:23;13034:32;13031:119;;;13069:79;;:::i;:::-;13031:119;13217:1;13206:9;13202:17;13189:31;13247:18;13239:6;13236:30;13233:117;;;13269:79;;:::i;:::-;13233:117;13374:78;13444:7;13435:6;13424:9;13420:22;13374:78;:::i;:::-;13364:88;;13160:302;13529:2;13518:9;13514:18;13501:32;13560:18;13552:6;13549:30;13546:117;;;13582:79;;:::i;:::-;13546:117;13687:78;13757:7;13748:6;13737:9;13733:22;13687:78;:::i;:::-;13677:88;;13472:303;12888:894;;;;;:::o;13788:114::-;13855:6;13889:5;13883:12;13873:22;;13788:114;;;:::o;13908:184::-;14007:11;14041:6;14036:3;14029:19;14081:4;14076:3;14072:14;14057:29;;13908:184;;;;:::o;14098:132::-;14165:4;14188:3;14180:11;;14218:4;14213:3;14209:14;14201:22;;14098:132;;;:::o;14236:108::-;14313:24;14331:5;14313:24;:::i;:::-;14308:3;14301:37;14236:108;;:::o;14350:179::-;14419:10;14440:46;14482:3;14474:6;14440:46;:::i;:::-;14518:4;14513:3;14509:14;14495:28;;14350:179;;;;:::o;14535:113::-;14605:4;14637;14632:3;14628:14;14620:22;;14535:113;;;:::o;14684:732::-;14803:3;14832:54;14880:5;14832:54;:::i;:::-;14902:86;14981:6;14976:3;14902:86;:::i;:::-;14895:93;;15012:56;15062:5;15012:56;:::i;:::-;15091:7;15122:1;15107:284;15132:6;15129:1;15126:13;15107:284;;;15208:6;15202:13;15235:63;15294:3;15279:13;15235:63;:::i;:::-;15228:70;;15321:60;15374:6;15321:60;:::i;:::-;15311:70;;15167:224;15154:1;15151;15147:9;15142:14;;15107:284;;;15111:14;15407:3;15400:10;;14808:608;;;14684:732;;;;:::o;15422:373::-;15565:4;15603:2;15592:9;15588:18;15580:26;;15652:9;15646:4;15642:20;15638:1;15627:9;15623:17;15616:47;15680:108;15783:4;15774:6;15680:108;:::i;:::-;15672:116;;15422:373;;;;:::o;15801:1039::-;15928:6;15936;15944;15993:2;15981:9;15972:7;15968:23;15964:32;15961:119;;;15999:79;;:::i;:::-;15961:119;16119:1;16144:53;16189:7;16180:6;16169:9;16165:22;16144:53;:::i;:::-;16134:63;;16090:117;16274:2;16263:9;16259:18;16246:32;16305:18;16297:6;16294:30;16291:117;;;16327:79;;:::i;:::-;16291:117;16432:78;16502:7;16493:6;16482:9;16478:22;16432:78;:::i;:::-;16422:88;;16217:303;16587:2;16576:9;16572:18;16559:32;16618:18;16610:6;16607:30;16604:117;;;16640:79;;:::i;:::-;16604:117;16745:78;16815:7;16806:6;16795:9;16791:22;16745:78;:::i;:::-;16735:88;;16530:303;15801:1039;;;;;:::o;16846:943::-;16941:6;16949;16957;16965;17014:3;17002:9;16993:7;16989:23;16985:33;16982:120;;;17021:79;;:::i;:::-;16982:120;17141:1;17166:53;17211:7;17202:6;17191:9;17187:22;17166:53;:::i;:::-;17156:63;;17112:117;17268:2;17294:53;17339:7;17330:6;17319:9;17315:22;17294:53;:::i;:::-;17284:63;;17239:118;17396:2;17422:53;17467:7;17458:6;17447:9;17443:22;17422:53;:::i;:::-;17412:63;;17367:118;17552:2;17541:9;17537:18;17524:32;17583:18;17575:6;17572:30;17569:117;;;17605:79;;:::i;:::-;17569:117;17710:62;17764:7;17755:6;17744:9;17740:22;17710:62;:::i;:::-;17700:72;;17495:287;16846:943;;;;;;;:::o;17795:116::-;17865:21;17880:5;17865:21;:::i;:::-;17858:5;17855:32;17845:60;;17901:1;17898;17891:12;17845:60;17795:116;:::o;17917:133::-;17960:5;17998:6;17985:20;17976:29;;18014:30;18038:5;18014:30;:::i;:::-;17917:133;;;;:::o;18056:468::-;18121:6;18129;18178:2;18166:9;18157:7;18153:23;18149:32;18146:119;;;18184:79;;:::i;:::-;18146:119;18304:1;18329:53;18374:7;18365:6;18354:9;18350:22;18329:53;:::i;:::-;18319:63;;18275:117;18431:2;18457:50;18499:7;18490:6;18479:9;18475:22;18457:50;:::i;:::-;18447:60;;18402:115;18056:468;;;;;:::o;18530:474::-;18598:6;18606;18655:2;18643:9;18634:7;18630:23;18626:32;18623:119;;;18661:79;;:::i;:::-;18623:119;18781:1;18806:53;18851:7;18842:6;18831:9;18827:22;18806:53;:::i;:::-;18796:63;;18752:117;18908:2;18934:53;18979:7;18970:6;18959:9;18955:22;18934:53;:::i;:::-;18924:63;;18879:118;18530:474;;;;;:::o;19010:1089::-;19114:6;19122;19130;19138;19146;19195:3;19183:9;19174:7;19170:23;19166:33;19163:120;;;19202:79;;:::i;:::-;19163:120;19322:1;19347:53;19392:7;19383:6;19372:9;19368:22;19347:53;:::i;:::-;19337:63;;19293:117;19449:2;19475:53;19520:7;19511:6;19500:9;19496:22;19475:53;:::i;:::-;19465:63;;19420:118;19577:2;19603:53;19648:7;19639:6;19628:9;19624:22;19603:53;:::i;:::-;19593:63;;19548:118;19705:2;19731:53;19776:7;19767:6;19756:9;19752:22;19731:53;:::i;:::-;19721:63;;19676:118;19861:3;19850:9;19846:19;19833:33;19893:18;19885:6;19882:30;19879:117;;;19915:79;;:::i;:::-;19879:117;20020:62;20074:7;20065:6;20054:9;20050:22;20020:62;:::i;:::-;20010:72;;19804:288;19010:1089;;;;;;;;:::o;20105:619::-;20182:6;20190;20198;20247:2;20235:9;20226:7;20222:23;20218:32;20215:119;;;20253:79;;:::i;:::-;20215:119;20373:1;20398:53;20443:7;20434:6;20423:9;20419:22;20398:53;:::i;:::-;20388:63;;20344:117;20500:2;20526:53;20571:7;20562:6;20551:9;20547:22;20526:53;:::i;:::-;20516:63;;20471:118;20628:2;20654:53;20699:7;20690:6;20679:9;20675:22;20654:53;:::i;:::-;20644:63;;20599:118;20105:619;;;;;:::o;20730:180::-;20778:77;20775:1;20768:88;20875:4;20872:1;20865:15;20899:4;20896:1;20889:15;20916:320;20960:6;20997:1;20991:4;20987:12;20977:22;;21044:1;21038:4;21034:12;21065:18;21055:81;;21121:4;21113:6;21109:17;21099:27;;21055:81;21183:2;21175:6;21172:14;21152:18;21149:38;21146:84;;21202:18;;:::i;:::-;21146:84;20967:269;20916:320;;;:::o;21242:178::-;21382:30;21378:1;21370:6;21366:14;21359:54;21242:178;:::o;21426:366::-;21568:3;21589:67;21653:2;21648:3;21589:67;:::i;:::-;21582:74;;21665:93;21754:3;21665:93;:::i;:::-;21783:2;21778:3;21774:12;21767:19;;21426:366;;;:::o;21798:419::-;21964:4;22002:2;21991:9;21987:18;21979:26;;22051:9;22045:4;22041:20;22037:1;22026:9;22022:17;22015:47;22079:131;22205:4;22079:131;:::i;:::-;22071:139;;21798:419;;;:::o;22223:118::-;22310:24;22328:5;22310:24;:::i;:::-;22305:3;22298:37;22223:118;;:::o;22347:332::-;22468:4;22506:2;22495:9;22491:18;22483:26;;22519:71;22587:1;22576:9;22572:17;22563:6;22519:71;:::i;:::-;22600:72;22668:2;22657:9;22653:18;22644:6;22600:72;:::i;:::-;22347:332;;;;;:::o;22685:::-;22806:4;22844:2;22833:9;22829:18;22821:26;;22857:71;22925:1;22914:9;22910:17;22901:6;22857:71;:::i;:::-;22938:72;23006:2;22995:9;22991:18;22982:6;22938:72;:::i;:::-;22685:332;;;;;:::o;23023:180::-;23071:77;23068:1;23061:88;23168:4;23165:1;23158:15;23192:4;23189:1;23182:15;23209:180;23257:77;23254:1;23247:88;23354:4;23351:1;23344:15;23378:4;23375:1;23368:15;23395:233;23434:3;23457:24;23475:5;23457:24;:::i;:::-;23448:33;;23503:66;23496:5;23493:77;23490:103;;23573:18;;:::i;:::-;23490:103;23620:1;23613:5;23609:13;23602:20;;23395:233;;;:::o;23634:222::-;23727:4;23765:2;23754:9;23750:18;23742:26;;23778:71;23846:1;23835:9;23831:17;23822:6;23778:71;:::i;:::-;23634:222;;;;:::o;23862:98::-;23913:6;23947:5;23941:12;23931:22;;23862:98;;;:::o;23966:168::-;24049:11;24083:6;24078:3;24071:19;24123:4;24118:3;24114:14;24099:29;;23966:168;;;;:::o;24140:373::-;24226:3;24254:38;24286:5;24254:38;:::i;:::-;24308:70;24371:6;24366:3;24308:70;:::i;:::-;24301:77;;24387:65;24445:6;24440:3;24433:4;24426:5;24422:16;24387:65;:::i;:::-;24477:29;24499:6;24477:29;:::i;:::-;24472:3;24468:39;24461:46;;24230:283;24140:373;;;;:::o;24519:751::-;24742:4;24780:3;24769:9;24765:19;24757:27;;24794:71;24862:1;24851:9;24847:17;24838:6;24794:71;:::i;:::-;24875:72;24943:2;24932:9;24928:18;24919:6;24875:72;:::i;:::-;24957;25025:2;25014:9;25010:18;25001:6;24957:72;:::i;:::-;25039;25107:2;25096:9;25092:18;25083:6;25039:72;:::i;:::-;25159:9;25153:4;25149:20;25143:3;25132:9;25128:19;25121:49;25187:76;25258:4;25249:6;25187:76;:::i;:::-;25179:84;;24519:751;;;;;;;;:::o;25276:141::-;25332:5;25363:6;25357:13;25348:22;;25379:32;25405:5;25379:32;:::i;:::-;25276:141;;;;:::o;25423:349::-;25492:6;25541:2;25529:9;25520:7;25516:23;25512:32;25509:119;;;25547:79;;:::i;:::-;25509:119;25667:1;25692:63;25747:7;25738:6;25727:9;25723:22;25692:63;:::i;:::-;25682:73;;25638:127;25423:349;;;;:::o;25778:1053::-;26101:4;26139:3;26128:9;26124:19;26116:27;;26153:71;26221:1;26210:9;26206:17;26197:6;26153:71;:::i;:::-;26234:72;26302:2;26291:9;26287:18;26278:6;26234:72;:::i;:::-;26353:9;26347:4;26343:20;26338:2;26327:9;26323:18;26316:48;26381:108;26484:4;26475:6;26381:108;:::i;:::-;26373:116;;26536:9;26530:4;26526:20;26521:2;26510:9;26506:18;26499:48;26564:108;26667:4;26658:6;26564:108;:::i;:::-;26556:116;;26720:9;26714:4;26710:20;26704:3;26693:9;26689:19;26682:49;26748:76;26819:4;26810:6;26748:76;:::i;:::-;26740:84;;25778:1053;;;;;;;;:::o;26837:191::-;26877:3;26896:20;26914:1;26896:20;:::i;:::-;26891:25;;26930:20;26948:1;26930:20;:::i;:::-;26925:25;;26973:1;26970;26966:9;26959:16;;26994:3;26991:1;26988:10;26985:36;;;27001:18;;:::i;:::-;26985:36;26837:191;;;;:::o;27034:553::-;27211:4;27249:3;27238:9;27234:19;27226:27;;27263:71;27331:1;27320:9;27316:17;27307:6;27263:71;:::i;:::-;27344:72;27412:2;27401:9;27397:18;27388:6;27344:72;:::i;:::-;27426;27494:2;27483:9;27479:18;27470:6;27426:72;:::i;:::-;27508;27576:2;27565:9;27561:18;27552:6;27508:72;:::i;:::-;27034:553;;;;;;;:::o;27593:634::-;27814:4;27852:2;27841:9;27837:18;27829:26;;27901:9;27895:4;27891:20;27887:1;27876:9;27872:17;27865:47;27929:108;28032:4;28023:6;27929:108;:::i;:::-;27921:116;;28084:9;28078:4;28074:20;28069:2;28058:9;28054:18;28047:48;28112:108;28215:4;28206:6;28112:108;:::i;:::-;28104:116;;27593:634;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "2109600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"balanceOf(address,uint256)": "infinite",
								"balanceOfBatch(address[],uint256[])": "infinite",
								"burn(address,uint256,uint256)": "infinite",
								"burnBatch(address,uint256[],uint256[])": "infinite",
								"exists(uint256)": "2846",
								"isApprovedForAll(address,address)": "infinite",
								"mint(address,uint256,uint256,bytes)": "infinite",
								"mintBatch(address,uint256[],uint256[],bytes)": "infinite",
								"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "infinite",
								"safeTransferFrom(address,address,uint256,uint256,bytes)": "infinite",
								"setApprovalForAll(address,bool)": "infinite",
								"supportsInterface(bytes4)": "809",
								"totalSupply()": "2455",
								"totalSupply(uint256)": "infinite",
								"uri(uint256)": "infinite"
							},
							"internal": {
								"_update(address,address,uint256[] memory,uint256[] memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 323,
									"end": 1199,
									"name": "PUSH",
									"source": 13,
									"value": "A0"
								},
								{
									"begin": 323,
									"end": 1199,
									"name": "PUSH",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 323,
									"end": 1199,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 428,
									"end": 545,
									"name": "CALLVALUE",
									"source": 13
								},
								{
									"begin": 428,
									"end": 545,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 428,
									"end": 545,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 428,
									"end": 545,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 428,
									"end": 545,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 428,
									"end": 545,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 428,
									"end": 545,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 428,
									"end": 545,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 428,
									"end": 545,
									"name": "tag",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 428,
									"end": 545,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 428,
									"end": 545,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 428,
									"end": 545,
									"name": "PUSH",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 428,
									"end": 545,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 428,
									"end": 545,
									"name": "PUSHSIZE",
									"source": 13
								},
								{
									"begin": 428,
									"end": 545,
									"name": "CODESIZE",
									"source": 13
								},
								{
									"begin": 428,
									"end": 545,
									"name": "SUB",
									"source": 13
								},
								{
									"begin": 428,
									"end": 545,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 428,
									"end": 545,
									"name": "PUSHSIZE",
									"source": 13
								},
								{
									"begin": 428,
									"end": 545,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 428,
									"end": 545,
									"name": "CODECOPY",
									"source": 13
								},
								{
									"begin": 428,
									"end": 545,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 428,
									"end": 545,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 428,
									"end": 545,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 428,
									"end": 545,
									"name": "PUSH",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 428,
									"end": 545,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 428,
									"end": 545,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 428,
									"end": 545,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 428,
									"end": 545,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 428,
									"end": 545,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "2"
								},
								{
									"begin": 428,
									"end": 545,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 428,
									"end": 545,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 428,
									"end": 545,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "3"
								},
								{
									"begin": 428,
									"end": 545,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 428,
									"end": 545,
									"name": "tag",
									"source": 13,
									"value": "2"
								},
								{
									"begin": 428,
									"end": 545,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1251,
									"end": 1313,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1251,
									"end": 1313,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1251,
									"end": 1313,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1251,
									"end": 1313,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1251,
									"end": 1313,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1251,
									"end": 1313,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1251,
									"end": 1313,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1251,
									"end": 1313,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1251,
									"end": 1313,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1251,
									"end": 1313,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1251,
									"end": 1313,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1251,
									"end": 1313,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1251,
									"end": 1313,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1251,
									"end": 1313,
									"name": "PUSH",
									"source": 1,
									"value": "68747470733A2F2F736F6D2E657465726E697461732E67616D65732F6A736F6E"
								},
								{
									"begin": 1251,
									"end": 1313,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1251,
									"end": 1313,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1251,
									"end": 1313,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1293,
									"end": 1306,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 1301,
									"end": 1305,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1293,
									"end": 1300,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 1293,
									"end": 1300,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1293,
									"end": 1300,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 1293,
									"end": 1306,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1293,
									"end": 1306,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 1293,
									"end": 1306,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1293,
									"end": 1306,
									"name": "tag",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 1293,
									"end": 1306,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1251,
									"end": 1313,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 529,
									"end": 540,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 514,
									"end": 540,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 13,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 514,
									"end": 540,
									"modifierDepth": 1,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 514,
									"end": 540,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 13,
									"value": "80"
								},
								{
									"begin": 514,
									"end": 540,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 514,
									"end": 540,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 13,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 514,
									"end": 540,
									"modifierDepth": 1,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 514,
									"end": 540,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 514,
									"end": 540,
									"modifierDepth": 1,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 514,
									"end": 540,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 514,
									"end": 540,
									"modifierDepth": 1,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 428,
									"end": 545,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 323,
									"end": 1199,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "10"
								},
								{
									"begin": 323,
									"end": 1199,
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 10282,
									"end": 10368,
									"name": "tag",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 10282,
									"end": 10368,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 10355,
									"end": 10361,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 10348,
									"end": 10352,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 10348,
									"end": 10361,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 10348,
									"end": 10361,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 10348,
									"end": 10361,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 10348,
									"end": 10361,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 10348,
									"end": 10361,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 10348,
									"end": 10361,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "13"
								},
								{
									"begin": 10348,
									"end": 10361,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 10348,
									"end": 10361,
									"name": "tag",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 10348,
									"end": 10361,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 10348,
									"end": 10361,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 10282,
									"end": 10368,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 10282,
									"end": 10368,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 14,
									"value": "15"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 14
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 14,
									"value": "17"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 14,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 14
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 14,
									"value": "18"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "47"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "17"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 14,
									"value": "47"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 14,
									"value": "19"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "49"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "18"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 14,
									"value": "49"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 14
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "50"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 14
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 14,
									"value": "50"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 14,
									"value": "20"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "52"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "19"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 14,
									"value": "52"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 14
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "tag",
									"source": 14,
									"value": "3"
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 915,
									"end": 921,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 964,
									"end": 966,
									"name": "PUSH",
									"source": 14,
									"value": "20"
								},
								{
									"begin": 952,
									"end": 961,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 943,
									"end": 950,
									"name": "DUP5",
									"source": 14
								},
								{
									"begin": 939,
									"end": 962,
									"name": "SUB",
									"source": 14
								},
								{
									"begin": 935,
									"end": 967,
									"name": "SLT",
									"source": 14
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "ISZERO",
									"source": 14
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "54"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "55"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "15"
								},
								{
									"begin": 970,
									"end": 1049,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "tag",
									"source": 14,
									"value": "55"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "tag",
									"source": 14,
									"value": "54"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1090,
									"end": 1091,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "56"
								},
								{
									"begin": 1171,
									"end": 1178,
									"name": "DUP5",
									"source": 14
								},
								{
									"begin": 1162,
									"end": 1168,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 1151,
									"end": 1160,
									"name": "DUP6",
									"source": 14
								},
								{
									"begin": 1147,
									"end": 1169,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "20"
								},
								{
									"begin": 1115,
									"end": 1179,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "tag",
									"source": 14,
									"value": "56"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1061,
									"end": 1189,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP3",
									"source": 14
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 845,
									"end": 1196,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 1202,
									"end": 1301,
									"name": "tag",
									"source": 14,
									"value": "21"
								},
								{
									"begin": 1202,
									"end": 1301,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1254,
									"end": 1260,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 1288,
									"end": 1293,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 1282,
									"end": 1294,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": 1272,
									"end": 1294,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 1272,
									"end": 1294,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1202,
									"end": 1301,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 1202,
									"end": 1301,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 1202,
									"end": 1301,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1202,
									"end": 1301,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 1307,
									"end": 1487,
									"name": "tag",
									"source": 14,
									"value": "22"
								},
								{
									"begin": 1307,
									"end": 1487,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1355,
									"end": 1432,
									"name": "PUSH",
									"source": 14,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1352,
									"end": 1353,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 1345,
									"end": 1433,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 1452,
									"end": 1456,
									"name": "PUSH",
									"source": 14,
									"value": "41"
								},
								{
									"begin": 1449,
									"end": 1450,
									"name": "PUSH",
									"source": 14,
									"value": "4"
								},
								{
									"begin": 1442,
									"end": 1457,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 1476,
									"end": 1480,
									"name": "PUSH",
									"source": 14,
									"value": "24"
								},
								{
									"begin": 1473,
									"end": 1474,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 1466,
									"end": 1481,
									"name": "REVERT",
									"source": 14
								},
								{
									"begin": 1493,
									"end": 1673,
									"name": "tag",
									"source": 14,
									"value": "23"
								},
								{
									"begin": 1493,
									"end": 1673,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1541,
									"end": 1618,
									"name": "PUSH",
									"source": 14,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1538,
									"end": 1539,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 1531,
									"end": 1619,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 1638,
									"end": 1642,
									"name": "PUSH",
									"source": 14,
									"value": "22"
								},
								{
									"begin": 1635,
									"end": 1636,
									"name": "PUSH",
									"source": 14,
									"value": "4"
								},
								{
									"begin": 1628,
									"end": 1643,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 1662,
									"end": 1666,
									"name": "PUSH",
									"source": 14,
									"value": "24"
								},
								{
									"begin": 1659,
									"end": 1660,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 1652,
									"end": 1667,
									"name": "REVERT",
									"source": 14
								},
								{
									"begin": 1679,
									"end": 1999,
									"name": "tag",
									"source": 14,
									"value": "24"
								},
								{
									"begin": 1679,
									"end": 1999,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1723,
									"end": 1729,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 1760,
									"end": 1761,
									"name": "PUSH",
									"source": 14,
									"value": "2"
								},
								{
									"begin": 1754,
									"end": 1758,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 1750,
									"end": 1762,
									"name": "DIV",
									"source": 14
								},
								{
									"begin": 1740,
									"end": 1762,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 1740,
									"end": 1762,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1807,
									"end": 1808,
									"name": "PUSH",
									"source": 14,
									"value": "1"
								},
								{
									"begin": 1801,
									"end": 1805,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 1797,
									"end": 1809,
									"name": "AND",
									"source": 14
								},
								{
									"begin": 1828,
									"end": 1846,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 1818,
									"end": 1899,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "61"
								},
								{
									"begin": 1818,
									"end": 1899,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 1884,
									"end": 1888,
									"name": "PUSH",
									"source": 14,
									"value": "7F"
								},
								{
									"begin": 1876,
									"end": 1882,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 1872,
									"end": 1889,
									"name": "AND",
									"source": 14
								},
								{
									"begin": 1862,
									"end": 1889,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 1862,
									"end": 1889,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1818,
									"end": 1899,
									"name": "tag",
									"source": 14,
									"value": "61"
								},
								{
									"begin": 1818,
									"end": 1899,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1946,
									"end": 1948,
									"name": "PUSH",
									"source": 14,
									"value": "20"
								},
								{
									"begin": 1938,
									"end": 1944,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 1935,
									"end": 1949,
									"name": "LT",
									"source": 14
								},
								{
									"begin": 1915,
									"end": 1933,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 1912,
									"end": 1950,
									"name": "SUB",
									"source": 14
								},
								{
									"begin": 1909,
									"end": 1993,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "62"
								},
								{
									"begin": 1909,
									"end": 1993,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 1965,
									"end": 1983,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "63"
								},
								{
									"begin": 1965,
									"end": 1983,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "23"
								},
								{
									"begin": 1965,
									"end": 1983,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 1965,
									"end": 1983,
									"name": "tag",
									"source": 14,
									"value": "63"
								},
								{
									"begin": 1965,
									"end": 1983,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1909,
									"end": 1993,
									"name": "tag",
									"source": 14,
									"value": "62"
								},
								{
									"begin": 1909,
									"end": 1993,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1730,
									"end": 1999,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1679,
									"end": 1999,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 1679,
									"end": 1999,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 1679,
									"end": 1999,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1679,
									"end": 1999,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 2005,
									"end": 2146,
									"name": "tag",
									"source": 14,
									"value": "25"
								},
								{
									"begin": 2005,
									"end": 2146,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 2054,
									"end": 2058,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 2077,
									"end": 2080,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 2069,
									"end": 2080,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 2069,
									"end": 2080,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 2100,
									"end": 2103,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 2097,
									"end": 2098,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 2090,
									"end": 2104,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 2134,
									"end": 2138,
									"name": "PUSH",
									"source": 14,
									"value": "20"
								},
								{
									"begin": 2131,
									"end": 2132,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 2121,
									"end": 2139,
									"name": "KECCAK256",
									"source": 14
								},
								{
									"begin": 2113,
									"end": 2139,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 2113,
									"end": 2139,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 2005,
									"end": 2146,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 2005,
									"end": 2146,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 2005,
									"end": 2146,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 2005,
									"end": 2146,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 2152,
									"end": 2245,
									"name": "tag",
									"source": 14,
									"value": "26"
								},
								{
									"begin": 2152,
									"end": 2245,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 2189,
									"end": 2195,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 2236,
									"end": 2238,
									"name": "PUSH",
									"source": 14,
									"value": "20"
								},
								{
									"begin": 2231,
									"end": 2233,
									"name": "PUSH",
									"source": 14,
									"value": "1F"
								},
								{
									"begin": 2224,
									"end": 2229,
									"name": "DUP4",
									"source": 14
								},
								{
									"begin": 2220,
									"end": 2234,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 2216,
									"end": 2239,
									"name": "DIV",
									"source": 14
								},
								{
									"begin": 2206,
									"end": 2239,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 2206,
									"end": 2239,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 2152,
									"end": 2245,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 2152,
									"end": 2245,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 2152,
									"end": 2245,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 2152,
									"end": 2245,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 2251,
									"end": 2358,
									"name": "tag",
									"source": 14,
									"value": "27"
								},
								{
									"begin": 2251,
									"end": 2358,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 2295,
									"end": 2303,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 2345,
									"end": 2350,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 2339,
									"end": 2343,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 2335,
									"end": 2351,
									"name": "SHL",
									"source": 14
								},
								{
									"begin": 2314,
									"end": 2351,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 2314,
									"end": 2351,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 2251,
									"end": 2358,
									"name": "SWAP3",
									"source": 14
								},
								{
									"begin": 2251,
									"end": 2358,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 2251,
									"end": 2358,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 2251,
									"end": 2358,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 2251,
									"end": 2358,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 2364,
									"end": 2757,
									"name": "tag",
									"source": 14,
									"value": "28"
								},
								{
									"begin": 2364,
									"end": 2757,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 2433,
									"end": 2439,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 2483,
									"end": 2484,
									"name": "PUSH",
									"source": 14,
									"value": "8"
								},
								{
									"begin": 2471,
									"end": 2481,
									"name": "DUP4",
									"source": 14
								},
								{
									"begin": 2467,
									"end": 2485,
									"name": "MUL",
									"source": 14
								},
								{
									"begin": 2506,
									"end": 2603,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "68"
								},
								{
									"begin": 2536,
									"end": 2602,
									"name": "PUSH",
									"source": 14,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2525,
									"end": 2534,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 2506,
									"end": 2603,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "27"
								},
								{
									"begin": 2506,
									"end": 2603,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 2506,
									"end": 2603,
									"name": "tag",
									"source": 14,
									"value": "68"
								},
								{
									"begin": 2506,
									"end": 2603,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 2624,
									"end": 2663,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "69"
								},
								{
									"begin": 2654,
									"end": 2662,
									"name": "DUP7",
									"source": 14
								},
								{
									"begin": 2643,
									"end": 2652,
									"name": "DUP4",
									"source": 14
								},
								{
									"begin": 2624,
									"end": 2663,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "27"
								},
								{
									"begin": 2624,
									"end": 2663,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 2624,
									"end": 2663,
									"name": "tag",
									"source": 14,
									"value": "69"
								},
								{
									"begin": 2624,
									"end": 2663,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 2612,
									"end": 2663,
									"name": "SWAP6",
									"source": 14
								},
								{
									"begin": 2612,
									"end": 2663,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 2696,
									"end": 2700,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 2692,
									"end": 2701,
									"name": "NOT",
									"source": 14
								},
								{
									"begin": 2685,
									"end": 2690,
									"name": "DUP5",
									"source": 14
								},
								{
									"begin": 2681,
									"end": 2702,
									"name": "AND",
									"source": 14
								},
								{
									"begin": 2672,
									"end": 2702,
									"name": "SWAP4",
									"source": 14
								},
								{
									"begin": 2672,
									"end": 2702,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 2745,
									"end": 2749,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 2735,
									"end": 2743,
									"name": "DUP7",
									"source": 14
								},
								{
									"begin": 2731,
									"end": 2750,
									"name": "AND",
									"source": 14
								},
								{
									"begin": 2724,
									"end": 2729,
									"name": "DUP5",
									"source": 14
								},
								{
									"begin": 2721,
									"end": 2751,
									"name": "OR",
									"source": 14
								},
								{
									"begin": 2711,
									"end": 2751,
									"name": "SWAP3",
									"source": 14
								},
								{
									"begin": 2711,
									"end": 2751,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 2440,
									"end": 2757,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 2440,
									"end": 2757,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 2364,
									"end": 2757,
									"name": "SWAP4",
									"source": 14
								},
								{
									"begin": 2364,
									"end": 2757,
									"name": "SWAP3",
									"source": 14
								},
								{
									"begin": 2364,
									"end": 2757,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 2364,
									"end": 2757,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 2364,
									"end": 2757,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 2364,
									"end": 2757,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 2763,
									"end": 2840,
									"name": "tag",
									"source": 14,
									"value": "29"
								},
								{
									"begin": 2763,
									"end": 2840,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 2800,
									"end": 2807,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 2829,
									"end": 2834,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 2818,
									"end": 2834,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 2818,
									"end": 2834,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 2763,
									"end": 2840,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 2763,
									"end": 2840,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 2763,
									"end": 2840,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 2763,
									"end": 2840,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 2846,
									"end": 2906,
									"name": "tag",
									"source": 14,
									"value": "30"
								},
								{
									"begin": 2846,
									"end": 2906,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 2874,
									"end": 2877,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 2895,
									"end": 2900,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 2888,
									"end": 2900,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 2888,
									"end": 2900,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 2846,
									"end": 2906,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 2846,
									"end": 2906,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 2846,
									"end": 2906,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 2846,
									"end": 2906,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 2912,
									"end": 3054,
									"name": "tag",
									"source": 14,
									"value": "31"
								},
								{
									"begin": 2912,
									"end": 3054,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 2962,
									"end": 2971,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 2995,
									"end": 3048,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "73"
								},
								{
									"begin": 3013,
									"end": 3047,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "74"
								},
								{
									"begin": 3022,
									"end": 3046,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "75"
								},
								{
									"begin": 3040,
									"end": 3045,
									"name": "DUP5",
									"source": 14
								},
								{
									"begin": 3022,
									"end": 3046,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "29"
								},
								{
									"begin": 3022,
									"end": 3046,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 3022,
									"end": 3046,
									"name": "tag",
									"source": 14,
									"value": "75"
								},
								{
									"begin": 3022,
									"end": 3046,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 3013,
									"end": 3047,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "30"
								},
								{
									"begin": 3013,
									"end": 3047,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 3013,
									"end": 3047,
									"name": "tag",
									"source": 14,
									"value": "74"
								},
								{
									"begin": 3013,
									"end": 3047,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 2995,
									"end": 3048,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "29"
								},
								{
									"begin": 2995,
									"end": 3048,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 2995,
									"end": 3048,
									"name": "tag",
									"source": 14,
									"value": "73"
								},
								{
									"begin": 2995,
									"end": 3048,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 2982,
									"end": 3048,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 2982,
									"end": 3048,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 2912,
									"end": 3054,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 2912,
									"end": 3054,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 2912,
									"end": 3054,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 2912,
									"end": 3054,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 3060,
									"end": 3135,
									"name": "tag",
									"source": 14,
									"value": "32"
								},
								{
									"begin": 3060,
									"end": 3135,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 3103,
									"end": 3106,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 3124,
									"end": 3129,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 3117,
									"end": 3129,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 3117,
									"end": 3129,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 3060,
									"end": 3135,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 3060,
									"end": 3135,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 3060,
									"end": 3135,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 3060,
									"end": 3135,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 3141,
									"end": 3410,
									"name": "tag",
									"source": 14,
									"value": "33"
								},
								{
									"begin": 3141,
									"end": 3410,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 3251,
									"end": 3290,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "78"
								},
								{
									"begin": 3282,
									"end": 3289,
									"name": "DUP4",
									"source": 14
								},
								{
									"begin": 3251,
									"end": 3290,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "31"
								},
								{
									"begin": 3251,
									"end": 3290,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 3251,
									"end": 3290,
									"name": "tag",
									"source": 14,
									"value": "78"
								},
								{
									"begin": 3251,
									"end": 3290,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 3312,
									"end": 3403,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "79"
								},
								{
									"begin": 3361,
									"end": 3402,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "80"
								},
								{
									"begin": 3385,
									"end": 3401,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 3361,
									"end": 3402,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "32"
								},
								{
									"begin": 3361,
									"end": 3402,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 3361,
									"end": 3402,
									"name": "tag",
									"source": 14,
									"value": "80"
								},
								{
									"begin": 3361,
									"end": 3402,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 3353,
									"end": 3359,
									"name": "DUP5",
									"source": 14
								},
								{
									"begin": 3346,
									"end": 3350,
									"name": "DUP5",
									"source": 14
								},
								{
									"begin": 3340,
									"end": 3351,
									"name": "SLOAD",
									"source": 14
								},
								{
									"begin": 3312,
									"end": 3403,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "28"
								},
								{
									"begin": 3312,
									"end": 3403,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 3312,
									"end": 3403,
									"name": "tag",
									"source": 14,
									"value": "79"
								},
								{
									"begin": 3312,
									"end": 3403,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 3306,
									"end": 3310,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 3299,
									"end": 3404,
									"name": "SSTORE",
									"source": 14
								},
								{
									"begin": 3217,
									"end": 3410,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 3141,
									"end": 3410,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 3141,
									"end": 3410,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 3141,
									"end": 3410,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 3141,
									"end": 3410,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 3416,
									"end": 3489,
									"name": "tag",
									"source": 14,
									"value": "34"
								},
								{
									"begin": 3416,
									"end": 3489,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 3461,
									"end": 3464,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 3416,
									"end": 3489,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 3416,
									"end": 3489,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 3495,
									"end": 3684,
									"name": "tag",
									"source": 14,
									"value": "35"
								},
								{
									"begin": 3495,
									"end": 3684,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 3572,
									"end": 3604,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "83"
								},
								{
									"begin": 3572,
									"end": 3604,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "34"
								},
								{
									"begin": 3572,
									"end": 3604,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 3572,
									"end": 3604,
									"name": "tag",
									"source": 14,
									"value": "83"
								},
								{
									"begin": 3572,
									"end": 3604,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 3613,
									"end": 3678,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "84"
								},
								{
									"begin": 3671,
									"end": 3677,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 3663,
									"end": 3669,
									"name": "DUP5",
									"source": 14
								},
								{
									"begin": 3657,
									"end": 3661,
									"name": "DUP5",
									"source": 14
								},
								{
									"begin": 3613,
									"end": 3678,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "33"
								},
								{
									"begin": 3613,
									"end": 3678,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 3613,
									"end": 3678,
									"name": "tag",
									"source": 14,
									"value": "84"
								},
								{
									"begin": 3613,
									"end": 3678,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 3548,
									"end": 3684,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 3495,
									"end": 3684,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 3495,
									"end": 3684,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 3495,
									"end": 3684,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 3690,
									"end": 3876,
									"name": "tag",
									"source": 14,
									"value": "36"
								},
								{
									"begin": 3690,
									"end": 3876,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "tag",
									"source": 14,
									"value": "86"
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 3767,
									"end": 3770,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 3760,
									"end": 3765,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 3757,
									"end": 3771,
									"name": "LT",
									"source": 14
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "ISZERO",
									"source": 14
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "88"
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 3821,
									"end": 3860,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "89"
								},
								{
									"begin": 3858,
									"end": 3859,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 3851,
									"end": 3856,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 3821,
									"end": 3860,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "35"
								},
								{
									"begin": 3821,
									"end": 3860,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 3821,
									"end": 3860,
									"name": "tag",
									"source": 14,
									"value": "89"
								},
								{
									"begin": 3821,
									"end": 3860,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 3794,
									"end": 3795,
									"name": "PUSH",
									"source": 14,
									"value": "1"
								},
								{
									"begin": 3787,
									"end": 3792,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 3783,
									"end": 3796,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 3774,
									"end": 3796,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 3774,
									"end": 3796,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "86"
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "tag",
									"source": 14,
									"value": "88"
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 3690,
									"end": 3876,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 3690,
									"end": 3876,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 3690,
									"end": 3876,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 3882,
									"end": 4425,
									"name": "tag",
									"source": 14,
									"value": "37"
								},
								{
									"begin": 3882,
									"end": 4425,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 3983,
									"end": 3985,
									"name": "PUSH",
									"source": 14,
									"value": "1F"
								},
								{
									"begin": 3978,
									"end": 3981,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 3975,
									"end": 3986,
									"name": "GT",
									"source": 14
								},
								{
									"begin": 3972,
									"end": 4418,
									"name": "ISZERO",
									"source": 14
								},
								{
									"begin": 3972,
									"end": 4418,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "91"
								},
								{
									"begin": 3972,
									"end": 4418,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 4017,
									"end": 4055,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "92"
								},
								{
									"begin": 4049,
									"end": 4054,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 4017,
									"end": 4055,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "25"
								},
								{
									"begin": 4017,
									"end": 4055,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 4017,
									"end": 4055,
									"name": "tag",
									"source": 14,
									"value": "92"
								},
								{
									"begin": 4017,
									"end": 4055,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 4101,
									"end": 4130,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "93"
								},
								{
									"begin": 4119,
									"end": 4129,
									"name": "DUP5",
									"source": 14
								},
								{
									"begin": 4101,
									"end": 4130,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "26"
								},
								{
									"begin": 4101,
									"end": 4130,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 4101,
									"end": 4130,
									"name": "tag",
									"source": 14,
									"value": "93"
								},
								{
									"begin": 4101,
									"end": 4130,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 4091,
									"end": 4099,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 4087,
									"end": 4131,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 4284,
									"end": 4286,
									"name": "PUSH",
									"source": 14,
									"value": "20"
								},
								{
									"begin": 4272,
									"end": 4282,
									"name": "DUP6",
									"source": 14
								},
								{
									"begin": 4269,
									"end": 4287,
									"name": "LT",
									"source": 14
								},
								{
									"begin": 4266,
									"end": 4315,
									"name": "ISZERO",
									"source": 14
								},
								{
									"begin": 4266,
									"end": 4315,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "94"
								},
								{
									"begin": 4266,
									"end": 4315,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 4305,
									"end": 4313,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 4290,
									"end": 4313,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 4290,
									"end": 4313,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 4266,
									"end": 4315,
									"name": "tag",
									"source": 14,
									"value": "94"
								},
								{
									"begin": 4266,
									"end": 4315,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 4328,
									"end": 4408,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "95"
								},
								{
									"begin": 4384,
									"end": 4406,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "96"
								},
								{
									"begin": 4402,
									"end": 4405,
									"name": "DUP6",
									"source": 14
								},
								{
									"begin": 4384,
									"end": 4406,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "26"
								},
								{
									"begin": 4384,
									"end": 4406,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 4384,
									"end": 4406,
									"name": "tag",
									"source": 14,
									"value": "96"
								},
								{
									"begin": 4384,
									"end": 4406,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 4374,
									"end": 4382,
									"name": "DUP4",
									"source": 14
								},
								{
									"begin": 4370,
									"end": 4407,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 4357,
									"end": 4368,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 4328,
									"end": 4408,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "36"
								},
								{
									"begin": 4328,
									"end": 4408,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 4328,
									"end": 4408,
									"name": "tag",
									"source": 14,
									"value": "95"
								},
								{
									"begin": 4328,
									"end": 4408,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 3987,
									"end": 4418,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 3987,
									"end": 4418,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 3972,
									"end": 4418,
									"name": "tag",
									"source": 14,
									"value": "91"
								},
								{
									"begin": 3972,
									"end": 4418,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 3882,
									"end": 4425,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 3882,
									"end": 4425,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 3882,
									"end": 4425,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 3882,
									"end": 4425,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 4431,
									"end": 4548,
									"name": "tag",
									"source": 14,
									"value": "38"
								},
								{
									"begin": 4431,
									"end": 4548,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 4485,
									"end": 4493,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 4535,
									"end": 4540,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 4529,
									"end": 4533,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 4525,
									"end": 4541,
									"name": "SHR",
									"source": 14
								},
								{
									"begin": 4504,
									"end": 4541,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 4504,
									"end": 4541,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 4431,
									"end": 4548,
									"name": "SWAP3",
									"source": 14
								},
								{
									"begin": 4431,
									"end": 4548,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 4431,
									"end": 4548,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 4431,
									"end": 4548,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 4431,
									"end": 4548,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 4554,
									"end": 4723,
									"name": "tag",
									"source": 14,
									"value": "39"
								},
								{
									"begin": 4554,
									"end": 4723,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 4598,
									"end": 4604,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 4631,
									"end": 4682,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "99"
								},
								{
									"begin": 4679,
									"end": 4680,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 4675,
									"end": 4681,
									"name": "NOT",
									"source": 14
								},
								{
									"begin": 4667,
									"end": 4672,
									"name": "DUP5",
									"source": 14
								},
								{
									"begin": 4664,
									"end": 4665,
									"name": "PUSH",
									"source": 14,
									"value": "8"
								},
								{
									"begin": 4660,
									"end": 4673,
									"name": "MUL",
									"source": 14
								},
								{
									"begin": 4631,
									"end": 4682,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "38"
								},
								{
									"begin": 4631,
									"end": 4682,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 4631,
									"end": 4682,
									"name": "tag",
									"source": 14,
									"value": "99"
								},
								{
									"begin": 4631,
									"end": 4682,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 4627,
									"end": 4683,
									"name": "NOT",
									"source": 14
								},
								{
									"begin": 4712,
									"end": 4716,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 4706,
									"end": 4710,
									"name": "DUP4",
									"source": 14
								},
								{
									"begin": 4702,
									"end": 4717,
									"name": "AND",
									"source": 14
								},
								{
									"begin": 4692,
									"end": 4717,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 4692,
									"end": 4717,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 4605,
									"end": 4723,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 4554,
									"end": 4723,
									"name": "SWAP3",
									"source": 14
								},
								{
									"begin": 4554,
									"end": 4723,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 4554,
									"end": 4723,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 4554,
									"end": 4723,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 4554,
									"end": 4723,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 4728,
									"end": 5023,
									"name": "tag",
									"source": 14,
									"value": "40"
								},
								{
									"begin": 4728,
									"end": 5023,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 4804,
									"end": 4808,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 4950,
									"end": 4979,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "101"
								},
								{
									"begin": 4975,
									"end": 4978,
									"name": "DUP4",
									"source": 14
								},
								{
									"begin": 4969,
									"end": 4973,
									"name": "DUP4",
									"source": 14
								},
								{
									"begin": 4950,
									"end": 4979,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "39"
								},
								{
									"begin": 4950,
									"end": 4979,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 4950,
									"end": 4979,
									"name": "tag",
									"source": 14,
									"value": "101"
								},
								{
									"begin": 4950,
									"end": 4979,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 4942,
									"end": 4979,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 4942,
									"end": 4979,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 5012,
									"end": 5015,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 5009,
									"end": 5010,
									"name": "PUSH",
									"source": 14,
									"value": "2"
								},
								{
									"begin": 5005,
									"end": 5016,
									"name": "MUL",
									"source": 14
								},
								{
									"begin": 4999,
									"end": 5003,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 4996,
									"end": 5017,
									"name": "OR",
									"source": 14
								},
								{
									"begin": 4988,
									"end": 5017,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 4988,
									"end": 5017,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 4728,
									"end": 5023,
									"name": "SWAP3",
									"source": 14
								},
								{
									"begin": 4728,
									"end": 5023,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 4728,
									"end": 5023,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 4728,
									"end": 5023,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 4728,
									"end": 5023,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 5028,
									"end": 6423,
									"name": "tag",
									"source": 14,
									"value": "13"
								},
								{
									"begin": 5028,
									"end": 6423,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 5145,
									"end": 5182,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "103"
								},
								{
									"begin": 5178,
									"end": 5181,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 5145,
									"end": 5182,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "21"
								},
								{
									"begin": 5145,
									"end": 5182,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 5145,
									"end": 5182,
									"name": "tag",
									"source": 14,
									"value": "103"
								},
								{
									"begin": 5145,
									"end": 5182,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 5247,
									"end": 5265,
									"name": "PUSH",
									"source": 14,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5239,
									"end": 5245,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 5236,
									"end": 5266,
									"name": "GT",
									"source": 14
								},
								{
									"begin": 5233,
									"end": 5289,
									"name": "ISZERO",
									"source": 14
								},
								{
									"begin": 5233,
									"end": 5289,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "104"
								},
								{
									"begin": 5233,
									"end": 5289,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 5269,
									"end": 5287,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "105"
								},
								{
									"begin": 5269,
									"end": 5287,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "22"
								},
								{
									"begin": 5269,
									"end": 5287,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 5269,
									"end": 5287,
									"name": "tag",
									"source": 14,
									"value": "105"
								},
								{
									"begin": 5269,
									"end": 5287,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 5233,
									"end": 5289,
									"name": "tag",
									"source": 14,
									"value": "104"
								},
								{
									"begin": 5233,
									"end": 5289,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 5313,
									"end": 5351,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "106"
								},
								{
									"begin": 5345,
									"end": 5349,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 5339,
									"end": 5350,
									"name": "SLOAD",
									"source": 14
								},
								{
									"begin": 5313,
									"end": 5351,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "24"
								},
								{
									"begin": 5313,
									"end": 5351,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 5313,
									"end": 5351,
									"name": "tag",
									"source": 14,
									"value": "106"
								},
								{
									"begin": 5313,
									"end": 5351,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 5398,
									"end": 5465,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "107"
								},
								{
									"begin": 5458,
									"end": 5464,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 5450,
									"end": 5456,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 5444,
									"end": 5448,
									"name": "DUP6",
									"source": 14
								},
								{
									"begin": 5398,
									"end": 5465,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "37"
								},
								{
									"begin": 5398,
									"end": 5465,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 5398,
									"end": 5465,
									"name": "tag",
									"source": 14,
									"value": "107"
								},
								{
									"begin": 5398,
									"end": 5465,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 5492,
									"end": 5493,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 5516,
									"end": 5520,
									"name": "PUSH",
									"source": 14,
									"value": "20"
								},
								{
									"begin": 5503,
									"end": 5520,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 5503,
									"end": 5520,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 5548,
									"end": 5550,
									"name": "PUSH",
									"source": 14,
									"value": "1F"
								},
								{
									"begin": 5540,
									"end": 5546,
									"name": "DUP4",
									"source": 14
								},
								{
									"begin": 5537,
									"end": 5551,
									"name": "GT",
									"source": 14
								},
								{
									"begin": 5565,
									"end": 5566,
									"name": "PUSH",
									"source": 14,
									"value": "1"
								},
								{
									"begin": 5560,
									"end": 6178,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 5560,
									"end": 6178,
									"name": "EQ",
									"source": 14
								},
								{
									"begin": 5560,
									"end": 6178,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "109"
								},
								{
									"begin": 5560,
									"end": 6178,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 6222,
									"end": 6223,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 6239,
									"end": 6245,
									"name": "DUP5",
									"source": 14
								},
								{
									"begin": 6236,
									"end": 6313,
									"name": "ISZERO",
									"source": 14
								},
								{
									"begin": 6236,
									"end": 6313,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "110"
								},
								{
									"begin": 6236,
									"end": 6313,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 6288,
									"end": 6297,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 6283,
									"end": 6286,
									"name": "DUP8",
									"source": 14
								},
								{
									"begin": 6279,
									"end": 6298,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 6273,
									"end": 6299,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": 6264,
									"end": 6299,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 6264,
									"end": 6299,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 6236,
									"end": 6313,
									"name": "tag",
									"source": 14,
									"value": "110"
								},
								{
									"begin": 6236,
									"end": 6313,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 6339,
									"end": 6406,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "111"
								},
								{
									"begin": 6399,
									"end": 6405,
									"name": "DUP6",
									"source": 14
								},
								{
									"begin": 6392,
									"end": 6397,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 6339,
									"end": 6406,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "40"
								},
								{
									"begin": 6339,
									"end": 6406,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 6339,
									"end": 6406,
									"name": "tag",
									"source": 14,
									"value": "111"
								},
								{
									"begin": 6339,
									"end": 6406,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 6333,
									"end": 6337,
									"name": "DUP7",
									"source": 14
								},
								{
									"begin": 6326,
									"end": 6407,
									"name": "SSTORE",
									"source": 14
								},
								{
									"begin": 6195,
									"end": 6417,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 5530,
									"end": 6417,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "108"
								},
								{
									"begin": 5530,
									"end": 6417,
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 5560,
									"end": 6178,
									"name": "tag",
									"source": 14,
									"value": "109"
								},
								{
									"begin": 5560,
									"end": 6178,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 5612,
									"end": 5616,
									"name": "PUSH",
									"source": 14,
									"value": "1F"
								},
								{
									"begin": 5608,
									"end": 5617,
									"name": "NOT",
									"source": 14
								},
								{
									"begin": 5600,
									"end": 5606,
									"name": "DUP5",
									"source": 14
								},
								{
									"begin": 5596,
									"end": 5618,
									"name": "AND",
									"source": 14
								},
								{
									"begin": 5646,
									"end": 5683,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "112"
								},
								{
									"begin": 5678,
									"end": 5682,
									"name": "DUP7",
									"source": 14
								},
								{
									"begin": 5646,
									"end": 5683,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "25"
								},
								{
									"begin": 5646,
									"end": 5683,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 5646,
									"end": 5683,
									"name": "tag",
									"source": 14,
									"value": "112"
								},
								{
									"begin": 5646,
									"end": 5683,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 5705,
									"end": 5706,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "tag",
									"source": 14,
									"value": "113"
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 5733,
									"end": 5740,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 5730,
									"end": 5731,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 5727,
									"end": 5741,
									"name": "LT",
									"source": 14
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "ISZERO",
									"source": 14
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "115"
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 5812,
									"end": 5821,
									"name": "DUP5",
									"source": 14
								},
								{
									"begin": 5807,
									"end": 5810,
									"name": "DUP10",
									"source": 14
								},
								{
									"begin": 5803,
									"end": 5822,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 5797,
									"end": 5823,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": 5789,
									"end": 5795,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 5782,
									"end": 5824,
									"name": "SSTORE",
									"source": 14
								},
								{
									"begin": 5863,
									"end": 5864,
									"name": "PUSH",
									"source": 14,
									"value": "1"
								},
								{
									"begin": 5855,
									"end": 5861,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 5851,
									"end": 5865,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 5841,
									"end": 5865,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 5841,
									"end": 5865,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 5910,
									"end": 5912,
									"name": "PUSH",
									"source": 14,
									"value": "20"
								},
								{
									"begin": 5899,
									"end": 5908,
									"name": "DUP6",
									"source": 14
								},
								{
									"begin": 5895,
									"end": 5913,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 5882,
									"end": 5913,
									"name": "SWAP5",
									"source": 14
								},
								{
									"begin": 5882,
									"end": 5913,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 5756,
									"end": 5760,
									"name": "PUSH",
									"source": 14,
									"value": "20"
								},
								{
									"begin": 5753,
									"end": 5754,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 5749,
									"end": 5761,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 5744,
									"end": 5761,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 5744,
									"end": 5761,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "113"
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "tag",
									"source": 14,
									"value": "115"
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 5955,
									"end": 5961,
									"name": "DUP7",
									"source": 14
								},
								{
									"begin": 5946,
									"end": 5953,
									"name": "DUP4",
									"source": 14
								},
								{
									"begin": 5943,
									"end": 5962,
									"name": "LT",
									"source": 14
								},
								{
									"begin": 5940,
									"end": 6119,
									"name": "ISZERO",
									"source": 14
								},
								{
									"begin": 5940,
									"end": 6119,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "116"
								},
								{
									"begin": 5940,
									"end": 6119,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 6013,
									"end": 6022,
									"name": "DUP5",
									"source": 14
								},
								{
									"begin": 6008,
									"end": 6011,
									"name": "DUP10",
									"source": 14
								},
								{
									"begin": 6004,
									"end": 6023,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 5998,
									"end": 6024,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": 6056,
									"end": 6104,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "117"
								},
								{
									"begin": 6098,
									"end": 6102,
									"name": "PUSH",
									"source": 14,
									"value": "1F"
								},
								{
									"begin": 6090,
									"end": 6096,
									"name": "DUP10",
									"source": 14
								},
								{
									"begin": 6086,
									"end": 6103,
									"name": "AND",
									"source": 14
								},
								{
									"begin": 6075,
									"end": 6084,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 6056,
									"end": 6104,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "39"
								},
								{
									"begin": 6056,
									"end": 6104,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 6056,
									"end": 6104,
									"name": "tag",
									"source": 14,
									"value": "117"
								},
								{
									"begin": 6056,
									"end": 6104,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 6048,
									"end": 6054,
									"name": "DUP4",
									"source": 14
								},
								{
									"begin": 6041,
									"end": 6105,
									"name": "SSTORE",
									"source": 14
								},
								{
									"begin": 5963,
									"end": 6119,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 5940,
									"end": 6119,
									"name": "tag",
									"source": 14,
									"value": "116"
								},
								{
									"begin": 5940,
									"end": 6119,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 6165,
									"end": 6166,
									"name": "PUSH",
									"source": 14,
									"value": "1"
								},
								{
									"begin": 6161,
									"end": 6162,
									"name": "PUSH",
									"source": 14,
									"value": "2"
								},
								{
									"begin": 6153,
									"end": 6159,
									"name": "DUP9",
									"source": 14
								},
								{
									"begin": 6149,
									"end": 6163,
									"name": "MUL",
									"source": 14
								},
								{
									"begin": 6145,
									"end": 6167,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 6139,
									"end": 6143,
									"name": "DUP9",
									"source": 14
								},
								{
									"begin": 6132,
									"end": 6168,
									"name": "SSTORE",
									"source": 14
								},
								{
									"begin": 5567,
									"end": 6178,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 5567,
									"end": 6178,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 5567,
									"end": 6178,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 5530,
									"end": 6417,
									"name": "tag",
									"source": 14,
									"value": "108"
								},
								{
									"begin": 5530,
									"end": 6417,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 5530,
									"end": 6417,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 5120,
									"end": 6423,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 5120,
									"end": 6423,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 5120,
									"end": 6423,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 5028,
									"end": 6423,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 5028,
									"end": 6423,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 5028,
									"end": 6423,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 323,
									"end": 1199,
									"name": "tag",
									"source": 13,
									"value": "10"
								},
								{
									"begin": 323,
									"end": 1199,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 323,
									"end": 1199,
									"name": "PUSH",
									"source": 13,
									"value": "80"
								},
								{
									"begin": 323,
									"end": 1199,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 323,
									"end": 1199,
									"name": "PUSH #[$]",
									"source": 13,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 323,
									"end": 1199,
									"name": "PUSH [$]",
									"source": 13,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 323,
									"end": 1199,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 323,
									"end": 1199,
									"name": "CODECOPY",
									"source": 13
								},
								{
									"begin": 323,
									"end": 1199,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 323,
									"end": 1199,
									"name": "ASSIGNIMMUTABLE",
									"source": 13,
									"value": "3047"
								},
								{
									"begin": 323,
									"end": 1199,
									"name": "PUSH #[$]",
									"source": 13,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 323,
									"end": 1199,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 323,
									"end": 1199,
									"name": "RETURN",
									"source": 13
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212208758f283f5b2a1538ffdd8d6bd6203a646ee510cc9cd8e4aa7ba217de96a48b764736f6c63430008140033",
									".code": [
										{
											"begin": 323,
											"end": 1199,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 323,
											"end": 1199,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 323,
											"end": 1199,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 323,
											"end": 1199,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 323,
											"end": 1199,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 323,
											"end": 1199,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 323,
											"end": 1199,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 323,
											"end": 1199,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 323,
											"end": 1199,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 323,
											"end": 1199,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 323,
											"end": 1199,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 323,
											"end": 1199,
											"name": "tag",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 323,
											"end": 1199,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 323,
											"end": 1199,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 323,
											"end": 1199,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 323,
											"end": 1199,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 323,
											"end": 1199,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 323,
											"end": 1199,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 323,
											"end": 1199,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 323,
											"end": 1199,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 323,
											"end": 1199,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 323,
											"end": 1199,
											"name": "PUSH",
											"source": 13,
											"value": "E0"
										},
										{
											"begin": 323,
											"end": 1199,
											"name": "SHR",
											"source": 13
										},
										{
											"begin": 323,
											"end": 1199,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 323,
											"end": 1199,
											"name": "PUSH",
											"source": 13,
											"value": "4F558E79"
										},
										{
											"begin": 323,
											"end": 1199,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 323,
											"end": 1199,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "18"
										},
										{
											"begin": 323,
											"end": 1199,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 323,
											"end": 1199,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 323,
											"end": 1199,
											"name": "PUSH",
											"source": 13,
											"value": "BD85B039"
										},
										{
											"begin": 323,
											"end": 1199,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 323,
											"end": 1199,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "19"
										},
										{
											"begin": 323,
											"end": 1199,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 323,
											"end": 1199,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 323,
											"end": 1199,
											"name": "PUSH",
											"source": 13,
											"value": "BD85B039"
										},
										{
											"begin": 323,
											"end": 1199,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 323,
											"end": 1199,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "14"
										},
										{
											"begin": 323,
											"end": 1199,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 323,
											"end": 1199,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 323,
											"end": 1199,
											"name": "PUSH",
											"source": 13,
											"value": "E985E9C5"
										},
										{
											"begin": 323,
											"end": 1199,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 323,
											"end": 1199,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "15"
										},
										{
											"begin": 323,
											"end": 1199,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 323,
											"end": 1199,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 323,
											"end": 1199,
											"name": "PUSH",
											"source": 13,
											"value": "F242432A"
										},
										{
											"begin": 323,
											"end": 1199,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 323,
											"end": 1199,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "16"
										},
										{
											"begin": 323,
											"end": 1199,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 323,
											"end": 1199,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 323,
											"end": 1199,
											"name": "PUSH",
											"source": 13,
											"value": "F5298ACA"
										},
										{
											"begin": 323,
											"end": 1199,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 323,
											"end": 1199,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "17"
										},
										{
											"begin": 323,
											"end": 1199,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 323,
											"end": 1199,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 323,
											"end": 1199,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 323,
											"end": 1199,
											"name": "tag",
											"source": 13,
											"value": "19"
										},
										{
											"begin": 323,
											"end": 1199,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 323,
											"end": 1199,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 323,
											"end": 1199,
											"name": "PUSH",
											"source": 13,
											"value": "4F558E79"
										},
										{
											"begin": 323,
											"end": 1199,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 323,
											"end": 1199,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "10"
										},
										{
											"begin": 323,
											"end": 1199,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 323,
											"end": 1199,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 323,
											"end": 1199,
											"name": "PUSH",
											"source": 13,
											"value": "6B20C454"
										},
										{
											"begin": 323,
											"end": 1199,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 323,
											"end": 1199,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "11"
										},
										{
											"begin": 323,
											"end": 1199,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 323,
											"end": 1199,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 323,
											"end": 1199,
											"name": "PUSH",
											"source": 13,
											"value": "731133E9"
										},
										{
											"begin": 323,
											"end": 1199,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 323,
											"end": 1199,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "12"
										},
										{
											"begin": 323,
											"end": 1199,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 323,
											"end": 1199,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 323,
											"end": 1199,
											"name": "PUSH",
											"source": 13,
											"value": "A22CB465"
										},
										{
											"begin": 323,
											"end": 1199,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 323,
											"end": 1199,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "13"
										},
										{
											"begin": 323,
											"end": 1199,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 323,
											"end": 1199,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 323,
											"end": 1199,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 323,
											"end": 1199,
											"name": "tag",
											"source": 13,
											"value": "18"
										},
										{
											"begin": 323,
											"end": 1199,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 323,
											"end": 1199,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 323,
											"end": 1199,
											"name": "PUSH",
											"source": 13,
											"value": "18160DDD"
										},
										{
											"begin": 323,
											"end": 1199,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 323,
											"end": 1199,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 323,
											"end": 1199,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 323,
											"end": 1199,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 323,
											"end": 1199,
											"name": "PUSH",
											"source": 13,
											"value": "18160DDD"
										},
										{
											"begin": 323,
											"end": 1199,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 323,
											"end": 1199,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "6"
										},
										{
											"begin": 323,
											"end": 1199,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 323,
											"end": 1199,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 323,
											"end": 1199,
											"name": "PUSH",
											"source": 13,
											"value": "1F7FDFFA"
										},
										{
											"begin": 323,
											"end": 1199,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 323,
											"end": 1199,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "7"
										},
										{
											"begin": 323,
											"end": 1199,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 323,
											"end": 1199,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 323,
											"end": 1199,
											"name": "PUSH",
											"source": 13,
											"value": "2EB2C2D6"
										},
										{
											"begin": 323,
											"end": 1199,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 323,
											"end": 1199,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "8"
										},
										{
											"begin": 323,
											"end": 1199,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 323,
											"end": 1199,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 323,
											"end": 1199,
											"name": "PUSH",
											"source": 13,
											"value": "4E1273F4"
										},
										{
											"begin": 323,
											"end": 1199,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 323,
											"end": 1199,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "9"
										},
										{
											"begin": 323,
											"end": 1199,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 323,
											"end": 1199,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 323,
											"end": 1199,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 323,
											"end": 1199,
											"name": "tag",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 323,
											"end": 1199,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 323,
											"end": 1199,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 323,
											"end": 1199,
											"name": "PUSH",
											"source": 13,
											"value": "FDD58E"
										},
										{
											"begin": 323,
											"end": 1199,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 323,
											"end": 1199,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 323,
											"end": 1199,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 323,
											"end": 1199,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 323,
											"end": 1199,
											"name": "PUSH",
											"source": 13,
											"value": "1FFC9A7"
										},
										{
											"begin": 323,
											"end": 1199,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 323,
											"end": 1199,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 323,
											"end": 1199,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 323,
											"end": 1199,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 323,
											"end": 1199,
											"name": "PUSH",
											"source": 13,
											"value": "E89341C"
										},
										{
											"begin": 323,
											"end": 1199,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 323,
											"end": 1199,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "5"
										},
										{
											"begin": 323,
											"end": 1199,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 323,
											"end": 1199,
											"name": "tag",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 323,
											"end": 1199,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 323,
											"end": 1199,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 323,
											"end": 1199,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 323,
											"end": 1199,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 2247,
											"end": 2379,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2247,
											"end": 2379,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 2247,
											"end": 2379,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 1380,
											"end": 1685,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 1380,
											"end": 1685,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 1380,
											"end": 1685,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 2084,
											"end": 2187,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 2084,
											"end": 2187,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 2084,
											"end": 2187,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "tag",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 1127,
											"end": 1227,
											"name": "tag",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 1127,
											"end": 1227,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1127,
											"end": 1227,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "39"
										},
										{
											"begin": 1127,
											"end": 1227,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1127,
											"end": 1227,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1127,
											"end": 1227,
											"name": "tag",
											"source": 5,
											"value": "39"
										},
										{
											"begin": 1127,
											"end": 1227,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1127,
											"end": 1227,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1127,
											"end": 1227,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1127,
											"end": 1227,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "41"
										},
										{
											"begin": 1127,
											"end": 1227,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1127,
											"end": 1227,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1127,
											"end": 1227,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 1127,
											"end": 1227,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1127,
											"end": 1227,
											"name": "tag",
											"source": 5,
											"value": "41"
										},
										{
											"begin": 1127,
											"end": 1227,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1127,
											"end": 1227,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1127,
											"end": 1227,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1127,
											"end": 1227,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1127,
											"end": 1227,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1127,
											"end": 1227,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1127,
											"end": 1227,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1127,
											"end": 1227,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 813,
											"end": 993,
											"name": "tag",
											"source": 13,
											"value": "7"
										},
										{
											"begin": 813,
											"end": 993,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 813,
											"end": 993,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "42"
										},
										{
											"begin": 813,
											"end": 993,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 813,
											"end": 993,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 813,
											"end": 993,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 813,
											"end": 993,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 813,
											"end": 993,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 813,
											"end": 993,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 813,
											"end": 993,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 813,
											"end": 993,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "43"
										},
										{
											"begin": 813,
											"end": 993,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 813,
											"end": 993,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 813,
											"end": 993,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 813,
											"end": 993,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 813,
											"end": 993,
											"name": "tag",
											"source": 13,
											"value": "43"
										},
										{
											"begin": 813,
											"end": 993,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 813,
											"end": 993,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "45"
										},
										{
											"begin": 813,
											"end": 993,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 813,
											"end": 993,
											"name": "tag",
											"source": 13,
											"value": "42"
										},
										{
											"begin": 813,
											"end": 993,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 813,
											"end": 993,
											"name": "STOP",
											"source": 13
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 4014,
											"end": 4443,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "tag",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 4014,
											"end": 4443,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "tag",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 2536,
											"end": 3088,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "tag",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 2536,
											"end": 3088,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "tag",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 2536,
											"end": 3088,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "tag",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 1320,
											"end": 1426,
											"name": "tag",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 1320,
											"end": 1426,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1320,
											"end": 1426,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "56"
										},
										{
											"begin": 1320,
											"end": 1426,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1320,
											"end": 1426,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1320,
											"end": 1426,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 1320,
											"end": 1426,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1320,
											"end": 1426,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1320,
											"end": 1426,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1320,
											"end": 1426,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1320,
											"end": 1426,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "57"
										},
										{
											"begin": 1320,
											"end": 1426,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1320,
											"end": 1426,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1320,
											"end": 1426,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "35"
										},
										{
											"begin": 1320,
											"end": 1426,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1320,
											"end": 1426,
											"name": "tag",
											"source": 5,
											"value": "57"
										},
										{
											"begin": 1320,
											"end": 1426,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1320,
											"end": 1426,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "58"
										},
										{
											"begin": 1320,
											"end": 1426,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1320,
											"end": 1426,
											"name": "tag",
											"source": 5,
											"value": "56"
										},
										{
											"begin": 1320,
											"end": 1426,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1320,
											"end": 1426,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1320,
											"end": 1426,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1320,
											"end": 1426,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "59"
										},
										{
											"begin": 1320,
											"end": 1426,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1320,
											"end": 1426,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1320,
											"end": 1426,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "32"
										},
										{
											"begin": 1320,
											"end": 1426,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1320,
											"end": 1426,
											"name": "tag",
											"source": 5,
											"value": "59"
										},
										{
											"begin": 1320,
											"end": 1426,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1320,
											"end": 1426,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1320,
											"end": 1426,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1320,
											"end": 1426,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1320,
											"end": 1426,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1320,
											"end": 1426,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1320,
											"end": 1426,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1320,
											"end": 1426,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 681,
											"end": 994,
											"name": "tag",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 681,
											"end": 994,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 681,
											"end": 994,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 681,
											"end": 994,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 681,
											"end": 994,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 681,
											"end": 994,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 681,
											"end": 994,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 681,
											"end": 994,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 681,
											"end": 994,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 681,
											"end": 994,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 681,
											"end": 994,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "61"
										},
										{
											"begin": 681,
											"end": 994,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 681,
											"end": 994,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 681,
											"end": 994,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "62"
										},
										{
											"begin": 681,
											"end": 994,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 681,
											"end": 994,
											"name": "tag",
											"source": 4,
											"value": "61"
										},
										{
											"begin": 681,
											"end": 994,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 681,
											"end": 994,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "63"
										},
										{
											"begin": 681,
											"end": 994,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 681,
											"end": 994,
											"name": "tag",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 681,
											"end": 994,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 681,
											"end": 994,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 651,
											"end": 809,
											"name": "tag",
											"source": 13,
											"value": "12"
										},
										{
											"begin": 651,
											"end": 809,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 651,
											"end": 809,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 651,
											"end": 809,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 651,
											"end": 809,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 651,
											"end": 809,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 651,
											"end": 809,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 651,
											"end": 809,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 651,
											"end": 809,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 651,
											"end": 809,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 651,
											"end": 809,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "65"
										},
										{
											"begin": 651,
											"end": 809,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 651,
											"end": 809,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 651,
											"end": 809,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "66"
										},
										{
											"begin": 651,
											"end": 809,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 651,
											"end": 809,
											"name": "tag",
											"source": 13,
											"value": "65"
										},
										{
											"begin": 651,
											"end": 809,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 651,
											"end": 809,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "67"
										},
										{
											"begin": 651,
											"end": 809,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 651,
											"end": 809,
											"name": "tag",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 651,
											"end": 809,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 651,
											"end": 809,
											"name": "STOP",
											"source": 13
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 3156,
											"end": 3300,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "tag",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 3156,
											"end": 3300,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "tag",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 959,
											"end": 1070,
											"name": "tag",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 959,
											"end": 1070,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 959,
											"end": 1070,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "72"
										},
										{
											"begin": 959,
											"end": 1070,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 959,
											"end": 1070,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 959,
											"end": 1070,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 959,
											"end": 1070,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 959,
											"end": 1070,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 959,
											"end": 1070,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 959,
											"end": 1070,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 959,
											"end": 1070,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "73"
										},
										{
											"begin": 959,
											"end": 1070,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 959,
											"end": 1070,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 959,
											"end": 1070,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "35"
										},
										{
											"begin": 959,
											"end": 1070,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 959,
											"end": 1070,
											"name": "tag",
											"source": 5,
											"value": "73"
										},
										{
											"begin": 959,
											"end": 1070,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 959,
											"end": 1070,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "74"
										},
										{
											"begin": 959,
											"end": 1070,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 959,
											"end": 1070,
											"name": "tag",
											"source": 5,
											"value": "72"
										},
										{
											"begin": 959,
											"end": 1070,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 959,
											"end": 1070,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 959,
											"end": 1070,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 959,
											"end": 1070,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "75"
										},
										{
											"begin": 959,
											"end": 1070,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 959,
											"end": 1070,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 959,
											"end": 1070,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 959,
											"end": 1070,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 959,
											"end": 1070,
											"name": "tag",
											"source": 5,
											"value": "75"
										},
										{
											"begin": 959,
											"end": 1070,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 959,
											"end": 1070,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 959,
											"end": 1070,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 959,
											"end": 1070,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 959,
											"end": 1070,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 959,
											"end": 1070,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 959,
											"end": 1070,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 959,
											"end": 1070,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 3367,
											"end": 3524,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "tag",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 3367,
											"end": 3524,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "tag",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 3367,
											"end": 3524,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "tag",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 3591,
											"end": 3942,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "tag",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 3591,
											"end": 3942,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "tag",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 394,
											"end": 675,
											"name": "tag",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 394,
											"end": 675,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 394,
											"end": 675,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "85"
										},
										{
											"begin": 394,
											"end": 675,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 394,
											"end": 675,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 394,
											"end": 675,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 394,
											"end": 675,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 394,
											"end": 675,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 394,
											"end": 675,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 394,
											"end": 675,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 394,
											"end": 675,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "86"
										},
										{
											"begin": 394,
											"end": 675,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 394,
											"end": 675,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 394,
											"end": 675,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "87"
										},
										{
											"begin": 394,
											"end": 675,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 394,
											"end": 675,
											"name": "tag",
											"source": 4,
											"value": "86"
										},
										{
											"begin": 394,
											"end": 675,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 394,
											"end": 675,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "88"
										},
										{
											"begin": 394,
											"end": 675,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 394,
											"end": 675,
											"name": "tag",
											"source": 4,
											"value": "85"
										},
										{
											"begin": 394,
											"end": 675,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 394,
											"end": 675,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2324,
											"end": 2331,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2350,
											"end": 2359,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2350,
											"end": 2363,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2360,
											"end": 2362,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2350,
											"end": 2363,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2350,
											"end": 2363,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2350,
											"end": 2363,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2350,
											"end": 2363,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2350,
											"end": 2363,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2350,
											"end": 2363,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2350,
											"end": 2363,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2350,
											"end": 2363,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2350,
											"end": 2363,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2350,
											"end": 2363,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2350,
											"end": 2363,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2350,
											"end": 2372,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2364,
											"end": 2371,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2350,
											"end": 2372,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2350,
											"end": 2372,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2350,
											"end": 2372,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2350,
											"end": 2372,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2350,
											"end": 2372,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2350,
											"end": 2372,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2350,
											"end": 2372,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2350,
											"end": 2372,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2350,
											"end": 2372,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2350,
											"end": 2372,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2350,
											"end": 2372,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2350,
											"end": 2372,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2350,
											"end": 2372,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2350,
											"end": 2372,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2350,
											"end": 2372,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2350,
											"end": 2372,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2343,
											"end": 2372,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2343,
											"end": 2372,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2247,
											"end": 2379,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1482,
											"end": 1486,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1532,
											"end": 1558,
											"name": "PUSH",
											"source": 1,
											"value": "D9B67A2600000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1517,
											"end": 1558,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1517,
											"end": 1558,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 1517,
											"end": 1558,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1517,
											"end": 1528,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1517,
											"end": 1558,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1517,
											"end": 1558,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 1517,
											"end": 1558,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1517,
											"end": 1558,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1517,
											"end": 1626,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1517,
											"end": 1626,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 1517,
											"end": 1626,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1517,
											"end": 1626,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1589,
											"end": 1626,
											"name": "PUSH",
											"source": 1,
											"value": "E89341C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1574,
											"end": 1626,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1574,
											"end": 1626,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 1574,
											"end": 1626,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1574,
											"end": 1585,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1574,
											"end": 1626,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1574,
											"end": 1626,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 1574,
											"end": 1626,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1574,
											"end": 1626,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1517,
											"end": 1626,
											"name": "tag",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 1517,
											"end": 1626,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1517,
											"end": 1678,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1517,
											"end": 1678,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 1517,
											"end": 1678,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1517,
											"end": 1678,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1642,
											"end": 1678,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 1666,
											"end": 1677,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1642,
											"end": 1665,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 1642,
											"end": 1678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1642,
											"end": 1678,
											"name": "tag",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 1642,
											"end": 1678,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1517,
											"end": 1678,
											"name": "tag",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 1517,
											"end": 1678,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1498,
											"end": 1678,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1498,
											"end": 1678,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1380,
											"end": 1685,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "tag",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2157,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2176,
											"end": 2180,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 2169,
											"end": 2180,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "tag",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 2169,
											"end": 2180,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "tag",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "tag",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "tag",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "tag",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2084,
											"end": 2187,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1127,
											"end": 1227,
											"name": "tag",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1127,
											"end": 1227,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1179,
											"end": 1186,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1205,
											"end": 1220,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1205,
											"end": 1220,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1198,
											"end": 1220,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1198,
											"end": 1220,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1127,
											"end": 1227,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1127,
											"end": 1227,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 813,
											"end": 993,
											"name": "tag",
											"source": 13,
											"value": "45"
										},
										{
											"begin": 813,
											"end": 993,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 595,
											"end": 607,
											"name": "PUSHIMMUTABLE",
											"source": 13,
											"value": "3047"
										},
										{
											"begin": 581,
											"end": 607,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 581,
											"end": 607,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 581,
											"end": 591,
											"name": "CALLER",
											"source": 13
										},
										{
											"begin": 581,
											"end": 607,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 581,
											"end": 607,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 581,
											"end": 607,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 573,
											"end": 640,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "104"
										},
										{
											"begin": 573,
											"end": 640,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 573,
											"end": 640,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 573,
											"end": 640,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 573,
											"end": 640,
											"name": "PUSH",
											"source": 13,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 573,
											"end": 640,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 573,
											"end": 640,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 573,
											"end": 640,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 573,
											"end": 640,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 573,
											"end": 640,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "105"
										},
										{
											"begin": 573,
											"end": 640,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 573,
											"end": 640,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "106"
										},
										{
											"begin": 573,
											"end": 640,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 573,
											"end": 640,
											"name": "tag",
											"source": 13,
											"value": "105"
										},
										{
											"begin": 573,
											"end": 640,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 573,
											"end": 640,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 573,
											"end": 640,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 573,
											"end": 640,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 573,
											"end": 640,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 573,
											"end": 640,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 573,
											"end": 640,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 573,
											"end": 640,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 573,
											"end": 640,
											"name": "tag",
											"source": 13,
											"value": "104"
										},
										{
											"begin": 573,
											"end": 640,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 954,
											"end": 988,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "108"
										},
										{
											"begin": 965,
											"end": 967,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 969,
											"end": 972,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 974,
											"end": 981,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 983,
											"end": 987,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 954,
											"end": 964,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "109"
										},
										{
											"begin": 954,
											"end": 988,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 954,
											"end": 988,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "108"
										},
										{
											"begin": 954,
											"end": 988,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 813,
											"end": 993,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 813,
											"end": 993,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 813,
											"end": 993,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 813,
											"end": 993,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 813,
											"end": 993,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "tag",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4208,
											"end": 4222,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4225,
											"end": 4237,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 4225,
											"end": 4235,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 4225,
											"end": 4237,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4225,
											"end": 4237,
											"name": "tag",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 4225,
											"end": 4237,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4208,
											"end": 4237,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4208,
											"end": 4237,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4259,
											"end": 4265,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4251,
											"end": 4265,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4251,
											"end": 4265,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4251,
											"end": 4255,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4251,
											"end": 4265,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4251,
											"end": 4265,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4251,
											"end": 4265,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 4251,
											"end": 4265,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4251,
											"end": 4300,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4251,
											"end": 4300,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4251,
											"end": 4300,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 4251,
											"end": 4300,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4251,
											"end": 4300,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4270,
											"end": 4300,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 4287,
											"end": 4291,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4299,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4270,
											"end": 4286,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 4270,
											"end": 4300,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4270,
											"end": 4300,
											"name": "tag",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 4270,
											"end": 4300,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4269,
											"end": 4300,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4251,
											"end": 4300,
											"name": "tag",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 4251,
											"end": 4300,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4247,
											"end": 4376,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4247,
											"end": 4376,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 4247,
											"end": 4376,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4352,
											"end": 4358,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4360,
											"end": 4364,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4323,
											"end": 4365,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4323,
											"end": 4365,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4323,
											"end": 4365,
											"name": "PUSH",
											"source": 1,
											"value": "E237D92200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4323,
											"end": 4365,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4323,
											"end": 4365,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4323,
											"end": 4365,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4323,
											"end": 4365,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4323,
											"end": 4365,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 4323,
											"end": 4365,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4323,
											"end": 4365,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4323,
											"end": 4365,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4323,
											"end": 4365,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 4323,
											"end": 4365,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4323,
											"end": 4365,
											"name": "tag",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 4323,
											"end": 4365,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4323,
											"end": 4365,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4323,
											"end": 4365,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4323,
											"end": 4365,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4323,
											"end": 4365,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4323,
											"end": 4365,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4323,
											"end": 4365,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4323,
											"end": 4365,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4247,
											"end": 4376,
											"name": "tag",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 4247,
											"end": 4376,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4385,
											"end": 4436,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 4408,
											"end": 4412,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4414,
											"end": 4416,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4418,
											"end": 4421,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4423,
											"end": 4429,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4431,
											"end": 4435,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4385,
											"end": 4407,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 4385,
											"end": 4436,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4385,
											"end": 4436,
											"name": "tag",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 4385,
											"end": 4436,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4198,
											"end": 4443,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4014,
											"end": 4443,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "tag",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2660,
											"end": 2676,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2711,
											"end": 2714,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2711,
											"end": 2721,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2692,
											"end": 2700,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2692,
											"end": 2707,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2692,
											"end": 2721,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 2688,
											"end": 2809,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "121"
										},
										{
											"begin": 2688,
											"end": 2809,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2770,
											"end": 2773,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2770,
											"end": 2780,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2782,
											"end": 2790,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2782,
											"end": 2797,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2744,
											"end": 2798,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2744,
											"end": 2798,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2744,
											"end": 2798,
											"name": "PUSH",
											"source": 1,
											"value": "5B05999100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2744,
											"end": 2798,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2744,
											"end": 2798,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2744,
											"end": 2798,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2744,
											"end": 2798,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2744,
											"end": 2798,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 2744,
											"end": 2798,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2744,
											"end": 2798,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2744,
											"end": 2798,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2744,
											"end": 2798,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 2744,
											"end": 2798,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2744,
											"end": 2798,
											"name": "tag",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 2744,
											"end": 2798,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2744,
											"end": 2798,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2744,
											"end": 2798,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2744,
											"end": 2798,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2744,
											"end": 2798,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2744,
											"end": 2798,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2744,
											"end": 2798,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2744,
											"end": 2798,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2688,
											"end": 2809,
											"name": "tag",
											"source": 1,
											"value": "121"
										},
										{
											"begin": 2688,
											"end": 2809,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2819,
											"end": 2849,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2866,
											"end": 2874,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2866,
											"end": 2881,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "125"
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 2852,
											"end": 2882,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "tag",
											"source": 1,
											"value": "125"
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "tag",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "127"
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "CALLDATACOPY",
											"source": 1
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "tag",
											"source": 1,
											"value": "127"
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2819,
											"end": 2882,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2819,
											"end": 2882,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2898,
											"end": 2907,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2893,
											"end": 3051,
											"name": "tag",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 2893,
											"end": 3051,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2917,
											"end": 2925,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2917,
											"end": 2932,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2913,
											"end": 2914,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2913,
											"end": 2932,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2893,
											"end": 3051,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2893,
											"end": 3051,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "129"
										},
										{
											"begin": 2893,
											"end": 3051,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2972,
											"end": 3040,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "131"
										},
										{
											"begin": 2982,
											"end": 3012,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 3010,
											"end": 3011,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2982,
											"end": 2990,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 2982,
											"end": 3009,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "133"
										},
										{
											"begin": 2982,
											"end": 3009,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2982,
											"end": 3012,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2982,
											"end": 3012,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2982,
											"end": 3012,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2982,
											"end": 3012,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2982,
											"end": 3012,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2982,
											"end": 3012,
											"name": "tag",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 2982,
											"end": 3012,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3014,
											"end": 3039,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "134"
										},
										{
											"begin": 3037,
											"end": 3038,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3014,
											"end": 3017,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 3014,
											"end": 3036,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "135"
										},
										{
											"begin": 3014,
											"end": 3036,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3014,
											"end": 3039,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3014,
											"end": 3039,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3014,
											"end": 3039,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3014,
											"end": 3039,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3014,
											"end": 3039,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3014,
											"end": 3039,
											"name": "tag",
											"source": 1,
											"value": "134"
										},
										{
											"begin": 3014,
											"end": 3039,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2972,
											"end": 2981,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2972,
											"end": 3040,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2972,
											"end": 3040,
											"name": "tag",
											"source": 1,
											"value": "131"
										},
										{
											"begin": 2972,
											"end": 3040,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2953,
											"end": 2966,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2967,
											"end": 2968,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2953,
											"end": 2969,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2953,
											"end": 2969,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2953,
											"end": 2969,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2953,
											"end": 2969,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2953,
											"end": 2969,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "136"
										},
										{
											"begin": 2953,
											"end": 2969,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2953,
											"end": 2969,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "137"
										},
										{
											"begin": 2953,
											"end": 2969,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "138"
										},
										{
											"begin": 2953,
											"end": 2969,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2953,
											"end": 2969,
											"name": "tag",
											"source": 1,
											"value": "137"
										},
										{
											"begin": 2953,
											"end": 2969,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2953,
											"end": 2969,
											"name": "tag",
											"source": 1,
											"value": "136"
										},
										{
											"begin": 2953,
											"end": 2969,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2953,
											"end": 2969,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2953,
											"end": 2969,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2953,
											"end": 2969,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2953,
											"end": 2969,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2953,
											"end": 2969,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2953,
											"end": 3040,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2953,
											"end": 3040,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2953,
											"end": 3040,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2953,
											"end": 3040,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2953,
											"end": 3040,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2934,
											"end": 2937,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2934,
											"end": 2937,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "139"
										},
										{
											"begin": 2934,
											"end": 2937,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2934,
											"end": 2937,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "140"
										},
										{
											"begin": 2934,
											"end": 2937,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2934,
											"end": 2937,
											"name": "tag",
											"source": 1,
											"value": "139"
										},
										{
											"begin": 2934,
											"end": 2937,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2934,
											"end": 2937,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2934,
											"end": 2937,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2893,
											"end": 3051,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 2893,
											"end": 3051,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2893,
											"end": 3051,
											"name": "tag",
											"source": 1,
											"value": "129"
										},
										{
											"begin": 2893,
											"end": 3051,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2893,
											"end": 3051,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3068,
											"end": 3081,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3061,
											"end": 3081,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3061,
											"end": 3081,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3061,
											"end": 3081,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2536,
											"end": 3088,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1320,
											"end": 1426,
											"name": "tag",
											"source": 5,
											"value": "58"
										},
										{
											"begin": 1320,
											"end": 1426,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1377,
											"end": 1381,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1418,
											"end": 1419,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1400,
											"end": 1415,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "142"
										},
										{
											"begin": 1412,
											"end": 1414,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1400,
											"end": 1411,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "74"
										},
										{
											"begin": 1400,
											"end": 1415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1400,
											"end": 1415,
											"name": "tag",
											"source": 5,
											"value": "142"
										},
										{
											"begin": 1400,
											"end": 1415,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1400,
											"end": 1419,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 1393,
											"end": 1419,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1393,
											"end": 1419,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1320,
											"end": 1426,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1320,
											"end": 1426,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1320,
											"end": 1426,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1320,
											"end": 1426,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 681,
											"end": 994,
											"name": "tag",
											"source": 4,
											"value": "63"
										},
										{
											"begin": 681,
											"end": 994,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 804,
											"end": 816,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "144"
										},
										{
											"begin": 804,
											"end": 814,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 804,
											"end": 816,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 804,
											"end": 816,
											"name": "tag",
											"source": 4,
											"value": "144"
										},
										{
											"begin": 804,
											"end": 816,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 793,
											"end": 816,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 793,
											"end": 816,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 793,
											"end": 800,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 793,
											"end": 816,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 793,
											"end": 816,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 793,
											"end": 816,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 793,
											"end": 816,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 793,
											"end": 860,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 793,
											"end": 860,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 793,
											"end": 860,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "145"
										},
										{
											"begin": 793,
											"end": 860,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 793,
											"end": 860,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 821,
											"end": 860,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "146"
										},
										{
											"begin": 838,
											"end": 845,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 847,
											"end": 859,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "147"
										},
										{
											"begin": 847,
											"end": 857,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 847,
											"end": 859,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 847,
											"end": 859,
											"name": "tag",
											"source": 4,
											"value": "147"
										},
										{
											"begin": 847,
											"end": 859,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 821,
											"end": 837,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "79"
										},
										{
											"begin": 821,
											"end": 860,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 821,
											"end": 860,
											"name": "tag",
											"source": 4,
											"value": "146"
										},
										{
											"begin": 821,
											"end": 860,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 820,
											"end": 860,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 793,
											"end": 860,
											"name": "tag",
											"source": 4,
											"value": "145"
										},
										{
											"begin": 793,
											"end": 860,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 789,
											"end": 945,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 789,
											"end": 945,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "148"
										},
										{
											"begin": 789,
											"end": 945,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 912,
											"end": 924,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "149"
										},
										{
											"begin": 912,
											"end": 922,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 912,
											"end": 924,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 912,
											"end": 924,
											"name": "tag",
											"source": 4,
											"value": "149"
										},
										{
											"begin": 912,
											"end": 924,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 926,
											"end": 933,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 883,
											"end": 934,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 883,
											"end": 934,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 883,
											"end": 934,
											"name": "PUSH",
											"source": 4,
											"value": "E237D92200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 883,
											"end": 934,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 883,
											"end": 934,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 883,
											"end": 934,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 883,
											"end": 934,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 883,
											"end": 934,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "150"
										},
										{
											"begin": 883,
											"end": 934,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 883,
											"end": 934,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 883,
											"end": 934,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 883,
											"end": 934,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "117"
										},
										{
											"begin": 883,
											"end": 934,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 883,
											"end": 934,
											"name": "tag",
											"source": 4,
											"value": "150"
										},
										{
											"begin": 883,
											"end": 934,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 883,
											"end": 934,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 883,
											"end": 934,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 883,
											"end": 934,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 883,
											"end": 934,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 883,
											"end": 934,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 883,
											"end": 934,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 883,
											"end": 934,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 789,
											"end": 945,
											"name": "tag",
											"source": 4,
											"value": "148"
										},
										{
											"begin": 789,
											"end": 945,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 955,
											"end": 987,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "151"
										},
										{
											"begin": 966,
											"end": 973,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 975,
											"end": 978,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 980,
											"end": 986,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 955,
											"end": 965,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "152"
										},
										{
											"begin": 955,
											"end": 987,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 955,
											"end": 987,
											"name": "tag",
											"source": 4,
											"value": "151"
										},
										{
											"begin": 955,
											"end": 987,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 681,
											"end": 994,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 681,
											"end": 994,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 681,
											"end": 994,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 681,
											"end": 994,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 651,
											"end": 809,
											"name": "tag",
											"source": 13,
											"value": "67"
										},
										{
											"begin": 651,
											"end": 809,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 595,
											"end": 607,
											"name": "PUSHIMMUTABLE",
											"source": 13,
											"value": "3047"
										},
										{
											"begin": 581,
											"end": 607,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 581,
											"end": 607,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 581,
											"end": 591,
											"name": "CALLER",
											"source": 13
										},
										{
											"begin": 581,
											"end": 607,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 581,
											"end": 607,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 581,
											"end": 607,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 573,
											"end": 640,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "154"
										},
										{
											"begin": 573,
											"end": 640,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 573,
											"end": 640,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 573,
											"end": 640,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 573,
											"end": 640,
											"name": "PUSH",
											"source": 13,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 573,
											"end": 640,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 573,
											"end": 640,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 573,
											"end": 640,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 573,
											"end": 640,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 573,
											"end": 640,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "155"
										},
										{
											"begin": 573,
											"end": 640,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 573,
											"end": 640,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "106"
										},
										{
											"begin": 573,
											"end": 640,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 573,
											"end": 640,
											"name": "tag",
											"source": 13,
											"value": "155"
										},
										{
											"begin": 573,
											"end": 640,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 573,
											"end": 640,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 573,
											"end": 640,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 573,
											"end": 640,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 573,
											"end": 640,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 573,
											"end": 640,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 573,
											"end": 640,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 573,
											"end": 640,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 573,
											"end": 640,
											"name": "tag",
											"source": 13,
											"value": "154"
										},
										{
											"begin": 573,
											"end": 640,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 772,
											"end": 804,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "157"
										},
										{
											"begin": 778,
											"end": 785,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 787,
											"end": 789,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 791,
											"end": 797,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 799,
											"end": 803,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 772,
											"end": 777,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "158"
										},
										{
											"begin": 772,
											"end": 804,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 772,
											"end": 804,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "157"
										},
										{
											"begin": 772,
											"end": 804,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 651,
											"end": 809,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 651,
											"end": 809,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 651,
											"end": 809,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 651,
											"end": 809,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 651,
											"end": 809,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "tag",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3241,
											"end": 3293,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "160"
										},
										{
											"begin": 3260,
											"end": 3272,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "161"
										},
										{
											"begin": 3260,
											"end": 3270,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 3260,
											"end": 3272,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3260,
											"end": 3272,
											"name": "tag",
											"source": 1,
											"value": "161"
										},
										{
											"begin": 3260,
											"end": 3272,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3274,
											"end": 3282,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3284,
											"end": 3292,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3241,
											"end": 3259,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "162"
										},
										{
											"begin": 3241,
											"end": 3293,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3241,
											"end": 3293,
											"name": "tag",
											"source": 1,
											"value": "160"
										},
										{
											"begin": 3241,
											"end": 3293,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3156,
											"end": 3300,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 959,
											"end": 1070,
											"name": "tag",
											"source": 5,
											"value": "74"
										},
										{
											"begin": 959,
											"end": 1070,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1021,
											"end": 1028,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1047,
											"end": 1059,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 1047,
											"end": 1063,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1060,
											"end": 1062,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1047,
											"end": 1063,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1047,
											"end": 1063,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1047,
											"end": 1063,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1047,
											"end": 1063,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1047,
											"end": 1063,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1047,
											"end": 1063,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1047,
											"end": 1063,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1047,
											"end": 1063,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1047,
											"end": 1063,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1047,
											"end": 1063,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1047,
											"end": 1063,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 1047,
											"end": 1063,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1040,
											"end": 1063,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1040,
											"end": 1063,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 959,
											"end": 1070,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 959,
											"end": 1070,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 959,
											"end": 1070,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 959,
											"end": 1070,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "tag",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3457,
											"end": 3461,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3480,
											"end": 3498,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3480,
											"end": 3507,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3499,
											"end": 3506,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3480,
											"end": 3507,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3480,
											"end": 3507,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3480,
											"end": 3507,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3480,
											"end": 3507,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3480,
											"end": 3507,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3480,
											"end": 3507,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3480,
											"end": 3507,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3480,
											"end": 3507,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3480,
											"end": 3507,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3480,
											"end": 3507,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3480,
											"end": 3507,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3480,
											"end": 3507,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3480,
											"end": 3507,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3480,
											"end": 3507,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3480,
											"end": 3507,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3508,
											"end": 3516,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3473,
											"end": 3517,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3473,
											"end": 3517,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3367,
											"end": 3524,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "tag",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3714,
											"end": 3728,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3731,
											"end": 3743,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "166"
										},
										{
											"begin": 3731,
											"end": 3741,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 3731,
											"end": 3743,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3731,
											"end": 3743,
											"name": "tag",
											"source": 1,
											"value": "166"
										},
										{
											"begin": 3731,
											"end": 3743,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3714,
											"end": 3743,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3714,
											"end": 3743,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3765,
											"end": 3771,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3757,
											"end": 3771,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3757,
											"end": 3771,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3757,
											"end": 3761,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 3757,
											"end": 3771,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3757,
											"end": 3771,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3757,
											"end": 3771,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 3757,
											"end": 3771,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3757,
											"end": 3806,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3757,
											"end": 3806,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3757,
											"end": 3806,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "167"
										},
										{
											"begin": 3757,
											"end": 3806,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3757,
											"end": 3806,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3776,
											"end": 3806,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "168"
										},
										{
											"begin": 3793,
											"end": 3797,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 3799,
											"end": 3805,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3776,
											"end": 3792,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 3776,
											"end": 3806,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3776,
											"end": 3806,
											"name": "tag",
											"source": 1,
											"value": "168"
										},
										{
											"begin": 3776,
											"end": 3806,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3775,
											"end": 3806,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3757,
											"end": 3806,
											"name": "tag",
											"source": 1,
											"value": "167"
										},
										{
											"begin": 3757,
											"end": 3806,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3753,
											"end": 3882,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3753,
											"end": 3882,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "169"
										},
										{
											"begin": 3753,
											"end": 3882,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3858,
											"end": 3864,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3866,
											"end": 3870,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "PUSH",
											"source": 1,
											"value": "E237D92200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "170"
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 3829,
											"end": 3871,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "tag",
											"source": 1,
											"value": "170"
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3753,
											"end": 3882,
											"name": "tag",
											"source": 1,
											"value": "169"
										},
										{
											"begin": 3753,
											"end": 3882,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3891,
											"end": 3935,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "171"
										},
										{
											"begin": 3909,
											"end": 3913,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 3915,
											"end": 3917,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 3919,
											"end": 3921,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 3923,
											"end": 3928,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 3930,
											"end": 3934,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 3891,
											"end": 3908,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "172"
										},
										{
											"begin": 3891,
											"end": 3935,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3891,
											"end": 3935,
											"name": "tag",
											"source": 1,
											"value": "171"
										},
										{
											"begin": 3891,
											"end": 3935,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3704,
											"end": 3942,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3591,
											"end": 3942,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 394,
											"end": 675,
											"name": "tag",
											"source": 4,
											"value": "88"
										},
										{
											"begin": 394,
											"end": 675,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 492,
											"end": 504,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "174"
										},
										{
											"begin": 492,
											"end": 502,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 492,
											"end": 504,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 492,
											"end": 504,
											"name": "tag",
											"source": 4,
											"value": "174"
										},
										{
											"begin": 492,
											"end": 504,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 481,
											"end": 504,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 481,
											"end": 504,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 481,
											"end": 488,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 481,
											"end": 504,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 481,
											"end": 504,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 481,
											"end": 504,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 481,
											"end": 504,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 481,
											"end": 548,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 481,
											"end": 548,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 481,
											"end": 548,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "175"
										},
										{
											"begin": 481,
											"end": 548,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 481,
											"end": 548,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 509,
											"end": 548,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "176"
										},
										{
											"begin": 526,
											"end": 533,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 535,
											"end": 547,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "177"
										},
										{
											"begin": 535,
											"end": 545,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 535,
											"end": 547,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 535,
											"end": 547,
											"name": "tag",
											"source": 4,
											"value": "177"
										},
										{
											"begin": 535,
											"end": 547,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 509,
											"end": 525,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "79"
										},
										{
											"begin": 509,
											"end": 548,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 509,
											"end": 548,
											"name": "tag",
											"source": 4,
											"value": "176"
										},
										{
											"begin": 509,
											"end": 548,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 508,
											"end": 548,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 481,
											"end": 548,
											"name": "tag",
											"source": 4,
											"value": "175"
										},
										{
											"begin": 481,
											"end": 548,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 477,
											"end": 633,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 477,
											"end": 633,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "178"
										},
										{
											"begin": 477,
											"end": 633,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 600,
											"end": 612,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "179"
										},
										{
											"begin": 600,
											"end": 610,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 600,
											"end": 612,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 600,
											"end": 612,
											"name": "tag",
											"source": 4,
											"value": "179"
										},
										{
											"begin": 600,
											"end": 612,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 614,
											"end": 621,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 571,
											"end": 622,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 571,
											"end": 622,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 571,
											"end": 622,
											"name": "PUSH",
											"source": 4,
											"value": "E237D92200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 571,
											"end": 622,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 571,
											"end": 622,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 571,
											"end": 622,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 571,
											"end": 622,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 571,
											"end": 622,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "180"
										},
										{
											"begin": 571,
											"end": 622,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 571,
											"end": 622,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 571,
											"end": 622,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 571,
											"end": 622,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "117"
										},
										{
											"begin": 571,
											"end": 622,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 571,
											"end": 622,
											"name": "tag",
											"source": 4,
											"value": "180"
										},
										{
											"begin": 571,
											"end": 622,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 571,
											"end": 622,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 571,
											"end": 622,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 571,
											"end": 622,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 571,
											"end": 622,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 571,
											"end": 622,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 571,
											"end": 622,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 571,
											"end": 622,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 477,
											"end": 633,
											"name": "tag",
											"source": 4,
											"value": "178"
										},
										{
											"begin": 477,
											"end": 633,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 643,
											"end": 668,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "181"
										},
										{
											"begin": 649,
											"end": 656,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 658,
											"end": 660,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 662,
											"end": 667,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 643,
											"end": 648,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "182"
										},
										{
											"begin": 643,
											"end": 668,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 643,
											"end": 668,
											"name": "tag",
											"source": 4,
											"value": "181"
										},
										{
											"begin": 643,
											"end": 668,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 394,
											"end": 675,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 394,
											"end": 675,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 394,
											"end": 675,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 394,
											"end": 675,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 762,
											"end": 908,
											"name": "tag",
											"source": 10,
											"value": "94"
										},
										{
											"begin": 762,
											"end": 908,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 838,
											"end": 842,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 876,
											"end": 901,
											"name": "PUSH",
											"source": 10,
											"value": "1FFC9A700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 861,
											"end": 901,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 861,
											"end": 901,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 861,
											"end": 901,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 861,
											"end": 872,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 861,
											"end": 901,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 861,
											"end": 901,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 861,
											"end": 901,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 861,
											"end": 901,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 854,
											"end": 901,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 854,
											"end": 901,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 762,
											"end": 908,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 762,
											"end": 908,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 762,
											"end": 908,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 762,
											"end": 908,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11523,
											"end": 11805,
											"name": "tag",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 11523,
											"end": 11805,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11658,
											"end": 11659,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11644,
											"end": 11660,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11644,
											"end": 11660,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 11644,
											"end": 11646,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11644,
											"end": 11660,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11644,
											"end": 11660,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 11644,
											"end": 11660,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 11640,
											"end": 11728,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "185"
										},
										{
											"begin": 11640,
											"end": 11728,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 11714,
											"end": 11715,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11683,
											"end": 11717,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11683,
											"end": 11717,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 11683,
											"end": 11717,
											"name": "PUSH",
											"source": 1,
											"value": "57F447CE00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11683,
											"end": 11717,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11683,
											"end": 11717,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11683,
											"end": 11717,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 11683,
											"end": 11717,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11683,
											"end": 11717,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "186"
										},
										{
											"begin": 11683,
											"end": 11717,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11683,
											"end": 11717,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11683,
											"end": 11717,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "187"
										},
										{
											"begin": 11683,
											"end": 11717,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11683,
											"end": 11717,
											"name": "tag",
											"source": 1,
											"value": "186"
										},
										{
											"begin": 11683,
											"end": 11717,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11683,
											"end": 11717,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11683,
											"end": 11717,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 11683,
											"end": 11717,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11683,
											"end": 11717,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11683,
											"end": 11717,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 11683,
											"end": 11717,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11683,
											"end": 11717,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 11640,
											"end": 11728,
											"name": "tag",
											"source": 1,
											"value": "185"
										},
										{
											"begin": 11640,
											"end": 11728,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11737,
											"end": 11798,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "188"
										},
										{
											"begin": 11772,
											"end": 11773,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11776,
											"end": 11778,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 11780,
											"end": 11783,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 11785,
											"end": 11791,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 11793,
											"end": 11797,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 11737,
											"end": 11763,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "189"
										},
										{
											"begin": 11737,
											"end": 11798,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11737,
											"end": 11798,
											"name": "tag",
											"source": 1,
											"value": "188"
										},
										{
											"begin": 11737,
											"end": 11798,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11523,
											"end": 11805,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11523,
											"end": 11805,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11523,
											"end": 11805,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11523,
											"end": 11805,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11523,
											"end": 11805,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 8,
											"value": "112"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9015,
											"end": 9460,
											"name": "tag",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 9015,
											"end": 9460,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9222,
											"end": 9223,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9208,
											"end": 9224,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9208,
											"end": 9224,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9208,
											"end": 9210,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 9208,
											"end": 9224,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9208,
											"end": 9224,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9208,
											"end": 9224,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 9204,
											"end": 9292,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "192"
										},
										{
											"begin": 9204,
											"end": 9292,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9278,
											"end": 9279,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9247,
											"end": 9281,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9247,
											"end": 9281,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9247,
											"end": 9281,
											"name": "PUSH",
											"source": 1,
											"value": "57F447CE00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9247,
											"end": 9281,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9247,
											"end": 9281,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9247,
											"end": 9281,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 9247,
											"end": 9281,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9247,
											"end": 9281,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "193"
										},
										{
											"begin": 9247,
											"end": 9281,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9247,
											"end": 9281,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9247,
											"end": 9281,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "187"
										},
										{
											"begin": 9247,
											"end": 9281,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9247,
											"end": 9281,
											"name": "tag",
											"source": 1,
											"value": "193"
										},
										{
											"begin": 9247,
											"end": 9281,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9247,
											"end": 9281,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9247,
											"end": 9281,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9247,
											"end": 9281,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9247,
											"end": 9281,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9247,
											"end": 9281,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 9247,
											"end": 9281,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9247,
											"end": 9281,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 9204,
											"end": 9292,
											"name": "tag",
											"source": 1,
											"value": "192"
										},
										{
											"begin": 9204,
											"end": 9292,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9321,
											"end": 9322,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9305,
											"end": 9323,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9305,
											"end": 9323,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9305,
											"end": 9309,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 9305,
											"end": 9323,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9305,
											"end": 9323,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9305,
											"end": 9323,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 9301,
											"end": 9389,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "194"
										},
										{
											"begin": 9301,
											"end": 9389,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9375,
											"end": 9376,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9346,
											"end": 9378,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9346,
											"end": 9378,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9346,
											"end": 9378,
											"name": "PUSH",
											"source": 1,
											"value": "1A8351400000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9346,
											"end": 9378,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9346,
											"end": 9378,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9346,
											"end": 9378,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 9346,
											"end": 9378,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9346,
											"end": 9378,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "195"
										},
										{
											"begin": 9346,
											"end": 9378,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9346,
											"end": 9378,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9346,
											"end": 9378,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "187"
										},
										{
											"begin": 9346,
											"end": 9378,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9346,
											"end": 9378,
											"name": "tag",
											"source": 1,
											"value": "195"
										},
										{
											"begin": 9346,
											"end": 9378,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9346,
											"end": 9378,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9346,
											"end": 9378,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9346,
											"end": 9378,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9346,
											"end": 9378,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9346,
											"end": 9378,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 9346,
											"end": 9378,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9346,
											"end": 9378,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 9301,
											"end": 9389,
											"name": "tag",
											"source": 1,
											"value": "194"
										},
										{
											"begin": 9301,
											"end": 9389,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9398,
											"end": 9453,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "196"
										},
										{
											"begin": 9425,
											"end": 9429,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 9431,
											"end": 9433,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 9435,
											"end": 9438,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 9440,
											"end": 9446,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 9448,
											"end": 9452,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 9398,
											"end": 9424,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "189"
										},
										{
											"begin": 9398,
											"end": 9453,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9398,
											"end": 9453,
											"name": "tag",
											"source": 1,
											"value": "196"
										},
										{
											"begin": 9398,
											"end": 9453,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9015,
											"end": 9460,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9015,
											"end": 9460,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9015,
											"end": 9460,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9015,
											"end": 9460,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9015,
											"end": 9460,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9015,
											"end": 9460,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4603,
											"end": 4800,
											"name": "tag",
											"source": 7,
											"value": "133"
										},
										{
											"begin": 4603,
											"end": 4800,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4689,
											"end": 4700,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4777,
											"end": 4781,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4772,
											"end": 4775,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4768,
											"end": 4782,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 4761,
											"end": 4765,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4756,
											"end": 4759,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4752,
											"end": 4766,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4748,
											"end": 4783,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4742,
											"end": 4784,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4735,
											"end": 4784,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4735,
											"end": 4784,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4603,
											"end": 4800,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4603,
											"end": 4800,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4603,
											"end": 4800,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4603,
											"end": 4800,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4603,
											"end": 4800,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4204,
											"end": 4401,
											"name": "tag",
											"source": 7,
											"value": "135"
										},
										{
											"begin": 4204,
											"end": 4401,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4290,
											"end": 4301,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4378,
											"end": 4382,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4373,
											"end": 4376,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4369,
											"end": 4383,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 4362,
											"end": 4366,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4357,
											"end": 4360,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4353,
											"end": 4367,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4349,
											"end": 4384,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4343,
											"end": 4385,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4336,
											"end": 4385,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4336,
											"end": 4385,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4204,
											"end": 4401,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4204,
											"end": 4401,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4204,
											"end": 4401,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4204,
											"end": 4401,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4204,
											"end": 4401,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12784,
											"end": 13049,
											"name": "tag",
											"source": 1,
											"value": "152"
										},
										{
											"begin": 12784,
											"end": 13049,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12904,
											"end": 12905,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12888,
											"end": 12906,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12888,
											"end": 12906,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 12888,
											"end": 12892,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 12888,
											"end": 12906,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12888,
											"end": 12906,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 12888,
											"end": 12906,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 12884,
											"end": 12972,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "200"
										},
										{
											"begin": 12884,
											"end": 12972,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 12958,
											"end": 12959,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12929,
											"end": 12961,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 12929,
											"end": 12961,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 12929,
											"end": 12961,
											"name": "PUSH",
											"source": 1,
											"value": "1A8351400000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12929,
											"end": 12961,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12929,
											"end": 12961,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12929,
											"end": 12961,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 12929,
											"end": 12961,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12929,
											"end": 12961,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "201"
										},
										{
											"begin": 12929,
											"end": 12961,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12929,
											"end": 12961,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12929,
											"end": 12961,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "187"
										},
										{
											"begin": 12929,
											"end": 12961,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12929,
											"end": 12961,
											"name": "tag",
											"source": 1,
											"value": "201"
										},
										{
											"begin": 12929,
											"end": 12961,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12929,
											"end": 12961,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 12929,
											"end": 12961,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 12929,
											"end": 12961,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 12929,
											"end": 12961,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12929,
											"end": 12961,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 12929,
											"end": 12961,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12929,
											"end": 12961,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 12884,
											"end": 12972,
											"name": "tag",
											"source": 1,
											"value": "200"
										},
										{
											"begin": 12884,
											"end": 12972,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12981,
											"end": 13042,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "202"
										},
										{
											"begin": 13008,
											"end": 13012,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 13022,
											"end": 13023,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13026,
											"end": 13029,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 13031,
											"end": 13037,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 12981,
											"end": 13042,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 12981,
											"end": 13042,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 12981,
											"end": 13042,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 12981,
											"end": 13042,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 12981,
											"end": 13042,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12981,
											"end": 13042,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 12981,
											"end": 13042,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12981,
											"end": 13042,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 12981,
											"end": 13042,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12981,
											"end": 13042,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12981,
											"end": 13042,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12981,
											"end": 13042,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12981,
											"end": 13007,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "189"
										},
										{
											"begin": 12981,
											"end": 13042,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12981,
											"end": 13042,
											"name": "tag",
											"source": 1,
											"value": "202"
										},
										{
											"begin": 12981,
											"end": 13042,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12784,
											"end": 13049,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12784,
											"end": 13049,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12784,
											"end": 13049,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12784,
											"end": 13049,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10746,
											"end": 11092,
											"name": "tag",
											"source": 1,
											"value": "158"
										},
										{
											"begin": 10746,
											"end": 11092,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10856,
											"end": 10857,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10842,
											"end": 10858,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10842,
											"end": 10858,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10842,
											"end": 10844,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10842,
											"end": 10858,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10842,
											"end": 10858,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10842,
											"end": 10858,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10838,
											"end": 10926,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "204"
										},
										{
											"begin": 10838,
											"end": 10926,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10912,
											"end": 10913,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10881,
											"end": 10915,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10881,
											"end": 10915,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10881,
											"end": 10915,
											"name": "PUSH",
											"source": 1,
											"value": "57F447CE00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10881,
											"end": 10915,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10881,
											"end": 10915,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10881,
											"end": 10915,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 10881,
											"end": 10915,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10881,
											"end": 10915,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "205"
										},
										{
											"begin": 10881,
											"end": 10915,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10881,
											"end": 10915,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10881,
											"end": 10915,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "187"
										},
										{
											"begin": 10881,
											"end": 10915,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10881,
											"end": 10915,
											"name": "tag",
											"source": 1,
											"value": "205"
										},
										{
											"begin": 10881,
											"end": 10915,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10881,
											"end": 10915,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10881,
											"end": 10915,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10881,
											"end": 10915,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10881,
											"end": 10915,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10881,
											"end": 10915,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10881,
											"end": 10915,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10881,
											"end": 10915,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 10838,
											"end": 10926,
											"name": "tag",
											"source": 1,
											"value": "204"
										},
										{
											"begin": 10838,
											"end": 10926,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10936,
											"end": 10956,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10958,
											"end": 10981,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10985,
											"end": 11014,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "206"
										},
										{
											"begin": 11004,
											"end": 11006,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 11008,
											"end": 11013,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 10985,
											"end": 11003,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "207"
										},
										{
											"begin": 10985,
											"end": 11014,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10985,
											"end": 11014,
											"name": "tag",
											"source": 1,
											"value": "206"
										},
										{
											"begin": 10985,
											"end": 11014,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10935,
											"end": 11014,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10935,
											"end": 11014,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10935,
											"end": 11014,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10935,
											"end": 11014,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11024,
											"end": 11085,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "208"
										},
										{
											"begin": 11059,
											"end": 11060,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11063,
											"end": 11065,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 11067,
											"end": 11070,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11072,
											"end": 11078,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11080,
											"end": 11084,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 11024,
											"end": 11050,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "189"
										},
										{
											"begin": 11024,
											"end": 11085,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11024,
											"end": 11085,
											"name": "tag",
											"source": 1,
											"value": "208"
										},
										{
											"begin": 11024,
											"end": 11085,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10828,
											"end": 11092,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10828,
											"end": 11092,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10746,
											"end": 11092,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10746,
											"end": 11092,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10746,
											"end": 11092,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10746,
											"end": 11092,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10746,
											"end": 11092,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13268,
											"end": 13583,
											"name": "tag",
											"source": 1,
											"value": "162"
										},
										{
											"begin": 13268,
											"end": 13583,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13395,
											"end": 13396,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13375,
											"end": 13397,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13375,
											"end": 13397,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 13375,
											"end": 13383,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13375,
											"end": 13397,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13375,
											"end": 13397,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 13375,
											"end": 13397,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 13371,
											"end": 13465,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "210"
										},
										{
											"begin": 13371,
											"end": 13465,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 13451,
											"end": 13452,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13420,
											"end": 13454,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 13420,
											"end": 13454,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 13420,
											"end": 13454,
											"name": "PUSH",
											"source": 1,
											"value": "CED3E10000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13420,
											"end": 13454,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13420,
											"end": 13454,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13420,
											"end": 13454,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 13420,
											"end": 13454,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13420,
											"end": 13454,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "211"
										},
										{
											"begin": 13420,
											"end": 13454,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13420,
											"end": 13454,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13420,
											"end": 13454,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "187"
										},
										{
											"begin": 13420,
											"end": 13454,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13420,
											"end": 13454,
											"name": "tag",
											"source": 1,
											"value": "211"
										},
										{
											"begin": 13420,
											"end": 13454,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13420,
											"end": 13454,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 13420,
											"end": 13454,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 13420,
											"end": 13454,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 13420,
											"end": 13454,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13420,
											"end": 13454,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 13420,
											"end": 13454,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13420,
											"end": 13454,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 13371,
											"end": 13465,
											"name": "tag",
											"source": 1,
											"value": "210"
										},
										{
											"begin": 13371,
											"end": 13465,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13512,
											"end": 13520,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 13474,
											"end": 13492,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 13474,
											"end": 13499,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13493,
											"end": 13498,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 13474,
											"end": 13499,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13474,
											"end": 13499,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 13474,
											"end": 13499,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13474,
											"end": 13499,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 13474,
											"end": 13499,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13474,
											"end": 13499,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13474,
											"end": 13499,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 13474,
											"end": 13499,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13474,
											"end": 13499,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13474,
											"end": 13499,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13474,
											"end": 13499,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13474,
											"end": 13499,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 13474,
											"end": 13499,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13474,
											"end": 13499,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13474,
											"end": 13499,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 13474,
											"end": 13509,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13500,
											"end": 13508,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 13474,
											"end": 13509,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13474,
											"end": 13509,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 13474,
											"end": 13509,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13474,
											"end": 13509,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 13474,
											"end": 13509,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13474,
											"end": 13509,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13474,
											"end": 13509,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 13474,
											"end": 13509,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13474,
											"end": 13509,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13474,
											"end": 13509,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13474,
											"end": 13509,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13474,
											"end": 13509,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 13474,
											"end": 13509,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13474,
											"end": 13509,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13474,
											"end": 13509,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 13474,
											"end": 13509,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13474,
											"end": 13520,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 13474,
											"end": 13520,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 13474,
											"end": 13520,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13474,
											"end": 13520,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 13474,
											"end": 13520,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13474,
											"end": 13520,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 13474,
											"end": 13520,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 13474,
											"end": 13520,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 13474,
											"end": 13520,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 13474,
											"end": 13520,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13474,
											"end": 13520,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 13474,
											"end": 13520,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 13474,
											"end": 13520,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 13474,
											"end": 13520,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 13474,
											"end": 13520,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 13474,
											"end": 13520,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13474,
											"end": 13520,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 13474,
											"end": 13520,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13557,
											"end": 13565,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13535,
											"end": 13576,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13535,
											"end": 13576,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 13550,
											"end": 13555,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 13535,
											"end": 13576,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13535,
											"end": 13576,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 13535,
											"end": 13576,
											"name": "PUSH",
											"source": 1,
											"value": "17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
										},
										{
											"begin": 13567,
											"end": 13575,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 13535,
											"end": 13576,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 13535,
											"end": 13576,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 13535,
											"end": 13576,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "212"
										},
										{
											"begin": 13535,
											"end": 13576,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13535,
											"end": 13576,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13535,
											"end": 13576,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 13535,
											"end": 13576,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13535,
											"end": 13576,
											"name": "tag",
											"source": 1,
											"value": "212"
										},
										{
											"begin": 13535,
											"end": 13576,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13535,
											"end": 13576,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 13535,
											"end": 13576,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 13535,
											"end": 13576,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 13535,
											"end": 13576,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13535,
											"end": 13576,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 13535,
											"end": 13576,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13535,
											"end": 13576,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 13268,
											"end": 13583,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13268,
											"end": 13583,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13268,
											"end": 13583,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13268,
											"end": 13583,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8151,
											"end": 8614,
											"name": "tag",
											"source": 1,
											"value": "172"
										},
										{
											"begin": 8151,
											"end": 8614,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8287,
											"end": 8288,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8273,
											"end": 8289,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8273,
											"end": 8289,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8273,
											"end": 8275,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 8273,
											"end": 8289,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8273,
											"end": 8289,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8273,
											"end": 8289,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 8269,
											"end": 8357,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "214"
										},
										{
											"begin": 8269,
											"end": 8357,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8343,
											"end": 8344,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8312,
											"end": 8346,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8312,
											"end": 8346,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 8312,
											"end": 8346,
											"name": "PUSH",
											"source": 1,
											"value": "57F447CE00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8312,
											"end": 8346,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8312,
											"end": 8346,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8312,
											"end": 8346,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 8312,
											"end": 8346,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8312,
											"end": 8346,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "215"
										},
										{
											"begin": 8312,
											"end": 8346,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8312,
											"end": 8346,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8312,
											"end": 8346,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "187"
										},
										{
											"begin": 8312,
											"end": 8346,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8312,
											"end": 8346,
											"name": "tag",
											"source": 1,
											"value": "215"
										},
										{
											"begin": 8312,
											"end": 8346,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8312,
											"end": 8346,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8312,
											"end": 8346,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 8312,
											"end": 8346,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8312,
											"end": 8346,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8312,
											"end": 8346,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 8312,
											"end": 8346,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8312,
											"end": 8346,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 8269,
											"end": 8357,
											"name": "tag",
											"source": 1,
											"value": "214"
										},
										{
											"begin": 8269,
											"end": 8357,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8386,
											"end": 8387,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8370,
											"end": 8388,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8370,
											"end": 8388,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8370,
											"end": 8374,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 8370,
											"end": 8388,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8370,
											"end": 8388,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8370,
											"end": 8388,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 8366,
											"end": 8454,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "216"
										},
										{
											"begin": 8366,
											"end": 8454,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8440,
											"end": 8441,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8411,
											"end": 8443,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8411,
											"end": 8443,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 8411,
											"end": 8443,
											"name": "PUSH",
											"source": 1,
											"value": "1A8351400000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8411,
											"end": 8443,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8411,
											"end": 8443,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8411,
											"end": 8443,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 8411,
											"end": 8443,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8411,
											"end": 8443,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "217"
										},
										{
											"begin": 8411,
											"end": 8443,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8411,
											"end": 8443,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8411,
											"end": 8443,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "187"
										},
										{
											"begin": 8411,
											"end": 8443,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8411,
											"end": 8443,
											"name": "tag",
											"source": 1,
											"value": "217"
										},
										{
											"begin": 8411,
											"end": 8443,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8411,
											"end": 8443,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8411,
											"end": 8443,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 8411,
											"end": 8443,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8411,
											"end": 8443,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8411,
											"end": 8443,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 8411,
											"end": 8443,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8411,
											"end": 8443,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 8366,
											"end": 8454,
											"name": "tag",
											"source": 1,
											"value": "216"
										},
										{
											"begin": 8366,
											"end": 8454,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8464,
											"end": 8484,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8486,
											"end": 8509,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8513,
											"end": 8542,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "218"
										},
										{
											"begin": 8532,
											"end": 8534,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 8536,
											"end": 8541,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 8513,
											"end": 8531,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "207"
										},
										{
											"begin": 8513,
											"end": 8542,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8513,
											"end": 8542,
											"name": "tag",
											"source": 1,
											"value": "218"
										},
										{
											"begin": 8513,
											"end": 8542,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8463,
											"end": 8542,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8463,
											"end": 8542,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8463,
											"end": 8542,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8463,
											"end": 8542,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8552,
											"end": 8607,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "219"
										},
										{
											"begin": 8579,
											"end": 8583,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 8585,
											"end": 8587,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 8589,
											"end": 8592,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 8594,
											"end": 8600,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 8602,
											"end": 8606,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 8552,
											"end": 8578,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "189"
										},
										{
											"begin": 8552,
											"end": 8607,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8552,
											"end": 8607,
											"name": "tag",
											"source": 1,
											"value": "219"
										},
										{
											"begin": 8552,
											"end": 8607,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8259,
											"end": 8614,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8259,
											"end": 8614,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8151,
											"end": 8614,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8151,
											"end": 8614,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8151,
											"end": 8614,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8151,
											"end": 8614,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8151,
											"end": 8614,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8151,
											"end": 8614,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12099,
											"end": 12428,
											"name": "tag",
											"source": 1,
											"value": "182"
										},
										{
											"begin": 12099,
											"end": 12428,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12194,
											"end": 12195,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12178,
											"end": 12196,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12178,
											"end": 12196,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 12178,
											"end": 12182,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 12178,
											"end": 12196,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12178,
											"end": 12196,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 12178,
											"end": 12196,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 12174,
											"end": 12262,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "221"
										},
										{
											"begin": 12174,
											"end": 12262,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 12248,
											"end": 12249,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12219,
											"end": 12251,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 12219,
											"end": 12251,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 12219,
											"end": 12251,
											"name": "PUSH",
											"source": 1,
											"value": "1A8351400000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12219,
											"end": 12251,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12219,
											"end": 12251,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12219,
											"end": 12251,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 12219,
											"end": 12251,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12219,
											"end": 12251,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "222"
										},
										{
											"begin": 12219,
											"end": 12251,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12219,
											"end": 12251,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12219,
											"end": 12251,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "187"
										},
										{
											"begin": 12219,
											"end": 12251,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12219,
											"end": 12251,
											"name": "tag",
											"source": 1,
											"value": "222"
										},
										{
											"begin": 12219,
											"end": 12251,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12219,
											"end": 12251,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 12219,
											"end": 12251,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 12219,
											"end": 12251,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 12219,
											"end": 12251,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12219,
											"end": 12251,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 12219,
											"end": 12251,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12219,
											"end": 12251,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 12174,
											"end": 12262,
											"name": "tag",
											"source": 1,
											"value": "221"
										},
										{
											"begin": 12174,
											"end": 12262,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12272,
											"end": 12292,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12294,
											"end": 12317,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 12321,
											"end": 12350,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "223"
										},
										{
											"begin": 12340,
											"end": 12342,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 12344,
											"end": 12349,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 12321,
											"end": 12339,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "207"
										},
										{
											"begin": 12321,
											"end": 12350,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12321,
											"end": 12350,
											"name": "tag",
											"source": 1,
											"value": "223"
										},
										{
											"begin": 12321,
											"end": 12350,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12271,
											"end": 12350,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12271,
											"end": 12350,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12271,
											"end": 12350,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12271,
											"end": 12350,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12360,
											"end": 12421,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "224"
										},
										{
											"begin": 12387,
											"end": 12391,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 12401,
											"end": 12402,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12405,
											"end": 12408,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 12410,
											"end": 12416,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 12360,
											"end": 12421,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 12360,
											"end": 12421,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 12360,
											"end": 12421,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 12360,
											"end": 12421,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 12360,
											"end": 12421,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12360,
											"end": 12421,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 12360,
											"end": 12421,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12360,
											"end": 12421,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 12360,
											"end": 12421,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12360,
											"end": 12421,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12360,
											"end": 12421,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12360,
											"end": 12421,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12360,
											"end": 12386,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "189"
										},
										{
											"begin": 12360,
											"end": 12421,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12360,
											"end": 12421,
											"name": "tag",
											"source": 1,
											"value": "224"
										},
										{
											"begin": 12360,
											"end": 12421,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12164,
											"end": 12428,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12164,
											"end": 12428,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12099,
											"end": 12428,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12099,
											"end": 12428,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12099,
											"end": 12428,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12099,
											"end": 12428,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7004,
											"end": 7694,
											"name": "tag",
											"source": 1,
											"value": "189"
										},
										{
											"begin": 7004,
											"end": 7694,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7205,
											"end": 7235,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "226"
										},
										{
											"begin": 7213,
											"end": 7217,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 7219,
											"end": 7221,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 7223,
											"end": 7226,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 7228,
											"end": 7234,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 7205,
											"end": 7212,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "227"
										},
										{
											"begin": 7205,
											"end": 7235,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7205,
											"end": 7235,
											"name": "tag",
											"source": 1,
											"value": "226"
										},
										{
											"begin": 7205,
											"end": 7235,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7263,
											"end": 7264,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7249,
											"end": 7265,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7249,
											"end": 7265,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7249,
											"end": 7251,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7249,
											"end": 7265,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7249,
											"end": 7265,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7249,
											"end": 7265,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 7245,
											"end": 7688,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "228"
										},
										{
											"begin": 7245,
											"end": 7688,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7281,
											"end": 7297,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7300,
											"end": 7312,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "229"
										},
										{
											"begin": 7300,
											"end": 7310,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 7300,
											"end": 7312,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7300,
											"end": 7312,
											"name": "tag",
											"source": 1,
											"value": "229"
										},
										{
											"begin": 7300,
											"end": 7312,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7281,
											"end": 7312,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7281,
											"end": 7312,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7344,
											"end": 7345,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 7330,
											"end": 7333,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7330,
											"end": 7340,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7330,
											"end": 7345,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7326,
											"end": 7678,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "230"
										},
										{
											"begin": 7326,
											"end": 7678,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7365,
											"end": 7375,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7378,
											"end": 7403,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "231"
										},
										{
											"begin": 7401,
											"end": 7402,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7378,
											"end": 7381,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 7378,
											"end": 7400,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "135"
										},
										{
											"begin": 7378,
											"end": 7400,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7378,
											"end": 7403,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7378,
											"end": 7403,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7378,
											"end": 7403,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7378,
											"end": 7403,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7378,
											"end": 7403,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7378,
											"end": 7403,
											"name": "tag",
											"source": 1,
											"value": "231"
										},
										{
											"begin": 7378,
											"end": 7403,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7365,
											"end": 7403,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7365,
											"end": 7403,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7421,
											"end": 7434,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7437,
											"end": 7465,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "232"
										},
										{
											"begin": 7463,
											"end": 7464,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7437,
											"end": 7443,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 7437,
											"end": 7462,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "135"
										},
										{
											"begin": 7437,
											"end": 7462,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7437,
											"end": 7465,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7437,
											"end": 7465,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7437,
											"end": 7465,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7437,
											"end": 7465,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7437,
											"end": 7465,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7437,
											"end": 7465,
											"name": "tag",
											"source": 1,
											"value": "232"
										},
										{
											"begin": 7437,
											"end": 7465,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7421,
											"end": 7465,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7421,
											"end": 7465,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7483,
											"end": 7550,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "233"
										},
										{
											"begin": 7514,
											"end": 7522,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7524,
											"end": 7528,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 7530,
											"end": 7532,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 7534,
											"end": 7536,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 7538,
											"end": 7543,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 7545,
											"end": 7549,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 7483,
											"end": 7513,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "234"
										},
										{
											"begin": 7483,
											"end": 7550,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7483,
											"end": 7550,
											"name": "tag",
											"source": 1,
											"value": "233"
										},
										{
											"begin": 7483,
											"end": 7550,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7347,
											"end": 7565,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7347,
											"end": 7565,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7326,
											"end": 7678,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "235"
										},
										{
											"begin": 7326,
											"end": 7678,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7326,
											"end": 7678,
											"name": "tag",
											"source": 1,
											"value": "230"
										},
										{
											"begin": 7326,
											"end": 7678,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7589,
											"end": 7663,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "236"
										},
										{
											"begin": 7625,
											"end": 7633,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7635,
											"end": 7639,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 7641,
											"end": 7643,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 7645,
											"end": 7648,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 7650,
											"end": 7656,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 7658,
											"end": 7662,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 7589,
											"end": 7624,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "237"
										},
										{
											"begin": 7589,
											"end": 7663,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7589,
											"end": 7663,
											"name": "tag",
											"source": 1,
											"value": "236"
										},
										{
											"begin": 7589,
											"end": 7663,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7326,
											"end": 7678,
											"name": "tag",
											"source": 1,
											"value": "235"
										},
										{
											"begin": 7326,
											"end": 7678,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7267,
											"end": 7688,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7245,
											"end": 7688,
											"name": "tag",
											"source": 1,
											"value": "228"
										},
										{
											"begin": 7245,
											"end": 7688,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7004,
											"end": 7694,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7004,
											"end": 7694,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7004,
											"end": 7694,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7004,
											"end": 7694,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7004,
											"end": 7694,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7004,
											"end": 7694,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16080,
											"end": 16929,
											"name": "tag",
											"source": 1,
											"value": "207"
										},
										{
											"begin": 16080,
											"end": 16929,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16188,
											"end": 16211,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 16213,
											"end": 16236,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 16374,
											"end": 16378,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 16368,
											"end": 16379,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 16358,
											"end": 16379,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 16358,
											"end": 16379,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16444,
											"end": 16445,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 16436,
											"end": 16442,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16429,
											"end": 16446,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16582,
											"end": 16590,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 16575,
											"end": 16579,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 16567,
											"end": 16573,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 16563,
											"end": 16580,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16556,
											"end": 16591,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16704,
											"end": 16708,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 16696,
											"end": 16702,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16692,
											"end": 16709,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16682,
											"end": 16709,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16682,
											"end": 16709,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16737,
											"end": 16738,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 16729,
											"end": 16735,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16722,
											"end": 16739,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16778,
											"end": 16786,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16771,
											"end": 16775,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 16763,
											"end": 16769,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16759,
											"end": 16776,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16752,
											"end": 16787,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16907,
											"end": 16911,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 16899,
											"end": 16905,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16895,
											"end": 16912,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16889,
											"end": 16893,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 16882,
											"end": 16913,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16080,
											"end": 16929,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 16080,
											"end": 16929,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16080,
											"end": 16929,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 16080,
											"end": 16929,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16080,
											"end": 16929,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16080,
											"end": 16929,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 997,
											"end": 1197,
											"name": "tag",
											"source": 13,
											"value": "227"
										},
										{
											"begin": 997,
											"end": 1197,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1156,
											"end": 1192,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "240"
										},
										{
											"begin": 1170,
											"end": 1174,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 1176,
											"end": 1178,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 1180,
											"end": 1183,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 1185,
											"end": 1191,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 1156,
											"end": 1169,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "241"
										},
										{
											"begin": 1156,
											"end": 1192,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1156,
											"end": 1192,
											"name": "tag",
											"source": 13,
											"value": "240"
										},
										{
											"begin": 1156,
											"end": 1192,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 997,
											"end": 1197,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 997,
											"end": 1197,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 997,
											"end": 1197,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 997,
											"end": 1197,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 997,
											"end": 1197,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13761,
											"end": 14735,
											"name": "tag",
											"source": 1,
											"value": "234"
										},
										{
											"begin": 13761,
											"end": 14735,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13984,
											"end": 13985,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13967,
											"end": 13969,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 13967,
											"end": 13981,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13967,
											"end": 13981,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 13967,
											"end": 13981,
											"name": "EXTCODESIZE",
											"source": 1
										},
										{
											"begin": 13967,
											"end": 13985,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 13963,
											"end": 14729,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 13963,
											"end": 14729,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "243"
										},
										{
											"begin": 13963,
											"end": 14729,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 14022,
											"end": 14024,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14043,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14005,
											"end": 14043,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14043,
											"name": "PUSH",
											"source": 1,
											"value": "F23A6E61"
										},
										{
											"begin": 14044,
											"end": 14052,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 14054,
											"end": 14058,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 14060,
											"end": 14062,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 14064,
											"end": 14069,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 14071,
											"end": 14075,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "244"
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "245"
										},
										{
											"begin": 14005,
											"end": 14076,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "tag",
											"source": 1,
											"value": "244"
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "CALL",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "246"
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "247"
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "248"
										},
										{
											"begin": 14005,
											"end": 14076,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "tag",
											"source": 1,
											"value": "247"
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "tag",
											"source": 1,
											"value": "246"
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "249"
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "254"
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "PUSH",
											"source": 1,
											"value": "3F"
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "253"
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "tag",
											"source": 1,
											"value": "254"
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "tag",
											"source": 1,
											"value": "253"
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14377,
											"end": 14378,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14360,
											"end": 14366,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14360,
											"end": 14373,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 14360,
											"end": 14378,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 14356,
											"end": 14705,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "255"
										},
										{
											"begin": 14356,
											"end": 14705,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 14487,
											"end": 14489,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 14464,
											"end": 14490,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 14464,
											"end": 14490,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 14464,
											"end": 14490,
											"name": "PUSH",
											"source": 1,
											"value": "57F447CE00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 14464,
											"end": 14490,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14464,
											"end": 14490,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14464,
											"end": 14490,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 14464,
											"end": 14490,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14464,
											"end": 14490,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "256"
										},
										{
											"begin": 14464,
											"end": 14490,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14464,
											"end": 14490,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14464,
											"end": 14490,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "187"
										},
										{
											"begin": 14464,
											"end": 14490,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14464,
											"end": 14490,
											"name": "tag",
											"source": 1,
											"value": "256"
										},
										{
											"begin": 14464,
											"end": 14490,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14464,
											"end": 14490,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 14464,
											"end": 14490,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 14464,
											"end": 14490,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 14464,
											"end": 14490,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14464,
											"end": 14490,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 14464,
											"end": 14490,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14464,
											"end": 14490,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 14356,
											"end": 14705,
											"name": "tag",
											"source": 1,
											"value": "255"
										},
										{
											"begin": 14356,
											"end": 14705,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14657,
											"end": 14663,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 14651,
											"end": 14664,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 14642,
											"end": 14648,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14638,
											"end": 14640,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 14634,
											"end": 14649,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14627,
											"end": 14665,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "tag",
											"source": 1,
											"value": "249"
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14137,
											"end": 14180,
											"name": "PUSH",
											"source": 1,
											"value": "F23A6E61"
										},
										{
											"begin": 14137,
											"end": 14180,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 14137,
											"end": 14180,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 14125,
											"end": 14180,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14125,
											"end": 14180,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 14125,
											"end": 14180,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 14125,
											"end": 14133,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14125,
											"end": 14180,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14125,
											"end": 14180,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 14125,
											"end": 14180,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 14125,
											"end": 14180,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 14121,
											"end": 14295,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "259"
										},
										{
											"begin": 14121,
											"end": 14295,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 14273,
											"end": 14275,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 14250,
											"end": 14276,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 14250,
											"end": 14276,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 14250,
											"end": 14276,
											"name": "PUSH",
											"source": 1,
											"value": "57F447CE00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 14250,
											"end": 14276,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14250,
											"end": 14276,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14250,
											"end": 14276,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 14250,
											"end": 14276,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14250,
											"end": 14276,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "260"
										},
										{
											"begin": 14250,
											"end": 14276,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14250,
											"end": 14276,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14250,
											"end": 14276,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "187"
										},
										{
											"begin": 14250,
											"end": 14276,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14250,
											"end": 14276,
											"name": "tag",
											"source": 1,
											"value": "260"
										},
										{
											"begin": 14250,
											"end": 14276,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14250,
											"end": 14276,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 14250,
											"end": 14276,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 14250,
											"end": 14276,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 14250,
											"end": 14276,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14250,
											"end": 14276,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 14250,
											"end": 14276,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14250,
											"end": 14276,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 14121,
											"end": 14295,
											"name": "tag",
											"source": 1,
											"value": "259"
										},
										{
											"begin": 14121,
											"end": 14295,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14077,
											"end": 14309,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13963,
											"end": 14729,
											"name": "tag",
											"source": 1,
											"value": "243"
										},
										{
											"begin": 13963,
											"end": 14729,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13761,
											"end": 14735,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13761,
											"end": 14735,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13761,
											"end": 14735,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13761,
											"end": 14735,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13761,
											"end": 14735,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13761,
											"end": 14735,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13761,
											"end": 14735,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14923,
											"end": 15964,
											"name": "tag",
											"source": 1,
											"value": "237"
										},
										{
											"begin": 14923,
											"end": 15964,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15171,
											"end": 15172,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15154,
											"end": 15156,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 15154,
											"end": 15168,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15154,
											"end": 15168,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 15154,
											"end": 15168,
											"name": "EXTCODESIZE",
											"source": 1
										},
										{
											"begin": 15154,
											"end": 15172,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 15150,
											"end": 15958,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 15150,
											"end": 15958,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "262"
										},
										{
											"begin": 15150,
											"end": 15958,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 15209,
											"end": 15211,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15235,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15192,
											"end": 15235,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15235,
											"name": "PUSH",
											"source": 1,
											"value": "BC197C81"
										},
										{
											"begin": 15236,
											"end": 15244,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 15246,
											"end": 15250,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 15252,
											"end": 15255,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 15257,
											"end": 15263,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 15265,
											"end": 15269,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "263"
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "264"
										},
										{
											"begin": 15192,
											"end": 15270,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "tag",
											"source": 1,
											"value": "263"
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "CALL",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "265"
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "266"
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "248"
										},
										{
											"begin": 15192,
											"end": 15270,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "tag",
											"source": 1,
											"value": "266"
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "tag",
											"source": 1,
											"value": "265"
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "267"
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "272"
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "PUSH",
											"source": 1,
											"value": "3F"
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "271"
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "tag",
											"source": 1,
											"value": "272"
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "tag",
											"source": 1,
											"value": "271"
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15606,
											"end": 15607,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15589,
											"end": 15595,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15589,
											"end": 15602,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 15589,
											"end": 15607,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 15585,
											"end": 15934,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "273"
										},
										{
											"begin": 15585,
											"end": 15934,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 15716,
											"end": 15718,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 15693,
											"end": 15719,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 15693,
											"end": 15719,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 15693,
											"end": 15719,
											"name": "PUSH",
											"source": 1,
											"value": "57F447CE00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15693,
											"end": 15719,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15693,
											"end": 15719,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15693,
											"end": 15719,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 15693,
											"end": 15719,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15693,
											"end": 15719,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "274"
										},
										{
											"begin": 15693,
											"end": 15719,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 15693,
											"end": 15719,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15693,
											"end": 15719,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "187"
										},
										{
											"begin": 15693,
											"end": 15719,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15693,
											"end": 15719,
											"name": "tag",
											"source": 1,
											"value": "274"
										},
										{
											"begin": 15693,
											"end": 15719,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15693,
											"end": 15719,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 15693,
											"end": 15719,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 15693,
											"end": 15719,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 15693,
											"end": 15719,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 15693,
											"end": 15719,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 15693,
											"end": 15719,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15693,
											"end": 15719,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 15585,
											"end": 15934,
											"name": "tag",
											"source": 1,
											"value": "273"
										},
										{
											"begin": 15585,
											"end": 15934,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15886,
											"end": 15892,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 15880,
											"end": 15893,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 15871,
											"end": 15877,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15867,
											"end": 15869,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 15863,
											"end": 15878,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15856,
											"end": 15894,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "tag",
											"source": 1,
											"value": "267"
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15361,
											"end": 15409,
											"name": "PUSH",
											"source": 1,
											"value": "BC197C81"
										},
										{
											"begin": 15361,
											"end": 15409,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 15361,
											"end": 15409,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 15349,
											"end": 15409,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15349,
											"end": 15409,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 15349,
											"end": 15409,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 15349,
											"end": 15357,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15349,
											"end": 15409,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15349,
											"end": 15409,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 15349,
											"end": 15409,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 15349,
											"end": 15409,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 15345,
											"end": 15524,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "277"
										},
										{
											"begin": 15345,
											"end": 15524,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 15502,
											"end": 15504,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 15479,
											"end": 15505,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 15479,
											"end": 15505,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 15479,
											"end": 15505,
											"name": "PUSH",
											"source": 1,
											"value": "57F447CE00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15479,
											"end": 15505,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15479,
											"end": 15505,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15479,
											"end": 15505,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 15479,
											"end": 15505,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15479,
											"end": 15505,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "278"
										},
										{
											"begin": 15479,
											"end": 15505,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 15479,
											"end": 15505,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15479,
											"end": 15505,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "187"
										},
										{
											"begin": 15479,
											"end": 15505,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15479,
											"end": 15505,
											"name": "tag",
											"source": 1,
											"value": "278"
										},
										{
											"begin": 15479,
											"end": 15505,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15479,
											"end": 15505,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 15479,
											"end": 15505,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 15479,
											"end": 15505,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 15479,
											"end": 15505,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 15479,
											"end": 15505,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 15479,
											"end": 15505,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15479,
											"end": 15505,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 15345,
											"end": 15524,
											"name": "tag",
											"source": 1,
											"value": "277"
										},
										{
											"begin": 15345,
											"end": 15524,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15271,
											"end": 15538,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15150,
											"end": 15958,
											"name": "tag",
											"source": 1,
											"value": "262"
										},
										{
											"begin": 15150,
											"end": 15958,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14923,
											"end": 15964,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14923,
											"end": 15964,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14923,
											"end": 15964,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14923,
											"end": 15964,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14923,
											"end": 15964,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14923,
											"end": 15964,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14923,
											"end": 15964,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1483,
											"end": 3001,
											"name": "tag",
											"source": 5,
											"value": "241"
										},
										{
											"begin": 1483,
											"end": 3001,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1647,
											"end": 1683,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "280"
										},
										{
											"begin": 1661,
											"end": 1665,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1667,
											"end": 1669,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1671,
											"end": 1674,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1676,
											"end": 1682,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1647,
											"end": 1660,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "281"
										},
										{
											"begin": 1647,
											"end": 1683,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1647,
											"end": 1683,
											"name": "tag",
											"source": 5,
											"value": "280"
										},
										{
											"begin": 1647,
											"end": 1683,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1714,
											"end": 1715,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1698,
											"end": 1716,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1698,
											"end": 1716,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1698,
											"end": 1702,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1698,
											"end": 1716,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1698,
											"end": 1716,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1698,
											"end": 1716,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1694,
											"end": 2227,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "282"
										},
										{
											"begin": 1694,
											"end": 2227,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1732,
											"end": 1754,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1777,
											"end": 1786,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1772,
											"end": 2065,
											"name": "tag",
											"source": 5,
											"value": "283"
										},
										{
											"begin": 1772,
											"end": 2065,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1796,
											"end": 1799,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1796,
											"end": 1806,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1792,
											"end": 1793,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1792,
											"end": 1806,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 1772,
											"end": 2065,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1772,
											"end": 2065,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "284"
										},
										{
											"begin": 1772,
											"end": 2065,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1831,
											"end": 1844,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1847,
											"end": 1853,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1854,
											"end": 1855,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1847,
											"end": 1856,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1847,
											"end": 1856,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1847,
											"end": 1856,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1847,
											"end": 1856,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 1847,
											"end": 1856,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "286"
										},
										{
											"begin": 1847,
											"end": 1856,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1847,
											"end": 1856,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "287"
										},
										{
											"begin": 1847,
											"end": 1856,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "138"
										},
										{
											"begin": 1847,
											"end": 1856,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1847,
											"end": 1856,
											"name": "tag",
											"source": 5,
											"value": "287"
										},
										{
											"begin": 1847,
											"end": 1856,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1847,
											"end": 1856,
											"name": "tag",
											"source": 5,
											"value": "286"
										},
										{
											"begin": 1847,
											"end": 1856,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1847,
											"end": 1856,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1847,
											"end": 1856,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 1847,
											"end": 1856,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1847,
											"end": 1856,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1847,
											"end": 1856,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1847,
											"end": 1856,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1831,
											"end": 1856,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1831,
											"end": 1856,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2004,
											"end": 2009,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1980,
											"end": 1992,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 1980,
											"end": 2000,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1993,
											"end": 1996,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 1997,
											"end": 1998,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1993,
											"end": 1999,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1993,
											"end": 1999,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1993,
											"end": 1999,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1993,
											"end": 1999,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 1993,
											"end": 1999,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "288"
										},
										{
											"begin": 1993,
											"end": 1999,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1993,
											"end": 1999,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "289"
										},
										{
											"begin": 1993,
											"end": 1999,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "138"
										},
										{
											"begin": 1993,
											"end": 1999,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1993,
											"end": 1999,
											"name": "tag",
											"source": 5,
											"value": "289"
										},
										{
											"begin": 1993,
											"end": 1999,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1993,
											"end": 1999,
											"name": "tag",
											"source": 5,
											"value": "288"
										},
										{
											"begin": 1993,
											"end": 1999,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1993,
											"end": 1999,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1993,
											"end": 1999,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 1993,
											"end": 1999,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1993,
											"end": 1999,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1993,
											"end": 1999,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1993,
											"end": 1999,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1980,
											"end": 2000,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1980,
											"end": 2000,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1980,
											"end": 2000,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1980,
											"end": 2000,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1980,
											"end": 2000,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1980,
											"end": 2000,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1980,
											"end": 2000,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1980,
											"end": 2000,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1980,
											"end": 2000,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1980,
											"end": 2000,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1980,
											"end": 2000,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 1980,
											"end": 2000,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1980,
											"end": 2009,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1980,
											"end": 2009,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1980,
											"end": 2009,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1980,
											"end": 2009,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "290"
										},
										{
											"begin": 1980,
											"end": 2009,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1980,
											"end": 2009,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1980,
											"end": 2009,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "291"
										},
										{
											"begin": 1980,
											"end": 2009,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1980,
											"end": 2009,
											"name": "tag",
											"source": 5,
											"value": "290"
										},
										{
											"begin": 1980,
											"end": 2009,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1980,
											"end": 2009,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1980,
											"end": 2009,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1980,
											"end": 2009,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1980,
											"end": 2009,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1980,
											"end": 2009,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1980,
											"end": 2009,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 1980,
											"end": 2009,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2045,
											"end": 2050,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2027,
											"end": 2050,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2027,
											"end": 2050,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "292"
										},
										{
											"begin": 2027,
											"end": 2050,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2027,
											"end": 2050,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2027,
											"end": 2050,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "291"
										},
										{
											"begin": 2027,
											"end": 2050,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2027,
											"end": 2050,
											"name": "tag",
											"source": 5,
											"value": "292"
										},
										{
											"begin": 2027,
											"end": 2050,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2027,
											"end": 2050,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2027,
											"end": 2050,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1813,
											"end": 2065,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1808,
											"end": 1811,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1808,
											"end": 1811,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "293"
										},
										{
											"begin": 1808,
											"end": 1811,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1808,
											"end": 1811,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "140"
										},
										{
											"begin": 1808,
											"end": 1811,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1808,
											"end": 1811,
											"name": "tag",
											"source": 5,
											"value": "293"
										},
										{
											"begin": 1808,
											"end": 1811,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1808,
											"end": 1811,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1808,
											"end": 1811,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1772,
											"end": 2065,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "283"
										},
										{
											"begin": 1772,
											"end": 2065,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1772,
											"end": 2065,
											"name": "tag",
											"source": 5,
											"value": "284"
										},
										{
											"begin": 1772,
											"end": 2065,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1772,
											"end": 2065,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2202,
											"end": 2216,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2183,
											"end": 2198,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2183,
											"end": 2198,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2183,
											"end": 2216,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2183,
											"end": 2216,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2183,
											"end": 2216,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2183,
											"end": 2216,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "294"
										},
										{
											"begin": 2183,
											"end": 2216,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2183,
											"end": 2216,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2183,
											"end": 2216,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "291"
										},
										{
											"begin": 2183,
											"end": 2216,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2183,
											"end": 2216,
											"name": "tag",
											"source": 5,
											"value": "294"
										},
										{
											"begin": 2183,
											"end": 2216,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2183,
											"end": 2216,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2183,
											"end": 2216,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2183,
											"end": 2216,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2183,
											"end": 2216,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2183,
											"end": 2216,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2183,
											"end": 2216,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 2183,
											"end": 2216,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1718,
											"end": 2227,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1694,
											"end": 2227,
											"name": "tag",
											"source": 5,
											"value": "282"
										},
										{
											"begin": 1694,
											"end": 2227,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2255,
											"end": 2256,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2241,
											"end": 2257,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2241,
											"end": 2257,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2241,
											"end": 2243,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2241,
											"end": 2257,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2241,
											"end": 2257,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2241,
											"end": 2257,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2237,
											"end": 2995,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "295"
										},
										{
											"begin": 2237,
											"end": 2995,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2273,
											"end": 2295,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2318,
											"end": 2327,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2313,
											"end": 2772,
											"name": "tag",
											"source": 5,
											"value": "296"
										},
										{
											"begin": 2313,
											"end": 2772,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2337,
											"end": 2340,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2337,
											"end": 2347,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2333,
											"end": 2334,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2333,
											"end": 2347,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 2313,
											"end": 2772,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2313,
											"end": 2772,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "297"
										},
										{
											"begin": 2313,
											"end": 2772,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2372,
											"end": 2385,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2388,
											"end": 2394,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2395,
											"end": 2396,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2388,
											"end": 2397,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2388,
											"end": 2397,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2388,
											"end": 2397,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2388,
											"end": 2397,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 2388,
											"end": 2397,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "299"
										},
										{
											"begin": 2388,
											"end": 2397,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2388,
											"end": 2397,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "300"
										},
										{
											"begin": 2388,
											"end": 2397,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "138"
										},
										{
											"begin": 2388,
											"end": 2397,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2388,
											"end": 2397,
											"name": "tag",
											"source": 5,
											"value": "300"
										},
										{
											"begin": 2388,
											"end": 2397,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2388,
											"end": 2397,
											"name": "tag",
											"source": 5,
											"value": "299"
										},
										{
											"begin": 2388,
											"end": 2397,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2388,
											"end": 2397,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2388,
											"end": 2397,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 2388,
											"end": 2397,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2388,
											"end": 2397,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2388,
											"end": 2397,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2388,
											"end": 2397,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2372,
											"end": 2397,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2372,
											"end": 2397,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2578,
											"end": 2583,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2554,
											"end": 2566,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 2554,
											"end": 2574,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2567,
											"end": 2570,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 2571,
											"end": 2572,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 2567,
											"end": 2573,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2567,
											"end": 2573,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2567,
											"end": 2573,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2567,
											"end": 2573,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 2567,
											"end": 2573,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "301"
										},
										{
											"begin": 2567,
											"end": 2573,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2567,
											"end": 2573,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "302"
										},
										{
											"begin": 2567,
											"end": 2573,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "138"
										},
										{
											"begin": 2567,
											"end": 2573,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2567,
											"end": 2573,
											"name": "tag",
											"source": 5,
											"value": "302"
										},
										{
											"begin": 2567,
											"end": 2573,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2567,
											"end": 2573,
											"name": "tag",
											"source": 5,
											"value": "301"
										},
										{
											"begin": 2567,
											"end": 2573,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2567,
											"end": 2573,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2567,
											"end": 2573,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 2567,
											"end": 2573,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2567,
											"end": 2573,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2567,
											"end": 2573,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2567,
											"end": 2573,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2554,
											"end": 2574,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2554,
											"end": 2574,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2554,
											"end": 2574,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2554,
											"end": 2574,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2554,
											"end": 2574,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2554,
											"end": 2574,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2554,
											"end": 2574,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2554,
											"end": 2574,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2554,
											"end": 2574,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2554,
											"end": 2574,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2554,
											"end": 2574,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 2554,
											"end": 2574,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2554,
											"end": 2583,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2554,
											"end": 2583,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2554,
											"end": 2583,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2554,
											"end": 2583,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2554,
											"end": 2583,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2554,
											"end": 2583,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2554,
											"end": 2583,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2554,
											"end": 2583,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2554,
											"end": 2583,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2554,
											"end": 2583,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 2554,
											"end": 2583,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2734,
											"end": 2739,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2716,
											"end": 2739,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2716,
											"end": 2739,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2716,
											"end": 2739,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2716,
											"end": 2739,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2354,
											"end": 2772,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2349,
											"end": 2352,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2349,
											"end": 2352,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "303"
										},
										{
											"begin": 2349,
											"end": 2352,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2349,
											"end": 2352,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "140"
										},
										{
											"begin": 2349,
											"end": 2352,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2349,
											"end": 2352,
											"name": "tag",
											"source": 5,
											"value": "303"
										},
										{
											"begin": 2349,
											"end": 2352,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2349,
											"end": 2352,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2349,
											"end": 2352,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2313,
											"end": 2772,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "296"
										},
										{
											"begin": 2313,
											"end": 2772,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2313,
											"end": 2772,
											"name": "tag",
											"source": 5,
											"value": "297"
										},
										{
											"begin": 2313,
											"end": 2772,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2313,
											"end": 2772,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2956,
											"end": 2970,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2937,
											"end": 2952,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2937,
											"end": 2952,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2937,
											"end": 2970,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2937,
											"end": 2970,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2937,
											"end": 2970,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2937,
											"end": 2970,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2937,
											"end": 2970,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2937,
											"end": 2970,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2937,
											"end": 2970,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2937,
											"end": 2970,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2937,
											"end": 2970,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2937,
											"end": 2970,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 2937,
											"end": 2970,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2259,
											"end": 2995,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2237,
											"end": 2995,
											"name": "tag",
											"source": 5,
											"value": "295"
										},
										{
											"begin": 2237,
											"end": 2995,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1483,
											"end": 3001,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1483,
											"end": 3001,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1483,
											"end": 3001,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1483,
											"end": 3001,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1483,
											"end": 3001,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5144,
											"end": 6425,
											"name": "tag",
											"source": 1,
											"value": "281"
										},
										{
											"begin": 5144,
											"end": 6425,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5279,
											"end": 5285,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5279,
											"end": 5292,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5265,
											"end": 5268,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5265,
											"end": 5275,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5265,
											"end": 5292,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 5261,
											"end": 5378,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "305"
										},
										{
											"begin": 5261,
											"end": 5378,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5341,
											"end": 5344,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5341,
											"end": 5351,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5353,
											"end": 5359,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5353,
											"end": 5366,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5315,
											"end": 5367,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5315,
											"end": 5367,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5315,
											"end": 5367,
											"name": "PUSH",
											"source": 1,
											"value": "5B05999100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5315,
											"end": 5367,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5315,
											"end": 5367,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5315,
											"end": 5367,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5315,
											"end": 5367,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5315,
											"end": 5367,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "306"
										},
										{
											"begin": 5315,
											"end": 5367,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5315,
											"end": 5367,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5315,
											"end": 5367,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5315,
											"end": 5367,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 5315,
											"end": 5367,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5315,
											"end": 5367,
											"name": "tag",
											"source": 1,
											"value": "306"
										},
										{
											"begin": 5315,
											"end": 5367,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5315,
											"end": 5367,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5315,
											"end": 5367,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5315,
											"end": 5367,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5315,
											"end": 5367,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5315,
											"end": 5367,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5315,
											"end": 5367,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5315,
											"end": 5367,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5261,
											"end": 5378,
											"name": "tag",
											"source": 1,
											"value": "305"
										},
										{
											"begin": 5261,
											"end": 5378,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5388,
											"end": 5404,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5407,
											"end": 5419,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "307"
										},
										{
											"begin": 5407,
											"end": 5417,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 5407,
											"end": 5419,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5407,
											"end": 5419,
											"name": "tag",
											"source": 1,
											"value": "307"
										},
										{
											"begin": 5407,
											"end": 5419,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5388,
											"end": 5419,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5388,
											"end": 5419,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5435,
											"end": 5444,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5430,
											"end": 6121,
											"name": "tag",
											"source": 1,
											"value": "308"
										},
										{
											"begin": 5430,
											"end": 6121,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5454,
											"end": 5457,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5454,
											"end": 5464,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5450,
											"end": 5451,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5450,
											"end": 5464,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 5430,
											"end": 6121,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5430,
											"end": 6121,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "309"
										},
										{
											"begin": 5430,
											"end": 6121,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5485,
											"end": 5495,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5498,
											"end": 5523,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "311"
										},
										{
											"begin": 5521,
											"end": 5522,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5498,
											"end": 5501,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 5498,
											"end": 5520,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "135"
										},
										{
											"begin": 5498,
											"end": 5520,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5498,
											"end": 5523,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5498,
											"end": 5523,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5498,
											"end": 5523,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5498,
											"end": 5523,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5498,
											"end": 5523,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5498,
											"end": 5523,
											"name": "tag",
											"source": 1,
											"value": "311"
										},
										{
											"begin": 5498,
											"end": 5523,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5485,
											"end": 5523,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5485,
											"end": 5523,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5550,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5553,
											"end": 5581,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "312"
										},
										{
											"begin": 5579,
											"end": 5580,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5553,
											"end": 5559,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 5553,
											"end": 5578,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "135"
										},
										{
											"begin": 5553,
											"end": 5578,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5553,
											"end": 5581,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5553,
											"end": 5581,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5553,
											"end": 5581,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5553,
											"end": 5581,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5553,
											"end": 5581,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5553,
											"end": 5581,
											"name": "tag",
											"source": 1,
											"value": "312"
										},
										{
											"begin": 5553,
											"end": 5581,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5581,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5581,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5616,
											"end": 5617,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5600,
											"end": 5618,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5600,
											"end": 5618,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5600,
											"end": 5604,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 5600,
											"end": 5618,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5600,
											"end": 5618,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5600,
											"end": 5618,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 5596,
											"end": 6016,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "313"
										},
										{
											"begin": 5596,
											"end": 6016,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5638,
											"end": 5657,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5660,
											"end": 5669,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5660,
											"end": 5673,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5670,
											"end": 5672,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5660,
											"end": 5673,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5660,
											"end": 5673,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5660,
											"end": 5673,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5660,
											"end": 5673,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5660,
											"end": 5673,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5660,
											"end": 5673,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5660,
											"end": 5673,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5660,
											"end": 5673,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5660,
											"end": 5673,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5660,
											"end": 5673,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5660,
											"end": 5673,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 5660,
											"end": 5679,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5674,
											"end": 5678,
											"name": "DUP11",
											"source": 1
										},
										{
											"begin": 5660,
											"end": 5679,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5660,
											"end": 5679,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5660,
											"end": 5679,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5660,
											"end": 5679,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5660,
											"end": 5679,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5660,
											"end": 5679,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5660,
											"end": 5679,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5660,
											"end": 5679,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5660,
											"end": 5679,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5660,
											"end": 5679,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5660,
											"end": 5679,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5660,
											"end": 5679,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5660,
											"end": 5679,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5660,
											"end": 5679,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5660,
											"end": 5679,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 5660,
											"end": 5679,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 5638,
											"end": 5679,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5638,
											"end": 5679,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5715,
											"end": 5720,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5701,
											"end": 5712,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5701,
											"end": 5720,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 5697,
											"end": 5826,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5697,
											"end": 5826,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "314"
										},
										{
											"begin": 5697,
											"end": 5826,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5778,
											"end": 5782,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 5784,
											"end": 5795,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5797,
											"end": 5802,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5804,
											"end": 5806,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5751,
											"end": 5807,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5751,
											"end": 5807,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5751,
											"end": 5807,
											"name": "PUSH",
											"source": 1,
											"value": "3DEE4C500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5751,
											"end": 5807,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5751,
											"end": 5807,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5751,
											"end": 5807,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5751,
											"end": 5807,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5751,
											"end": 5807,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "315"
										},
										{
											"begin": 5751,
											"end": 5807,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 5751,
											"end": 5807,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 5751,
											"end": 5807,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5751,
											"end": 5807,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5751,
											"end": 5807,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5751,
											"end": 5807,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "316"
										},
										{
											"begin": 5751,
											"end": 5807,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5751,
											"end": 5807,
											"name": "tag",
											"source": 1,
											"value": "315"
										},
										{
											"begin": 5751,
											"end": 5807,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5751,
											"end": 5807,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5751,
											"end": 5807,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5751,
											"end": 5807,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5751,
											"end": 5807,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5751,
											"end": 5807,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5751,
											"end": 5807,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5751,
											"end": 5807,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5697,
											"end": 5826,
											"name": "tag",
											"source": 1,
											"value": "314"
										},
										{
											"begin": 5697,
											"end": 5826,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5978,
											"end": 5983,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5964,
											"end": 5975,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5964,
											"end": 5983,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5942,
											"end": 5951,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5942,
											"end": 5955,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5952,
											"end": 5954,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5942,
											"end": 5955,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5942,
											"end": 5955,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5942,
											"end": 5955,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5942,
											"end": 5955,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5942,
											"end": 5955,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5942,
											"end": 5955,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5942,
											"end": 5955,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5942,
											"end": 5955,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5942,
											"end": 5955,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5942,
											"end": 5955,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5942,
											"end": 5955,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 5942,
											"end": 5961,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5956,
											"end": 5960,
											"name": "DUP12",
											"source": 1
										},
										{
											"begin": 5942,
											"end": 5961,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5942,
											"end": 5961,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5942,
											"end": 5961,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5942,
											"end": 5961,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5942,
											"end": 5961,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5942,
											"end": 5961,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5942,
											"end": 5961,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5942,
											"end": 5961,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5942,
											"end": 5961,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5942,
											"end": 5961,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5942,
											"end": 5961,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5942,
											"end": 5961,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5942,
											"end": 5961,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5942,
											"end": 5961,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5942,
											"end": 5961,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 5942,
											"end": 5983,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5942,
											"end": 5983,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5942,
											"end": 5983,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 5942,
											"end": 5983,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5620,
											"end": 6016,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5596,
											"end": 6016,
											"name": "tag",
											"source": 1,
											"value": "313"
										},
										{
											"begin": 5596,
											"end": 6016,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6048,
											"end": 6049,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6034,
											"end": 6050,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6034,
											"end": 6050,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6034,
											"end": 6036,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 6034,
											"end": 6050,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6034,
											"end": 6050,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6034,
											"end": 6050,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 6030,
											"end": 6111,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "317"
										},
										{
											"begin": 6030,
											"end": 6111,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6091,
											"end": 6096,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6070,
											"end": 6079,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6070,
											"end": 6083,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6080,
											"end": 6082,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6070,
											"end": 6083,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6070,
											"end": 6083,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6070,
											"end": 6083,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6070,
											"end": 6083,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6070,
											"end": 6083,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6070,
											"end": 6083,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6070,
											"end": 6083,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6070,
											"end": 6083,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6070,
											"end": 6083,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6070,
											"end": 6083,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6070,
											"end": 6083,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 6070,
											"end": 6087,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6084,
											"end": 6086,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 6070,
											"end": 6087,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6070,
											"end": 6087,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6070,
											"end": 6087,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6070,
											"end": 6087,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6070,
											"end": 6087,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6070,
											"end": 6087,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6070,
											"end": 6087,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6070,
											"end": 6087,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6070,
											"end": 6087,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6070,
											"end": 6087,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6070,
											"end": 6087,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6070,
											"end": 6087,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6070,
											"end": 6087,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6070,
											"end": 6087,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6070,
											"end": 6087,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 6070,
											"end": 6087,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6070,
											"end": 6096,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6070,
											"end": 6096,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6070,
											"end": 6096,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6070,
											"end": 6096,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "318"
										},
										{
											"begin": 6070,
											"end": 6096,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6070,
											"end": 6096,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6070,
											"end": 6096,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "291"
										},
										{
											"begin": 6070,
											"end": 6096,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6070,
											"end": 6096,
											"name": "tag",
											"source": 1,
											"value": "318"
										},
										{
											"begin": 6070,
											"end": 6096,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6070,
											"end": 6096,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6070,
											"end": 6096,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6070,
											"end": 6096,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6070,
											"end": 6096,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6070,
											"end": 6096,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6070,
											"end": 6096,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 6070,
											"end": 6096,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6030,
											"end": 6111,
											"name": "tag",
											"source": 1,
											"value": "317"
										},
										{
											"begin": 6030,
											"end": 6111,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5471,
											"end": 6121,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5471,
											"end": 6121,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5466,
											"end": 5469,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5466,
											"end": 5469,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "319"
										},
										{
											"begin": 5466,
											"end": 5469,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5466,
											"end": 5469,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "140"
										},
										{
											"begin": 5466,
											"end": 5469,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5466,
											"end": 5469,
											"name": "tag",
											"source": 1,
											"value": "319"
										},
										{
											"begin": 5466,
											"end": 5469,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5466,
											"end": 5469,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5466,
											"end": 5469,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5430,
											"end": 6121,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "308"
										},
										{
											"begin": 5430,
											"end": 6121,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5430,
											"end": 6121,
											"name": "tag",
											"source": 1,
											"value": "309"
										},
										{
											"begin": 5430,
											"end": 6121,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5430,
											"end": 6121,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6149,
											"end": 6150,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 6135,
											"end": 6138,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6135,
											"end": 6145,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6135,
											"end": 6150,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6131,
											"end": 6419,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "320"
										},
										{
											"begin": 6131,
											"end": 6419,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6166,
											"end": 6176,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6179,
											"end": 6204,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "321"
										},
										{
											"begin": 6202,
											"end": 6203,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6179,
											"end": 6182,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6179,
											"end": 6201,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "135"
										},
										{
											"begin": 6179,
											"end": 6201,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6179,
											"end": 6204,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6179,
											"end": 6204,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6179,
											"end": 6204,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6179,
											"end": 6204,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6179,
											"end": 6204,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6179,
											"end": 6204,
											"name": "tag",
											"source": 1,
											"value": "321"
										},
										{
											"begin": 6179,
											"end": 6204,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6166,
											"end": 6204,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6166,
											"end": 6204,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6218,
											"end": 6231,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6234,
											"end": 6262,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "322"
										},
										{
											"begin": 6260,
											"end": 6261,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6234,
											"end": 6240,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6234,
											"end": 6259,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "135"
										},
										{
											"begin": 6234,
											"end": 6259,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6234,
											"end": 6262,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6234,
											"end": 6262,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6234,
											"end": 6262,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6234,
											"end": 6262,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6234,
											"end": 6262,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6234,
											"end": 6262,
											"name": "tag",
											"source": 1,
											"value": "322"
										},
										{
											"begin": 6234,
											"end": 6262,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6218,
											"end": 6262,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6218,
											"end": 6262,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6312,
											"end": 6314,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6306,
											"end": 6310,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6296,
											"end": 6304,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "PUSH",
											"source": 1,
											"value": "C3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62"
										},
										{
											"begin": 6316,
											"end": 6318,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6320,
											"end": 6325,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "323"
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 6281,
											"end": 6326,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "tag",
											"source": 1,
											"value": "323"
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "LOG4",
											"source": 1
										},
										{
											"begin": 6152,
											"end": 6337,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6152,
											"end": 6337,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6131,
											"end": 6419,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "324"
										},
										{
											"begin": 6131,
											"end": 6419,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6131,
											"end": 6419,
											"name": "tag",
											"source": 1,
											"value": "320"
										},
										{
											"begin": 6131,
											"end": 6419,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6392,
											"end": 6394,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6386,
											"end": 6390,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6376,
											"end": 6384,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "PUSH",
											"source": 1,
											"value": "4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB"
										},
										{
											"begin": 6396,
											"end": 6399,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 6401,
											"end": 6407,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "325"
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "326"
										},
										{
											"begin": 6362,
											"end": 6408,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "tag",
											"source": 1,
											"value": "325"
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "LOG4",
											"source": 1
										},
										{
											"begin": 6131,
											"end": 6419,
											"name": "tag",
											"source": 1,
											"value": "324"
										},
										{
											"begin": 6131,
											"end": 6419,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5251,
											"end": 6425,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5144,
											"end": 6425,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5144,
											"end": 6425,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5144,
											"end": 6425,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5144,
											"end": 6425,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5144,
											"end": 6425,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 82,
											"name": "tag",
											"source": 14,
											"value": "327"
										},
										{
											"begin": 7,
											"end": 82,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 40,
											"end": 46,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 75,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 67,
											"end": 76,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 57,
											"end": 76,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 57,
											"end": 76,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7,
											"end": 82,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 7,
											"end": 82,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 14,
											"value": "328"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 211,
											"end": 328,
											"name": "tag",
											"source": 14,
											"value": "329"
										},
										{
											"begin": 211,
											"end": 328,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 334,
											"end": 460,
											"name": "tag",
											"source": 14,
											"value": "330"
										},
										{
											"begin": 334,
											"end": 460,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 453,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 404,
											"end": 409,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 400,
											"end": 454,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 389,
											"end": 454,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 389,
											"end": 454,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 334,
											"end": 460,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 334,
											"end": 460,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 466,
											"end": 562,
											"name": "tag",
											"source": 14,
											"value": "331"
										},
										{
											"begin": 466,
											"end": 562,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 503,
											"end": 510,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "387"
										},
										{
											"begin": 550,
											"end": 555,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "330"
										},
										{
											"begin": 532,
											"end": 556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 532,
											"end": 556,
											"name": "tag",
											"source": 14,
											"value": "387"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 521,
											"end": 556,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 521,
											"end": 556,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 466,
											"end": 562,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 466,
											"end": 562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 568,
											"end": 690,
											"name": "tag",
											"source": 14,
											"value": "332"
										},
										{
											"begin": 568,
											"end": 690,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "389"
										},
										{
											"begin": 659,
											"end": 664,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "331"
										},
										{
											"begin": 641,
											"end": 665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 641,
											"end": 665,
											"name": "tag",
											"source": 14,
											"value": "389"
										},
										{
											"begin": 641,
											"end": 665,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 634,
											"end": 639,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 631,
											"end": 666,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 621,
											"end": 684,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "390"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 680,
											"end": 681,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 677,
											"end": 678,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 670,
											"end": 682,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 621,
											"end": 684,
											"name": "tag",
											"source": 14,
											"value": "390"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 568,
											"end": 690,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 568,
											"end": 690,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 696,
											"end": 835,
											"name": "tag",
											"source": 14,
											"value": "333"
										},
										{
											"begin": 696,
											"end": 835,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 742,
											"end": 747,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 780,
											"end": 786,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 767,
											"end": 787,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 758,
											"end": 787,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 758,
											"end": 787,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "392"
										},
										{
											"begin": 823,
											"end": 828,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "332"
										},
										{
											"begin": 796,
											"end": 829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 796,
											"end": 829,
											"name": "tag",
											"source": 14,
											"value": "392"
										},
										{
											"begin": 796,
											"end": 829,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 696,
											"end": 835,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 841,
											"end": 918,
											"name": "tag",
											"source": 14,
											"value": "334"
										},
										{
											"begin": 841,
											"end": 918,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 878,
											"end": 885,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 907,
											"end": 912,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 896,
											"end": 912,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 896,
											"end": 912,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 841,
											"end": 918,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 841,
											"end": 918,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 841,
											"end": 918,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 841,
											"end": 918,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 924,
											"end": 1046,
											"name": "tag",
											"source": 14,
											"value": "335"
										},
										{
											"begin": 924,
											"end": 1046,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "395"
										},
										{
											"begin": 1015,
											"end": 1020,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "334"
										},
										{
											"begin": 997,
											"end": 1021,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "tag",
											"source": 14,
											"value": "395"
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 990,
											"end": 995,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 987,
											"end": 1022,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "396"
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 1036,
											"end": 1037,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1033,
											"end": 1034,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1026,
											"end": 1038,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "tag",
											"source": 14,
											"value": "396"
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 924,
											"end": 1046,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 924,
											"end": 1046,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "tag",
											"source": 14,
											"value": "336"
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1098,
											"end": 1103,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1123,
											"end": 1143,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 1114,
											"end": 1143,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1114,
											"end": 1143,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "398"
										},
										{
											"begin": 1179,
											"end": 1184,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "335"
										},
										{
											"begin": 1152,
											"end": 1185,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "tag",
											"source": 14,
											"value": "398"
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1052,
											"end": 1191,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "tag",
											"source": 14,
											"value": "23"
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1265,
											"end": 1271,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1322,
											"end": 1324,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 1310,
											"end": 1319,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 1301,
											"end": 1308,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 1297,
											"end": 1320,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 1293,
											"end": 1325,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 1290,
											"end": 1409,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 1290,
											"end": 1409,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "400"
										},
										{
											"begin": 1290,
											"end": 1409,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 1328,
											"end": 1407,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "401"
										},
										{
											"begin": 1328,
											"end": 1407,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "328"
										},
										{
											"begin": 1328,
											"end": 1407,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1328,
											"end": 1407,
											"name": "tag",
											"source": 14,
											"value": "401"
										},
										{
											"begin": 1328,
											"end": 1407,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1290,
											"end": 1409,
											"name": "tag",
											"source": 14,
											"value": "400"
										},
										{
											"begin": 1290,
											"end": 1409,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1448,
											"end": 1449,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1473,
											"end": 1526,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "402"
										},
										{
											"begin": 1518,
											"end": 1525,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 1509,
											"end": 1515,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 1498,
											"end": 1507,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 1494,
											"end": 1516,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1473,
											"end": 1526,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "333"
										},
										{
											"begin": 1473,
											"end": 1526,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1473,
											"end": 1526,
											"name": "tag",
											"source": 14,
											"value": "402"
										},
										{
											"begin": 1473,
											"end": 1526,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1463,
											"end": 1526,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 1463,
											"end": 1526,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1419,
											"end": 1536,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1575,
											"end": 1577,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 1601,
											"end": 1654,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "403"
										},
										{
											"begin": 1646,
											"end": 1653,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 1637,
											"end": 1643,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 1626,
											"end": 1635,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 1622,
											"end": 1644,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1601,
											"end": 1654,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "336"
										},
										{
											"begin": 1601,
											"end": 1654,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1601,
											"end": 1654,
											"name": "tag",
											"source": 14,
											"value": "403"
										},
										{
											"begin": 1601,
											"end": 1654,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1591,
											"end": 1654,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1591,
											"end": 1654,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1546,
											"end": 1664,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1197,
											"end": 1671,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1677,
											"end": 1795,
											"name": "tag",
											"source": 14,
											"value": "337"
										},
										{
											"begin": 1677,
											"end": 1795,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1764,
											"end": 1788,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "405"
										},
										{
											"begin": 1782,
											"end": 1787,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1764,
											"end": 1788,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "334"
										},
										{
											"begin": 1764,
											"end": 1788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1764,
											"end": 1788,
											"name": "tag",
											"source": 14,
											"value": "405"
										},
										{
											"begin": 1764,
											"end": 1788,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1759,
											"end": 1762,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 1752,
											"end": 1789,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 1677,
											"end": 1795,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1677,
											"end": 1795,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1677,
											"end": 1795,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1801,
											"end": 2023,
											"name": "tag",
											"source": 14,
											"value": "26"
										},
										{
											"begin": 1801,
											"end": 2023,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1894,
											"end": 1898,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1932,
											"end": 1934,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 1921,
											"end": 1930,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 1917,
											"end": 1935,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1909,
											"end": 1935,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1909,
											"end": 1935,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1945,
											"end": 2016,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "407"
										},
										{
											"begin": 2013,
											"end": 2014,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2002,
											"end": 2011,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 1998,
											"end": 2015,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1989,
											"end": 1995,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 1945,
											"end": 2016,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "337"
										},
										{
											"begin": 1945,
											"end": 2016,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1945,
											"end": 2016,
											"name": "tag",
											"source": 14,
											"value": "407"
										},
										{
											"begin": 1945,
											"end": 2016,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1801,
											"end": 2023,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 1801,
											"end": 2023,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1801,
											"end": 2023,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1801,
											"end": 2023,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1801,
											"end": 2023,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2029,
											"end": 2178,
											"name": "tag",
											"source": 14,
											"value": "338"
										},
										{
											"begin": 2029,
											"end": 2178,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2065,
											"end": 2072,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2105,
											"end": 2171,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2098,
											"end": 2103,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 2094,
											"end": 2172,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 2083,
											"end": 2172,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2083,
											"end": 2172,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2029,
											"end": 2178,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2029,
											"end": 2178,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2029,
											"end": 2178,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2029,
											"end": 2178,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2184,
											"end": 2304,
											"name": "tag",
											"source": 14,
											"value": "339"
										},
										{
											"begin": 2184,
											"end": 2304,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2256,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "410"
										},
										{
											"begin": 2273,
											"end": 2278,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2256,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "338"
										},
										{
											"begin": 2256,
											"end": 2279,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2256,
											"end": 2279,
											"name": "tag",
											"source": 14,
											"value": "410"
										},
										{
											"begin": 2256,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2249,
											"end": 2254,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2246,
											"end": 2280,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 2236,
											"end": 2298,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "411"
										},
										{
											"begin": 2236,
											"end": 2298,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 2294,
											"end": 2295,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2291,
											"end": 2292,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 2236,
											"end": 2298,
											"name": "tag",
											"source": 14,
											"value": "411"
										},
										{
											"begin": 2236,
											"end": 2298,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2184,
											"end": 2304,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2184,
											"end": 2304,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2310,
											"end": 2447,
											"name": "tag",
											"source": 14,
											"value": "340"
										},
										{
											"begin": 2310,
											"end": 2447,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2355,
											"end": 2360,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2393,
											"end": 2399,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2380,
											"end": 2400,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 2371,
											"end": 2400,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2371,
											"end": 2400,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2409,
											"end": 2441,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "413"
										},
										{
											"begin": 2435,
											"end": 2440,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2409,
											"end": 2441,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "339"
										},
										{
											"begin": 2409,
											"end": 2441,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2409,
											"end": 2441,
											"name": "tag",
											"source": 14,
											"value": "413"
										},
										{
											"begin": 2409,
											"end": 2441,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2310,
											"end": 2447,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 2310,
											"end": 2447,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2310,
											"end": 2447,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2310,
											"end": 2447,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2310,
											"end": 2447,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2453,
											"end": 2780,
											"name": "tag",
											"source": 14,
											"value": "29"
										},
										{
											"begin": 2453,
											"end": 2780,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2511,
											"end": 2517,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2560,
											"end": 2562,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 2548,
											"end": 2557,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 2539,
											"end": 2546,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 2535,
											"end": 2558,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 2531,
											"end": 2563,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 2528,
											"end": 2647,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 2528,
											"end": 2647,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "415"
										},
										{
											"begin": 2528,
											"end": 2647,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 2566,
											"end": 2645,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "416"
										},
										{
											"begin": 2566,
											"end": 2645,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "328"
										},
										{
											"begin": 2566,
											"end": 2645,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2566,
											"end": 2645,
											"name": "tag",
											"source": 14,
											"value": "416"
										},
										{
											"begin": 2566,
											"end": 2645,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2528,
											"end": 2647,
											"name": "tag",
											"source": 14,
											"value": "415"
										},
										{
											"begin": 2528,
											"end": 2647,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2686,
											"end": 2687,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2711,
											"end": 2763,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "417"
										},
										{
											"begin": 2755,
											"end": 2762,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 2746,
											"end": 2752,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 2735,
											"end": 2744,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 2731,
											"end": 2753,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2711,
											"end": 2763,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "340"
										},
										{
											"begin": 2711,
											"end": 2763,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2711,
											"end": 2763,
											"name": "tag",
											"source": 14,
											"value": "417"
										},
										{
											"begin": 2711,
											"end": 2763,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2701,
											"end": 2763,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2701,
											"end": 2763,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2657,
											"end": 2773,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2453,
											"end": 2780,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 2453,
											"end": 2780,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2453,
											"end": 2780,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2453,
											"end": 2780,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2453,
											"end": 2780,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2786,
											"end": 2876,
											"name": "tag",
											"source": 14,
											"value": "341"
										},
										{
											"begin": 2786,
											"end": 2876,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2820,
											"end": 2827,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2863,
											"end": 2868,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2856,
											"end": 2869,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 2849,
											"end": 2870,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 2838,
											"end": 2870,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2838,
											"end": 2870,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2786,
											"end": 2876,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2786,
											"end": 2876,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2786,
											"end": 2876,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2786,
											"end": 2876,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2882,
											"end": 2991,
											"name": "tag",
											"source": 14,
											"value": "342"
										},
										{
											"begin": 2882,
											"end": 2991,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2963,
											"end": 2984,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "420"
										},
										{
											"begin": 2978,
											"end": 2983,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2963,
											"end": 2984,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "341"
										},
										{
											"begin": 2963,
											"end": 2984,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2963,
											"end": 2984,
											"name": "tag",
											"source": 14,
											"value": "420"
										},
										{
											"begin": 2963,
											"end": 2984,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2958,
											"end": 2961,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 2951,
											"end": 2985,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 2882,
											"end": 2991,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2882,
											"end": 2991,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2882,
											"end": 2991,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2997,
											"end": 3207,
											"name": "tag",
											"source": 14,
											"value": "32"
										},
										{
											"begin": 2997,
											"end": 3207,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3084,
											"end": 3088,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3122,
											"end": 3124,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 3111,
											"end": 3120,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 3107,
											"end": 3125,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3099,
											"end": 3125,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3099,
											"end": 3125,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3135,
											"end": 3200,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "422"
										},
										{
											"begin": 3197,
											"end": 3198,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3186,
											"end": 3195,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 3182,
											"end": 3199,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3173,
											"end": 3179,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 3135,
											"end": 3200,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "342"
										},
										{
											"begin": 3135,
											"end": 3200,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3135,
											"end": 3200,
											"name": "tag",
											"source": 14,
											"value": "422"
										},
										{
											"begin": 3135,
											"end": 3200,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2997,
											"end": 3207,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 2997,
											"end": 3207,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2997,
											"end": 3207,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2997,
											"end": 3207,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2997,
											"end": 3207,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3213,
											"end": 3542,
											"name": "tag",
											"source": 14,
											"value": "35"
										},
										{
											"begin": 3213,
											"end": 3542,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3272,
											"end": 3278,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3321,
											"end": 3323,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 3309,
											"end": 3318,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 3300,
											"end": 3307,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 3296,
											"end": 3319,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 3292,
											"end": 3324,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 3289,
											"end": 3408,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 3289,
											"end": 3408,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "424"
										},
										{
											"begin": 3289,
											"end": 3408,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 3327,
											"end": 3406,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "425"
										},
										{
											"begin": 3327,
											"end": 3406,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "328"
										},
										{
											"begin": 3327,
											"end": 3406,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3327,
											"end": 3406,
											"name": "tag",
											"source": 14,
											"value": "425"
										},
										{
											"begin": 3327,
											"end": 3406,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3289,
											"end": 3408,
											"name": "tag",
											"source": 14,
											"value": "424"
										},
										{
											"begin": 3289,
											"end": 3408,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3447,
											"end": 3448,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3472,
											"end": 3525,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "426"
										},
										{
											"begin": 3517,
											"end": 3524,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 3508,
											"end": 3514,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 3497,
											"end": 3506,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 3493,
											"end": 3515,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3472,
											"end": 3525,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "336"
										},
										{
											"begin": 3472,
											"end": 3525,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3472,
											"end": 3525,
											"name": "tag",
											"source": 14,
											"value": "426"
										},
										{
											"begin": 3472,
											"end": 3525,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3462,
											"end": 3525,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 3462,
											"end": 3525,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3418,
											"end": 3535,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3213,
											"end": 3542,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 3213,
											"end": 3542,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 3213,
											"end": 3542,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3213,
											"end": 3542,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3213,
											"end": 3542,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3548,
											"end": 3647,
											"name": "tag",
											"source": 14,
											"value": "343"
										},
										{
											"begin": 3548,
											"end": 3647,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3600,
											"end": 3606,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3634,
											"end": 3639,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3628,
											"end": 3640,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 3618,
											"end": 3640,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3618,
											"end": 3640,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3548,
											"end": 3647,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 3548,
											"end": 3647,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3548,
											"end": 3647,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3548,
											"end": 3647,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3653,
											"end": 3822,
											"name": "tag",
											"source": 14,
											"value": "344"
										},
										{
											"begin": 3653,
											"end": 3822,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3737,
											"end": 3748,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3771,
											"end": 3777,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 3766,
											"end": 3769,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 3759,
											"end": 3778,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 3811,
											"end": 3815,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 3806,
											"end": 3809,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 3802,
											"end": 3816,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3787,
											"end": 3816,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3787,
											"end": 3816,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3653,
											"end": 3822,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 3653,
											"end": 3822,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 3653,
											"end": 3822,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3653,
											"end": 3822,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3653,
											"end": 3822,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3828,
											"end": 4074,
											"name": "tag",
											"source": 14,
											"value": "345"
										},
										{
											"begin": 3828,
											"end": 4074,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3909,
											"end": 3910,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3919,
											"end": 4032,
											"name": "tag",
											"source": 14,
											"value": "430"
										},
										{
											"begin": 3919,
											"end": 4032,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3933,
											"end": 3939,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 3930,
											"end": 3931,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3927,
											"end": 3940,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 3919,
											"end": 4032,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 3919,
											"end": 4032,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "432"
										},
										{
											"begin": 3919,
											"end": 4032,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 4018,
											"end": 4019,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 4013,
											"end": 4016,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4009,
											"end": 4020,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4003,
											"end": 4021,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 3999,
											"end": 4000,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3994,
											"end": 3997,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 3990,
											"end": 4001,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3983,
											"end": 4022,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 3955,
											"end": 3957,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 3952,
											"end": 3953,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3948,
											"end": 3958,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3943,
											"end": 3958,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3943,
											"end": 3958,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3919,
											"end": 4032,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "430"
										},
										{
											"begin": 3919,
											"end": 4032,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3919,
											"end": 4032,
											"name": "tag",
											"source": 14,
											"value": "432"
										},
										{
											"begin": 3919,
											"end": 4032,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4066,
											"end": 4067,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4057,
											"end": 4063,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 4052,
											"end": 4055,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 4048,
											"end": 4064,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4041,
											"end": 4068,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 3890,
											"end": 4074,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3828,
											"end": 4074,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3828,
											"end": 4074,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3828,
											"end": 4074,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3828,
											"end": 4074,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4080,
											"end": 4182,
											"name": "tag",
											"source": 14,
											"value": "346"
										},
										{
											"begin": 4080,
											"end": 4182,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4121,
											"end": 4127,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4172,
											"end": 4174,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 4168,
											"end": 4175,
											"name": "NOT",
											"source": 14
										},
										{
											"begin": 4163,
											"end": 4165,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 4156,
											"end": 4161,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 4152,
											"end": 4166,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4148,
											"end": 4176,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 4138,
											"end": 4176,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4138,
											"end": 4176,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4080,
											"end": 4182,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 4080,
											"end": 4182,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4080,
											"end": 4182,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4080,
											"end": 4182,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4188,
											"end": 4565,
											"name": "tag",
											"source": 14,
											"value": "347"
										},
										{
											"begin": 4188,
											"end": 4565,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4276,
											"end": 4279,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4304,
											"end": 4343,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "435"
										},
										{
											"begin": 4337,
											"end": 4342,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4304,
											"end": 4343,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "343"
										},
										{
											"begin": 4304,
											"end": 4343,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4304,
											"end": 4343,
											"name": "tag",
											"source": 14,
											"value": "435"
										},
										{
											"begin": 4304,
											"end": 4343,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4359,
											"end": 4430,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "436"
										},
										{
											"begin": 4423,
											"end": 4429,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4418,
											"end": 4421,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 4359,
											"end": 4430,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "344"
										},
										{
											"begin": 4359,
											"end": 4430,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4359,
											"end": 4430,
											"name": "tag",
											"source": 14,
											"value": "436"
										},
										{
											"begin": 4359,
											"end": 4430,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4352,
											"end": 4430,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 4352,
											"end": 4430,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4439,
											"end": 4504,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "437"
										},
										{
											"begin": 4497,
											"end": 4503,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4492,
											"end": 4495,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 4485,
											"end": 4489,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 4478,
											"end": 4483,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 4474,
											"end": 4490,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4439,
											"end": 4504,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "345"
										},
										{
											"begin": 4439,
											"end": 4504,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4439,
											"end": 4504,
											"name": "tag",
											"source": 14,
											"value": "437"
										},
										{
											"begin": 4439,
											"end": 4504,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4529,
											"end": 4558,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "438"
										},
										{
											"begin": 4551,
											"end": 4557,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4529,
											"end": 4558,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "346"
										},
										{
											"begin": 4529,
											"end": 4558,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4529,
											"end": 4558,
											"name": "tag",
											"source": 14,
											"value": "438"
										},
										{
											"begin": 4529,
											"end": 4558,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4524,
											"end": 4527,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 4520,
											"end": 4559,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4513,
											"end": 4559,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 4513,
											"end": 4559,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4280,
											"end": 4565,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4188,
											"end": 4565,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 4188,
											"end": 4565,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 4188,
											"end": 4565,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4188,
											"end": 4565,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4188,
											"end": 4565,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4571,
											"end": 4884,
											"name": "tag",
											"source": 14,
											"value": "38"
										},
										{
											"begin": 4571,
											"end": 4884,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4684,
											"end": 4688,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4722,
											"end": 4724,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 4711,
											"end": 4720,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4707,
											"end": 4725,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4699,
											"end": 4725,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4699,
											"end": 4725,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4771,
											"end": 4780,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4765,
											"end": 4769,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4761,
											"end": 4781,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 4757,
											"end": 4758,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4746,
											"end": 4755,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 4742,
											"end": 4759,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4735,
											"end": 4782,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 4799,
											"end": 4877,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "440"
										},
										{
											"begin": 4872,
											"end": 4876,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4863,
											"end": 4869,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 4799,
											"end": 4877,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "347"
										},
										{
											"begin": 4799,
											"end": 4877,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4799,
											"end": 4877,
											"name": "tag",
											"source": 14,
											"value": "440"
										},
										{
											"begin": 4799,
											"end": 4877,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4791,
											"end": 4877,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4791,
											"end": 4877,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4571,
											"end": 4884,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 4571,
											"end": 4884,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 4571,
											"end": 4884,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4571,
											"end": 4884,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4571,
											"end": 4884,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4890,
											"end": 5007,
											"name": "tag",
											"source": 14,
											"value": "348"
										},
										{
											"begin": 4890,
											"end": 5007,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4999,
											"end": 5000,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4996,
											"end": 4997,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 4989,
											"end": 5001,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 5013,
											"end": 5193,
											"name": "tag",
											"source": 14,
											"value": "126"
										},
										{
											"begin": 5013,
											"end": 5193,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5061,
											"end": 5138,
											"name": "PUSH",
											"source": 14,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5058,
											"end": 5059,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 5051,
											"end": 5139,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 5158,
											"end": 5162,
											"name": "PUSH",
											"source": 14,
											"value": "41"
										},
										{
											"begin": 5155,
											"end": 5156,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 5148,
											"end": 5163,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 5182,
											"end": 5186,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 5179,
											"end": 5180,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 5172,
											"end": 5187,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 5199,
											"end": 5480,
											"name": "tag",
											"source": 14,
											"value": "349"
										},
										{
											"begin": 5199,
											"end": 5480,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5282,
											"end": 5309,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "444"
										},
										{
											"begin": 5304,
											"end": 5308,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 5282,
											"end": 5309,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "346"
										},
										{
											"begin": 5282,
											"end": 5309,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5282,
											"end": 5309,
											"name": "tag",
											"source": 14,
											"value": "444"
										},
										{
											"begin": 5282,
											"end": 5309,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5274,
											"end": 5280,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 5270,
											"end": 5310,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 5412,
											"end": 5418,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 5400,
											"end": 5410,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 5397,
											"end": 5419,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 5376,
											"end": 5394,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5364,
											"end": 5374,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 5361,
											"end": 5395,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 5358,
											"end": 5420,
											"name": "OR",
											"source": 14
										},
										{
											"begin": 5355,
											"end": 5443,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 5355,
											"end": 5443,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "445"
										},
										{
											"begin": 5355,
											"end": 5443,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 5423,
											"end": 5441,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "446"
										},
										{
											"begin": 5423,
											"end": 5441,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "126"
										},
										{
											"begin": 5423,
											"end": 5441,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5423,
											"end": 5441,
											"name": "tag",
											"source": 14,
											"value": "446"
										},
										{
											"begin": 5423,
											"end": 5441,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5355,
											"end": 5443,
											"name": "tag",
											"source": 14,
											"value": "445"
										},
										{
											"begin": 5355,
											"end": 5443,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5463,
											"end": 5473,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 5459,
											"end": 5461,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 5452,
											"end": 5474,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 5242,
											"end": 5480,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5199,
											"end": 5480,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5199,
											"end": 5480,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5199,
											"end": 5480,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5486,
											"end": 5615,
											"name": "tag",
											"source": 14,
											"value": "350"
										},
										{
											"begin": 5486,
											"end": 5615,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5520,
											"end": 5526,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 5547,
											"end": 5567,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "448"
										},
										{
											"begin": 5547,
											"end": 5567,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "327"
										},
										{
											"begin": 5547,
											"end": 5567,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5547,
											"end": 5567,
											"name": "tag",
											"source": 14,
											"value": "448"
										},
										{
											"begin": 5547,
											"end": 5567,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5537,
											"end": 5567,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 5537,
											"end": 5567,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5576,
											"end": 5609,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "449"
										},
										{
											"begin": 5604,
											"end": 5608,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 5596,
											"end": 5602,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 5576,
											"end": 5609,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "349"
										},
										{
											"begin": 5576,
											"end": 5609,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5576,
											"end": 5609,
											"name": "tag",
											"source": 14,
											"value": "449"
										},
										{
											"begin": 5576,
											"end": 5609,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5486,
											"end": 5615,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 5486,
											"end": 5615,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 5486,
											"end": 5615,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5486,
											"end": 5615,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5621,
											"end": 5932,
											"name": "tag",
											"source": 14,
											"value": "351"
										},
										{
											"begin": 5621,
											"end": 5932,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5698,
											"end": 5702,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 5788,
											"end": 5806,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5780,
											"end": 5786,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 5777,
											"end": 5807,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 5774,
											"end": 5830,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 5774,
											"end": 5830,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "451"
										},
										{
											"begin": 5774,
											"end": 5830,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 5810,
											"end": 5828,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "452"
										},
										{
											"begin": 5810,
											"end": 5828,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "126"
										},
										{
											"begin": 5810,
											"end": 5828,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5810,
											"end": 5828,
											"name": "tag",
											"source": 14,
											"value": "452"
										},
										{
											"begin": 5810,
											"end": 5828,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5774,
											"end": 5830,
											"name": "tag",
											"source": 14,
											"value": "451"
										},
										{
											"begin": 5774,
											"end": 5830,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5860,
											"end": 5864,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 5852,
											"end": 5858,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 5848,
											"end": 5865,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 5840,
											"end": 5865,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 5840,
											"end": 5865,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5920,
											"end": 5924,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 5914,
											"end": 5918,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 5910,
											"end": 5925,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 5902,
											"end": 5925,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 5902,
											"end": 5925,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5621,
											"end": 5932,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 5621,
											"end": 5932,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 5621,
											"end": 5932,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5621,
											"end": 5932,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5938,
											"end": 6055,
											"name": "tag",
											"source": 14,
											"value": "352"
										},
										{
											"begin": 5938,
											"end": 6055,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6047,
											"end": 6048,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 6044,
											"end": 6045,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 6037,
											"end": 6049,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 6078,
											"end": 6788,
											"name": "tag",
											"source": 14,
											"value": "353"
										},
										{
											"begin": 6078,
											"end": 6788,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6174,
											"end": 6179,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 6199,
											"end": 6280,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "455"
										},
										{
											"begin": 6215,
											"end": 6279,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "456"
										},
										{
											"begin": 6272,
											"end": 6278,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 6215,
											"end": 6279,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "351"
										},
										{
											"begin": 6215,
											"end": 6279,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6215,
											"end": 6279,
											"name": "tag",
											"source": 14,
											"value": "456"
										},
										{
											"begin": 6215,
											"end": 6279,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6199,
											"end": 6280,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "350"
										},
										{
											"begin": 6199,
											"end": 6280,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6199,
											"end": 6280,
											"name": "tag",
											"source": 14,
											"value": "455"
										},
										{
											"begin": 6199,
											"end": 6280,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6190,
											"end": 6280,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 6190,
											"end": 6280,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6300,
											"end": 6305,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 6329,
											"end": 6335,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 6322,
											"end": 6327,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 6315,
											"end": 6336,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 6363,
											"end": 6367,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 6356,
											"end": 6361,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 6352,
											"end": 6368,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 6345,
											"end": 6368,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 6345,
											"end": 6368,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6416,
											"end": 6420,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 6408,
											"end": 6414,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 6404,
											"end": 6421,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 6396,
											"end": 6402,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 6392,
											"end": 6422,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 6445,
											"end": 6448,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 6437,
											"end": 6443,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 6434,
											"end": 6449,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 6431,
											"end": 6553,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 6431,
											"end": 6553,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "457"
										},
										{
											"begin": 6431,
											"end": 6553,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 6464,
											"end": 6543,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "458"
										},
										{
											"begin": 6464,
											"end": 6543,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "352"
										},
										{
											"begin": 6464,
											"end": 6543,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6464,
											"end": 6543,
											"name": "tag",
											"source": 14,
											"value": "458"
										},
										{
											"begin": 6464,
											"end": 6543,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6431,
											"end": 6553,
											"name": "tag",
											"source": 14,
											"value": "457"
										},
										{
											"begin": 6431,
											"end": 6553,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6579,
											"end": 6585,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 6562,
											"end": 6782,
											"name": "tag",
											"source": 14,
											"value": "459"
										},
										{
											"begin": 6562,
											"end": 6782,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6596,
											"end": 6602,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 6591,
											"end": 6594,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 6588,
											"end": 6603,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 6562,
											"end": 6782,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 6562,
											"end": 6782,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "461"
										},
										{
											"begin": 6562,
											"end": 6782,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 6671,
											"end": 6674,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 6700,
											"end": 6737,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "462"
										},
										{
											"begin": 6733,
											"end": 6736,
											"name": "DUP9",
											"source": 14
										},
										{
											"begin": 6721,
											"end": 6731,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 6700,
											"end": 6737,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "336"
										},
										{
											"begin": 6700,
											"end": 6737,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6700,
											"end": 6737,
											"name": "tag",
											"source": 14,
											"value": "462"
										},
										{
											"begin": 6700,
											"end": 6737,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6695,
											"end": 6698,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 6688,
											"end": 6738,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 6767,
											"end": 6771,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 6762,
											"end": 6765,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 6758,
											"end": 6772,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 6751,
											"end": 6772,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 6751,
											"end": 6772,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6638,
											"end": 6782,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6622,
											"end": 6626,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 6617,
											"end": 6620,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 6613,
											"end": 6627,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 6606,
											"end": 6627,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 6606,
											"end": 6627,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6562,
											"end": 6782,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "459"
										},
										{
											"begin": 6562,
											"end": 6782,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6562,
											"end": 6782,
											"name": "tag",
											"source": 14,
											"value": "461"
										},
										{
											"begin": 6562,
											"end": 6782,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6566,
											"end": 6587,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6180,
											"end": 6788,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6180,
											"end": 6788,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6078,
											"end": 6788,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 6078,
											"end": 6788,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 6078,
											"end": 6788,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6078,
											"end": 6788,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6078,
											"end": 6788,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6078,
											"end": 6788,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6811,
											"end": 7181,
											"name": "tag",
											"source": 14,
											"value": "354"
										},
										{
											"begin": 6811,
											"end": 7181,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6882,
											"end": 6887,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 6931,
											"end": 6934,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 6924,
											"end": 6928,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 6916,
											"end": 6922,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 6912,
											"end": 6929,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 6908,
											"end": 6935,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 6898,
											"end": 7020,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "464"
										},
										{
											"begin": 6898,
											"end": 7020,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 6939,
											"end": 7018,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "465"
										},
										{
											"begin": 6939,
											"end": 7018,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "348"
										},
										{
											"begin": 6939,
											"end": 7018,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6939,
											"end": 7018,
											"name": "tag",
											"source": 14,
											"value": "465"
										},
										{
											"begin": 6939,
											"end": 7018,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6898,
											"end": 7020,
											"name": "tag",
											"source": 14,
											"value": "464"
										},
										{
											"begin": 6898,
											"end": 7020,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7056,
											"end": 7062,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 7043,
											"end": 7063,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 7081,
											"end": 7175,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "466"
										},
										{
											"begin": 7171,
											"end": 7174,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 7163,
											"end": 7169,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 7156,
											"end": 7160,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 7148,
											"end": 7154,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 7144,
											"end": 7161,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 7081,
											"end": 7175,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "353"
										},
										{
											"begin": 7081,
											"end": 7175,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 7081,
											"end": 7175,
											"name": "tag",
											"source": 14,
											"value": "466"
										},
										{
											"begin": 7081,
											"end": 7175,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7072,
											"end": 7175,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 7072,
											"end": 7175,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6888,
											"end": 7181,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6811,
											"end": 7181,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 6811,
											"end": 7181,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 6811,
											"end": 7181,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6811,
											"end": 7181,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6811,
											"end": 7181,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 7187,
											"end": 7304,
											"name": "tag",
											"source": 14,
											"value": "355"
										},
										{
											"begin": 7187,
											"end": 7304,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7296,
											"end": 7297,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 7293,
											"end": 7294,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 7286,
											"end": 7298,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 7310,
											"end": 7617,
											"name": "tag",
											"source": 14,
											"value": "356"
										},
										{
											"begin": 7310,
											"end": 7617,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7371,
											"end": 7375,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 7461,
											"end": 7479,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7453,
											"end": 7459,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 7450,
											"end": 7480,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 7447,
											"end": 7503,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 7447,
											"end": 7503,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "469"
										},
										{
											"begin": 7447,
											"end": 7503,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 7483,
											"end": 7501,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "470"
										},
										{
											"begin": 7483,
											"end": 7501,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "126"
										},
										{
											"begin": 7483,
											"end": 7501,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 7483,
											"end": 7501,
											"name": "tag",
											"source": 14,
											"value": "470"
										},
										{
											"begin": 7483,
											"end": 7501,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7447,
											"end": 7503,
											"name": "tag",
											"source": 14,
											"value": "469"
										},
										{
											"begin": 7447,
											"end": 7503,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7521,
											"end": 7550,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "471"
										},
										{
											"begin": 7543,
											"end": 7549,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 7521,
											"end": 7550,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "346"
										},
										{
											"begin": 7521,
											"end": 7550,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 7521,
											"end": 7550,
											"name": "tag",
											"source": 14,
											"value": "471"
										},
										{
											"begin": 7521,
											"end": 7550,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7513,
											"end": 7550,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 7513,
											"end": 7550,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7605,
											"end": 7609,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 7599,
											"end": 7603,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 7595,
											"end": 7610,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 7587,
											"end": 7610,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 7587,
											"end": 7610,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7310,
											"end": 7617,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 7310,
											"end": 7617,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 7310,
											"end": 7617,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7310,
											"end": 7617,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 7623,
											"end": 7769,
											"name": "tag",
											"source": 14,
											"value": "357"
										},
										{
											"begin": 7623,
											"end": 7769,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7720,
											"end": 7726,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 7715,
											"end": 7718,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 7710,
											"end": 7713,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 7697,
											"end": 7727,
											"name": "CALLDATACOPY",
											"source": 14
										},
										{
											"begin": 7761,
											"end": 7762,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 7752,
											"end": 7758,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 7747,
											"end": 7750,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 7743,
											"end": 7759,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 7736,
											"end": 7763,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 7623,
											"end": 7769,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7623,
											"end": 7769,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7623,
											"end": 7769,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7623,
											"end": 7769,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 7775,
											"end": 8198,
											"name": "tag",
											"source": 14,
											"value": "358"
										},
										{
											"begin": 7775,
											"end": 8198,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7852,
											"end": 7857,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 7877,
											"end": 7942,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "474"
										},
										{
											"begin": 7893,
											"end": 7941,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "475"
										},
										{
											"begin": 7934,
											"end": 7940,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 7893,
											"end": 7941,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "356"
										},
										{
											"begin": 7893,
											"end": 7941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 7893,
											"end": 7941,
											"name": "tag",
											"source": 14,
											"value": "475"
										},
										{
											"begin": 7893,
											"end": 7941,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7877,
											"end": 7942,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "350"
										},
										{
											"begin": 7877,
											"end": 7942,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 7877,
											"end": 7942,
											"name": "tag",
											"source": 14,
											"value": "474"
										},
										{
											"begin": 7877,
											"end": 7942,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7868,
											"end": 7942,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 7868,
											"end": 7942,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7965,
											"end": 7971,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 7958,
											"end": 7963,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 7951,
											"end": 7972,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 8003,
											"end": 8007,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 7996,
											"end": 8001,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 7992,
											"end": 8008,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 8041,
											"end": 8044,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 8032,
											"end": 8038,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 8027,
											"end": 8030,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 8023,
											"end": 8039,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 8020,
											"end": 8045,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 8017,
											"end": 8129,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 8017,
											"end": 8129,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "476"
										},
										{
											"begin": 8017,
											"end": 8129,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 8048,
											"end": 8127,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "477"
										},
										{
											"begin": 8048,
											"end": 8127,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "355"
										},
										{
											"begin": 8048,
											"end": 8127,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 8048,
											"end": 8127,
											"name": "tag",
											"source": 14,
											"value": "477"
										},
										{
											"begin": 8048,
											"end": 8127,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8017,
											"end": 8129,
											"name": "tag",
											"source": 14,
											"value": "476"
										},
										{
											"begin": 8017,
											"end": 8129,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8138,
											"end": 8192,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "478"
										},
										{
											"begin": 8185,
											"end": 8191,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 8180,
											"end": 8183,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 8175,
											"end": 8178,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 8138,
											"end": 8192,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "357"
										},
										{
											"begin": 8138,
											"end": 8192,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 8138,
											"end": 8192,
											"name": "tag",
											"source": 14,
											"value": "478"
										},
										{
											"begin": 8138,
											"end": 8192,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7858,
											"end": 8198,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7775,
											"end": 8198,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 7775,
											"end": 8198,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 7775,
											"end": 8198,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7775,
											"end": 8198,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7775,
											"end": 8198,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7775,
											"end": 8198,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 8217,
											"end": 8555,
											"name": "tag",
											"source": 14,
											"value": "359"
										},
										{
											"begin": 8217,
											"end": 8555,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8272,
											"end": 8277,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 8321,
											"end": 8324,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 8314,
											"end": 8318,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 8306,
											"end": 8312,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 8302,
											"end": 8319,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 8298,
											"end": 8325,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 8288,
											"end": 8410,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "480"
										},
										{
											"begin": 8288,
											"end": 8410,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 8329,
											"end": 8408,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "481"
										},
										{
											"begin": 8329,
											"end": 8408,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "348"
										},
										{
											"begin": 8329,
											"end": 8408,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 8329,
											"end": 8408,
											"name": "tag",
											"source": 14,
											"value": "481"
										},
										{
											"begin": 8329,
											"end": 8408,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8288,
											"end": 8410,
											"name": "tag",
											"source": 14,
											"value": "480"
										},
										{
											"begin": 8288,
											"end": 8410,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8446,
											"end": 8452,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 8433,
											"end": 8453,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 8471,
											"end": 8549,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "482"
										},
										{
											"begin": 8545,
											"end": 8548,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 8537,
											"end": 8543,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 8530,
											"end": 8534,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 8522,
											"end": 8528,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 8518,
											"end": 8535,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 8471,
											"end": 8549,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "358"
										},
										{
											"begin": 8471,
											"end": 8549,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 8471,
											"end": 8549,
											"name": "tag",
											"source": 14,
											"value": "482"
										},
										{
											"begin": 8471,
											"end": 8549,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8462,
											"end": 8549,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 8462,
											"end": 8549,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8278,
											"end": 8555,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8217,
											"end": 8555,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 8217,
											"end": 8555,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 8217,
											"end": 8555,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8217,
											"end": 8555,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8217,
											"end": 8555,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 8561,
											"end": 9924,
											"name": "tag",
											"source": 14,
											"value": "44"
										},
										{
											"begin": 8561,
											"end": 9924,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8706,
											"end": 8712,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 8714,
											"end": 8720,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 8722,
											"end": 8728,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 8730,
											"end": 8736,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 8779,
											"end": 8782,
											"name": "PUSH",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 8767,
											"end": 8776,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 8758,
											"end": 8765,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 8754,
											"end": 8777,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 8750,
											"end": 8783,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 8747,
											"end": 8867,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 8747,
											"end": 8867,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "484"
										},
										{
											"begin": 8747,
											"end": 8867,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 8786,
											"end": 8865,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "485"
										},
										{
											"begin": 8786,
											"end": 8865,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "328"
										},
										{
											"begin": 8786,
											"end": 8865,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 8786,
											"end": 8865,
											"name": "tag",
											"source": 14,
											"value": "485"
										},
										{
											"begin": 8786,
											"end": 8865,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8747,
											"end": 8867,
											"name": "tag",
											"source": 14,
											"value": "484"
										},
										{
											"begin": 8747,
											"end": 8867,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8906,
											"end": 8907,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 8931,
											"end": 8984,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "486"
										},
										{
											"begin": 8976,
											"end": 8983,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 8967,
											"end": 8973,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 8956,
											"end": 8965,
											"name": "DUP9",
											"source": 14
										},
										{
											"begin": 8952,
											"end": 8974,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 8931,
											"end": 8984,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "333"
										},
										{
											"begin": 8931,
											"end": 8984,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 8931,
											"end": 8984,
											"name": "tag",
											"source": 14,
											"value": "486"
										},
										{
											"begin": 8931,
											"end": 8984,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8921,
											"end": 8984,
											"name": "SWAP5",
											"source": 14
										},
										{
											"begin": 8921,
											"end": 8984,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8877,
											"end": 8994,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 9061,
											"end": 9063,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 9050,
											"end": 9059,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 9046,
											"end": 9064,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 9033,
											"end": 9065,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 9092,
											"end": 9110,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9084,
											"end": 9090,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 9081,
											"end": 9111,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 9078,
											"end": 9195,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 9078,
											"end": 9195,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "487"
										},
										{
											"begin": 9078,
											"end": 9195,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 9114,
											"end": 9193,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "488"
										},
										{
											"begin": 9114,
											"end": 9193,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "329"
										},
										{
											"begin": 9114,
											"end": 9193,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 9114,
											"end": 9193,
											"name": "tag",
											"source": 14,
											"value": "488"
										},
										{
											"begin": 9114,
											"end": 9193,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9078,
											"end": 9195,
											"name": "tag",
											"source": 14,
											"value": "487"
										},
										{
											"begin": 9078,
											"end": 9195,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9219,
											"end": 9297,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "489"
										},
										{
											"begin": 9289,
											"end": 9296,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 9280,
											"end": 9286,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 9269,
											"end": 9278,
											"name": "DUP9",
											"source": 14
										},
										{
											"begin": 9265,
											"end": 9287,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 9219,
											"end": 9297,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "354"
										},
										{
											"begin": 9219,
											"end": 9297,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 9219,
											"end": 9297,
											"name": "tag",
											"source": 14,
											"value": "489"
										},
										{
											"begin": 9219,
											"end": 9297,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9209,
											"end": 9297,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 9209,
											"end": 9297,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 9004,
											"end": 9307,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 9374,
											"end": 9376,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 9363,
											"end": 9372,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 9359,
											"end": 9377,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 9346,
											"end": 9378,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 9405,
											"end": 9423,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9397,
											"end": 9403,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 9394,
											"end": 9424,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 9391,
											"end": 9508,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 9391,
											"end": 9508,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "490"
										},
										{
											"begin": 9391,
											"end": 9508,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 9427,
											"end": 9506,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "491"
										},
										{
											"begin": 9427,
											"end": 9506,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "329"
										},
										{
											"begin": 9427,
											"end": 9506,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 9427,
											"end": 9506,
											"name": "tag",
											"source": 14,
											"value": "491"
										},
										{
											"begin": 9427,
											"end": 9506,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9391,
											"end": 9508,
											"name": "tag",
											"source": 14,
											"value": "490"
										},
										{
											"begin": 9391,
											"end": 9508,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9532,
											"end": 9610,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "492"
										},
										{
											"begin": 9602,
											"end": 9609,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 9593,
											"end": 9599,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 9582,
											"end": 9591,
											"name": "DUP9",
											"source": 14
										},
										{
											"begin": 9578,
											"end": 9600,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 9532,
											"end": 9610,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "354"
										},
										{
											"begin": 9532,
											"end": 9610,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 9532,
											"end": 9610,
											"name": "tag",
											"source": 14,
											"value": "492"
										},
										{
											"begin": 9532,
											"end": 9610,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9522,
											"end": 9610,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 9522,
											"end": 9610,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 9317,
											"end": 9620,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 9687,
											"end": 9689,
											"name": "PUSH",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 9676,
											"end": 9685,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 9672,
											"end": 9690,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 9659,
											"end": 9691,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 9718,
											"end": 9736,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9710,
											"end": 9716,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 9707,
											"end": 9737,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 9704,
											"end": 9821,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 9704,
											"end": 9821,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "493"
										},
										{
											"begin": 9704,
											"end": 9821,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 9740,
											"end": 9819,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "494"
										},
										{
											"begin": 9740,
											"end": 9819,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "329"
										},
										{
											"begin": 9740,
											"end": 9819,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 9740,
											"end": 9819,
											"name": "tag",
											"source": 14,
											"value": "494"
										},
										{
											"begin": 9740,
											"end": 9819,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9704,
											"end": 9821,
											"name": "tag",
											"source": 14,
											"value": "493"
										},
										{
											"begin": 9704,
											"end": 9821,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9845,
											"end": 9907,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "495"
										},
										{
											"begin": 9899,
											"end": 9906,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 9890,
											"end": 9896,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 9879,
											"end": 9888,
											"name": "DUP9",
											"source": 14
										},
										{
											"begin": 9875,
											"end": 9897,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 9845,
											"end": 9907,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "359"
										},
										{
											"begin": 9845,
											"end": 9907,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 9845,
											"end": 9907,
											"name": "tag",
											"source": 14,
											"value": "495"
										},
										{
											"begin": 9845,
											"end": 9907,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9835,
											"end": 9907,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 9835,
											"end": 9907,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 9630,
											"end": 9917,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8561,
											"end": 9924,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 8561,
											"end": 9924,
											"name": "SWAP6",
											"source": 14
										},
										{
											"begin": 8561,
											"end": 9924,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 8561,
											"end": 9924,
											"name": "SWAP5",
											"source": 14
										},
										{
											"begin": 8561,
											"end": 9924,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8561,
											"end": 9924,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 8561,
											"end": 9924,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8561,
											"end": 9924,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 9930,
											"end": 11439,
											"name": "tag",
											"source": 14,
											"value": "48"
										},
										{
											"begin": 9930,
											"end": 11439,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10084,
											"end": 10090,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 10092,
											"end": 10098,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 10100,
											"end": 10106,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 10108,
											"end": 10114,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 10116,
											"end": 10122,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 10165,
											"end": 10168,
											"name": "PUSH",
											"source": 14,
											"value": "A0"
										},
										{
											"begin": 10153,
											"end": 10162,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 10144,
											"end": 10151,
											"name": "DUP9",
											"source": 14
										},
										{
											"begin": 10140,
											"end": 10163,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 10136,
											"end": 10169,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 10133,
											"end": 10253,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 10133,
											"end": 10253,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "497"
										},
										{
											"begin": 10133,
											"end": 10253,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 10172,
											"end": 10251,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "498"
										},
										{
											"begin": 10172,
											"end": 10251,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "328"
										},
										{
											"begin": 10172,
											"end": 10251,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 10172,
											"end": 10251,
											"name": "tag",
											"source": 14,
											"value": "498"
										},
										{
											"begin": 10172,
											"end": 10251,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10133,
											"end": 10253,
											"name": "tag",
											"source": 14,
											"value": "497"
										},
										{
											"begin": 10133,
											"end": 10253,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10292,
											"end": 10293,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 10317,
											"end": 10370,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "499"
										},
										{
											"begin": 10362,
											"end": 10369,
											"name": "DUP9",
											"source": 14
										},
										{
											"begin": 10353,
											"end": 10359,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 10342,
											"end": 10351,
											"name": "DUP10",
											"source": 14
										},
										{
											"begin": 10338,
											"end": 10360,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 10317,
											"end": 10370,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "333"
										},
										{
											"begin": 10317,
											"end": 10370,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 10317,
											"end": 10370,
											"name": "tag",
											"source": 14,
											"value": "499"
										},
										{
											"begin": 10317,
											"end": 10370,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10307,
											"end": 10370,
											"name": "SWAP6",
											"source": 14
										},
										{
											"begin": 10307,
											"end": 10370,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10263,
											"end": 10380,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10419,
											"end": 10421,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 10445,
											"end": 10498,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "500"
										},
										{
											"begin": 10490,
											"end": 10497,
											"name": "DUP9",
											"source": 14
										},
										{
											"begin": 10481,
											"end": 10487,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 10470,
											"end": 10479,
											"name": "DUP10",
											"source": 14
										},
										{
											"begin": 10466,
											"end": 10488,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 10445,
											"end": 10498,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "333"
										},
										{
											"begin": 10445,
											"end": 10498,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 10445,
											"end": 10498,
											"name": "tag",
											"source": 14,
											"value": "500"
										},
										{
											"begin": 10445,
											"end": 10498,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10435,
											"end": 10498,
											"name": "SWAP5",
											"source": 14
										},
										{
											"begin": 10435,
											"end": 10498,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10390,
											"end": 10508,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10575,
											"end": 10577,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 10564,
											"end": 10573,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 10560,
											"end": 10578,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 10547,
											"end": 10579,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 10606,
											"end": 10624,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10598,
											"end": 10604,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 10595,
											"end": 10625,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 10592,
											"end": 10709,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 10592,
											"end": 10709,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "501"
										},
										{
											"begin": 10592,
											"end": 10709,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 10628,
											"end": 10707,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "502"
										},
										{
											"begin": 10628,
											"end": 10707,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "329"
										},
										{
											"begin": 10628,
											"end": 10707,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 10628,
											"end": 10707,
											"name": "tag",
											"source": 14,
											"value": "502"
										},
										{
											"begin": 10628,
											"end": 10707,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10592,
											"end": 10709,
											"name": "tag",
											"source": 14,
											"value": "501"
										},
										{
											"begin": 10592,
											"end": 10709,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10733,
											"end": 10811,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "503"
										},
										{
											"begin": 10803,
											"end": 10810,
											"name": "DUP9",
											"source": 14
										},
										{
											"begin": 10794,
											"end": 10800,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 10783,
											"end": 10792,
											"name": "DUP10",
											"source": 14
										},
										{
											"begin": 10779,
											"end": 10801,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 10733,
											"end": 10811,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "354"
										},
										{
											"begin": 10733,
											"end": 10811,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 10733,
											"end": 10811,
											"name": "tag",
											"source": 14,
											"value": "503"
										},
										{
											"begin": 10733,
											"end": 10811,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10723,
											"end": 10811,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 10723,
											"end": 10811,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10518,
											"end": 10821,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10888,
											"end": 10890,
											"name": "PUSH",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 10877,
											"end": 10886,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 10873,
											"end": 10891,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 10860,
											"end": 10892,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 10919,
											"end": 10937,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10911,
											"end": 10917,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 10908,
											"end": 10938,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 10905,
											"end": 11022,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 10905,
											"end": 11022,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "504"
										},
										{
											"begin": 10905,
											"end": 11022,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 10941,
											"end": 11020,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "505"
										},
										{
											"begin": 10941,
											"end": 11020,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "329"
										},
										{
											"begin": 10941,
											"end": 11020,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 10941,
											"end": 11020,
											"name": "tag",
											"source": 14,
											"value": "505"
										},
										{
											"begin": 10941,
											"end": 11020,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10905,
											"end": 11022,
											"name": "tag",
											"source": 14,
											"value": "504"
										},
										{
											"begin": 10905,
											"end": 11022,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11046,
											"end": 11124,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "506"
										},
										{
											"begin": 11116,
											"end": 11123,
											"name": "DUP9",
											"source": 14
										},
										{
											"begin": 11107,
											"end": 11113,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 11096,
											"end": 11105,
											"name": "DUP10",
											"source": 14
										},
										{
											"begin": 11092,
											"end": 11114,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 11046,
											"end": 11124,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "354"
										},
										{
											"begin": 11046,
											"end": 11124,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 11046,
											"end": 11124,
											"name": "tag",
											"source": 14,
											"value": "506"
										},
										{
											"begin": 11046,
											"end": 11124,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11036,
											"end": 11124,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 11036,
											"end": 11124,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10831,
											"end": 11134,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11201,
											"end": 11204,
											"name": "PUSH",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 11190,
											"end": 11199,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 11186,
											"end": 11205,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 11173,
											"end": 11206,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 11233,
											"end": 11251,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11225,
											"end": 11231,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 11222,
											"end": 11252,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 11219,
											"end": 11336,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 11219,
											"end": 11336,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "507"
										},
										{
											"begin": 11219,
											"end": 11336,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 11255,
											"end": 11334,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "508"
										},
										{
											"begin": 11255,
											"end": 11334,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "329"
										},
										{
											"begin": 11255,
											"end": 11334,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 11255,
											"end": 11334,
											"name": "tag",
											"source": 14,
											"value": "508"
										},
										{
											"begin": 11255,
											"end": 11334,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11219,
											"end": 11336,
											"name": "tag",
											"source": 14,
											"value": "507"
										},
										{
											"begin": 11219,
											"end": 11336,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11360,
											"end": 11422,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "509"
										},
										{
											"begin": 11414,
											"end": 11421,
											"name": "DUP9",
											"source": 14
										},
										{
											"begin": 11405,
											"end": 11411,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 11394,
											"end": 11403,
											"name": "DUP10",
											"source": 14
										},
										{
											"begin": 11390,
											"end": 11412,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 11360,
											"end": 11422,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "359"
										},
										{
											"begin": 11360,
											"end": 11422,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 11360,
											"end": 11422,
											"name": "tag",
											"source": 14,
											"value": "509"
										},
										{
											"begin": 11360,
											"end": 11422,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11350,
											"end": 11422,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 11350,
											"end": 11422,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11144,
											"end": 11432,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 9930,
											"end": 11439,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 9930,
											"end": 11439,
											"name": "SWAP6",
											"source": 14
										},
										{
											"begin": 9930,
											"end": 11439,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 9930,
											"end": 11439,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 9930,
											"end": 11439,
											"name": "SWAP6",
											"source": 14
										},
										{
											"begin": 9930,
											"end": 11439,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 9930,
											"end": 11439,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 9930,
											"end": 11439,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 9930,
											"end": 11439,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 11445,
											"end": 11756,
											"name": "tag",
											"source": 14,
											"value": "360"
										},
										{
											"begin": 11445,
											"end": 11756,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11522,
											"end": 11526,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 11612,
											"end": 11630,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11604,
											"end": 11610,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 11601,
											"end": 11631,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 11598,
											"end": 11654,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 11598,
											"end": 11654,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "511"
										},
										{
											"begin": 11598,
											"end": 11654,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 11634,
											"end": 11652,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "512"
										},
										{
											"begin": 11634,
											"end": 11652,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "126"
										},
										{
											"begin": 11634,
											"end": 11652,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 11634,
											"end": 11652,
											"name": "tag",
											"source": 14,
											"value": "512"
										},
										{
											"begin": 11634,
											"end": 11652,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11598,
											"end": 11654,
											"name": "tag",
											"source": 14,
											"value": "511"
										},
										{
											"begin": 11598,
											"end": 11654,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11684,
											"end": 11688,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 11676,
											"end": 11682,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 11672,
											"end": 11689,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 11664,
											"end": 11689,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 11664,
											"end": 11689,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11744,
											"end": 11748,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 11738,
											"end": 11742,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 11734,
											"end": 11749,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 11726,
											"end": 11749,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 11726,
											"end": 11749,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11445,
											"end": 11756,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 11445,
											"end": 11756,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 11445,
											"end": 11756,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11445,
											"end": 11756,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 11779,
											"end": 12489,
											"name": "tag",
											"source": 14,
											"value": "361"
										},
										{
											"begin": 11779,
											"end": 12489,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11875,
											"end": 11880,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 11900,
											"end": 11981,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "514"
										},
										{
											"begin": 11916,
											"end": 11980,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "515"
										},
										{
											"begin": 11973,
											"end": 11979,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 11916,
											"end": 11980,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "360"
										},
										{
											"begin": 11916,
											"end": 11980,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 11916,
											"end": 11980,
											"name": "tag",
											"source": 14,
											"value": "515"
										},
										{
											"begin": 11916,
											"end": 11980,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11900,
											"end": 11981,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "350"
										},
										{
											"begin": 11900,
											"end": 11981,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 11900,
											"end": 11981,
											"name": "tag",
											"source": 14,
											"value": "514"
										},
										{
											"begin": 11900,
											"end": 11981,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11891,
											"end": 11981,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 11891,
											"end": 11981,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12001,
											"end": 12006,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 12030,
											"end": 12036,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 12023,
											"end": 12028,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 12016,
											"end": 12037,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 12064,
											"end": 12068,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 12057,
											"end": 12062,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 12053,
											"end": 12069,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 12046,
											"end": 12069,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 12046,
											"end": 12069,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12117,
											"end": 12121,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 12109,
											"end": 12115,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 12105,
											"end": 12122,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 12097,
											"end": 12103,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 12093,
											"end": 12123,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 12146,
											"end": 12149,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 12138,
											"end": 12144,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 12135,
											"end": 12150,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 12132,
											"end": 12254,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 12132,
											"end": 12254,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "516"
										},
										{
											"begin": 12132,
											"end": 12254,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 12165,
											"end": 12244,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "517"
										},
										{
											"begin": 12165,
											"end": 12244,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "352"
										},
										{
											"begin": 12165,
											"end": 12244,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 12165,
											"end": 12244,
											"name": "tag",
											"source": 14,
											"value": "517"
										},
										{
											"begin": 12165,
											"end": 12244,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12132,
											"end": 12254,
											"name": "tag",
											"source": 14,
											"value": "516"
										},
										{
											"begin": 12132,
											"end": 12254,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12280,
											"end": 12286,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 12263,
											"end": 12483,
											"name": "tag",
											"source": 14,
											"value": "518"
										},
										{
											"begin": 12263,
											"end": 12483,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12297,
											"end": 12303,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 12292,
											"end": 12295,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 12289,
											"end": 12304,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 12263,
											"end": 12483,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 12263,
											"end": 12483,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "520"
										},
										{
											"begin": 12263,
											"end": 12483,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 12372,
											"end": 12375,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 12401,
											"end": 12438,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "521"
										},
										{
											"begin": 12434,
											"end": 12437,
											"name": "DUP9",
											"source": 14
										},
										{
											"begin": 12422,
											"end": 12432,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 12401,
											"end": 12438,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "333"
										},
										{
											"begin": 12401,
											"end": 12438,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 12401,
											"end": 12438,
											"name": "tag",
											"source": 14,
											"value": "521"
										},
										{
											"begin": 12401,
											"end": 12438,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12396,
											"end": 12399,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 12389,
											"end": 12439,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 12468,
											"end": 12472,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 12463,
											"end": 12466,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 12459,
											"end": 12473,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 12452,
											"end": 12473,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 12452,
											"end": 12473,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12339,
											"end": 12483,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12323,
											"end": 12327,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 12318,
											"end": 12321,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 12314,
											"end": 12328,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 12307,
											"end": 12328,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 12307,
											"end": 12328,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12263,
											"end": 12483,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "518"
										},
										{
											"begin": 12263,
											"end": 12483,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 12263,
											"end": 12483,
											"name": "tag",
											"source": 14,
											"value": "520"
										},
										{
											"begin": 12263,
											"end": 12483,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12267,
											"end": 12288,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11881,
											"end": 12489,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11881,
											"end": 12489,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11779,
											"end": 12489,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 11779,
											"end": 12489,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 11779,
											"end": 12489,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11779,
											"end": 12489,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11779,
											"end": 12489,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11779,
											"end": 12489,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 12512,
											"end": 12882,
											"name": "tag",
											"source": 14,
											"value": "362"
										},
										{
											"begin": 12512,
											"end": 12882,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12583,
											"end": 12588,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 12632,
											"end": 12635,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 12625,
											"end": 12629,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 12617,
											"end": 12623,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 12613,
											"end": 12630,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 12609,
											"end": 12636,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 12599,
											"end": 12721,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "523"
										},
										{
											"begin": 12599,
											"end": 12721,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 12640,
											"end": 12719,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "524"
										},
										{
											"begin": 12640,
											"end": 12719,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "348"
										},
										{
											"begin": 12640,
											"end": 12719,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 12640,
											"end": 12719,
											"name": "tag",
											"source": 14,
											"value": "524"
										},
										{
											"begin": 12640,
											"end": 12719,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12599,
											"end": 12721,
											"name": "tag",
											"source": 14,
											"value": "523"
										},
										{
											"begin": 12599,
											"end": 12721,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12757,
											"end": 12763,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 12744,
											"end": 12764,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 12782,
											"end": 12876,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "525"
										},
										{
											"begin": 12872,
											"end": 12875,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 12864,
											"end": 12870,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 12857,
											"end": 12861,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 12849,
											"end": 12855,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 12845,
											"end": 12862,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 12782,
											"end": 12876,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "361"
										},
										{
											"begin": 12782,
											"end": 12876,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 12782,
											"end": 12876,
											"name": "tag",
											"source": 14,
											"value": "525"
										},
										{
											"begin": 12782,
											"end": 12876,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12773,
											"end": 12876,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 12773,
											"end": 12876,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12589,
											"end": 12882,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12512,
											"end": 12882,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 12512,
											"end": 12882,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 12512,
											"end": 12882,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12512,
											"end": 12882,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12512,
											"end": 12882,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 12888,
											"end": 13782,
											"name": "tag",
											"source": 14,
											"value": "52"
										},
										{
											"begin": 12888,
											"end": 13782,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13006,
											"end": 13012,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 13014,
											"end": 13020,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 13063,
											"end": 13065,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 13051,
											"end": 13060,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 13042,
											"end": 13049,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 13038,
											"end": 13061,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 13034,
											"end": 13066,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 13031,
											"end": 13150,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 13031,
											"end": 13150,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "527"
										},
										{
											"begin": 13031,
											"end": 13150,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 13069,
											"end": 13148,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "528"
										},
										{
											"begin": 13069,
											"end": 13148,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "328"
										},
										{
											"begin": 13069,
											"end": 13148,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 13069,
											"end": 13148,
											"name": "tag",
											"source": 14,
											"value": "528"
										},
										{
											"begin": 13069,
											"end": 13148,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13031,
											"end": 13150,
											"name": "tag",
											"source": 14,
											"value": "527"
										},
										{
											"begin": 13031,
											"end": 13150,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13217,
											"end": 13218,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 13206,
											"end": 13215,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 13202,
											"end": 13219,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 13189,
											"end": 13220,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 13247,
											"end": 13265,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13239,
											"end": 13245,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 13236,
											"end": 13266,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 13233,
											"end": 13350,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 13233,
											"end": 13350,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "529"
										},
										{
											"begin": 13233,
											"end": 13350,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 13269,
											"end": 13348,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "530"
										},
										{
											"begin": 13269,
											"end": 13348,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "329"
										},
										{
											"begin": 13269,
											"end": 13348,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 13269,
											"end": 13348,
											"name": "tag",
											"source": 14,
											"value": "530"
										},
										{
											"begin": 13269,
											"end": 13348,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13233,
											"end": 13350,
											"name": "tag",
											"source": 14,
											"value": "529"
										},
										{
											"begin": 13233,
											"end": 13350,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13374,
											"end": 13452,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "531"
										},
										{
											"begin": 13444,
											"end": 13451,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 13435,
											"end": 13441,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 13424,
											"end": 13433,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 13420,
											"end": 13442,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 13374,
											"end": 13452,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "362"
										},
										{
											"begin": 13374,
											"end": 13452,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 13374,
											"end": 13452,
											"name": "tag",
											"source": 14,
											"value": "531"
										},
										{
											"begin": 13374,
											"end": 13452,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13364,
											"end": 13452,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 13364,
											"end": 13452,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 13160,
											"end": 13462,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 13529,
											"end": 13531,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 13518,
											"end": 13527,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 13514,
											"end": 13532,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 13501,
											"end": 13533,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 13560,
											"end": 13578,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13552,
											"end": 13558,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 13549,
											"end": 13579,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 13546,
											"end": 13663,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 13546,
											"end": 13663,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "532"
										},
										{
											"begin": 13546,
											"end": 13663,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 13582,
											"end": 13661,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "533"
										},
										{
											"begin": 13582,
											"end": 13661,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "329"
										},
										{
											"begin": 13582,
											"end": 13661,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 13582,
											"end": 13661,
											"name": "tag",
											"source": 14,
											"value": "533"
										},
										{
											"begin": 13582,
											"end": 13661,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13546,
											"end": 13663,
											"name": "tag",
											"source": 14,
											"value": "532"
										},
										{
											"begin": 13546,
											"end": 13663,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13687,
											"end": 13765,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "534"
										},
										{
											"begin": 13757,
											"end": 13764,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 13748,
											"end": 13754,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 13737,
											"end": 13746,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 13733,
											"end": 13755,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 13687,
											"end": 13765,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "354"
										},
										{
											"begin": 13687,
											"end": 13765,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 13687,
											"end": 13765,
											"name": "tag",
											"source": 14,
											"value": "534"
										},
										{
											"begin": 13687,
											"end": 13765,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13677,
											"end": 13765,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 13677,
											"end": 13765,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 13472,
											"end": 13775,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12888,
											"end": 13782,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 12888,
											"end": 13782,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12888,
											"end": 13782,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 12888,
											"end": 13782,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 12888,
											"end": 13782,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12888,
											"end": 13782,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 13788,
											"end": 13902,
											"name": "tag",
											"source": 14,
											"value": "363"
										},
										{
											"begin": 13788,
											"end": 13902,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13855,
											"end": 13861,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 13889,
											"end": 13894,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 13883,
											"end": 13895,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 13873,
											"end": 13895,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 13873,
											"end": 13895,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 13788,
											"end": 13902,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 13788,
											"end": 13902,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 13788,
											"end": 13902,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 13788,
											"end": 13902,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 13908,
											"end": 14092,
											"name": "tag",
											"source": 14,
											"value": "364"
										},
										{
											"begin": 13908,
											"end": 14092,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 14007,
											"end": 14018,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 14041,
											"end": 14047,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 14036,
											"end": 14039,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 14029,
											"end": 14048,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 14081,
											"end": 14085,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 14076,
											"end": 14079,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 14072,
											"end": 14086,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 14057,
											"end": 14086,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 14057,
											"end": 14086,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 13908,
											"end": 14092,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 13908,
											"end": 14092,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 13908,
											"end": 14092,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 13908,
											"end": 14092,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 13908,
											"end": 14092,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 14098,
											"end": 14230,
											"name": "tag",
											"source": 14,
											"value": "365"
										},
										{
											"begin": 14098,
											"end": 14230,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 14165,
											"end": 14169,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 14188,
											"end": 14191,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 14180,
											"end": 14191,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 14180,
											"end": 14191,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14218,
											"end": 14222,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 14213,
											"end": 14216,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 14209,
											"end": 14223,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 14201,
											"end": 14223,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 14201,
											"end": 14223,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14098,
											"end": 14230,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 14098,
											"end": 14230,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 14098,
											"end": 14230,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14098,
											"end": 14230,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 14236,
											"end": 14344,
											"name": "tag",
											"source": 14,
											"value": "366"
										},
										{
											"begin": 14236,
											"end": 14344,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 14313,
											"end": 14337,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "539"
										},
										{
											"begin": 14331,
											"end": 14336,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 14313,
											"end": 14337,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "334"
										},
										{
											"begin": 14313,
											"end": 14337,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 14313,
											"end": 14337,
											"name": "tag",
											"source": 14,
											"value": "539"
										},
										{
											"begin": 14313,
											"end": 14337,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 14308,
											"end": 14311,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 14301,
											"end": 14338,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 14236,
											"end": 14344,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14236,
											"end": 14344,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14236,
											"end": 14344,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 14350,
											"end": 14529,
											"name": "tag",
											"source": 14,
											"value": "367"
										},
										{
											"begin": 14350,
											"end": 14529,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 14419,
											"end": 14429,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 14440,
											"end": 14486,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "541"
										},
										{
											"begin": 14482,
											"end": 14485,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 14474,
											"end": 14480,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 14440,
											"end": 14486,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "366"
										},
										{
											"begin": 14440,
											"end": 14486,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 14440,
											"end": 14486,
											"name": "tag",
											"source": 14,
											"value": "541"
										},
										{
											"begin": 14440,
											"end": 14486,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 14518,
											"end": 14522,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 14513,
											"end": 14516,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 14509,
											"end": 14523,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 14495,
											"end": 14523,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 14495,
											"end": 14523,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14350,
											"end": 14529,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 14350,
											"end": 14529,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 14350,
											"end": 14529,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14350,
											"end": 14529,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14350,
											"end": 14529,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 14535,
											"end": 14648,
											"name": "tag",
											"source": 14,
											"value": "368"
										},
										{
											"begin": 14535,
											"end": 14648,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 14605,
											"end": 14609,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 14637,
											"end": 14641,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 14632,
											"end": 14635,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 14628,
											"end": 14642,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 14620,
											"end": 14642,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 14620,
											"end": 14642,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14535,
											"end": 14648,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 14535,
											"end": 14648,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 14535,
											"end": 14648,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14535,
											"end": 14648,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 14684,
											"end": 15416,
											"name": "tag",
											"source": 14,
											"value": "369"
										},
										{
											"begin": 14684,
											"end": 15416,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 14803,
											"end": 14806,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 14832,
											"end": 14886,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "544"
										},
										{
											"begin": 14880,
											"end": 14885,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 14832,
											"end": 14886,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "363"
										},
										{
											"begin": 14832,
											"end": 14886,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 14832,
											"end": 14886,
											"name": "tag",
											"source": 14,
											"value": "544"
										},
										{
											"begin": 14832,
											"end": 14886,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 14902,
											"end": 14988,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "545"
										},
										{
											"begin": 14981,
											"end": 14987,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 14976,
											"end": 14979,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 14902,
											"end": 14988,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "364"
										},
										{
											"begin": 14902,
											"end": 14988,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 14902,
											"end": 14988,
											"name": "tag",
											"source": 14,
											"value": "545"
										},
										{
											"begin": 14902,
											"end": 14988,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 14895,
											"end": 14988,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 14895,
											"end": 14988,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 15012,
											"end": 15068,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "546"
										},
										{
											"begin": 15062,
											"end": 15067,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 15012,
											"end": 15068,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "365"
										},
										{
											"begin": 15012,
											"end": 15068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 15012,
											"end": 15068,
											"name": "tag",
											"source": 14,
											"value": "546"
										},
										{
											"begin": 15012,
											"end": 15068,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 15091,
											"end": 15098,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 15122,
											"end": 15123,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 15107,
											"end": 15391,
											"name": "tag",
											"source": 14,
											"value": "547"
										},
										{
											"begin": 15107,
											"end": 15391,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 15132,
											"end": 15138,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 15129,
											"end": 15130,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 15126,
											"end": 15139,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 15107,
											"end": 15391,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 15107,
											"end": 15391,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "549"
										},
										{
											"begin": 15107,
											"end": 15391,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 15208,
											"end": 15214,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 15202,
											"end": 15215,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 15235,
											"end": 15298,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "550"
										},
										{
											"begin": 15294,
											"end": 15297,
											"name": "DUP9",
											"source": 14
										},
										{
											"begin": 15279,
											"end": 15292,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 15235,
											"end": 15298,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "367"
										},
										{
											"begin": 15235,
											"end": 15298,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 15235,
											"end": 15298,
											"name": "tag",
											"source": 14,
											"value": "550"
										},
										{
											"begin": 15235,
											"end": 15298,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 15228,
											"end": 15298,
											"name": "SWAP8",
											"source": 14
										},
										{
											"begin": 15228,
											"end": 15298,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 15321,
											"end": 15381,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "551"
										},
										{
											"begin": 15374,
											"end": 15380,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 15321,
											"end": 15381,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "368"
										},
										{
											"begin": 15321,
											"end": 15381,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 15321,
											"end": 15381,
											"name": "tag",
											"source": 14,
											"value": "551"
										},
										{
											"begin": 15321,
											"end": 15381,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 15311,
											"end": 15381,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 15311,
											"end": 15381,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 15167,
											"end": 15391,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 15154,
											"end": 15155,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 15151,
											"end": 15152,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 15147,
											"end": 15156,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 15142,
											"end": 15156,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 15142,
											"end": 15156,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 15107,
											"end": 15391,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "547"
										},
										{
											"begin": 15107,
											"end": 15391,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 15107,
											"end": 15391,
											"name": "tag",
											"source": 14,
											"value": "549"
										},
										{
											"begin": 15107,
											"end": 15391,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 15111,
											"end": 15125,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 15407,
											"end": 15410,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 15400,
											"end": 15410,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 15400,
											"end": 15410,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14808,
											"end": 15416,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14808,
											"end": 15416,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14808,
											"end": 15416,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14684,
											"end": 15416,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 14684,
											"end": 15416,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 14684,
											"end": 15416,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14684,
											"end": 15416,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14684,
											"end": 15416,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 15422,
											"end": 15795,
											"name": "tag",
											"source": 14,
											"value": "55"
										},
										{
											"begin": 15422,
											"end": 15795,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 15565,
											"end": 15569,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 15603,
											"end": 15605,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 15592,
											"end": 15601,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 15588,
											"end": 15606,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 15580,
											"end": 15606,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 15580,
											"end": 15606,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 15652,
											"end": 15661,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 15646,
											"end": 15650,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 15642,
											"end": 15662,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 15638,
											"end": 15639,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 15627,
											"end": 15636,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 15623,
											"end": 15640,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 15616,
											"end": 15663,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 15680,
											"end": 15788,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "553"
										},
										{
											"begin": 15783,
											"end": 15787,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 15774,
											"end": 15780,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 15680,
											"end": 15788,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "369"
										},
										{
											"begin": 15680,
											"end": 15788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 15680,
											"end": 15788,
											"name": "tag",
											"source": 14,
											"value": "553"
										},
										{
											"begin": 15680,
											"end": 15788,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 15672,
											"end": 15788,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 15672,
											"end": 15788,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 15422,
											"end": 15795,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 15422,
											"end": 15795,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 15422,
											"end": 15795,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 15422,
											"end": 15795,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 15422,
											"end": 15795,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 15801,
											"end": 16840,
											"name": "tag",
											"source": 14,
											"value": "62"
										},
										{
											"begin": 15801,
											"end": 16840,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 15928,
											"end": 15934,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 15936,
											"end": 15942,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 15944,
											"end": 15950,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 15993,
											"end": 15995,
											"name": "PUSH",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 15981,
											"end": 15990,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 15972,
											"end": 15979,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 15968,
											"end": 15991,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 15964,
											"end": 15996,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 15961,
											"end": 16080,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 15961,
											"end": 16080,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "555"
										},
										{
											"begin": 15961,
											"end": 16080,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 15999,
											"end": 16078,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "556"
										},
										{
											"begin": 15999,
											"end": 16078,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "328"
										},
										{
											"begin": 15999,
											"end": 16078,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 15999,
											"end": 16078,
											"name": "tag",
											"source": 14,
											"value": "556"
										},
										{
											"begin": 15999,
											"end": 16078,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 15961,
											"end": 16080,
											"name": "tag",
											"source": 14,
											"value": "555"
										},
										{
											"begin": 15961,
											"end": 16080,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 16119,
											"end": 16120,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 16144,
											"end": 16197,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "557"
										},
										{
											"begin": 16189,
											"end": 16196,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 16180,
											"end": 16186,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 16169,
											"end": 16178,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 16165,
											"end": 16187,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 16144,
											"end": 16197,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "333"
										},
										{
											"begin": 16144,
											"end": 16197,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 16144,
											"end": 16197,
											"name": "tag",
											"source": 14,
											"value": "557"
										},
										{
											"begin": 16144,
											"end": 16197,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 16134,
											"end": 16197,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 16134,
											"end": 16197,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 16090,
											"end": 16207,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 16274,
											"end": 16276,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 16263,
											"end": 16272,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 16259,
											"end": 16277,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 16246,
											"end": 16278,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 16305,
											"end": 16323,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16297,
											"end": 16303,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 16294,
											"end": 16324,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 16291,
											"end": 16408,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 16291,
											"end": 16408,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "558"
										},
										{
											"begin": 16291,
											"end": 16408,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 16327,
											"end": 16406,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "559"
										},
										{
											"begin": 16327,
											"end": 16406,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "329"
										},
										{
											"begin": 16327,
											"end": 16406,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 16327,
											"end": 16406,
											"name": "tag",
											"source": 14,
											"value": "559"
										},
										{
											"begin": 16327,
											"end": 16406,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 16291,
											"end": 16408,
											"name": "tag",
											"source": 14,
											"value": "558"
										},
										{
											"begin": 16291,
											"end": 16408,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 16432,
											"end": 16510,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "560"
										},
										{
											"begin": 16502,
											"end": 16509,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 16493,
											"end": 16499,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 16482,
											"end": 16491,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 16478,
											"end": 16500,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 16432,
											"end": 16510,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "354"
										},
										{
											"begin": 16432,
											"end": 16510,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 16432,
											"end": 16510,
											"name": "tag",
											"source": 14,
											"value": "560"
										},
										{
											"begin": 16432,
											"end": 16510,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 16422,
											"end": 16510,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 16422,
											"end": 16510,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 16217,
											"end": 16520,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 16587,
											"end": 16589,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 16576,
											"end": 16585,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 16572,
											"end": 16590,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 16559,
											"end": 16591,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 16618,
											"end": 16636,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16610,
											"end": 16616,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 16607,
											"end": 16637,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 16604,
											"end": 16721,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 16604,
											"end": 16721,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "561"
										},
										{
											"begin": 16604,
											"end": 16721,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 16640,
											"end": 16719,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "562"
										},
										{
											"begin": 16640,
											"end": 16719,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "329"
										},
										{
											"begin": 16640,
											"end": 16719,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 16640,
											"end": 16719,
											"name": "tag",
											"source": 14,
											"value": "562"
										},
										{
											"begin": 16640,
											"end": 16719,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 16604,
											"end": 16721,
											"name": "tag",
											"source": 14,
											"value": "561"
										},
										{
											"begin": 16604,
											"end": 16721,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 16745,
											"end": 16823,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "563"
										},
										{
											"begin": 16815,
											"end": 16822,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 16806,
											"end": 16812,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 16795,
											"end": 16804,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 16791,
											"end": 16813,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 16745,
											"end": 16823,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "354"
										},
										{
											"begin": 16745,
											"end": 16823,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 16745,
											"end": 16823,
											"name": "tag",
											"source": 14,
											"value": "563"
										},
										{
											"begin": 16745,
											"end": 16823,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 16735,
											"end": 16823,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 16735,
											"end": 16823,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 16530,
											"end": 16833,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 15801,
											"end": 16840,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 15801,
											"end": 16840,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 15801,
											"end": 16840,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 15801,
											"end": 16840,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 15801,
											"end": 16840,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 15801,
											"end": 16840,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 16846,
											"end": 17789,
											"name": "tag",
											"source": 14,
											"value": "66"
										},
										{
											"begin": 16846,
											"end": 17789,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 16941,
											"end": 16947,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 16949,
											"end": 16955,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 16957,
											"end": 16963,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 16965,
											"end": 16971,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 17014,
											"end": 17017,
											"name": "PUSH",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 17002,
											"end": 17011,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 16993,
											"end": 17000,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 16989,
											"end": 17012,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 16985,
											"end": 17018,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 16982,
											"end": 17102,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 16982,
											"end": 17102,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "565"
										},
										{
											"begin": 16982,
											"end": 17102,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 17021,
											"end": 17100,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "566"
										},
										{
											"begin": 17021,
											"end": 17100,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "328"
										},
										{
											"begin": 17021,
											"end": 17100,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 17021,
											"end": 17100,
											"name": "tag",
											"source": 14,
											"value": "566"
										},
										{
											"begin": 17021,
											"end": 17100,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 16982,
											"end": 17102,
											"name": "tag",
											"source": 14,
											"value": "565"
										},
										{
											"begin": 16982,
											"end": 17102,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 17141,
											"end": 17142,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 17166,
											"end": 17219,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "567"
										},
										{
											"begin": 17211,
											"end": 17218,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 17202,
											"end": 17208,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 17191,
											"end": 17200,
											"name": "DUP9",
											"source": 14
										},
										{
											"begin": 17187,
											"end": 17209,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 17166,
											"end": 17219,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "333"
										},
										{
											"begin": 17166,
											"end": 17219,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 17166,
											"end": 17219,
											"name": "tag",
											"source": 14,
											"value": "567"
										},
										{
											"begin": 17166,
											"end": 17219,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 17156,
											"end": 17219,
											"name": "SWAP5",
											"source": 14
										},
										{
											"begin": 17156,
											"end": 17219,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 17112,
											"end": 17229,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 17268,
											"end": 17270,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 17294,
											"end": 17347,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "568"
										},
										{
											"begin": 17339,
											"end": 17346,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 17330,
											"end": 17336,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 17319,
											"end": 17328,
											"name": "DUP9",
											"source": 14
										},
										{
											"begin": 17315,
											"end": 17337,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 17294,
											"end": 17347,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "336"
										},
										{
											"begin": 17294,
											"end": 17347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 17294,
											"end": 17347,
											"name": "tag",
											"source": 14,
											"value": "568"
										},
										{
											"begin": 17294,
											"end": 17347,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 17284,
											"end": 17347,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 17284,
											"end": 17347,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 17239,
											"end": 17357,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 17396,
											"end": 17398,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 17422,
											"end": 17475,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "569"
										},
										{
											"begin": 17467,
											"end": 17474,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 17458,
											"end": 17464,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 17447,
											"end": 17456,
											"name": "DUP9",
											"source": 14
										},
										{
											"begin": 17443,
											"end": 17465,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 17422,
											"end": 17475,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "336"
										},
										{
											"begin": 17422,
											"end": 17475,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 17422,
											"end": 17475,
											"name": "tag",
											"source": 14,
											"value": "569"
										},
										{
											"begin": 17422,
											"end": 17475,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 17412,
											"end": 17475,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 17412,
											"end": 17475,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 17367,
											"end": 17485,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 17552,
											"end": 17554,
											"name": "PUSH",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 17541,
											"end": 17550,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 17537,
											"end": 17555,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 17524,
											"end": 17556,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 17583,
											"end": 17601,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17575,
											"end": 17581,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 17572,
											"end": 17602,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 17569,
											"end": 17686,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 17569,
											"end": 17686,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "570"
										},
										{
											"begin": 17569,
											"end": 17686,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 17605,
											"end": 17684,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "571"
										},
										{
											"begin": 17605,
											"end": 17684,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "329"
										},
										{
											"begin": 17605,
											"end": 17684,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 17605,
											"end": 17684,
											"name": "tag",
											"source": 14,
											"value": "571"
										},
										{
											"begin": 17605,
											"end": 17684,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 17569,
											"end": 17686,
											"name": "tag",
											"source": 14,
											"value": "570"
										},
										{
											"begin": 17569,
											"end": 17686,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 17710,
											"end": 17772,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "572"
										},
										{
											"begin": 17764,
											"end": 17771,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 17755,
											"end": 17761,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 17744,
											"end": 17753,
											"name": "DUP9",
											"source": 14
										},
										{
											"begin": 17740,
											"end": 17762,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 17710,
											"end": 17772,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "359"
										},
										{
											"begin": 17710,
											"end": 17772,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 17710,
											"end": 17772,
											"name": "tag",
											"source": 14,
											"value": "572"
										},
										{
											"begin": 17710,
											"end": 17772,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 17700,
											"end": 17772,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 17700,
											"end": 17772,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 17495,
											"end": 17782,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 16846,
											"end": 17789,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 16846,
											"end": 17789,
											"name": "SWAP6",
											"source": 14
										},
										{
											"begin": 16846,
											"end": 17789,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 16846,
											"end": 17789,
											"name": "SWAP5",
											"source": 14
										},
										{
											"begin": 16846,
											"end": 17789,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 16846,
											"end": 17789,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 16846,
											"end": 17789,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 16846,
											"end": 17789,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 17795,
											"end": 17911,
											"name": "tag",
											"source": 14,
											"value": "370"
										},
										{
											"begin": 17795,
											"end": 17911,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 17865,
											"end": 17886,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "574"
										},
										{
											"begin": 17880,
											"end": 17885,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 17865,
											"end": 17886,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "341"
										},
										{
											"begin": 17865,
											"end": 17886,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 17865,
											"end": 17886,
											"name": "tag",
											"source": 14,
											"value": "574"
										},
										{
											"begin": 17865,
											"end": 17886,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 17858,
											"end": 17863,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 17855,
											"end": 17887,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 17845,
											"end": 17905,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "575"
										},
										{
											"begin": 17845,
											"end": 17905,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 17901,
											"end": 17902,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 17898,
											"end": 17899,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 17891,
											"end": 17903,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 17845,
											"end": 17905,
											"name": "tag",
											"source": 14,
											"value": "575"
										},
										{
											"begin": 17845,
											"end": 17905,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 17795,
											"end": 17911,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 17795,
											"end": 17911,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 17917,
											"end": 18050,
											"name": "tag",
											"source": 14,
											"value": "371"
										},
										{
											"begin": 17917,
											"end": 18050,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 17960,
											"end": 17965,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 17998,
											"end": 18004,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 17985,
											"end": 18005,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 17976,
											"end": 18005,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 17976,
											"end": 18005,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 18014,
											"end": 18044,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "577"
										},
										{
											"begin": 18038,
											"end": 18043,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 18014,
											"end": 18044,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "370"
										},
										{
											"begin": 18014,
											"end": 18044,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 18014,
											"end": 18044,
											"name": "tag",
											"source": 14,
											"value": "577"
										},
										{
											"begin": 18014,
											"end": 18044,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 17917,
											"end": 18050,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 17917,
											"end": 18050,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 17917,
											"end": 18050,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 17917,
											"end": 18050,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 17917,
											"end": 18050,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 18056,
											"end": 18524,
											"name": "tag",
											"source": 14,
											"value": "70"
										},
										{
											"begin": 18056,
											"end": 18524,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 18121,
											"end": 18127,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 18129,
											"end": 18135,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 18178,
											"end": 18180,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 18166,
											"end": 18175,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 18157,
											"end": 18164,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 18153,
											"end": 18176,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 18149,
											"end": 18181,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 18146,
											"end": 18265,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 18146,
											"end": 18265,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "579"
										},
										{
											"begin": 18146,
											"end": 18265,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 18184,
											"end": 18263,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "580"
										},
										{
											"begin": 18184,
											"end": 18263,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "328"
										},
										{
											"begin": 18184,
											"end": 18263,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 18184,
											"end": 18263,
											"name": "tag",
											"source": 14,
											"value": "580"
										},
										{
											"begin": 18184,
											"end": 18263,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 18146,
											"end": 18265,
											"name": "tag",
											"source": 14,
											"value": "579"
										},
										{
											"begin": 18146,
											"end": 18265,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 18304,
											"end": 18305,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 18329,
											"end": 18382,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "581"
										},
										{
											"begin": 18374,
											"end": 18381,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 18365,
											"end": 18371,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 18354,
											"end": 18363,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 18350,
											"end": 18372,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 18329,
											"end": 18382,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "333"
										},
										{
											"begin": 18329,
											"end": 18382,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 18329,
											"end": 18382,
											"name": "tag",
											"source": 14,
											"value": "581"
										},
										{
											"begin": 18329,
											"end": 18382,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 18319,
											"end": 18382,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 18319,
											"end": 18382,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 18275,
											"end": 18392,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 18431,
											"end": 18433,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 18457,
											"end": 18507,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "582"
										},
										{
											"begin": 18499,
											"end": 18506,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 18490,
											"end": 18496,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 18479,
											"end": 18488,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 18475,
											"end": 18497,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 18457,
											"end": 18507,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "371"
										},
										{
											"begin": 18457,
											"end": 18507,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 18457,
											"end": 18507,
											"name": "tag",
											"source": 14,
											"value": "582"
										},
										{
											"begin": 18457,
											"end": 18507,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 18447,
											"end": 18507,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 18447,
											"end": 18507,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 18402,
											"end": 18517,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 18056,
											"end": 18524,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 18056,
											"end": 18524,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 18056,
											"end": 18524,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 18056,
											"end": 18524,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 18056,
											"end": 18524,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 18056,
											"end": 18524,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 18530,
											"end": 19004,
											"name": "tag",
											"source": 14,
											"value": "78"
										},
										{
											"begin": 18530,
											"end": 19004,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 18598,
											"end": 18604,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 18606,
											"end": 18612,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 18655,
											"end": 18657,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 18643,
											"end": 18652,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 18634,
											"end": 18641,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 18630,
											"end": 18653,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 18626,
											"end": 18658,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 18623,
											"end": 18742,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 18623,
											"end": 18742,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "584"
										},
										{
											"begin": 18623,
											"end": 18742,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 18661,
											"end": 18740,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "585"
										},
										{
											"begin": 18661,
											"end": 18740,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "328"
										},
										{
											"begin": 18661,
											"end": 18740,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 18661,
											"end": 18740,
											"name": "tag",
											"source": 14,
											"value": "585"
										},
										{
											"begin": 18661,
											"end": 18740,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 18623,
											"end": 18742,
											"name": "tag",
											"source": 14,
											"value": "584"
										},
										{
											"begin": 18623,
											"end": 18742,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 18781,
											"end": 18782,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 18806,
											"end": 18859,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "586"
										},
										{
											"begin": 18851,
											"end": 18858,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 18842,
											"end": 18848,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 18831,
											"end": 18840,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 18827,
											"end": 18849,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 18806,
											"end": 18859,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "333"
										},
										{
											"begin": 18806,
											"end": 18859,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 18806,
											"end": 18859,
											"name": "tag",
											"source": 14,
											"value": "586"
										},
										{
											"begin": 18806,
											"end": 18859,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 18796,
											"end": 18859,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 18796,
											"end": 18859,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 18752,
											"end": 18869,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 18908,
											"end": 18910,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 18934,
											"end": 18987,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "587"
										},
										{
											"begin": 18979,
											"end": 18986,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 18970,
											"end": 18976,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 18959,
											"end": 18968,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 18955,
											"end": 18977,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 18934,
											"end": 18987,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "333"
										},
										{
											"begin": 18934,
											"end": 18987,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 18934,
											"end": 18987,
											"name": "tag",
											"source": 14,
											"value": "587"
										},
										{
											"begin": 18934,
											"end": 18987,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 18924,
											"end": 18987,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 18924,
											"end": 18987,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 18879,
											"end": 18997,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 18530,
											"end": 19004,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 18530,
											"end": 19004,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 18530,
											"end": 19004,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 18530,
											"end": 19004,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 18530,
											"end": 19004,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 18530,
											"end": 19004,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 19010,
											"end": 20099,
											"name": "tag",
											"source": 14,
											"value": "83"
										},
										{
											"begin": 19010,
											"end": 20099,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 19114,
											"end": 19120,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 19122,
											"end": 19128,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 19130,
											"end": 19136,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 19138,
											"end": 19144,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 19146,
											"end": 19152,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 19195,
											"end": 19198,
											"name": "PUSH",
											"source": 14,
											"value": "A0"
										},
										{
											"begin": 19183,
											"end": 19192,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 19174,
											"end": 19181,
											"name": "DUP9",
											"source": 14
										},
										{
											"begin": 19170,
											"end": 19193,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 19166,
											"end": 19199,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 19163,
											"end": 19283,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 19163,
											"end": 19283,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "589"
										},
										{
											"begin": 19163,
											"end": 19283,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 19202,
											"end": 19281,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "590"
										},
										{
											"begin": 19202,
											"end": 19281,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "328"
										},
										{
											"begin": 19202,
											"end": 19281,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 19202,
											"end": 19281,
											"name": "tag",
											"source": 14,
											"value": "590"
										},
										{
											"begin": 19202,
											"end": 19281,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 19163,
											"end": 19283,
											"name": "tag",
											"source": 14,
											"value": "589"
										},
										{
											"begin": 19163,
											"end": 19283,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 19322,
											"end": 19323,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 19347,
											"end": 19400,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "591"
										},
										{
											"begin": 19392,
											"end": 19399,
											"name": "DUP9",
											"source": 14
										},
										{
											"begin": 19383,
											"end": 19389,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 19372,
											"end": 19381,
											"name": "DUP10",
											"source": 14
										},
										{
											"begin": 19368,
											"end": 19390,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 19347,
											"end": 19400,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "333"
										},
										{
											"begin": 19347,
											"end": 19400,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 19347,
											"end": 19400,
											"name": "tag",
											"source": 14,
											"value": "591"
										},
										{
											"begin": 19347,
											"end": 19400,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 19337,
											"end": 19400,
											"name": "SWAP6",
											"source": 14
										},
										{
											"begin": 19337,
											"end": 19400,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 19293,
											"end": 19410,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 19449,
											"end": 19451,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 19475,
											"end": 19528,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "592"
										},
										{
											"begin": 19520,
											"end": 19527,
											"name": "DUP9",
											"source": 14
										},
										{
											"begin": 19511,
											"end": 19517,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 19500,
											"end": 19509,
											"name": "DUP10",
											"source": 14
										},
										{
											"begin": 19496,
											"end": 19518,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 19475,
											"end": 19528,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "333"
										},
										{
											"begin": 19475,
											"end": 19528,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 19475,
											"end": 19528,
											"name": "tag",
											"source": 14,
											"value": "592"
										},
										{
											"begin": 19475,
											"end": 19528,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 19465,
											"end": 19528,
											"name": "SWAP5",
											"source": 14
										},
										{
											"begin": 19465,
											"end": 19528,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 19420,
											"end": 19538,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 19577,
											"end": 19579,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 19603,
											"end": 19656,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "593"
										},
										{
											"begin": 19648,
											"end": 19655,
											"name": "DUP9",
											"source": 14
										},
										{
											"begin": 19639,
											"end": 19645,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 19628,
											"end": 19637,
											"name": "DUP10",
											"source": 14
										},
										{
											"begin": 19624,
											"end": 19646,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 19603,
											"end": 19656,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "336"
										},
										{
											"begin": 19603,
											"end": 19656,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 19603,
											"end": 19656,
											"name": "tag",
											"source": 14,
											"value": "593"
										},
										{
											"begin": 19603,
											"end": 19656,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 19593,
											"end": 19656,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 19593,
											"end": 19656,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 19548,
											"end": 19666,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 19705,
											"end": 19707,
											"name": "PUSH",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 19731,
											"end": 19784,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "594"
										},
										{
											"begin": 19776,
											"end": 19783,
											"name": "DUP9",
											"source": 14
										},
										{
											"begin": 19767,
											"end": 19773,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 19756,
											"end": 19765,
											"name": "DUP10",
											"source": 14
										},
										{
											"begin": 19752,
											"end": 19774,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 19731,
											"end": 19784,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "336"
										},
										{
											"begin": 19731,
											"end": 19784,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 19731,
											"end": 19784,
											"name": "tag",
											"source": 14,
											"value": "594"
										},
										{
											"begin": 19731,
											"end": 19784,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 19721,
											"end": 19784,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 19721,
											"end": 19784,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 19676,
											"end": 19794,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 19861,
											"end": 19864,
											"name": "PUSH",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 19850,
											"end": 19859,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 19846,
											"end": 19865,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 19833,
											"end": 19866,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 19893,
											"end": 19911,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 19885,
											"end": 19891,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 19882,
											"end": 19912,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 19879,
											"end": 19996,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 19879,
											"end": 19996,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "595"
										},
										{
											"begin": 19879,
											"end": 19996,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 19915,
											"end": 19994,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "596"
										},
										{
											"begin": 19915,
											"end": 19994,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "329"
										},
										{
											"begin": 19915,
											"end": 19994,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 19915,
											"end": 19994,
											"name": "tag",
											"source": 14,
											"value": "596"
										},
										{
											"begin": 19915,
											"end": 19994,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 19879,
											"end": 19996,
											"name": "tag",
											"source": 14,
											"value": "595"
										},
										{
											"begin": 19879,
											"end": 19996,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 20020,
											"end": 20082,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "597"
										},
										{
											"begin": 20074,
											"end": 20081,
											"name": "DUP9",
											"source": 14
										},
										{
											"begin": 20065,
											"end": 20071,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 20054,
											"end": 20063,
											"name": "DUP10",
											"source": 14
										},
										{
											"begin": 20050,
											"end": 20072,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 20020,
											"end": 20082,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "359"
										},
										{
											"begin": 20020,
											"end": 20082,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 20020,
											"end": 20082,
											"name": "tag",
											"source": 14,
											"value": "597"
										},
										{
											"begin": 20020,
											"end": 20082,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 20010,
											"end": 20082,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 20010,
											"end": 20082,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 19804,
											"end": 20092,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 19010,
											"end": 20099,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 19010,
											"end": 20099,
											"name": "SWAP6",
											"source": 14
										},
										{
											"begin": 19010,
											"end": 20099,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 19010,
											"end": 20099,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 19010,
											"end": 20099,
											"name": "SWAP6",
											"source": 14
										},
										{
											"begin": 19010,
											"end": 20099,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 19010,
											"end": 20099,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 19010,
											"end": 20099,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 19010,
											"end": 20099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 20105,
											"end": 20724,
											"name": "tag",
											"source": 14,
											"value": "87"
										},
										{
											"begin": 20105,
											"end": 20724,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 20182,
											"end": 20188,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 20190,
											"end": 20196,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 20198,
											"end": 20204,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 20247,
											"end": 20249,
											"name": "PUSH",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 20235,
											"end": 20244,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 20226,
											"end": 20233,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 20222,
											"end": 20245,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 20218,
											"end": 20250,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 20215,
											"end": 20334,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 20215,
											"end": 20334,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "599"
										},
										{
											"begin": 20215,
											"end": 20334,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 20253,
											"end": 20332,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "600"
										},
										{
											"begin": 20253,
											"end": 20332,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "328"
										},
										{
											"begin": 20253,
											"end": 20332,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 20253,
											"end": 20332,
											"name": "tag",
											"source": 14,
											"value": "600"
										},
										{
											"begin": 20253,
											"end": 20332,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 20215,
											"end": 20334,
											"name": "tag",
											"source": 14,
											"value": "599"
										},
										{
											"begin": 20215,
											"end": 20334,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 20373,
											"end": 20374,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 20398,
											"end": 20451,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "601"
										},
										{
											"begin": 20443,
											"end": 20450,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 20434,
											"end": 20440,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 20423,
											"end": 20432,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 20419,
											"end": 20441,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 20398,
											"end": 20451,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "333"
										},
										{
											"begin": 20398,
											"end": 20451,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 20398,
											"end": 20451,
											"name": "tag",
											"source": 14,
											"value": "601"
										},
										{
											"begin": 20398,
											"end": 20451,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 20388,
											"end": 20451,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 20388,
											"end": 20451,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 20344,
											"end": 20461,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 20500,
											"end": 20502,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 20526,
											"end": 20579,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "602"
										},
										{
											"begin": 20571,
											"end": 20578,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 20562,
											"end": 20568,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 20551,
											"end": 20560,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 20547,
											"end": 20569,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 20526,
											"end": 20579,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "336"
										},
										{
											"begin": 20526,
											"end": 20579,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 20526,
											"end": 20579,
											"name": "tag",
											"source": 14,
											"value": "602"
										},
										{
											"begin": 20526,
											"end": 20579,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 20516,
											"end": 20579,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 20516,
											"end": 20579,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 20471,
											"end": 20589,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 20628,
											"end": 20630,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 20654,
											"end": 20707,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "603"
										},
										{
											"begin": 20699,
											"end": 20706,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 20690,
											"end": 20696,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 20679,
											"end": 20688,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 20675,
											"end": 20697,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 20654,
											"end": 20707,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "336"
										},
										{
											"begin": 20654,
											"end": 20707,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 20654,
											"end": 20707,
											"name": "tag",
											"source": 14,
											"value": "603"
										},
										{
											"begin": 20654,
											"end": 20707,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 20644,
											"end": 20707,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 20644,
											"end": 20707,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 20599,
											"end": 20717,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 20105,
											"end": 20724,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 20105,
											"end": 20724,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 20105,
											"end": 20724,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 20105,
											"end": 20724,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 20105,
											"end": 20724,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 20105,
											"end": 20724,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 20730,
											"end": 20910,
											"name": "tag",
											"source": 14,
											"value": "372"
										},
										{
											"begin": 20730,
											"end": 20910,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 20778,
											"end": 20855,
											"name": "PUSH",
											"source": 14,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 20775,
											"end": 20776,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 20768,
											"end": 20856,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 20875,
											"end": 20879,
											"name": "PUSH",
											"source": 14,
											"value": "22"
										},
										{
											"begin": 20872,
											"end": 20873,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 20865,
											"end": 20880,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 20899,
											"end": 20903,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 20896,
											"end": 20897,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 20889,
											"end": 20904,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 20916,
											"end": 21236,
											"name": "tag",
											"source": 14,
											"value": "97"
										},
										{
											"begin": 20916,
											"end": 21236,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 20960,
											"end": 20966,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 20997,
											"end": 20998,
											"name": "PUSH",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 20991,
											"end": 20995,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 20987,
											"end": 20999,
											"name": "DIV",
											"source": 14
										},
										{
											"begin": 20977,
											"end": 20999,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 20977,
											"end": 20999,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 21044,
											"end": 21045,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 21038,
											"end": 21042,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 21034,
											"end": 21046,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 21065,
											"end": 21083,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 21055,
											"end": 21136,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "606"
										},
										{
											"begin": 21055,
											"end": 21136,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 21121,
											"end": 21125,
											"name": "PUSH",
											"source": 14,
											"value": "7F"
										},
										{
											"begin": 21113,
											"end": 21119,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 21109,
											"end": 21126,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 21099,
											"end": 21126,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 21099,
											"end": 21126,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 21055,
											"end": 21136,
											"name": "tag",
											"source": 14,
											"value": "606"
										},
										{
											"begin": 21055,
											"end": 21136,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 21183,
											"end": 21185,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 21175,
											"end": 21181,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 21172,
											"end": 21186,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 21152,
											"end": 21170,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 21149,
											"end": 21187,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 21146,
											"end": 21230,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "607"
										},
										{
											"begin": 21146,
											"end": 21230,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 21202,
											"end": 21220,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "608"
										},
										{
											"begin": 21202,
											"end": 21220,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "372"
										},
										{
											"begin": 21202,
											"end": 21220,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 21202,
											"end": 21220,
											"name": "tag",
											"source": 14,
											"value": "608"
										},
										{
											"begin": 21202,
											"end": 21220,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 21146,
											"end": 21230,
											"name": "tag",
											"source": 14,
											"value": "607"
										},
										{
											"begin": 21146,
											"end": 21230,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 20967,
											"end": 21236,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 20916,
											"end": 21236,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 20916,
											"end": 21236,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 20916,
											"end": 21236,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 20916,
											"end": 21236,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 21242,
											"end": 21420,
											"name": "tag",
											"source": 14,
											"value": "373"
										},
										{
											"begin": 21242,
											"end": 21420,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 21382,
											"end": 21412,
											"name": "PUSH",
											"source": 14,
											"value": "4F6E6C792067616D6520636F6E74726163742063616E2063616C6C2E00000000"
										},
										{
											"begin": 21378,
											"end": 21379,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 21370,
											"end": 21376,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 21366,
											"end": 21380,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 21359,
											"end": 21413,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 21242,
											"end": 21420,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 21242,
											"end": 21420,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 21426,
											"end": 21792,
											"name": "tag",
											"source": 14,
											"value": "374"
										},
										{
											"begin": 21426,
											"end": 21792,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 21568,
											"end": 21571,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 21589,
											"end": 21656,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "611"
										},
										{
											"begin": 21653,
											"end": 21655,
											"name": "PUSH",
											"source": 14,
											"value": "1C"
										},
										{
											"begin": 21648,
											"end": 21651,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 21589,
											"end": 21656,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "344"
										},
										{
											"begin": 21589,
											"end": 21656,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 21589,
											"end": 21656,
											"name": "tag",
											"source": 14,
											"value": "611"
										},
										{
											"begin": 21589,
											"end": 21656,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 21582,
											"end": 21656,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 21582,
											"end": 21656,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 21665,
											"end": 21758,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "612"
										},
										{
											"begin": 21754,
											"end": 21757,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 21665,
											"end": 21758,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "373"
										},
										{
											"begin": 21665,
											"end": 21758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 21665,
											"end": 21758,
											"name": "tag",
											"source": 14,
											"value": "612"
										},
										{
											"begin": 21665,
											"end": 21758,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 21783,
											"end": 21785,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 21778,
											"end": 21781,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 21774,
											"end": 21786,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 21767,
											"end": 21786,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 21767,
											"end": 21786,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 21426,
											"end": 21792,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 21426,
											"end": 21792,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 21426,
											"end": 21792,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 21426,
											"end": 21792,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 21798,
											"end": 22217,
											"name": "tag",
											"source": 14,
											"value": "106"
										},
										{
											"begin": 21798,
											"end": 22217,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 21964,
											"end": 21968,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 22002,
											"end": 22004,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 21991,
											"end": 22000,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 21987,
											"end": 22005,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 21979,
											"end": 22005,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 21979,
											"end": 22005,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 22051,
											"end": 22060,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 22045,
											"end": 22049,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 22041,
											"end": 22061,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 22037,
											"end": 22038,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 22026,
											"end": 22035,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 22022,
											"end": 22039,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 22015,
											"end": 22062,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 22079,
											"end": 22210,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "614"
										},
										{
											"begin": 22205,
											"end": 22209,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 22079,
											"end": 22210,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "374"
										},
										{
											"begin": 22079,
											"end": 22210,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 22079,
											"end": 22210,
											"name": "tag",
											"source": 14,
											"value": "614"
										},
										{
											"begin": 22079,
											"end": 22210,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 22071,
											"end": 22210,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 22071,
											"end": 22210,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 21798,
											"end": 22217,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 21798,
											"end": 22217,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 21798,
											"end": 22217,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 21798,
											"end": 22217,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 22223,
											"end": 22341,
											"name": "tag",
											"source": 14,
											"value": "375"
										},
										{
											"begin": 22223,
											"end": 22341,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 22310,
											"end": 22334,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "616"
										},
										{
											"begin": 22328,
											"end": 22333,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 22310,
											"end": 22334,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "331"
										},
										{
											"begin": 22310,
											"end": 22334,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 22310,
											"end": 22334,
											"name": "tag",
											"source": 14,
											"value": "616"
										},
										{
											"begin": 22310,
											"end": 22334,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 22305,
											"end": 22308,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 22298,
											"end": 22335,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 22223,
											"end": 22341,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 22223,
											"end": 22341,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 22223,
											"end": 22341,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 22347,
											"end": 22679,
											"name": "tag",
											"source": 14,
											"value": "117"
										},
										{
											"begin": 22347,
											"end": 22679,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 22468,
											"end": 22472,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 22506,
											"end": 22508,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 22495,
											"end": 22504,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 22491,
											"end": 22509,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 22483,
											"end": 22509,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 22483,
											"end": 22509,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 22519,
											"end": 22590,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "618"
										},
										{
											"begin": 22587,
											"end": 22588,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 22576,
											"end": 22585,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 22572,
											"end": 22589,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 22563,
											"end": 22569,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 22519,
											"end": 22590,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "375"
										},
										{
											"begin": 22519,
											"end": 22590,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 22519,
											"end": 22590,
											"name": "tag",
											"source": 14,
											"value": "618"
										},
										{
											"begin": 22519,
											"end": 22590,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 22600,
											"end": 22672,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "619"
										},
										{
											"begin": 22668,
											"end": 22670,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 22657,
											"end": 22666,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 22653,
											"end": 22671,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 22644,
											"end": 22650,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 22600,
											"end": 22672,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "375"
										},
										{
											"begin": 22600,
											"end": 22672,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 22600,
											"end": 22672,
											"name": "tag",
											"source": 14,
											"value": "619"
										},
										{
											"begin": 22600,
											"end": 22672,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 22347,
											"end": 22679,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 22347,
											"end": 22679,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 22347,
											"end": 22679,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 22347,
											"end": 22679,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 22347,
											"end": 22679,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 22347,
											"end": 22679,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 22685,
											"end": 23017,
											"name": "tag",
											"source": 14,
											"value": "123"
										},
										{
											"begin": 22685,
											"end": 23017,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 22806,
											"end": 22810,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 22844,
											"end": 22846,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 22833,
											"end": 22842,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 22829,
											"end": 22847,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 22821,
											"end": 22847,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 22821,
											"end": 22847,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 22857,
											"end": 22928,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "621"
										},
										{
											"begin": 22925,
											"end": 22926,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 22914,
											"end": 22923,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 22910,
											"end": 22927,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 22901,
											"end": 22907,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 22857,
											"end": 22928,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "337"
										},
										{
											"begin": 22857,
											"end": 22928,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 22857,
											"end": 22928,
											"name": "tag",
											"source": 14,
											"value": "621"
										},
										{
											"begin": 22857,
											"end": 22928,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 22938,
											"end": 23010,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "622"
										},
										{
											"begin": 23006,
											"end": 23008,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 22995,
											"end": 23004,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 22991,
											"end": 23009,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 22982,
											"end": 22988,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 22938,
											"end": 23010,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "337"
										},
										{
											"begin": 22938,
											"end": 23010,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 22938,
											"end": 23010,
											"name": "tag",
											"source": 14,
											"value": "622"
										},
										{
											"begin": 22938,
											"end": 23010,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 22685,
											"end": 23017,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 22685,
											"end": 23017,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 22685,
											"end": 23017,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 22685,
											"end": 23017,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 22685,
											"end": 23017,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 22685,
											"end": 23017,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 23023,
											"end": 23203,
											"name": "tag",
											"source": 14,
											"value": "138"
										},
										{
											"begin": 23023,
											"end": 23203,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 23071,
											"end": 23148,
											"name": "PUSH",
											"source": 14,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 23068,
											"end": 23069,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 23061,
											"end": 23149,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 23168,
											"end": 23172,
											"name": "PUSH",
											"source": 14,
											"value": "32"
										},
										{
											"begin": 23165,
											"end": 23166,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 23158,
											"end": 23173,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 23192,
											"end": 23196,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 23189,
											"end": 23190,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 23182,
											"end": 23197,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 23209,
											"end": 23389,
											"name": "tag",
											"source": 14,
											"value": "376"
										},
										{
											"begin": 23209,
											"end": 23389,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 23257,
											"end": 23334,
											"name": "PUSH",
											"source": 14,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 23254,
											"end": 23255,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 23247,
											"end": 23335,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 23354,
											"end": 23358,
											"name": "PUSH",
											"source": 14,
											"value": "11"
										},
										{
											"begin": 23351,
											"end": 23352,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 23344,
											"end": 23359,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 23378,
											"end": 23382,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 23375,
											"end": 23376,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 23368,
											"end": 23383,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 23395,
											"end": 23628,
											"name": "tag",
											"source": 14,
											"value": "140"
										},
										{
											"begin": 23395,
											"end": 23628,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 23434,
											"end": 23437,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 23457,
											"end": 23481,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "626"
										},
										{
											"begin": 23475,
											"end": 23480,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 23457,
											"end": 23481,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "334"
										},
										{
											"begin": 23457,
											"end": 23481,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 23457,
											"end": 23481,
											"name": "tag",
											"source": 14,
											"value": "626"
										},
										{
											"begin": 23457,
											"end": 23481,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 23448,
											"end": 23481,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 23448,
											"end": 23481,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 23503,
											"end": 23569,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23496,
											"end": 23501,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 23493,
											"end": 23570,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 23490,
											"end": 23593,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "627"
										},
										{
											"begin": 23490,
											"end": 23593,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 23573,
											"end": 23591,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "628"
										},
										{
											"begin": 23573,
											"end": 23591,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "376"
										},
										{
											"begin": 23573,
											"end": 23591,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 23573,
											"end": 23591,
											"name": "tag",
											"source": 14,
											"value": "628"
										},
										{
											"begin": 23573,
											"end": 23591,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 23490,
											"end": 23593,
											"name": "tag",
											"source": 14,
											"value": "627"
										},
										{
											"begin": 23490,
											"end": 23593,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 23620,
											"end": 23621,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 23613,
											"end": 23618,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 23609,
											"end": 23622,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 23602,
											"end": 23622,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 23602,
											"end": 23622,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 23395,
											"end": 23628,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 23395,
											"end": 23628,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 23395,
											"end": 23628,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 23395,
											"end": 23628,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 23634,
											"end": 23856,
											"name": "tag",
											"source": 14,
											"value": "187"
										},
										{
											"begin": 23634,
											"end": 23856,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 23727,
											"end": 23731,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 23765,
											"end": 23767,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 23754,
											"end": 23763,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 23750,
											"end": 23768,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 23742,
											"end": 23768,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 23742,
											"end": 23768,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 23778,
											"end": 23849,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "630"
										},
										{
											"begin": 23846,
											"end": 23847,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 23835,
											"end": 23844,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 23831,
											"end": 23848,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 23822,
											"end": 23828,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 23778,
											"end": 23849,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "375"
										},
										{
											"begin": 23778,
											"end": 23849,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 23778,
											"end": 23849,
											"name": "tag",
											"source": 14,
											"value": "630"
										},
										{
											"begin": 23778,
											"end": 23849,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 23634,
											"end": 23856,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 23634,
											"end": 23856,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 23634,
											"end": 23856,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 23634,
											"end": 23856,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 23634,
											"end": 23856,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 23862,
											"end": 23960,
											"name": "tag",
											"source": 14,
											"value": "377"
										},
										{
											"begin": 23862,
											"end": 23960,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 23913,
											"end": 23919,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 23947,
											"end": 23952,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 23941,
											"end": 23953,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 23931,
											"end": 23953,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 23931,
											"end": 23953,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 23862,
											"end": 23960,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 23862,
											"end": 23960,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 23862,
											"end": 23960,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 23862,
											"end": 23960,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 23966,
											"end": 24134,
											"name": "tag",
											"source": 14,
											"value": "378"
										},
										{
											"begin": 23966,
											"end": 24134,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 24049,
											"end": 24060,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 24083,
											"end": 24089,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 24078,
											"end": 24081,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 24071,
											"end": 24090,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 24123,
											"end": 24127,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 24118,
											"end": 24121,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 24114,
											"end": 24128,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 24099,
											"end": 24128,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 24099,
											"end": 24128,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 23966,
											"end": 24134,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 23966,
											"end": 24134,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 23966,
											"end": 24134,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 23966,
											"end": 24134,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 23966,
											"end": 24134,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 24140,
											"end": 24513,
											"name": "tag",
											"source": 14,
											"value": "379"
										},
										{
											"begin": 24140,
											"end": 24513,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 24226,
											"end": 24229,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 24254,
											"end": 24292,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "634"
										},
										{
											"begin": 24286,
											"end": 24291,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 24254,
											"end": 24292,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "377"
										},
										{
											"begin": 24254,
											"end": 24292,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 24254,
											"end": 24292,
											"name": "tag",
											"source": 14,
											"value": "634"
										},
										{
											"begin": 24254,
											"end": 24292,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 24308,
											"end": 24378,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "635"
										},
										{
											"begin": 24371,
											"end": 24377,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 24366,
											"end": 24369,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 24308,
											"end": 24378,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "378"
										},
										{
											"begin": 24308,
											"end": 24378,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 24308,
											"end": 24378,
											"name": "tag",
											"source": 14,
											"value": "635"
										},
										{
											"begin": 24308,
											"end": 24378,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 24301,
											"end": 24378,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 24301,
											"end": 24378,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 24387,
											"end": 24452,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "636"
										},
										{
											"begin": 24445,
											"end": 24451,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 24440,
											"end": 24443,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 24433,
											"end": 24437,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 24426,
											"end": 24431,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 24422,
											"end": 24438,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 24387,
											"end": 24452,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "345"
										},
										{
											"begin": 24387,
											"end": 24452,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 24387,
											"end": 24452,
											"name": "tag",
											"source": 14,
											"value": "636"
										},
										{
											"begin": 24387,
											"end": 24452,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 24477,
											"end": 24506,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "637"
										},
										{
											"begin": 24499,
											"end": 24505,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 24477,
											"end": 24506,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "346"
										},
										{
											"begin": 24477,
											"end": 24506,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 24477,
											"end": 24506,
											"name": "tag",
											"source": 14,
											"value": "637"
										},
										{
											"begin": 24477,
											"end": 24506,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 24472,
											"end": 24475,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 24468,
											"end": 24507,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 24461,
											"end": 24507,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 24461,
											"end": 24507,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 24230,
											"end": 24513,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 24140,
											"end": 24513,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 24140,
											"end": 24513,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 24140,
											"end": 24513,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 24140,
											"end": 24513,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 24140,
											"end": 24513,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 24519,
											"end": 25270,
											"name": "tag",
											"source": 14,
											"value": "245"
										},
										{
											"begin": 24519,
											"end": 25270,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 24742,
											"end": 24746,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 24780,
											"end": 24783,
											"name": "PUSH",
											"source": 14,
											"value": "A0"
										},
										{
											"begin": 24769,
											"end": 24778,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 24765,
											"end": 24784,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 24757,
											"end": 24784,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 24757,
											"end": 24784,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 24794,
											"end": 24865,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "639"
										},
										{
											"begin": 24862,
											"end": 24863,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 24851,
											"end": 24860,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 24847,
											"end": 24864,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 24838,
											"end": 24844,
											"name": "DUP9",
											"source": 14
										},
										{
											"begin": 24794,
											"end": 24865,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "375"
										},
										{
											"begin": 24794,
											"end": 24865,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 24794,
											"end": 24865,
											"name": "tag",
											"source": 14,
											"value": "639"
										},
										{
											"begin": 24794,
											"end": 24865,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 24875,
											"end": 24947,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "640"
										},
										{
											"begin": 24943,
											"end": 24945,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 24932,
											"end": 24941,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 24928,
											"end": 24946,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 24919,
											"end": 24925,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 24875,
											"end": 24947,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "375"
										},
										{
											"begin": 24875,
											"end": 24947,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 24875,
											"end": 24947,
											"name": "tag",
											"source": 14,
											"value": "640"
										},
										{
											"begin": 24875,
											"end": 24947,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 24957,
											"end": 25029,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "641"
										},
										{
											"begin": 25025,
											"end": 25027,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 25014,
											"end": 25023,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 25010,
											"end": 25028,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 25001,
											"end": 25007,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 24957,
											"end": 25029,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "337"
										},
										{
											"begin": 24957,
											"end": 25029,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 24957,
											"end": 25029,
											"name": "tag",
											"source": 14,
											"value": "641"
										},
										{
											"begin": 24957,
											"end": 25029,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 25039,
											"end": 25111,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "642"
										},
										{
											"begin": 25107,
											"end": 25109,
											"name": "PUSH",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 25096,
											"end": 25105,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 25092,
											"end": 25110,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 25083,
											"end": 25089,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 25039,
											"end": 25111,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "337"
										},
										{
											"begin": 25039,
											"end": 25111,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 25039,
											"end": 25111,
											"name": "tag",
											"source": 14,
											"value": "642"
										},
										{
											"begin": 25039,
											"end": 25111,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 25159,
											"end": 25168,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 25153,
											"end": 25157,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 25149,
											"end": 25169,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 25143,
											"end": 25146,
											"name": "PUSH",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 25132,
											"end": 25141,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 25128,
											"end": 25147,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 25121,
											"end": 25170,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 25187,
											"end": 25263,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "643"
										},
										{
											"begin": 25258,
											"end": 25262,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 25249,
											"end": 25255,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 25187,
											"end": 25263,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "379"
										},
										{
											"begin": 25187,
											"end": 25263,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 25187,
											"end": 25263,
											"name": "tag",
											"source": 14,
											"value": "643"
										},
										{
											"begin": 25187,
											"end": 25263,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 25179,
											"end": 25263,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 25179,
											"end": 25263,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 24519,
											"end": 25270,
											"name": "SWAP7",
											"source": 14
										},
										{
											"begin": 24519,
											"end": 25270,
											"name": "SWAP6",
											"source": 14
										},
										{
											"begin": 24519,
											"end": 25270,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 24519,
											"end": 25270,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 24519,
											"end": 25270,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 24519,
											"end": 25270,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 24519,
											"end": 25270,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 24519,
											"end": 25270,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 24519,
											"end": 25270,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 25276,
											"end": 25417,
											"name": "tag",
											"source": 14,
											"value": "380"
										},
										{
											"begin": 25276,
											"end": 25417,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 25332,
											"end": 25337,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 25363,
											"end": 25369,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 25357,
											"end": 25370,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 25348,
											"end": 25370,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 25348,
											"end": 25370,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 25379,
											"end": 25411,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "645"
										},
										{
											"begin": 25405,
											"end": 25410,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 25379,
											"end": 25411,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "339"
										},
										{
											"begin": 25379,
											"end": 25411,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 25379,
											"end": 25411,
											"name": "tag",
											"source": 14,
											"value": "645"
										},
										{
											"begin": 25379,
											"end": 25411,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 25276,
											"end": 25417,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 25276,
											"end": 25417,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 25276,
											"end": 25417,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 25276,
											"end": 25417,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 25276,
											"end": 25417,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 25423,
											"end": 25772,
											"name": "tag",
											"source": 14,
											"value": "248"
										},
										{
											"begin": 25423,
											"end": 25772,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 25492,
											"end": 25498,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 25541,
											"end": 25543,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 25529,
											"end": 25538,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 25520,
											"end": 25527,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 25516,
											"end": 25539,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 25512,
											"end": 25544,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 25509,
											"end": 25628,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 25509,
											"end": 25628,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "647"
										},
										{
											"begin": 25509,
											"end": 25628,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 25547,
											"end": 25626,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "648"
										},
										{
											"begin": 25547,
											"end": 25626,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "328"
										},
										{
											"begin": 25547,
											"end": 25626,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 25547,
											"end": 25626,
											"name": "tag",
											"source": 14,
											"value": "648"
										},
										{
											"begin": 25547,
											"end": 25626,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 25509,
											"end": 25628,
											"name": "tag",
											"source": 14,
											"value": "647"
										},
										{
											"begin": 25509,
											"end": 25628,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 25667,
											"end": 25668,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 25692,
											"end": 25755,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "649"
										},
										{
											"begin": 25747,
											"end": 25754,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 25738,
											"end": 25744,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 25727,
											"end": 25736,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 25723,
											"end": 25745,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 25692,
											"end": 25755,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "380"
										},
										{
											"begin": 25692,
											"end": 25755,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 25692,
											"end": 25755,
											"name": "tag",
											"source": 14,
											"value": "649"
										},
										{
											"begin": 25692,
											"end": 25755,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 25682,
											"end": 25755,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 25682,
											"end": 25755,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 25638,
											"end": 25765,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 25423,
											"end": 25772,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 25423,
											"end": 25772,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 25423,
											"end": 25772,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 25423,
											"end": 25772,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 25423,
											"end": 25772,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 25778,
											"end": 26831,
											"name": "tag",
											"source": 14,
											"value": "264"
										},
										{
											"begin": 25778,
											"end": 26831,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 26101,
											"end": 26105,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 26139,
											"end": 26142,
											"name": "PUSH",
											"source": 14,
											"value": "A0"
										},
										{
											"begin": 26128,
											"end": 26137,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 26124,
											"end": 26143,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 26116,
											"end": 26143,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 26116,
											"end": 26143,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 26153,
											"end": 26224,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "651"
										},
										{
											"begin": 26221,
											"end": 26222,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 26210,
											"end": 26219,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 26206,
											"end": 26223,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 26197,
											"end": 26203,
											"name": "DUP9",
											"source": 14
										},
										{
											"begin": 26153,
											"end": 26224,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "375"
										},
										{
											"begin": 26153,
											"end": 26224,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 26153,
											"end": 26224,
											"name": "tag",
											"source": 14,
											"value": "651"
										},
										{
											"begin": 26153,
											"end": 26224,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 26234,
											"end": 26306,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "652"
										},
										{
											"begin": 26302,
											"end": 26304,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 26291,
											"end": 26300,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 26287,
											"end": 26305,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 26278,
											"end": 26284,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 26234,
											"end": 26306,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "375"
										},
										{
											"begin": 26234,
											"end": 26306,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 26234,
											"end": 26306,
											"name": "tag",
											"source": 14,
											"value": "652"
										},
										{
											"begin": 26234,
											"end": 26306,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 26353,
											"end": 26362,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 26347,
											"end": 26351,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 26343,
											"end": 26363,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 26338,
											"end": 26340,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 26327,
											"end": 26336,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 26323,
											"end": 26341,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 26316,
											"end": 26364,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 26381,
											"end": 26489,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "653"
										},
										{
											"begin": 26484,
											"end": 26488,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 26475,
											"end": 26481,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 26381,
											"end": 26489,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "369"
										},
										{
											"begin": 26381,
											"end": 26489,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 26381,
											"end": 26489,
											"name": "tag",
											"source": 14,
											"value": "653"
										},
										{
											"begin": 26381,
											"end": 26489,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 26373,
											"end": 26489,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 26373,
											"end": 26489,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 26536,
											"end": 26545,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 26530,
											"end": 26534,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 26526,
											"end": 26546,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 26521,
											"end": 26523,
											"name": "PUSH",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 26510,
											"end": 26519,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 26506,
											"end": 26524,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 26499,
											"end": 26547,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 26564,
											"end": 26672,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "654"
										},
										{
											"begin": 26667,
											"end": 26671,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 26658,
											"end": 26664,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 26564,
											"end": 26672,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "369"
										},
										{
											"begin": 26564,
											"end": 26672,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 26564,
											"end": 26672,
											"name": "tag",
											"source": 14,
											"value": "654"
										},
										{
											"begin": 26564,
											"end": 26672,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 26556,
											"end": 26672,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 26556,
											"end": 26672,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 26720,
											"end": 26729,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 26714,
											"end": 26718,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 26710,
											"end": 26730,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 26704,
											"end": 26707,
											"name": "PUSH",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 26693,
											"end": 26702,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 26689,
											"end": 26708,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 26682,
											"end": 26731,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 26748,
											"end": 26824,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "655"
										},
										{
											"begin": 26819,
											"end": 26823,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 26810,
											"end": 26816,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 26748,
											"end": 26824,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "379"
										},
										{
											"begin": 26748,
											"end": 26824,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 26748,
											"end": 26824,
											"name": "tag",
											"source": 14,
											"value": "655"
										},
										{
											"begin": 26748,
											"end": 26824,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 26740,
											"end": 26824,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 26740,
											"end": 26824,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 25778,
											"end": 26831,
											"name": "SWAP7",
											"source": 14
										},
										{
											"begin": 25778,
											"end": 26831,
											"name": "SWAP6",
											"source": 14
										},
										{
											"begin": 25778,
											"end": 26831,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 25778,
											"end": 26831,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 25778,
											"end": 26831,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 25778,
											"end": 26831,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 25778,
											"end": 26831,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 25778,
											"end": 26831,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 25778,
											"end": 26831,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 26837,
											"end": 27028,
											"name": "tag",
											"source": 14,
											"value": "291"
										},
										{
											"begin": 26837,
											"end": 27028,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 26877,
											"end": 26880,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 26896,
											"end": 26916,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "657"
										},
										{
											"begin": 26914,
											"end": 26915,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 26896,
											"end": 26916,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "334"
										},
										{
											"begin": 26896,
											"end": 26916,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 26896,
											"end": 26916,
											"name": "tag",
											"source": 14,
											"value": "657"
										},
										{
											"begin": 26896,
											"end": 26916,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 26891,
											"end": 26916,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 26891,
											"end": 26916,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 26930,
											"end": 26950,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "658"
										},
										{
											"begin": 26948,
											"end": 26949,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 26930,
											"end": 26950,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "334"
										},
										{
											"begin": 26930,
											"end": 26950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 26930,
											"end": 26950,
											"name": "tag",
											"source": 14,
											"value": "658"
										},
										{
											"begin": 26930,
											"end": 26950,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 26925,
											"end": 26950,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 26925,
											"end": 26950,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 26973,
											"end": 26974,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 26970,
											"end": 26971,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 26966,
											"end": 26975,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 26959,
											"end": 26975,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 26959,
											"end": 26975,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 26994,
											"end": 26997,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 26991,
											"end": 26992,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 26988,
											"end": 26998,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 26985,
											"end": 27021,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 26985,
											"end": 27021,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "659"
										},
										{
											"begin": 26985,
											"end": 27021,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 27001,
											"end": 27019,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "660"
										},
										{
											"begin": 27001,
											"end": 27019,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "376"
										},
										{
											"begin": 27001,
											"end": 27019,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 27001,
											"end": 27019,
											"name": "tag",
											"source": 14,
											"value": "660"
										},
										{
											"begin": 27001,
											"end": 27019,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 26985,
											"end": 27021,
											"name": "tag",
											"source": 14,
											"value": "659"
										},
										{
											"begin": 26985,
											"end": 27021,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 26837,
											"end": 27028,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 26837,
											"end": 27028,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 26837,
											"end": 27028,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 26837,
											"end": 27028,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 26837,
											"end": 27028,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 27034,
											"end": 27587,
											"name": "tag",
											"source": 14,
											"value": "316"
										},
										{
											"begin": 27034,
											"end": 27587,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 27211,
											"end": 27215,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 27249,
											"end": 27252,
											"name": "PUSH",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 27238,
											"end": 27247,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 27234,
											"end": 27253,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 27226,
											"end": 27253,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 27226,
											"end": 27253,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 27263,
											"end": 27334,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "662"
										},
										{
											"begin": 27331,
											"end": 27332,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 27320,
											"end": 27329,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 27316,
											"end": 27333,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 27307,
											"end": 27313,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 27263,
											"end": 27334,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "375"
										},
										{
											"begin": 27263,
											"end": 27334,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 27263,
											"end": 27334,
											"name": "tag",
											"source": 14,
											"value": "662"
										},
										{
											"begin": 27263,
											"end": 27334,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 27344,
											"end": 27416,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "663"
										},
										{
											"begin": 27412,
											"end": 27414,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 27401,
											"end": 27410,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 27397,
											"end": 27415,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 27388,
											"end": 27394,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 27344,
											"end": 27416,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "337"
										},
										{
											"begin": 27344,
											"end": 27416,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 27344,
											"end": 27416,
											"name": "tag",
											"source": 14,
											"value": "663"
										},
										{
											"begin": 27344,
											"end": 27416,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 27426,
											"end": 27498,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "664"
										},
										{
											"begin": 27494,
											"end": 27496,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 27483,
											"end": 27492,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 27479,
											"end": 27497,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 27470,
											"end": 27476,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 27426,
											"end": 27498,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "337"
										},
										{
											"begin": 27426,
											"end": 27498,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 27426,
											"end": 27498,
											"name": "tag",
											"source": 14,
											"value": "664"
										},
										{
											"begin": 27426,
											"end": 27498,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 27508,
											"end": 27580,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "665"
										},
										{
											"begin": 27576,
											"end": 27578,
											"name": "PUSH",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 27565,
											"end": 27574,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 27561,
											"end": 27579,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 27552,
											"end": 27558,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 27508,
											"end": 27580,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "337"
										},
										{
											"begin": 27508,
											"end": 27580,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 27508,
											"end": 27580,
											"name": "tag",
											"source": 14,
											"value": "665"
										},
										{
											"begin": 27508,
											"end": 27580,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 27034,
											"end": 27587,
											"name": "SWAP6",
											"source": 14
										},
										{
											"begin": 27034,
											"end": 27587,
											"name": "SWAP5",
											"source": 14
										},
										{
											"begin": 27034,
											"end": 27587,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 27034,
											"end": 27587,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 27034,
											"end": 27587,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 27034,
											"end": 27587,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 27034,
											"end": 27587,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 27034,
											"end": 27587,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 27593,
											"end": 28227,
											"name": "tag",
											"source": 14,
											"value": "326"
										},
										{
											"begin": 27593,
											"end": 28227,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 27814,
											"end": 27818,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 27852,
											"end": 27854,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 27841,
											"end": 27850,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 27837,
											"end": 27855,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 27829,
											"end": 27855,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 27829,
											"end": 27855,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 27901,
											"end": 27910,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 27895,
											"end": 27899,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 27891,
											"end": 27911,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 27887,
											"end": 27888,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 27876,
											"end": 27885,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 27872,
											"end": 27889,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 27865,
											"end": 27912,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 27929,
											"end": 28037,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "667"
										},
										{
											"begin": 28032,
											"end": 28036,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 28023,
											"end": 28029,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 27929,
											"end": 28037,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "369"
										},
										{
											"begin": 27929,
											"end": 28037,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 27929,
											"end": 28037,
											"name": "tag",
											"source": 14,
											"value": "667"
										},
										{
											"begin": 27929,
											"end": 28037,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 27921,
											"end": 28037,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 27921,
											"end": 28037,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 28084,
											"end": 28093,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 28078,
											"end": 28082,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 28074,
											"end": 28094,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 28069,
											"end": 28071,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 28058,
											"end": 28067,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 28054,
											"end": 28072,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 28047,
											"end": 28095,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 28112,
											"end": 28220,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "668"
										},
										{
											"begin": 28215,
											"end": 28219,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 28206,
											"end": 28212,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 28112,
											"end": 28220,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "369"
										},
										{
											"begin": 28112,
											"end": 28220,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 28112,
											"end": 28220,
											"name": "tag",
											"source": 14,
											"value": "668"
										},
										{
											"begin": 28112,
											"end": 28220,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 28104,
											"end": 28220,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 28104,
											"end": 28220,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 27593,
											"end": 28227,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 27593,
											"end": 28227,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 27593,
											"end": 28227,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 27593,
											"end": 28227,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 27593,
											"end": 28227,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 27593,
											"end": 28227,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC1155/ERC1155.sol",
								"@openzeppelin/contracts/token/ERC1155/IERC1155.sol",
								"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol",
								"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol",
								"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol",
								"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol",
								"@openzeppelin/contracts/utils/Arrays.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"contracts/Items/Items.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"balanceOf(address,uint256)": "00fdd58e",
							"balanceOfBatch(address[],uint256[])": "4e1273f4",
							"burn(address,uint256,uint256)": "f5298aca",
							"burnBatch(address,uint256[],uint256[])": "6b20c454",
							"exists(uint256)": "4f558e79",
							"isApprovedForAll(address,address)": "e985e9c5",
							"mint(address,uint256,uint256,bytes)": "731133e9",
							"mintBatch(address,uint256[],uint256[],bytes)": "1f7fdffa",
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
							"safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"totalSupply()": "18160ddd",
							"totalSupply(uint256)": "bd85b039",
							"uri(uint256)": "0e89341c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"gameAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"burnBatch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"exists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"mintBatch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"custom:security-contact\":\"krlebyte@gmail.com\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"See {IERC1155-balanceOf}.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length.\"},\"exists(uint256)\":{\"details\":\"Indicates whether any token exist with a given id, or not.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC1155-isApprovedForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"See {IERC1155-safeBatchTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"See {IERC1155-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC1155-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"totalSupply()\":{\"details\":\"Total value of tokens.\"},\"totalSupply(uint256)\":{\"details\":\"Total value of tokens in with a given id.\"},\"uri(uint256)\":{\"details\":\"See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP]. Clients calling this function must replace the `\\\\{id\\\\}` substring with the actual token type ID.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Items/Items.sol\":\"Items\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":{\"keccak256\":\"0xd9b0b8ee1ac6dfee14eb1ad4383a4739dbaa0f2036594bb3a16f0408085dadde\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6309805132e519162d1134c67df22dd963323a9208b4f41344a4c13ed63c1026\",\"dweb:/ipfs/QmTBPHnf6qbtAD4NVnKVFmubUHRqMDPLkseR6apxTUpsQo\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x6caffc9cfdc623eca9f87a686071708af5d5c17454d65022843fdddbc53c0cce\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ecf8c7ed1f8ff443c181f64496ae380ee02e61dcd2ed120e1e997837a926f182\",\"dweb:/ipfs/QmWASYTrZPF2MrcpC3EBmxx6RgtZ5Fr4jwrsmB7ZF7qhDC\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0xb69597a63b202e28401128bed6a6d259e8730191274471af7303eafb247881a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://25addbda49a578b3318130585601344c5149a5549d749adf88e9685349a46b23\",\"dweb:/ipfs/Qme2DuD8gpsve1ZvaSMQpBwMdpU7yAtekDwr7gUp8dX4zX\"]},\"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":{\"keccak256\":\"0xdfab949ba677f4b122d0c14225e6db7ca8a65524e2f00049e57b04f68eceeb87\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://25d240211d484954a409a8870c3a971af9e2eb6b6d0ab46b50c193c4a1576006\",\"dweb:/ipfs/QmdzSJoJ6iqoWrGKNeDjV4KVfCqna7Vc7AMoQxpxTdTMpF\"]},\"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":{\"keccak256\":\"0x1cebc792116430641b9ec887f245ce5dde0ace17a8d5fc38e03fd087e061b537\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://21fea8da292377bdc2930254fd5536c1d2be84a1fcb6268527ab8dd1142b23ee\",\"dweb:/ipfs/QmS5AwrNHbvcFB7TmwcXZNXPgMXZxRxmmcey4eP8YTvBgX\"]},\"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":{\"keccak256\":\"0xe92b5e199b963d108ad6e06feeede151ba23849e0d064956535489ff967ffe68\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://280e17738a67b06dae02fec32982bd48a8ab71d8df95e9975ae03532634bc522\",\"dweb:/ipfs/QmecjsNcFgy2mMjuNfRDkLpAYMRWnh5o73fw1Bj2rCso2z\"]},\"@openzeppelin/contracts/utils/Arrays.sol\":{\"keccak256\":\"0x8806d620b6571932b662cfd48fbd518d4f70df1f88a23b5724cacde64a77bda1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8043304c8f9e1c1dc4a41935efa067daa77ad7abbae1fda41f015d53fbf327a5\",\"dweb:/ipfs/QmTrF2hSkRZoN9EEu8zdEhBpGNZ7RxzCdXf9ydzc2HQ3tM\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"contracts/Items/Items.sol\":{\"keccak256\":\"0x9741817cdfbe5d8577ff90de66e459c21056eb2c6f813c2745e7ff92d21b5eda\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://37042ba813379a170131626971aff7dc50858e447de3c30ed9b65757161f5483\",\"dweb:/ipfs/QmXpc6JvUBoKzkF6ZVjdgg9kV1xYBWjNnCHMvBRKGj6Fpf\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 178,
								"contract": "contracts/Items/Items.sol:Items",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 184,
								"contract": "contracts/Items/Items.sol:Items",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							},
							{
								"astId": 186,
								"contract": "contracts/Items/Items.sol:Items",
								"label": "_uri",
								"offset": 0,
								"slot": "2",
								"type": "t_string_storage"
							},
							{
								"astId": 1443,
								"contract": "contracts/Items/Items.sol:Items",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_uint256,t_uint256)"
							},
							{
								"astId": 1445,
								"contract": "contracts/Items/Items.sol:Items",
								"label": "_totalSupplyAll",
								"offset": 0,
								"slot": "4",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_uint256,t_uint256)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							136
						],
						"IERC20Errors": [
							41
						],
						"IERC721Errors": [
							89
						]
					},
					"id": 137,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "138:139:0",
								"text": " @dev Standard ERC20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens."
							},
							"fullyImplemented": true,
							"id": 41,
							"linearizedBaseContracts": [
								41
							],
							"name": "IERC20Errors",
							"nameLocation": "288:12:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "307:309:0",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 11,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "627:24:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "660:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "652:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "676:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "668:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 6,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "693:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "685:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "685:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "651:49:0"
									},
									"src": "621:80:0"
								},
								{
									"documentation": {
										"id": 12,
										"nodeType": "StructuredDocumentation",
										"src": "707:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 16,
									"name": "ERC20InvalidSender",
									"nameLocation": "870:18:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "897:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "889:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "889:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "888:16:0"
									},
									"src": "864:41:0"
								},
								{
									"documentation": {
										"id": 17,
										"nodeType": "StructuredDocumentation",
										"src": "911:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 21,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1081:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 20,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 19,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1110:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 21,
												"src": "1102:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 18,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1102:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1101:18:0"
									},
									"src": "1075:45:0"
								},
								{
									"documentation": {
										"id": 22,
										"nodeType": "StructuredDocumentation",
										"src": "1126:345:0",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 30,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1482:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1517:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1509:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 23,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1509:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 26,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1534:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1526:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 25,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1526:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 28,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1553:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1545:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 27,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1545:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1508:52:0"
									},
									"src": "1476:85:0"
								},
								{
									"documentation": {
										"id": 31,
										"nodeType": "StructuredDocumentation",
										"src": "1567:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 35,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1752:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 33,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1781:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 35,
												"src": "1773:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 32,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1773:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1772:18:0"
									},
									"src": "1746:45:0"
								},
								{
									"documentation": {
										"id": 36,
										"nodeType": "StructuredDocumentation",
										"src": "1797:195:0",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 40,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2003:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 39,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 38,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2031:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "2023:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 37,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2023:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2022:17:0"
									},
									"src": "1997:43:0"
								}
							],
							"scope": 137,
							"src": "278:1764:0",
							"usedErrors": [
								11,
								16,
								21,
								30,
								35,
								40
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 42,
								"nodeType": "StructuredDocumentation",
								"src": "2044:141:0",
								"text": " @dev Standard ERC721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens."
							},
							"fullyImplemented": true,
							"id": 89,
							"linearizedBaseContracts": [
								89
							],
							"name": "IERC721Errors",
							"nameLocation": "2196:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 43,
										"nodeType": "StructuredDocumentation",
										"src": "2216:219:0",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 47,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2446:18:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 46,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 45,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2473:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 47,
												"src": "2465:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 44,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2465:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2464:15:0"
									},
									"src": "2440:40:0"
								},
								{
									"documentation": {
										"id": 48,
										"nodeType": "StructuredDocumentation",
										"src": "2486:132:0",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 52,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2629:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 51,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 50,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2660:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 52,
												"src": "2652:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 49,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2652:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2651:17:0"
									},
									"src": "2623:46:0"
								},
								{
									"documentation": {
										"id": 53,
										"nodeType": "StructuredDocumentation",
										"src": "2675:289:0",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 61,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2975:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 55,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3004:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "2996:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 54,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2996:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3020:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "3012:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 56,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3012:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3037:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "3029:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 58,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3029:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2995:48:0"
									},
									"src": "2969:75:0"
								},
								{
									"documentation": {
										"id": 62,
										"nodeType": "StructuredDocumentation",
										"src": "3050:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 66,
									"name": "ERC721InvalidSender",
									"nameLocation": "3213:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 65,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 64,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3241:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 66,
												"src": "3233:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 63,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3233:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3232:16:0"
									},
									"src": "3207:42:0"
								},
								{
									"documentation": {
										"id": 67,
										"nodeType": "StructuredDocumentation",
										"src": "3255:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 71,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3425:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3455:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 71,
												"src": "3447:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 68,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3447:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3446:18:0"
									},
									"src": "3419:46:0"
								},
								{
									"documentation": {
										"id": 72,
										"nodeType": "StructuredDocumentation",
										"src": "3471:247:0",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 78,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3729:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 77,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3764:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 78,
												"src": "3756:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 73,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3756:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 76,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3782:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 78,
												"src": "3774:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 75,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3774:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3755:35:0"
									},
									"src": "3723:68:0"
								},
								{
									"documentation": {
										"id": 79,
										"nodeType": "StructuredDocumentation",
										"src": "3797:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 83,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3982:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 82,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 81,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4012:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 83,
												"src": "4004:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 80,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4004:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4003:18:0"
									},
									"src": "3976:46:0"
								},
								{
									"documentation": {
										"id": 84,
										"nodeType": "StructuredDocumentation",
										"src": "4028:197:0",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 88,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4236:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 86,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4266:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 88,
												"src": "4258:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 85,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4258:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4257:18:0"
									},
									"src": "4230:46:0"
								}
							],
							"scope": 137,
							"src": "2186:2092:0",
							"usedErrors": [
								47,
								52,
								61,
								66,
								71,
								78,
								83,
								88
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 90,
								"nodeType": "StructuredDocumentation",
								"src": "4280:143:0",
								"text": " @dev Standard ERC1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens."
							},
							"fullyImplemented": true,
							"id": 136,
							"linearizedBaseContracts": [
								136
							],
							"name": "IERC1155Errors",
							"nameLocation": "4434:14:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 91,
										"nodeType": "StructuredDocumentation",
										"src": "4455:361:0",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 101,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4827:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 93,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4862:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4854:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 92,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4854:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 95,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4878:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4870:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 94,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4870:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4895:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4887:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 96,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4887:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 99,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4911:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4903:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 98,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4903:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4853:66:0"
									},
									"src": "4821:99:0"
								},
								{
									"documentation": {
										"id": 102,
										"nodeType": "StructuredDocumentation",
										"src": "4926:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 106,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5089:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 104,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5118:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 106,
												"src": "5110:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 103,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5110:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5109:16:0"
									},
									"src": "5083:43:0"
								},
								{
									"documentation": {
										"id": 107,
										"nodeType": "StructuredDocumentation",
										"src": "5132:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 111,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5302:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 110,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 109,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5333:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "5325:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 108,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5325:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5324:18:0"
									},
									"src": "5296:47:0"
								},
								{
									"documentation": {
										"id": 112,
										"nodeType": "StructuredDocumentation",
										"src": "5349:256:0",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 118,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5616:28:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 117,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 114,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5653:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 118,
												"src": "5645:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 113,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5645:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 116,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5671:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 118,
												"src": "5663:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 115,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5663:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5644:33:0"
									},
									"src": "5610:68:0"
								},
								{
									"documentation": {
										"id": 119,
										"nodeType": "StructuredDocumentation",
										"src": "5684:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 123,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5869:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 122,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 121,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5900:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 123,
												"src": "5892:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 120,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5892:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5891:18:0"
									},
									"src": "5863:47:0"
								},
								{
									"documentation": {
										"id": 124,
										"nodeType": "StructuredDocumentation",
										"src": "5916:197:0",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 128,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6124:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 127,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 126,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6155:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "6147:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 125,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6147:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6146:18:0"
									},
									"src": "6118:47:0"
								},
								{
									"documentation": {
										"id": 129,
										"nodeType": "StructuredDocumentation",
										"src": "6171:280:0",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 135,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6462:25:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 134,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 131,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6496:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "6488:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 130,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6488:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 133,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6515:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "6507:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 132,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6507:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6487:41:0"
									},
									"src": "6456:73:0"
								}
							],
							"scope": 137,
							"src": "4424:2107:0",
							"usedErrors": [
								101,
								106,
								111,
								118,
								123,
								128,
								135
							],
							"usedEvents": []
						}
					],
					"src": "112:6420:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/token/ERC1155/ERC1155.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol",
					"exportedSymbols": {
						"Arrays": [
							1803
						],
						"Context": [
							1833
						],
						"ERC1155": [
							1187
						],
						"ERC165": [
							1967
						],
						"IERC1155": [
							1310
						],
						"IERC1155Errors": [
							136
						],
						"IERC1155MetadataURI": [
							1620
						],
						"IERC1155Receiver": [
							1352
						],
						"IERC165": [
							1979
						]
					},
					"id": 1188,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 138,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "109:24:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC1155/IERC1155.sol",
							"file": "./IERC1155.sol",
							"id": 140,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1188,
							"sourceUnit": 1311,
							"src": "135:40:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 139,
										"name": "IERC1155",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1310,
										"src": "143:8:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol",
							"file": "./IERC1155Receiver.sol",
							"id": 142,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1188,
							"sourceUnit": 1353,
							"src": "176:56:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 141,
										"name": "IERC1155Receiver",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1352,
										"src": "184:16:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol",
							"file": "./extensions/IERC1155MetadataURI.sol",
							"id": 144,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1188,
							"sourceUnit": 1621,
							"src": "233:73:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 143,
										"name": "IERC1155MetadataURI",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1620,
										"src": "241:19:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 146,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1188,
							"sourceUnit": 1834,
							"src": "307:48:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 145,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1833,
										"src": "315:7:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
							"file": "../../utils/introspection/ERC165.sol",
							"id": 149,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1188,
							"sourceUnit": 1968,
							"src": "356:69:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 147,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1979,
										"src": "364:7:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								},
								{
									"foreign": {
										"id": 148,
										"name": "ERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1967,
										"src": "373:6:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Arrays.sol",
							"file": "../../utils/Arrays.sol",
							"id": 151,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1188,
							"sourceUnit": 1804,
							"src": "426:46:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 150,
										"name": "Arrays",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1803,
										"src": "434:6:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 153,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1188,
							"sourceUnit": 137,
							"src": "473:67:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 152,
										"name": "IERC1155Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 136,
										"src": "481:14:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 155,
										"name": "Context",
										"nameLocations": [
											"756:7:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1833,
										"src": "756:7:1"
									},
									"id": 156,
									"nodeType": "InheritanceSpecifier",
									"src": "756:7:1"
								},
								{
									"baseName": {
										"id": 157,
										"name": "ERC165",
										"nameLocations": [
											"765:6:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1967,
										"src": "765:6:1"
									},
									"id": 158,
									"nodeType": "InheritanceSpecifier",
									"src": "765:6:1"
								},
								{
									"baseName": {
										"id": 159,
										"name": "IERC1155",
										"nameLocations": [
											"773:8:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1310,
										"src": "773:8:1"
									},
									"id": 160,
									"nodeType": "InheritanceSpecifier",
									"src": "773:8:1"
								},
								{
									"baseName": {
										"id": 161,
										"name": "IERC1155MetadataURI",
										"nameLocations": [
											"783:19:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1620,
										"src": "783:19:1"
									},
									"id": 162,
									"nodeType": "InheritanceSpecifier",
									"src": "783:19:1"
								},
								{
									"baseName": {
										"id": 163,
										"name": "IERC1155Errors",
										"nameLocations": [
											"804:14:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 136,
										"src": "804:14:1"
									},
									"id": 164,
									"nodeType": "InheritanceSpecifier",
									"src": "804:14:1"
								}
							],
							"canonicalName": "ERC1155",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 154,
								"nodeType": "StructuredDocumentation",
								"src": "542:184:1",
								"text": " @dev Implementation of the basic standard multi-token.\n See https://eips.ethereum.org/EIPS/eip-1155\n Originally based on code by Enjin: https://github.com/enjin/erc-1155"
							},
							"fullyImplemented": true,
							"id": 1187,
							"linearizedBaseContracts": [
								1187,
								136,
								1620,
								1310,
								1967,
								1979,
								1833
							],
							"name": "ERC1155",
							"nameLocation": "745:7:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 168,
									"libraryName": {
										"id": 165,
										"name": "Arrays",
										"nameLocations": [
											"831:6:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1803,
										"src": "831:6:1"
									},
									"nodeType": "UsingForDirective",
									"src": "825:27:1",
									"typeName": {
										"baseType": {
											"id": 166,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "842:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 167,
										"nodeType": "ArrayTypeName",
										"src": "842:9:1",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
											"typeString": "uint256[]"
										}
									}
								},
								{
									"global": false,
									"id": 172,
									"libraryName": {
										"id": 169,
										"name": "Arrays",
										"nameLocations": [
											"863:6:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1803,
										"src": "863:6:1"
									},
									"nodeType": "UsingForDirective",
									"src": "857:27:1",
									"typeName": {
										"baseType": {
											"id": 170,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "874:7:1",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"id": 171,
										"nodeType": "ArrayTypeName",
										"src": "874:9:1",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
											"typeString": "address[]"
										}
									}
								},
								{
									"constant": false,
									"id": 178,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "957:9:1",
									"nodeType": "VariableDeclaration",
									"scope": 1187,
									"src": "890:76:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(uint256 => mapping(address => uint256))"
									},
									"typeName": {
										"id": 177,
										"keyName": "id",
										"keyNameLocation": "906:2:1",
										"keyType": {
											"id": 173,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "898:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "890:58:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(uint256 => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 176,
											"keyName": "account",
											"keyNameLocation": "928:7:1",
											"keyType": {
												"id": 174,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "920:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "912:35:1",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 175,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "939:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 184,
									"mutability": "mutable",
									"name": "_operatorApprovals",
									"nameLocation": "1043:18:1",
									"nodeType": "VariableDeclaration",
									"scope": 1187,
									"src": "973:88:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
										"typeString": "mapping(address => mapping(address => bool))"
									},
									"typeName": {
										"id": 183,
										"keyName": "account",
										"keyNameLocation": "989:7:1",
										"keyType": {
											"id": 179,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "981:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "973:61:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
											"typeString": "mapping(address => mapping(address => bool))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 182,
											"keyName": "operator",
											"keyNameLocation": "1016:8:1",
											"keyType": {
												"id": 180,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1008:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1000:33:1",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 181,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1028:4:1",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 186,
									"mutability": "mutable",
									"name": "_uri",
									"nameLocation": "1197:4:1",
									"nodeType": "VariableDeclaration",
									"scope": 1187,
									"src": "1182:19:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 185,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1182:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 196,
										"nodeType": "Block",
										"src": "1283:30:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 193,
															"name": "uri_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 189,
															"src": "1301:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 192,
														"name": "_setURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 810,
														"src": "1293:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (string memory)"
														}
													},
													"id": 194,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1293:13:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 195,
												"nodeType": "ExpressionStatement",
												"src": "1293:13:1"
											}
										]
									},
									"documentation": {
										"id": 187,
										"nodeType": "StructuredDocumentation",
										"src": "1208:38:1",
										"text": " @dev See {_setURI}."
									},
									"id": 197,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 190,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 189,
												"mutability": "mutable",
												"name": "uri_",
												"nameLocation": "1277:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 197,
												"src": "1263:18:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 188,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1263:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1262:20:1"
									},
									"returnParameters": {
										"id": 191,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1283:0:1"
									},
									"scope": 1187,
									"src": "1251:62:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1966,
										1978
									],
									"body": {
										"id": 227,
										"nodeType": "Block",
										"src": "1488:197:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 225,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 220,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 213,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 208,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 200,
																"src": "1517:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 210,
																			"name": "IERC1155",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1310,
																			"src": "1537:8:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC1155_$1310_$",
																				"typeString": "type(contract IERC1155)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC1155_$1310_$",
																				"typeString": "type(contract IERC1155)"
																			}
																		],
																		"id": 209,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "1532:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 211,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1532:14:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC1155_$1310",
																		"typeString": "type(contract IERC1155)"
																	}
																},
																"id": 212,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1547:11:1",
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "1532:26:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "1517:41:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "||",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 219,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 214,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 200,
																"src": "1574:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 216,
																			"name": "IERC1155MetadataURI",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1620,
																			"src": "1594:19:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC1155MetadataURI_$1620_$",
																				"typeString": "type(contract IERC1155MetadataURI)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC1155MetadataURI_$1620_$",
																				"typeString": "type(contract IERC1155MetadataURI)"
																			}
																		],
																		"id": 215,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "1589:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 217,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1589:25:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC1155MetadataURI_$1620",
																		"typeString": "type(contract IERC1155MetadataURI)"
																	}
																},
																"id": 218,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1615:11:1",
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "1589:37:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "1574:52:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "1517:109:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 223,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 200,
																"src": "1666:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 221,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "1642:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_ERC1155_$1187_$",
																	"typeString": "type(contract super ERC1155)"
																}
															},
															"id": 222,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1648:17:1",
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1966,
															"src": "1642:23:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 224,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1642:36:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1517:161:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 207,
												"id": 226,
												"nodeType": "Return",
												"src": "1498:180:1"
											}
										]
									},
									"documentation": {
										"id": 198,
										"nodeType": "StructuredDocumentation",
										"src": "1319:56:1",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 228,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "1389:17:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 204,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 202,
												"name": "ERC165",
												"nameLocations": [
													"1456:6:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1967,
												"src": "1456:6:1"
											},
											{
												"id": 203,
												"name": "IERC165",
												"nameLocations": [
													"1464:7:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1979,
												"src": "1464:7:1"
											}
										],
										"src": "1447:25:1"
									},
									"parameters": {
										"id": 201,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 200,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "1414:11:1",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "1407:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 199,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1407:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1406:20:1"
									},
									"returnParameters": {
										"id": 207,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 206,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "1482:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 205,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1482:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1481:6:1"
									},
									"scope": 1187,
									"src": "1380:305:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1619
									],
									"body": {
										"id": 238,
										"nodeType": "Block",
										"src": "2159:28:1",
										"statements": [
											{
												"expression": {
													"id": 236,
													"name": "_uri",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 186,
													"src": "2176:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 235,
												"id": 237,
												"nodeType": "Return",
												"src": "2169:11:1"
											}
										]
									},
									"documentation": {
										"id": 229,
										"nodeType": "StructuredDocumentation",
										"src": "1691:388:1",
										"text": " @dev See {IERC1155MetadataURI-uri}.\n This implementation returns the same URI for *all* token types. It relies\n on the token type ID substitution mechanism\n https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\n Clients calling this function must replace the `\\{id\\}` substring with the\n actual token type ID."
									},
									"functionSelector": "0e89341c",
									"id": 239,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "uri",
									"nameLocation": "2093:3:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 232,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 231,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 239,
												"src": "2097:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 230,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2097:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2096:18:1"
									},
									"returnParameters": {
										"id": 235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 234,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 239,
												"src": "2144:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 233,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2144:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2143:15:1"
									},
									"scope": 1187,
									"src": "2084:103:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1248
									],
									"body": {
										"id": 255,
										"nodeType": "Block",
										"src": "2333:46:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 249,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 178,
															"src": "2350:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(uint256 => mapping(address => uint256))"
															}
														},
														"id": 251,
														"indexExpression": {
															"id": 250,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 244,
															"src": "2360:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "2350:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 253,
													"indexExpression": {
														"id": 252,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 242,
														"src": "2364:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2350:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 248,
												"id": 254,
												"nodeType": "Return",
												"src": "2343:29:1"
											}
										]
									},
									"documentation": {
										"id": 240,
										"nodeType": "StructuredDocumentation",
										"src": "2193:49:1",
										"text": " @dev See {IERC1155-balanceOf}."
									},
									"functionSelector": "00fdd58e",
									"id": 256,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "2256:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 245,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 242,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2274:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "2266:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 241,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2266:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 244,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "2291:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "2283:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 243,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2283:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2265:29:1"
									},
									"returnParameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 247,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "2324:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 246,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2324:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2323:9:1"
									},
									"scope": 1187,
									"src": "2247:132:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1261
									],
									"body": {
										"id": 325,
										"nodeType": "Block",
										"src": "2678:410:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 273,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 269,
															"name": "accounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 260,
															"src": "2692:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														"id": 270,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2701:6:1",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "2692:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"id": 271,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 263,
															"src": "2711:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 272,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2715:6:1",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "2711:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2692:29:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 282,
												"nodeType": "IfStatement",
												"src": "2688:121:1",
												"trueBody": {
													"id": 281,
													"nodeType": "Block",
													"src": "2723:86:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"expression": {
																			"id": 275,
																			"name": "ids",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 263,
																			"src": "2770:3:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																				"typeString": "uint256[] memory"
																			}
																		},
																		"id": 276,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2774:6:1",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "2770:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"expression": {
																			"id": 277,
																			"name": "accounts",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 260,
																			"src": "2782:8:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																				"typeString": "address[] memory"
																			}
																		},
																		"id": 278,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2791:6:1",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "2782:15:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 274,
																	"name": "ERC1155InvalidArrayLength",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 135,
																	"src": "2744:25:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$",
																		"typeString": "function (uint256,uint256) pure"
																	}
																},
																"id": 279,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2744:54:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 280,
															"nodeType": "RevertStatement",
															"src": "2737:61:1"
														}
													]
												}
											},
											{
												"assignments": [
													287
												],
												"declarations": [
													{
														"constant": false,
														"id": 287,
														"mutability": "mutable",
														"name": "batchBalances",
														"nameLocation": "2836:13:1",
														"nodeType": "VariableDeclaration",
														"scope": 325,
														"src": "2819:30:1",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 285,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2819:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 286,
															"nodeType": "ArrayTypeName",
															"src": "2819:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 294,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 291,
																"name": "accounts",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 260,
																"src": "2866:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																	"typeString": "address[] memory"
																}
															},
															"id": 292,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2875:6:1",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "2866:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 290,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "2852:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 288,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2856:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 289,
															"nodeType": "ArrayTypeName",
															"src": "2856:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														}
													},
													"id": 293,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2852:30:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2819:63:1"
											},
											{
												"body": {
													"id": 321,
													"nodeType": "Block",
													"src": "2939:112:1",
													"statements": [
														{
															"expression": {
																"id": 319,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 306,
																		"name": "batchBalances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 287,
																		"src": "2953:13:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 308,
																	"indexExpression": {
																		"id": 307,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 296,
																		"src": "2967:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "2953:16:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 312,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 296,
																					"src": "3010:1:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"id": 310,
																					"name": "accounts",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 260,
																					"src": "2982:8:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																						"typeString": "address[] memory"
																					}
																				},
																				"id": 311,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "2991:18:1",
																				"memberName": "unsafeMemoryAccess",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1802,
																				"src": "2982:27:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_array$_t_address_$dyn_memory_ptr_$_t_uint256_$returns$_t_address_$attached_to$_t_array$_t_address_$dyn_memory_ptr_$",
																					"typeString": "function (address[] memory,uint256) pure returns (address)"
																				}
																			},
																			"id": 313,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "2982:30:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"arguments": [
																				{
																					"id": 316,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 296,
																					"src": "3037:1:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"id": 314,
																					"name": "ids",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 263,
																					"src": "3014:3:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																						"typeString": "uint256[] memory"
																					}
																				},
																				"id": 315,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "3018:18:1",
																				"memberName": "unsafeMemoryAccess",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1789,
																				"src": "3014:22:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$",
																					"typeString": "function (uint256[] memory,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 317,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3014:25:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 309,
																		"name": "balanceOf",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 256,
																		"src": "2972:9:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (address,uint256) view returns (uint256)"
																		}
																	},
																	"id": 318,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2972:68:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2953:87:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 320,
															"nodeType": "ExpressionStatement",
															"src": "2953:87:1"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 302,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 299,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 296,
														"src": "2913:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 300,
															"name": "accounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 260,
															"src": "2917:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														"id": 301,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2926:6:1",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "2917:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2913:19:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 322,
												"initializationExpression": {
													"assignments": [
														296
													],
													"declarations": [
														{
															"constant": false,
															"id": 296,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "2906:1:1",
															"nodeType": "VariableDeclaration",
															"scope": 322,
															"src": "2898:9:1",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 295,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2898:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 298,
													"initialValue": {
														"hexValue": "30",
														"id": 297,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2910:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "2898:13:1"
												},
												"loopExpression": {
													"expression": {
														"id": 304,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": true,
														"src": "2934:3:1",
														"subExpression": {
															"id": 303,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 296,
															"src": "2936:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 305,
													"nodeType": "ExpressionStatement",
													"src": "2934:3:1"
												},
												"nodeType": "ForStatement",
												"src": "2893:158:1"
											},
											{
												"expression": {
													"id": 323,
													"name": "batchBalances",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 287,
													"src": "3068:13:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"functionReturnParameters": 268,
												"id": 324,
												"nodeType": "Return",
												"src": "3061:20:1"
											}
										]
									},
									"documentation": {
										"id": 257,
										"nodeType": "StructuredDocumentation",
										"src": "2385:146:1",
										"text": " @dev See {IERC1155-balanceOfBatch}.\n Requirements:\n - `accounts` and `ids` must have the same length."
									},
									"functionSelector": "4e1273f4",
									"id": 326,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOfBatch",
									"nameLocation": "2545:14:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 264,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 260,
												"mutability": "mutable",
												"name": "accounts",
												"nameLocation": "2586:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 326,
												"src": "2569:25:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 258,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2569:7:1",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 259,
													"nodeType": "ArrayTypeName",
													"src": "2569:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 263,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "2621:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 326,
												"src": "2604:20:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 261,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2604:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 262,
													"nodeType": "ArrayTypeName",
													"src": "2604:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2559:71:1"
									},
									"returnParameters": {
										"id": 268,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 267,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 326,
												"src": "2660:16:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 265,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2660:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 266,
													"nodeType": "ArrayTypeName",
													"src": "2660:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2659:18:1"
									},
									"scope": 1187,
									"src": "2536:552:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1269
									],
									"body": {
										"id": 341,
										"nodeType": "Block",
										"src": "3231:69:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 335,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1815,
																"src": "3260:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 336,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3260:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 337,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 329,
															"src": "3274:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 338,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 331,
															"src": "3284:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 334,
														"name": "_setApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1032,
														"src": "3241:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 339,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3241:52:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 340,
												"nodeType": "ExpressionStatement",
												"src": "3241:52:1"
											}
										]
									},
									"documentation": {
										"id": 327,
										"nodeType": "StructuredDocumentation",
										"src": "3094:57:1",
										"text": " @dev See {IERC1155-setApprovalForAll}."
									},
									"functionSelector": "a22cb465",
									"id": 342,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "3165:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 332,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 329,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3191:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 342,
												"src": "3183:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 328,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3183:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 331,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "3206:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 342,
												"src": "3201:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 330,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3201:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3182:33:1"
									},
									"returnParameters": {
										"id": 333,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3231:0:1"
									},
									"scope": 1187,
									"src": "3156:144:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1279
									],
									"body": {
										"id": 358,
										"nodeType": "Block",
										"src": "3463:61:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 352,
															"name": "_operatorApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 184,
															"src": "3480:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																"typeString": "mapping(address => mapping(address => bool))"
															}
														},
														"id": 354,
														"indexExpression": {
															"id": 353,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 345,
															"src": "3499:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3480:27:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 356,
													"indexExpression": {
														"id": 355,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 347,
														"src": "3508:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3480:37:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 351,
												"id": 357,
												"nodeType": "Return",
												"src": "3473:44:1"
											}
										]
									},
									"documentation": {
										"id": 343,
										"nodeType": "StructuredDocumentation",
										"src": "3306:56:1",
										"text": " @dev See {IERC1155-isApprovedForAll}."
									},
									"functionSelector": "e985e9c5",
									"id": 359,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "3376:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 348,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 345,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3401:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 359,
												"src": "3393:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 344,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3393:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 347,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3418:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 359,
												"src": "3410:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 346,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3410:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3392:35:1"
									},
									"returnParameters": {
										"id": 351,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 350,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 359,
												"src": "3457:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 349,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3457:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3456:6:1"
									},
									"scope": 1187,
									"src": "3367:157:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1293
									],
									"body": {
										"id": 402,
										"nodeType": "Block",
										"src": "3704:238:1",
										"statements": [
											{
												"assignments": [
													374
												],
												"declarations": [
													{
														"constant": false,
														"id": 374,
														"mutability": "mutable",
														"name": "sender",
														"nameLocation": "3722:6:1",
														"nodeType": "VariableDeclaration",
														"scope": 402,
														"src": "3714:14:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 373,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3714:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 377,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 375,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1815,
														"src": "3731:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 376,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3731:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3714:29:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 386,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 380,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 378,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 362,
															"src": "3757:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"id": 379,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 374,
															"src": "3765:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "3757:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 385,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "3775:31:1",
														"subExpression": {
															"arguments": [
																{
																	"id": 382,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 362,
																	"src": "3793:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 383,
																	"name": "sender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 374,
																	"src": "3799:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 381,
																"name": "isApprovedForAll",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 359,
																"src": "3776:16:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address,address) view returns (bool)"
																}
															},
															"id": 384,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3776:30:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "3757:49:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 393,
												"nodeType": "IfStatement",
												"src": "3753:129:1",
												"trueBody": {
													"id": 392,
													"nodeType": "Block",
													"src": "3808:74:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 388,
																		"name": "sender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 374,
																		"src": "3858:6:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 389,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 362,
																		"src": "3866:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 387,
																	"name": "ERC1155MissingApprovalForAll",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 118,
																	"src": "3829:28:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (address,address) pure"
																	}
																},
																"id": 390,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3829:42:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 391,
															"nodeType": "RevertStatement",
															"src": "3822:49:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 395,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 362,
															"src": "3909:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 396,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 364,
															"src": "3915:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 397,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 366,
															"src": "3919:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 398,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 368,
															"src": "3923:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 399,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 370,
															"src": "3930:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 394,
														"name": "_safeTransferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 744,
														"src": "3891:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,uint256,bytes memory)"
														}
													},
													"id": 400,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3891:44:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 401,
												"nodeType": "ExpressionStatement",
												"src": "3891:44:1"
											}
										]
									},
									"documentation": {
										"id": 360,
										"nodeType": "StructuredDocumentation",
										"src": "3530:56:1",
										"text": " @dev See {IERC1155-safeTransferFrom}."
									},
									"functionSelector": "f242432a",
									"id": 403,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "3600:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 371,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 362,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3625:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 403,
												"src": "3617:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 361,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3617:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 364,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3639:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 403,
												"src": "3631:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 363,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3631:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 366,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "3651:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 403,
												"src": "3643:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 365,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3643:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 368,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3663:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 403,
												"src": "3655:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 367,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3655:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 370,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3683:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 403,
												"src": "3670:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 369,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3670:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3616:72:1"
									},
									"returnParameters": {
										"id": 372,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3704:0:1"
									},
									"scope": 1187,
									"src": "3591:351:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1309
									],
									"body": {
										"id": 448,
										"nodeType": "Block",
										"src": "4198:245:1",
										"statements": [
											{
												"assignments": [
													420
												],
												"declarations": [
													{
														"constant": false,
														"id": 420,
														"mutability": "mutable",
														"name": "sender",
														"nameLocation": "4216:6:1",
														"nodeType": "VariableDeclaration",
														"scope": 448,
														"src": "4208:14:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 419,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4208:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 423,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 421,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1815,
														"src": "4225:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 422,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4225:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4208:29:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 432,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 426,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 424,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 406,
															"src": "4251:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"id": 425,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 420,
															"src": "4259:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "4251:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 431,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "4269:31:1",
														"subExpression": {
															"arguments": [
																{
																	"id": 428,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 406,
																	"src": "4287:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 429,
																	"name": "sender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 420,
																	"src": "4293:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 427,
																"name": "isApprovedForAll",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 359,
																"src": "4270:16:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address,address) view returns (bool)"
																}
															},
															"id": 430,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4270:30:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4251:49:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 439,
												"nodeType": "IfStatement",
												"src": "4247:129:1",
												"trueBody": {
													"id": 438,
													"nodeType": "Block",
													"src": "4302:74:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 434,
																		"name": "sender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 420,
																		"src": "4352:6:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 435,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 406,
																		"src": "4360:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 433,
																	"name": "ERC1155MissingApprovalForAll",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 118,
																	"src": "4323:28:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (address,address) pure"
																	}
																},
																"id": 436,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4323:42:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 437,
															"nodeType": "RevertStatement",
															"src": "4316:49:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 441,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 406,
															"src": "4408:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 442,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 408,
															"src": "4414:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 443,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 411,
															"src": "4418:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 444,
															"name": "values",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 414,
															"src": "4423:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 445,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 416,
															"src": "4431:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 440,
														"name": "_safeBatchTransferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 799,
														"src": "4385:22:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 446,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4385:51:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 447,
												"nodeType": "ExpressionStatement",
												"src": "4385:51:1"
											}
										]
									},
									"documentation": {
										"id": 404,
										"nodeType": "StructuredDocumentation",
										"src": "3948:61:1",
										"text": " @dev See {IERC1155-safeBatchTransferFrom}."
									},
									"functionSelector": "2eb2c2d6",
									"id": 449,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeBatchTransferFrom",
									"nameLocation": "4023:21:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 417,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 406,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4062:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 449,
												"src": "4054:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 405,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4054:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 408,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4084:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 449,
												"src": "4076:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 407,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4076:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 411,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "4113:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 449,
												"src": "4096:20:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 409,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "4096:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 410,
													"nodeType": "ArrayTypeName",
													"src": "4096:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 414,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "4143:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 449,
												"src": "4126:23:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 412,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "4126:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 413,
													"nodeType": "ArrayTypeName",
													"src": "4126:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 416,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4172:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 449,
												"src": "4159:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 415,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4159:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4044:138:1"
									},
									"returnParameters": {
										"id": 418,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4198:0:1"
									},
									"scope": 1187,
									"src": "4014:429:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 601,
										"nodeType": "Block",
										"src": "5251:1174:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 467,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 463,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 457,
															"src": "5265:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 464,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5269:6:1",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5265:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"id": 465,
															"name": "values",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 460,
															"src": "5279:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 466,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5286:6:1",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5279:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5265:27:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 476,
												"nodeType": "IfStatement",
												"src": "5261:117:1",
												"trueBody": {
													"id": 475,
													"nodeType": "Block",
													"src": "5294:84:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"expression": {
																			"id": 469,
																			"name": "ids",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 457,
																			"src": "5341:3:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																				"typeString": "uint256[] memory"
																			}
																		},
																		"id": 470,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5345:6:1",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "5341:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"expression": {
																			"id": 471,
																			"name": "values",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 460,
																			"src": "5353:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																				"typeString": "uint256[] memory"
																			}
																		},
																		"id": 472,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5360:6:1",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "5353:13:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 468,
																	"name": "ERC1155InvalidArrayLength",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 135,
																	"src": "5315:25:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$",
																		"typeString": "function (uint256,uint256) pure"
																	}
																},
																"id": 473,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5315:52:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 474,
															"nodeType": "RevertStatement",
															"src": "5308:59:1"
														}
													]
												}
											},
											{
												"assignments": [
													478
												],
												"declarations": [
													{
														"constant": false,
														"id": 478,
														"mutability": "mutable",
														"name": "operator",
														"nameLocation": "5396:8:1",
														"nodeType": "VariableDeclaration",
														"scope": 601,
														"src": "5388:16:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 477,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5388:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 481,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 479,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1815,
														"src": "5407:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 480,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5407:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5388:31:1"
											},
											{
												"body": {
													"id": 562,
													"nodeType": "Block",
													"src": "5471:650:1",
													"statements": [
														{
															"assignments": [
																494
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 494,
																	"mutability": "mutable",
																	"name": "id",
																	"nameLocation": "5493:2:1",
																	"nodeType": "VariableDeclaration",
																	"scope": 562,
																	"src": "5485:10:1",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 493,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "5485:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 499,
															"initialValue": {
																"arguments": [
																	{
																		"id": 497,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 483,
																		"src": "5521:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 495,
																		"name": "ids",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 457,
																		"src": "5498:3:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 496,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5502:18:1",
																	"memberName": "unsafeMemoryAccess",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1789,
																	"src": "5498:22:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$",
																		"typeString": "function (uint256[] memory,uint256) pure returns (uint256)"
																	}
																},
																"id": 498,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5498:25:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "5485:38:1"
														},
														{
															"assignments": [
																501
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 501,
																	"mutability": "mutable",
																	"name": "value",
																	"nameLocation": "5545:5:1",
																	"nodeType": "VariableDeclaration",
																	"scope": 562,
																	"src": "5537:13:1",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 500,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "5537:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 506,
															"initialValue": {
																"arguments": [
																	{
																		"id": 504,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 483,
																		"src": "5579:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 502,
																		"name": "values",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 460,
																		"src": "5553:6:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 503,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5560:18:1",
																	"memberName": "unsafeMemoryAccess",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1789,
																	"src": "5553:25:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$",
																		"typeString": "function (uint256[] memory,uint256) pure returns (uint256)"
																	}
																},
																"id": 505,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5553:28:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "5537:44:1"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 512,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 507,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 452,
																	"src": "5600:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 510,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5616:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 509,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5608:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 508,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5608:7:1",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 511,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5608:10:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "5600:18:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 545,
															"nodeType": "IfStatement",
															"src": "5596:420:1",
															"trueBody": {
																"id": 544,
																"nodeType": "Block",
																"src": "5620:396:1",
																"statements": [
																	{
																		"assignments": [
																			514
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 514,
																				"mutability": "mutable",
																				"name": "fromBalance",
																				"nameLocation": "5646:11:1",
																				"nodeType": "VariableDeclaration",
																				"scope": 544,
																				"src": "5638:19:1",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 513,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "5638:7:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 520,
																		"initialValue": {
																			"baseExpression": {
																				"baseExpression": {
																					"id": 515,
																					"name": "_balances",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 178,
																					"src": "5660:9:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																						"typeString": "mapping(uint256 => mapping(address => uint256))"
																					}
																				},
																				"id": 517,
																				"indexExpression": {
																					"id": 516,
																					"name": "id",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 494,
																					"src": "5670:2:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "5660:13:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 519,
																			"indexExpression": {
																				"id": 518,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 452,
																				"src": "5674:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "5660:19:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "5638:41:1"
																	},
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 523,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 521,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 514,
																				"src": "5701:11:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<",
																			"rightExpression": {
																				"id": 522,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 501,
																				"src": "5715:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "5701:19:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 532,
																		"nodeType": "IfStatement",
																		"src": "5697:129:1",
																		"trueBody": {
																			"id": 531,
																			"nodeType": "Block",
																			"src": "5722:104:1",
																			"statements": [
																				{
																					"errorCall": {
																						"arguments": [
																							{
																								"id": 525,
																								"name": "from",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 452,
																								"src": "5778:4:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							},
																							{
																								"id": 526,
																								"name": "fromBalance",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 514,
																								"src": "5784:11:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							{
																								"id": 527,
																								"name": "value",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 501,
																								"src": "5797:5:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							{
																								"id": 528,
																								"name": "id",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 494,
																								"src": "5804:2:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								},
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							],
																							"id": 524,
																							"name": "ERC1155InsufficientBalance",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 101,
																							"src": "5751:26:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
																								"typeString": "function (address,uint256,uint256,uint256) pure"
																							}
																						},
																						"id": 529,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "5751:56:1",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_tuple$__$",
																							"typeString": "tuple()"
																						}
																					},
																					"id": 530,
																					"nodeType": "RevertStatement",
																					"src": "5744:63:1"
																				}
																			]
																		}
																	},
																	{
																		"id": 543,
																		"nodeType": "UncheckedBlock",
																		"src": "5843:159:1",
																		"statements": [
																			{
																				"expression": {
																					"id": 541,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftHandSide": {
																						"baseExpression": {
																							"baseExpression": {
																								"id": 533,
																								"name": "_balances",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 178,
																								"src": "5942:9:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																									"typeString": "mapping(uint256 => mapping(address => uint256))"
																								}
																							},
																							"id": 536,
																							"indexExpression": {
																								"id": 534,
																								"name": "id",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 494,
																								"src": "5952:2:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "IndexAccess",
																							"src": "5942:13:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																								"typeString": "mapping(address => uint256)"
																							}
																						},
																						"id": 537,
																						"indexExpression": {
																							"id": 535,
																							"name": "from",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 452,
																							"src": "5956:4:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": true,
																						"nodeType": "IndexAccess",
																						"src": "5942:19:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "Assignment",
																					"operator": "=",
																					"rightHandSide": {
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 540,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 538,
																							"name": "fromBalance",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 514,
																							"src": "5964:11:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "-",
																						"rightExpression": {
																							"id": 539,
																							"name": "value",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 501,
																							"src": "5978:5:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "5964:19:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "5942:41:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 542,
																				"nodeType": "ExpressionStatement",
																				"src": "5942:41:1"
																			}
																		]
																	}
																]
															}
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 551,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 546,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 454,
																	"src": "6034:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 549,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "6048:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 548,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "6040:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 547,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "6040:7:1",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 550,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6040:10:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "6034:16:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 561,
															"nodeType": "IfStatement",
															"src": "6030:81:1",
															"trueBody": {
																"id": 560,
																"nodeType": "Block",
																"src": "6052:59:1",
																"statements": [
																	{
																		"expression": {
																			"id": 558,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"baseExpression": {
																					"baseExpression": {
																						"id": 552,
																						"name": "_balances",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 178,
																						"src": "6070:9:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																							"typeString": "mapping(uint256 => mapping(address => uint256))"
																						}
																					},
																					"id": 555,
																					"indexExpression": {
																						"id": 553,
																						"name": "id",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 494,
																						"src": "6080:2:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "6070:13:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																						"typeString": "mapping(address => uint256)"
																					}
																				},
																				"id": 556,
																				"indexExpression": {
																					"id": 554,
																					"name": "to",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 454,
																					"src": "6084:2:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "6070:17:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "+=",
																			"rightHandSide": {
																				"id": 557,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 501,
																				"src": "6091:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6070:26:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 559,
																		"nodeType": "ExpressionStatement",
																		"src": "6070:26:1"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 489,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 486,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 483,
														"src": "5450:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 487,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 457,
															"src": "5454:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 488,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5458:6:1",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5454:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5450:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 563,
												"initializationExpression": {
													"assignments": [
														483
													],
													"declarations": [
														{
															"constant": false,
															"id": 483,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "5443:1:1",
															"nodeType": "VariableDeclaration",
															"scope": 563,
															"src": "5435:9:1",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 482,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "5435:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 485,
													"initialValue": {
														"hexValue": "30",
														"id": 484,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5447:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "5435:13:1"
												},
												"loopExpression": {
													"expression": {
														"id": 491,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": true,
														"src": "5466:3:1",
														"subExpression": {
															"id": 490,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 483,
															"src": "5468:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 492,
													"nodeType": "ExpressionStatement",
													"src": "5466:3:1"
												},
												"nodeType": "ForStatement",
												"src": "5430:691:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 567,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 564,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 457,
															"src": "6135:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 565,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6139:6:1",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "6135:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "31",
														"id": 566,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6149:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "6135:15:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 599,
													"nodeType": "Block",
													"src": "6343:76:1",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 592,
																		"name": "operator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 478,
																		"src": "6376:8:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 593,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 452,
																		"src": "6386:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 594,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 454,
																		"src": "6392:2:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 595,
																		"name": "ids",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 457,
																		"src": "6396:3:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	{
																		"id": 596,
																		"name": "values",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 460,
																		"src": "6401:6:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		},
																		{
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	],
																	"id": 591,
																	"name": "TransferBatch",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1222,
																	"src": "6362:13:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
																		"typeString": "function (address,address,address,uint256[] memory,uint256[] memory)"
																	}
																},
																"id": 597,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6362:46:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 598,
															"nodeType": "EmitStatement",
															"src": "6357:51:1"
														}
													]
												},
												"id": 600,
												"nodeType": "IfStatement",
												"src": "6131:288:1",
												"trueBody": {
													"id": 590,
													"nodeType": "Block",
													"src": "6152:185:1",
													"statements": [
														{
															"assignments": [
																569
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 569,
																	"mutability": "mutable",
																	"name": "id",
																	"nameLocation": "6174:2:1",
																	"nodeType": "VariableDeclaration",
																	"scope": 590,
																	"src": "6166:10:1",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 568,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6166:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 574,
															"initialValue": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 572,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6202:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"expression": {
																		"id": 570,
																		"name": "ids",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 457,
																		"src": "6179:3:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 571,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6183:18:1",
																	"memberName": "unsafeMemoryAccess",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1789,
																	"src": "6179:22:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$",
																		"typeString": "function (uint256[] memory,uint256) pure returns (uint256)"
																	}
																},
																"id": 573,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6179:25:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6166:38:1"
														},
														{
															"assignments": [
																576
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 576,
																	"mutability": "mutable",
																	"name": "value",
																	"nameLocation": "6226:5:1",
																	"nodeType": "VariableDeclaration",
																	"scope": 590,
																	"src": "6218:13:1",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 575,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6218:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 581,
															"initialValue": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 579,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6260:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"expression": {
																		"id": 577,
																		"name": "values",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 460,
																		"src": "6234:6:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 578,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6241:18:1",
																	"memberName": "unsafeMemoryAccess",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1789,
																	"src": "6234:25:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$",
																		"typeString": "function (uint256[] memory,uint256) pure returns (uint256)"
																	}
																},
																"id": 580,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6234:28:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6218:44:1"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 583,
																		"name": "operator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 478,
																		"src": "6296:8:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 584,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 452,
																		"src": "6306:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 585,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 454,
																		"src": "6312:2:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 586,
																		"name": "id",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 569,
																		"src": "6316:2:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 587,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 576,
																		"src": "6320:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 582,
																	"name": "TransferSingle",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1207,
																	"src": "6281:14:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,address,uint256,uint256)"
																	}
																},
																"id": 588,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6281:45:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 589,
															"nodeType": "EmitStatement",
															"src": "6276:50:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 450,
										"nodeType": "StructuredDocumentation",
										"src": "4449:690:1",
										"text": " @dev Transfers a `value` amount of tokens of type `id` from `from` to `to`. Will mint (or burn) if `from`\n (or `to`) is the zero address.\n Emits a {TransferSingle} event if the arrays contain one element, and {TransferBatch} otherwise.\n Requirements:\n - If `to` refers to a smart contract, it must implement either {IERC1155Receiver-onERC1155Received}\n   or {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\n - `ids` and `values` must have the same length.\n NOTE: The ERC-1155 acceptance check is not performed in this function. See {_updateWithAcceptanceCheck} instead."
									},
									"id": 602,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "5153:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 461,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 452,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5169:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "5161:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 451,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5161:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 454,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5183:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "5175:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 453,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5175:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 457,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "5204:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "5187:20:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 455,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "5187:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 456,
													"nodeType": "ArrayTypeName",
													"src": "5187:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 460,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "5226:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "5209:23:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 458,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "5209:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 459,
													"nodeType": "ArrayTypeName",
													"src": "5209:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5160:73:1"
									},
									"returnParameters": {
										"id": 462,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5251:0:1"
									},
									"scope": 1187,
									"src": "5144:1281:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 677,
										"nodeType": "Block",
										"src": "7195:499:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 619,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 605,
															"src": "7213:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 620,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 607,
															"src": "7219:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 621,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 610,
															"src": "7223:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 622,
															"name": "values",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 613,
															"src": "7228:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														],
														"id": 618,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 602,
														"src": "7205:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256[] memory,uint256[] memory)"
														}
													},
													"id": 623,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7205:30:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 624,
												"nodeType": "ExpressionStatement",
												"src": "7205:30:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 630,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 625,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 607,
														"src": "7249:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 628,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7263:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 627,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7255:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 626,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7255:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 629,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7255:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7249:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 676,
												"nodeType": "IfStatement",
												"src": "7245:443:1",
												"trueBody": {
													"id": 675,
													"nodeType": "Block",
													"src": "7267:421:1",
													"statements": [
														{
															"assignments": [
																632
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 632,
																	"mutability": "mutable",
																	"name": "operator",
																	"nameLocation": "7289:8:1",
																	"nodeType": "VariableDeclaration",
																	"scope": 675,
																	"src": "7281:16:1",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"typeName": {
																		"id": 631,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7281:7:1",
																		"stateMutability": "nonpayable",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 635,
															"initialValue": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 633,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1815,
																	"src": "7300:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 634,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7300:12:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "7281:31:1"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 639,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 636,
																		"name": "ids",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 610,
																		"src": "7330:3:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 637,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "7334:6:1",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "7330:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 638,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7344:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7330:15:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 673,
																"nodeType": "Block",
																"src": "7571:107:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 665,
																					"name": "operator",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 632,
																					"src": "7625:8:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 666,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 605,
																					"src": "7635:4:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 667,
																					"name": "to",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 607,
																					"src": "7641:2:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 668,
																					"name": "ids",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 610,
																					"src": "7645:3:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																						"typeString": "uint256[] memory"
																					}
																				},
																				{
																					"id": 669,
																					"name": "values",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 613,
																					"src": "7650:6:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																						"typeString": "uint256[] memory"
																					}
																				},
																				{
																					"id": 670,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 615,
																					"src": "7658:4:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																						"typeString": "uint256[] memory"
																					},
																					{
																						"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																						"typeString": "uint256[] memory"
																					},
																					{
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				],
																				"id": 664,
																				"name": "_doSafeBatchTransferAcceptanceCheck",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1170,
																				"src": "7589:35:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
																					"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
																				}
																			},
																			"id": 671,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7589:74:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 672,
																		"nodeType": "ExpressionStatement",
																		"src": "7589:74:1"
																	}
																]
															},
															"id": 674,
															"nodeType": "IfStatement",
															"src": "7326:352:1",
															"trueBody": {
																"id": 663,
																"nodeType": "Block",
																"src": "7347:218:1",
																"statements": [
																	{
																		"assignments": [
																			641
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 641,
																				"mutability": "mutable",
																				"name": "id",
																				"nameLocation": "7373:2:1",
																				"nodeType": "VariableDeclaration",
																				"scope": 663,
																				"src": "7365:10:1",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 640,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "7365:7:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 646,
																		"initialValue": {
																			"arguments": [
																				{
																					"hexValue": "30",
																					"id": 644,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "7401:1:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					}
																				],
																				"expression": {
																					"id": 642,
																					"name": "ids",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 610,
																					"src": "7378:3:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																						"typeString": "uint256[] memory"
																					}
																				},
																				"id": 643,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "7382:18:1",
																				"memberName": "unsafeMemoryAccess",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1789,
																				"src": "7378:22:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$",
																					"typeString": "function (uint256[] memory,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 645,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7378:25:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "7365:38:1"
																	},
																	{
																		"assignments": [
																			648
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 648,
																				"mutability": "mutable",
																				"name": "value",
																				"nameLocation": "7429:5:1",
																				"nodeType": "VariableDeclaration",
																				"scope": 663,
																				"src": "7421:13:1",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 647,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "7421:7:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 653,
																		"initialValue": {
																			"arguments": [
																				{
																					"hexValue": "30",
																					"id": 651,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "7463:1:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					}
																				],
																				"expression": {
																					"id": 649,
																					"name": "values",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 613,
																					"src": "7437:6:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																						"typeString": "uint256[] memory"
																					}
																				},
																				"id": 650,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "7444:18:1",
																				"memberName": "unsafeMemoryAccess",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1789,
																				"src": "7437:25:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$",
																					"typeString": "function (uint256[] memory,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 652,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7437:28:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "7421:44:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 655,
																					"name": "operator",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 632,
																					"src": "7514:8:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 656,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 605,
																					"src": "7524:4:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 657,
																					"name": "to",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 607,
																					"src": "7530:2:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 658,
																					"name": "id",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 641,
																					"src": "7534:2:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 659,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 648,
																					"src": "7538:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 660,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 615,
																					"src": "7545:4:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				],
																				"id": 654,
																				"name": "_doSafeTransferAcceptanceCheck",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1100,
																				"src": "7483:30:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
																					"typeString": "function (address,address,address,uint256,uint256,bytes memory)"
																				}
																			},
																			"id": 661,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7483:67:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 662,
																		"nodeType": "ExpressionStatement",
																		"src": "7483:67:1"
																	}
																]
															}
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 603,
										"nodeType": "StructuredDocumentation",
										"src": "6431:568:1",
										"text": " @dev Version of {_update} that performs the token acceptance check by calling\n {IERC1155Receiver-onERC1155Received} or {IERC1155Receiver-onERC1155BatchReceived} on the receiver address if it\n contains code (eg. is a smart contract at the moment of execution).\n IMPORTANT: Overriding this function is discouraged because it poses a reentrancy risk from the receiver. So any\n update to the contract state after this function would break the check-effect-interaction pattern. Consider\n overriding {_update} instead."
									},
									"id": 678,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_updateWithAcceptanceCheck",
									"nameLocation": "7013:26:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 616,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 605,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "7057:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 678,
												"src": "7049:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 604,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7049:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 607,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "7079:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 678,
												"src": "7071:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 606,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7071:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 610,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "7108:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 678,
												"src": "7091:20:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 608,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "7091:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 609,
													"nodeType": "ArrayTypeName",
													"src": "7091:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 613,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "7138:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 678,
												"src": "7121:23:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 611,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "7121:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 612,
													"nodeType": "ArrayTypeName",
													"src": "7121:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 615,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7167:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 678,
												"src": "7154:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 614,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7154:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7039:138:1"
									},
									"returnParameters": {
										"id": 617,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7195:0:1"
									},
									"scope": 1187,
									"src": "7004:690:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 743,
										"nodeType": "Block",
										"src": "8259:355:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 697,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 692,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 683,
														"src": "8273:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 695,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8287:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 694,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8279:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 693,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8279:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 696,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8279:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8273:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 706,
												"nodeType": "IfStatement",
												"src": "8269:88:1",
												"trueBody": {
													"id": 705,
													"nodeType": "Block",
													"src": "8291:66:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 701,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8343:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 700,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8335:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 699,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8335:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 702,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8335:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 698,
																	"name": "ERC1155InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 111,
																	"src": "8312:22:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 703,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8312:34:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 704,
															"nodeType": "RevertStatement",
															"src": "8305:41:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 712,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 707,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 681,
														"src": "8370:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 710,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8386:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 709,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8378:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 708,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8378:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 711,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8378:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8370:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 721,
												"nodeType": "IfStatement",
												"src": "8366:88:1",
												"trueBody": {
													"id": 720,
													"nodeType": "Block",
													"src": "8390:64:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 716,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8440:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 715,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8432:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 714,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8432:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 717,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8432:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 713,
																	"name": "ERC1155InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 106,
																	"src": "8411:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 718,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8411:32:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 719,
															"nodeType": "RevertStatement",
															"src": "8404:39:1"
														}
													]
												}
											},
											{
												"assignments": [
													726,
													729
												],
												"declarations": [
													{
														"constant": false,
														"id": 726,
														"mutability": "mutable",
														"name": "ids",
														"nameLocation": "8481:3:1",
														"nodeType": "VariableDeclaration",
														"scope": 743,
														"src": "8464:20:1",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 724,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "8464:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 725,
															"nodeType": "ArrayTypeName",
															"src": "8464:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 729,
														"mutability": "mutable",
														"name": "values",
														"nameLocation": "8503:6:1",
														"nodeType": "VariableDeclaration",
														"scope": 743,
														"src": "8486:23:1",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 727,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "8486:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 728,
															"nodeType": "ArrayTypeName",
															"src": "8486:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 734,
												"initialValue": {
													"arguments": [
														{
															"id": 731,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 685,
															"src": "8532:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 732,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 687,
															"src": "8536:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 730,
														"name": "_asSingletonArrays",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1186,
														"src": "8513:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256,uint256) pure returns (uint256[] memory,uint256[] memory)"
														}
													},
													"id": 733,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8513:29:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$",
														"typeString": "tuple(uint256[] memory,uint256[] memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8463:79:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 736,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 681,
															"src": "8579:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 737,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 683,
															"src": "8585:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 738,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 726,
															"src": "8589:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 739,
															"name": "values",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 729,
															"src": "8594:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 740,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 689,
															"src": "8602:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 735,
														"name": "_updateWithAcceptanceCheck",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 678,
														"src": "8552:26:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 741,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8552:55:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 742,
												"nodeType": "ExpressionStatement",
												"src": "8552:55:1"
											}
										]
									},
									"documentation": {
										"id": 679,
										"nodeType": "StructuredDocumentation",
										"src": "7700:446:1",
										"text": " @dev Transfers a `value` tokens of token type `id` from `from` to `to`.\n Emits a {TransferSingle} event.\n Requirements:\n - `to` cannot be the zero address.\n - `from` must have a balance of tokens of type `id` of at least `value` amount.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."
									},
									"id": 744,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeTransferFrom",
									"nameLocation": "8160:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 690,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 681,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "8186:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 744,
												"src": "8178:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 680,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8178:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 683,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "8200:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 744,
												"src": "8192:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 682,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8192:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 685,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "8212:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 744,
												"src": "8204:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 684,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8204:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 687,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8224:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 744,
												"src": "8216:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 686,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8216:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 689,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "8244:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 744,
												"src": "8231:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 688,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8231:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8177:72:1"
									},
									"returnParameters": {
										"id": 691,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8259:0:1"
									},
									"scope": 1187,
									"src": "8151:463:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 798,
										"nodeType": "Block",
										"src": "9194:266:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 765,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 760,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 749,
														"src": "9208:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 763,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9222:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 762,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9214:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 761,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9214:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 764,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9214:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9208:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 774,
												"nodeType": "IfStatement",
												"src": "9204:88:1",
												"trueBody": {
													"id": 773,
													"nodeType": "Block",
													"src": "9226:66:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 769,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9278:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 768,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9270:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 767,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9270:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 770,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9270:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 766,
																	"name": "ERC1155InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 111,
																	"src": "9247:22:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 771,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9247:34:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 772,
															"nodeType": "RevertStatement",
															"src": "9240:41:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 780,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 775,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 747,
														"src": "9305:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 778,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9321:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 777,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9313:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 776,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9313:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 779,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9313:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9305:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 789,
												"nodeType": "IfStatement",
												"src": "9301:88:1",
												"trueBody": {
													"id": 788,
													"nodeType": "Block",
													"src": "9325:64:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 784,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9375:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 783,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9367:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 782,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9367:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 785,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9367:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 781,
																	"name": "ERC1155InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 106,
																	"src": "9346:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 786,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9346:32:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 787,
															"nodeType": "RevertStatement",
															"src": "9339:39:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 791,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 747,
															"src": "9425:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 792,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 749,
															"src": "9431:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 793,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 752,
															"src": "9435:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 794,
															"name": "values",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 755,
															"src": "9440:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 795,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 757,
															"src": "9448:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 790,
														"name": "_updateWithAcceptanceCheck",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 678,
														"src": "9398:26:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 796,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9398:55:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 797,
												"nodeType": "ExpressionStatement",
												"src": "9398:55:1"
											}
										]
									},
									"documentation": {
										"id": 745,
										"nodeType": "StructuredDocumentation",
										"src": "8620:390:1",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_safeTransferFrom}.\n Emits a {TransferBatch} event.\n Requirements:\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n acceptance magic value.\n - `ids` and `values` must have the same length."
									},
									"id": 799,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeBatchTransferFrom",
									"nameLocation": "9024:22:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 758,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 747,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "9064:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 799,
												"src": "9056:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 746,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9056:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 749,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "9086:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 799,
												"src": "9078:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 748,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9078:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 752,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "9115:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 799,
												"src": "9098:20:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 750,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "9098:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 751,
													"nodeType": "ArrayTypeName",
													"src": "9098:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 755,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "9145:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 799,
												"src": "9128:23:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 753,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "9128:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 754,
													"nodeType": "ArrayTypeName",
													"src": "9128:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 757,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "9174:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 799,
												"src": "9161:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 756,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "9161:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9046:138:1"
									},
									"returnParameters": {
										"id": 759,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9194:0:1"
									},
									"scope": 1187,
									"src": "9015:445:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 809,
										"nodeType": "Block",
										"src": "10338:30:1",
										"statements": [
											{
												"expression": {
													"id": 807,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 805,
														"name": "_uri",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 186,
														"src": "10348:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 806,
														"name": "newuri",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 802,
														"src": "10355:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "10348:13:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 808,
												"nodeType": "ExpressionStatement",
												"src": "10348:13:1"
											}
										]
									},
									"documentation": {
										"id": 800,
										"nodeType": "StructuredDocumentation",
										"src": "9466:811:1",
										"text": " @dev Sets a new URI for all token types, by relying on the token type ID\n substitution mechanism\n https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\n By this mechanism, any occurrence of the `\\{id\\}` substring in either the\n URI or any of the values in the JSON file at said URI will be replaced by\n clients with the token type ID.\n For example, the `https://token-cdn-domain/\\{id\\}.json` URI would be\n interpreted by clients as\n `https://token-cdn-domain/000000000000000000000000000000000000000000000000000000000004cce0.json`\n for token type ID 0x4cce0.\n See {uri}.\n Because these URIs cannot be meaningfully represented by the {URI} event,\n this function emits no events."
									},
									"id": 810,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setURI",
									"nameLocation": "10291:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 803,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 802,
												"mutability": "mutable",
												"name": "newuri",
												"nameLocation": "10313:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 810,
												"src": "10299:20:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 801,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "10299:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10298:22:1"
									},
									"returnParameters": {
										"id": 804,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10338:0:1"
									},
									"scope": 1187,
									"src": "10282:86:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 861,
										"nodeType": "Block",
										"src": "10828:264:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 827,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 822,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 813,
														"src": "10842:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 825,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10856:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 824,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10848:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 823,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10848:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 826,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10848:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10842:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 836,
												"nodeType": "IfStatement",
												"src": "10838:88:1",
												"trueBody": {
													"id": 835,
													"nodeType": "Block",
													"src": "10860:66:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 831,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10912:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 830,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10904:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 829,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10904:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 832,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10904:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 828,
																	"name": "ERC1155InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 111,
																	"src": "10881:22:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 833,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10881:34:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 834,
															"nodeType": "RevertStatement",
															"src": "10874:41:1"
														}
													]
												}
											},
											{
												"assignments": [
													841,
													844
												],
												"declarations": [
													{
														"constant": false,
														"id": 841,
														"mutability": "mutable",
														"name": "ids",
														"nameLocation": "10953:3:1",
														"nodeType": "VariableDeclaration",
														"scope": 861,
														"src": "10936:20:1",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 839,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "10936:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 840,
															"nodeType": "ArrayTypeName",
															"src": "10936:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 844,
														"mutability": "mutable",
														"name": "values",
														"nameLocation": "10975:6:1",
														"nodeType": "VariableDeclaration",
														"scope": 861,
														"src": "10958:23:1",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 842,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "10958:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 843,
															"nodeType": "ArrayTypeName",
															"src": "10958:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 849,
												"initialValue": {
													"arguments": [
														{
															"id": 846,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 815,
															"src": "11004:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 847,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 817,
															"src": "11008:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 845,
														"name": "_asSingletonArrays",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1186,
														"src": "10985:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256,uint256) pure returns (uint256[] memory,uint256[] memory)"
														}
													},
													"id": 848,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10985:29:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$",
														"typeString": "tuple(uint256[] memory,uint256[] memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10935:79:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 853,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11059:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 852,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11051:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 851,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11051:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 854,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11051:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 855,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 813,
															"src": "11063:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 856,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 841,
															"src": "11067:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 857,
															"name": "values",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 844,
															"src": "11072:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 858,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 819,
															"src": "11080:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 850,
														"name": "_updateWithAcceptanceCheck",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 678,
														"src": "11024:26:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 859,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11024:61:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 860,
												"nodeType": "ExpressionStatement",
												"src": "11024:61:1"
											}
										]
									},
									"documentation": {
										"id": 811,
										"nodeType": "StructuredDocumentation",
										"src": "10374:367:1",
										"text": " @dev Creates a `value` amount of tokens of type `id`, and assigns them to `to`.\n Emits a {TransferSingle} event.\n Requirements:\n - `to` cannot be the zero address.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."
									},
									"id": 862,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "10755:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 820,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 813,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "10769:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 862,
												"src": "10761:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 812,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10761:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 815,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "10781:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 862,
												"src": "10773:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 814,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10773:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 817,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10793:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 862,
												"src": "10785:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 816,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10785:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 819,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "10813:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 862,
												"src": "10800:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 818,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "10800:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10760:58:1"
									},
									"returnParameters": {
										"id": 821,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10828:0:1"
									},
									"scope": 1187,
									"src": "10746:346:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 902,
										"nodeType": "Block",
										"src": "11630:175:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 881,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 876,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 865,
														"src": "11644:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 879,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11658:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 878,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "11650:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 877,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "11650:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 880,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "11650:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "11644:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 890,
												"nodeType": "IfStatement",
												"src": "11640:88:1",
												"trueBody": {
													"id": 889,
													"nodeType": "Block",
													"src": "11662:66:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 885,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "11714:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 884,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "11706:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 883,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "11706:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 886,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11706:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 882,
																	"name": "ERC1155InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 111,
																	"src": "11683:22:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 887,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11683:34:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 888,
															"nodeType": "RevertStatement",
															"src": "11676:41:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 894,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11772:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 893,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11764:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 892,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11764:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 895,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11764:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 896,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 865,
															"src": "11776:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 897,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 868,
															"src": "11780:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 898,
															"name": "values",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 871,
															"src": "11785:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 899,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 873,
															"src": "11793:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 891,
														"name": "_updateWithAcceptanceCheck",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 678,
														"src": "11737:26:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 900,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11737:61:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 901,
												"nodeType": "ExpressionStatement",
												"src": "11737:61:1"
											}
										]
									},
									"documentation": {
										"id": 863,
										"nodeType": "StructuredDocumentation",
										"src": "11098:420:1",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_mint}.\n Emits a {TransferBatch} event.\n Requirements:\n - `ids` and `values` must have the same length.\n - `to` cannot be the zero address.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n acceptance magic value."
									},
									"id": 903,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mintBatch",
									"nameLocation": "11532:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 874,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 865,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "11551:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 903,
												"src": "11543:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 864,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11543:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 868,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "11572:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 903,
												"src": "11555:20:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 866,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "11555:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 867,
													"nodeType": "ArrayTypeName",
													"src": "11555:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 871,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "11594:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 903,
												"src": "11577:23:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 869,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "11577:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 870,
													"nodeType": "ArrayTypeName",
													"src": "11577:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 873,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "11615:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 903,
												"src": "11602:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 872,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "11602:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11542:78:1"
									},
									"returnParameters": {
										"id": 875,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11630:0:1"
									},
									"scope": 1187,
									"src": "11523:282:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 952,
										"nodeType": "Block",
										"src": "12164:264:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 918,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 913,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 906,
														"src": "12178:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 916,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12194:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 915,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "12186:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 914,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "12186:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 917,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "12186:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "12178:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 927,
												"nodeType": "IfStatement",
												"src": "12174:88:1",
												"trueBody": {
													"id": 926,
													"nodeType": "Block",
													"src": "12198:64:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 922,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12248:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 921,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "12240:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 920,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "12240:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 923,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "12240:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 919,
																	"name": "ERC1155InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 106,
																	"src": "12219:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 924,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12219:32:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 925,
															"nodeType": "RevertStatement",
															"src": "12212:39:1"
														}
													]
												}
											},
											{
												"assignments": [
													932,
													935
												],
												"declarations": [
													{
														"constant": false,
														"id": 932,
														"mutability": "mutable",
														"name": "ids",
														"nameLocation": "12289:3:1",
														"nodeType": "VariableDeclaration",
														"scope": 952,
														"src": "12272:20:1",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 930,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "12272:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 931,
															"nodeType": "ArrayTypeName",
															"src": "12272:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 935,
														"mutability": "mutable",
														"name": "values",
														"nameLocation": "12311:6:1",
														"nodeType": "VariableDeclaration",
														"scope": 952,
														"src": "12294:23:1",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 933,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "12294:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 934,
															"nodeType": "ArrayTypeName",
															"src": "12294:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 940,
												"initialValue": {
													"arguments": [
														{
															"id": 937,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 908,
															"src": "12340:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 938,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 910,
															"src": "12344:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 936,
														"name": "_asSingletonArrays",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1186,
														"src": "12321:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256,uint256) pure returns (uint256[] memory,uint256[] memory)"
														}
													},
													"id": 939,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12321:29:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$",
														"typeString": "tuple(uint256[] memory,uint256[] memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12271:79:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 942,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 906,
															"src": "12387:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 945,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12401:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 944,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "12393:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 943,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "12393:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 946,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12393:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 947,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 932,
															"src": "12405:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 948,
															"name": "values",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 935,
															"src": "12410:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"hexValue": "",
															"id": 949,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12418:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 941,
														"name": "_updateWithAcceptanceCheck",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 678,
														"src": "12360:26:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 950,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12360:61:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 951,
												"nodeType": "ExpressionStatement",
												"src": "12360:61:1"
											}
										]
									},
									"documentation": {
										"id": 904,
										"nodeType": "StructuredDocumentation",
										"src": "11811:283:1",
										"text": " @dev Destroys a `value` amount of tokens of type `id` from `from`\n Emits a {TransferSingle} event.\n Requirements:\n - `from` cannot be the zero address.\n - `from` must have at least `value` amount of tokens of type `id`."
									},
									"id": 953,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "12108:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 911,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 906,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "12122:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 953,
												"src": "12114:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 905,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12114:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 908,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "12136:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 953,
												"src": "12128:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 907,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12128:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 910,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "12148:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 953,
												"src": "12140:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 909,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12140:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12113:41:1"
									},
									"returnParameters": {
										"id": 912,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12164:0:1"
									},
									"scope": 1187,
									"src": "12099:329:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 991,
										"nodeType": "Block",
										"src": "12874:175:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 970,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 965,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 956,
														"src": "12888:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 968,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12904:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 967,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "12896:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 966,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "12896:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 969,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "12896:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "12888:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 979,
												"nodeType": "IfStatement",
												"src": "12884:88:1",
												"trueBody": {
													"id": 978,
													"nodeType": "Block",
													"src": "12908:64:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 974,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12958:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 973,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "12950:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 972,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "12950:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 975,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "12950:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 971,
																	"name": "ERC1155InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 106,
																	"src": "12929:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 976,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12929:32:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 977,
															"nodeType": "RevertStatement",
															"src": "12922:39:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 981,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 956,
															"src": "13008:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 984,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13022:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 983,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "13014:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 982,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "13014:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 985,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13014:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 986,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 959,
															"src": "13026:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 987,
															"name": "values",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 962,
															"src": "13031:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"hexValue": "",
															"id": 988,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13039:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 980,
														"name": "_updateWithAcceptanceCheck",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 678,
														"src": "12981:26:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 989,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12981:61:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 990,
												"nodeType": "ExpressionStatement",
												"src": "12981:61:1"
											}
										]
									},
									"documentation": {
										"id": 954,
										"nodeType": "StructuredDocumentation",
										"src": "12434:345:1",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_burn}.\n Emits a {TransferBatch} event.\n Requirements:\n - `from` cannot be the zero address.\n - `from` must have at least `value` amount of tokens of type `id`.\n - `ids` and `values` must have the same length."
									},
									"id": 992,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burnBatch",
									"nameLocation": "12793:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 963,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 956,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "12812:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 992,
												"src": "12804:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 955,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12804:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 959,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "12835:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 992,
												"src": "12818:20:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 957,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "12818:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 958,
													"nodeType": "ArrayTypeName",
													"src": "12818:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 962,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "12857:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 992,
												"src": "12840:23:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 960,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "12840:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 961,
													"nodeType": "ArrayTypeName",
													"src": "12840:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12803:61:1"
									},
									"returnParameters": {
										"id": 964,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12874:0:1"
									},
									"scope": 1187,
									"src": "12784:265:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1031,
										"nodeType": "Block",
										"src": "13361:222:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1007,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1002,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 997,
														"src": "13375:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1005,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "13395:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1004,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "13387:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1003,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "13387:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 1006,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "13387:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "13375:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1016,
												"nodeType": "IfStatement",
												"src": "13371:94:1",
												"trueBody": {
													"id": 1015,
													"nodeType": "Block",
													"src": "13399:66:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1011,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "13451:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1010,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "13443:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1009,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "13443:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1012,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "13443:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1008,
																	"name": "ERC1155InvalidOperator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 128,
																	"src": "13420:22:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 1013,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "13420:34:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1014,
															"nodeType": "RevertStatement",
															"src": "13413:41:1"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1023,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1017,
																"name": "_operatorApprovals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 184,
																"src": "13474:18:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																	"typeString": "mapping(address => mapping(address => bool))"
																}
															},
															"id": 1020,
															"indexExpression": {
																"id": 1018,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 995,
																"src": "13493:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "13474:25:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1021,
														"indexExpression": {
															"id": 1019,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 997,
															"src": "13500:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "13474:35:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1022,
														"name": "approved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 999,
														"src": "13512:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "13474:46:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1024,
												"nodeType": "ExpressionStatement",
												"src": "13474:46:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1026,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 995,
															"src": "13550:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1027,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 997,
															"src": "13557:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1028,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 999,
															"src": "13567:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1025,
														"name": "ApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1231,
														"src": "13535:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 1029,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13535:41:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1030,
												"nodeType": "EmitStatement",
												"src": "13530:46:1"
											}
										]
									},
									"documentation": {
										"id": 993,
										"nodeType": "StructuredDocumentation",
										"src": "13055:208:1",
										"text": " @dev Approve `operator` to operate on all of `owner` tokens\n Emits an {ApprovalForAll} event.\n Requirements:\n - `operator` cannot be the zero address."
									},
									"id": 1032,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setApprovalForAll",
									"nameLocation": "13277:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1000,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 995,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "13304:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 1032,
												"src": "13296:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 994,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13296:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 997,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "13319:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1032,
												"src": "13311:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 996,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13311:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 999,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "13334:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1032,
												"src": "13329:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 998,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "13329:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13295:48:1"
									},
									"returnParameters": {
										"id": 1001,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13361:0:1"
									},
									"scope": 1187,
									"src": "13268:315:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1099,
										"nodeType": "Block",
										"src": "13953:782:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1052,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 1048,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1039,
																"src": "13967:2:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1049,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "13970:4:1",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "13967:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1050,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "13975:6:1",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "13967:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1051,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "13984:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "13967:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1098,
												"nodeType": "IfStatement",
												"src": "13963:766:1",
												"trueBody": {
													"id": 1097,
													"nodeType": "Block",
													"src": "13987:742:1",
													"statements": [
														{
															"clauses": [
																{
																	"block": {
																		"id": 1077,
																		"nodeType": "Block",
																		"src": "14103:206:1",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					},
																					"id": 1070,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1066,
																						"name": "response",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1064,
																						"src": "14125:8:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "!=",
																					"rightExpression": {
																						"expression": {
																							"expression": {
																								"id": 1067,
																								"name": "IERC1155Receiver",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1352,
																								"src": "14137:16:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$1352_$",
																									"typeString": "type(contract IERC1155Receiver)"
																								}
																							},
																							"id": 1068,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"memberLocation": "14154:17:1",
																							"memberName": "onERC1155Received",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1333,
																							"src": "14137:34:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$",
																								"typeString": "function IERC1155Receiver.onERC1155Received(address,address,uint256,uint256,bytes calldata) returns (bytes4)"
																							}
																						},
																						"id": 1069,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"memberLocation": "14172:8:1",
																						"memberName": "selector",
																						"nodeType": "MemberAccess",
																						"src": "14137:43:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"src": "14125:55:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 1076,
																				"nodeType": "IfStatement",
																				"src": "14121:174:1",
																				"trueBody": {
																					"id": 1075,
																					"nodeType": "Block",
																					"src": "14182:113:1",
																					"statements": [
																						{
																							"errorCall": {
																								"arguments": [
																									{
																										"id": 1072,
																										"name": "to",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1039,
																										"src": "14273:2:1",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									],
																									"id": 1071,
																									"name": "ERC1155InvalidReceiver",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 111,
																									"src": "14250:22:1",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																										"typeString": "function (address) pure"
																									}
																								},
																								"id": 1073,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "14250:26:1",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 1074,
																							"nodeType": "RevertStatement",
																							"src": "14243:33:1"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1078,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1065,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1064,
																				"mutability": "mutable",
																				"name": "response",
																				"nameLocation": "14093:8:1",
																				"nodeType": "VariableDeclaration",
																				"scope": 1078,
																				"src": "14086:15:1",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				},
																				"typeName": {
																					"id": 1063,
																					"name": "bytes4",
																					"nodeType": "ElementaryTypeName",
																					"src": "14086:6:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "14085:17:1"
																	},
																	"src": "14077:232:1"
																},
																{
																	"block": {
																		"id": 1094,
																		"nodeType": "Block",
																		"src": "14338:381:1",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1085,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"expression": {
																							"id": 1082,
																							"name": "reason",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1080,
																							"src": "14360:6:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes_memory_ptr",
																								"typeString": "bytes memory"
																							}
																						},
																						"id": 1083,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "14367:6:1",
																						"memberName": "length",
																						"nodeType": "MemberAccess",
																						"src": "14360:13:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "==",
																					"rightExpression": {
																						"hexValue": "30",
																						"id": 1084,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "14377:1:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					},
																					"src": "14360:18:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"falseBody": {
																					"id": 1092,
																					"nodeType": "Block",
																					"src": "14515:190:1",
																					"statements": [
																						{
																							"AST": {
																								"nodeType": "YulBlock",
																								"src": "14601:86:1",
																								"statements": [
																									{
																										"expression": {
																											"arguments": [
																												{
																													"arguments": [
																														{
																															"kind": "number",
																															"nodeType": "YulLiteral",
																															"src": "14638:2:1",
																															"type": "",
																															"value": "32"
																														},
																														{
																															"name": "reason",
																															"nodeType": "YulIdentifier",
																															"src": "14642:6:1"
																														}
																													],
																													"functionName": {
																														"name": "add",
																														"nodeType": "YulIdentifier",
																														"src": "14634:3:1"
																													},
																													"nodeType": "YulFunctionCall",
																													"src": "14634:15:1"
																												},
																												{
																													"arguments": [
																														{
																															"name": "reason",
																															"nodeType": "YulIdentifier",
																															"src": "14657:6:1"
																														}
																													],
																													"functionName": {
																														"name": "mload",
																														"nodeType": "YulIdentifier",
																														"src": "14651:5:1"
																													},
																													"nodeType": "YulFunctionCall",
																													"src": "14651:13:1"
																												}
																											],
																											"functionName": {
																												"name": "revert",
																												"nodeType": "YulIdentifier",
																												"src": "14627:6:1"
																											},
																											"nodeType": "YulFunctionCall",
																											"src": "14627:38:1"
																										},
																										"nodeType": "YulExpressionStatement",
																										"src": "14627:38:1"
																									}
																								]
																							},
																							"documentation": "@solidity memory-safe-assembly",
																							"evmVersion": "shanghai",
																							"externalReferences": [
																								{
																									"declaration": 1080,
																									"isOffset": false,
																									"isSlot": false,
																									"src": "14642:6:1",
																									"valueSize": 1
																								},
																								{
																									"declaration": 1080,
																									"isOffset": false,
																									"isSlot": false,
																									"src": "14657:6:1",
																									"valueSize": 1
																								}
																							],
																							"id": 1091,
																							"nodeType": "InlineAssembly",
																							"src": "14592:95:1"
																						}
																					]
																				},
																				"id": 1093,
																				"nodeType": "IfStatement",
																				"src": "14356:349:1",
																				"trueBody": {
																					"id": 1090,
																					"nodeType": "Block",
																					"src": "14380:129:1",
																					"statements": [
																						{
																							"errorCall": {
																								"arguments": [
																									{
																										"id": 1087,
																										"name": "to",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1039,
																										"src": "14487:2:1",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									],
																									"id": 1086,
																									"name": "ERC1155InvalidReceiver",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 111,
																									"src": "14464:22:1",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																										"typeString": "function (address) pure"
																									}
																								},
																								"id": 1088,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "14464:26:1",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 1089,
																							"nodeType": "RevertStatement",
																							"src": "14457:33:1"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1095,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1081,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1080,
																				"mutability": "mutable",
																				"name": "reason",
																				"nameLocation": "14330:6:1",
																				"nodeType": "VariableDeclaration",
																				"scope": 1095,
																				"src": "14317:19:1",
																				"stateVariable": false,
																				"storageLocation": "memory",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes"
																				},
																				"typeName": {
																					"id": 1079,
																					"name": "bytes",
																					"nodeType": "ElementaryTypeName",
																					"src": "14317:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_storage_ptr",
																						"typeString": "bytes"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "14316:21:1"
																	},
																	"src": "14310:409:1"
																}
															],
															"externalCall": {
																"arguments": [
																	{
																		"id": 1057,
																		"name": "operator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1035,
																		"src": "14044:8:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1058,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1037,
																		"src": "14054:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1059,
																		"name": "id",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1041,
																		"src": "14060:2:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1060,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1043,
																		"src": "14064:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1061,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1045,
																		"src": "14071:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1054,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1039,
																				"src": "14022:2:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1053,
																			"name": "IERC1155Receiver",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1352,
																			"src": "14005:16:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$1352_$",
																				"typeString": "type(contract IERC1155Receiver)"
																			}
																		},
																		"id": 1055,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "14005:20:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1155Receiver_$1352",
																			"typeString": "contract IERC1155Receiver"
																		}
																	},
																	"id": 1056,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "14026:17:1",
																	"memberName": "onERC1155Received",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1333,
																	"src": "14005:38:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																		"typeString": "function (address,address,uint256,uint256,bytes memory) external returns (bytes4)"
																	}
																},
																"id": 1062,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14005:71:1",
																"tryCall": true,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"id": 1096,
															"nodeType": "TryStatement",
															"src": "14001:718:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1033,
										"nodeType": "StructuredDocumentation",
										"src": "13589:167:1",
										"text": " @dev Performs an acceptance check by calling {IERC1155-onERC1155Received} on the `to` address\n if it contains code at the moment of execution."
									},
									"id": 1100,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_doSafeTransferAcceptanceCheck",
									"nameLocation": "13770:30:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1046,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1035,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "13818:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1100,
												"src": "13810:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1034,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13810:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1037,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "13844:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 1100,
												"src": "13836:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1036,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13836:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1039,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "13866:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 1100,
												"src": "13858:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1038,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13858:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1041,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "13886:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 1100,
												"src": "13878:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1040,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13878:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1043,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "13906:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 1100,
												"src": "13898:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1042,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13898:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1045,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "13934:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 1100,
												"src": "13921:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1044,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "13921:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13800:144:1"
									},
									"returnParameters": {
										"id": 1047,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13953:0:1"
									},
									"scope": 1187,
									"src": "13761:974:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1169,
										"nodeType": "Block",
										"src": "15140:824:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1122,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 1118,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1107,
																"src": "15154:2:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1119,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "15157:4:1",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "15154:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1120,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "15162:6:1",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "15154:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1121,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "15171:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "15154:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1168,
												"nodeType": "IfStatement",
												"src": "15150:808:1",
												"trueBody": {
													"id": 1167,
													"nodeType": "Block",
													"src": "15174:784:1",
													"statements": [
														{
															"clauses": [
																{
																	"block": {
																		"id": 1147,
																		"nodeType": "Block",
																		"src": "15327:211:1",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					},
																					"id": 1140,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1136,
																						"name": "response",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1134,
																						"src": "15349:8:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "!=",
																					"rightExpression": {
																						"expression": {
																							"expression": {
																								"id": 1137,
																								"name": "IERC1155Receiver",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1352,
																								"src": "15361:16:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$1352_$",
																									"typeString": "type(contract IERC1155Receiver)"
																								}
																							},
																							"id": 1138,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"memberLocation": "15378:22:1",
																							"memberName": "onERC1155BatchReceived",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1351,
																							"src": "15361:39:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_calldata_ptr_$_t_array$_t_uint256_$dyn_calldata_ptr_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$",
																								"typeString": "function IERC1155Receiver.onERC1155BatchReceived(address,address,uint256[] calldata,uint256[] calldata,bytes calldata) returns (bytes4)"
																							}
																						},
																						"id": 1139,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"memberLocation": "15401:8:1",
																						"memberName": "selector",
																						"nodeType": "MemberAccess",
																						"src": "15361:48:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"src": "15349:60:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 1146,
																				"nodeType": "IfStatement",
																				"src": "15345:179:1",
																				"trueBody": {
																					"id": 1145,
																					"nodeType": "Block",
																					"src": "15411:113:1",
																					"statements": [
																						{
																							"errorCall": {
																								"arguments": [
																									{
																										"id": 1142,
																										"name": "to",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1107,
																										"src": "15502:2:1",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									],
																									"id": 1141,
																									"name": "ERC1155InvalidReceiver",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 111,
																									"src": "15479:22:1",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																										"typeString": "function (address) pure"
																									}
																								},
																								"id": 1143,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "15479:26:1",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 1144,
																							"nodeType": "RevertStatement",
																							"src": "15472:33:1"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1148,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1135,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1134,
																				"mutability": "mutable",
																				"name": "response",
																				"nameLocation": "15304:8:1",
																				"nodeType": "VariableDeclaration",
																				"scope": 1148,
																				"src": "15297:15:1",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				},
																				"typeName": {
																					"id": 1133,
																					"name": "bytes4",
																					"nodeType": "ElementaryTypeName",
																					"src": "15297:6:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "15279:47:1"
																	},
																	"src": "15271:267:1"
																},
																{
																	"block": {
																		"id": 1164,
																		"nodeType": "Block",
																		"src": "15567:381:1",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1155,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"expression": {
																							"id": 1152,
																							"name": "reason",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1150,
																							"src": "15589:6:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes_memory_ptr",
																								"typeString": "bytes memory"
																							}
																						},
																						"id": 1153,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "15596:6:1",
																						"memberName": "length",
																						"nodeType": "MemberAccess",
																						"src": "15589:13:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "==",
																					"rightExpression": {
																						"hexValue": "30",
																						"id": 1154,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "15606:1:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					},
																					"src": "15589:18:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"falseBody": {
																					"id": 1162,
																					"nodeType": "Block",
																					"src": "15744:190:1",
																					"statements": [
																						{
																							"AST": {
																								"nodeType": "YulBlock",
																								"src": "15830:86:1",
																								"statements": [
																									{
																										"expression": {
																											"arguments": [
																												{
																													"arguments": [
																														{
																															"kind": "number",
																															"nodeType": "YulLiteral",
																															"src": "15867:2:1",
																															"type": "",
																															"value": "32"
																														},
																														{
																															"name": "reason",
																															"nodeType": "YulIdentifier",
																															"src": "15871:6:1"
																														}
																													],
																													"functionName": {
																														"name": "add",
																														"nodeType": "YulIdentifier",
																														"src": "15863:3:1"
																													},
																													"nodeType": "YulFunctionCall",
																													"src": "15863:15:1"
																												},
																												{
																													"arguments": [
																														{
																															"name": "reason",
																															"nodeType": "YulIdentifier",
																															"src": "15886:6:1"
																														}
																													],
																													"functionName": {
																														"name": "mload",
																														"nodeType": "YulIdentifier",
																														"src": "15880:5:1"
																													},
																													"nodeType": "YulFunctionCall",
																													"src": "15880:13:1"
																												}
																											],
																											"functionName": {
																												"name": "revert",
																												"nodeType": "YulIdentifier",
																												"src": "15856:6:1"
																											},
																											"nodeType": "YulFunctionCall",
																											"src": "15856:38:1"
																										},
																										"nodeType": "YulExpressionStatement",
																										"src": "15856:38:1"
																									}
																								]
																							},
																							"documentation": "@solidity memory-safe-assembly",
																							"evmVersion": "shanghai",
																							"externalReferences": [
																								{
																									"declaration": 1150,
																									"isOffset": false,
																									"isSlot": false,
																									"src": "15871:6:1",
																									"valueSize": 1
																								},
																								{
																									"declaration": 1150,
																									"isOffset": false,
																									"isSlot": false,
																									"src": "15886:6:1",
																									"valueSize": 1
																								}
																							],
																							"id": 1161,
																							"nodeType": "InlineAssembly",
																							"src": "15821:95:1"
																						}
																					]
																				},
																				"id": 1163,
																				"nodeType": "IfStatement",
																				"src": "15585:349:1",
																				"trueBody": {
																					"id": 1160,
																					"nodeType": "Block",
																					"src": "15609:129:1",
																					"statements": [
																						{
																							"errorCall": {
																								"arguments": [
																									{
																										"id": 1157,
																										"name": "to",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1107,
																										"src": "15716:2:1",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									],
																									"id": 1156,
																									"name": "ERC1155InvalidReceiver",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 111,
																									"src": "15693:22:1",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																										"typeString": "function (address) pure"
																									}
																								},
																								"id": 1158,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "15693:26:1",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 1159,
																							"nodeType": "RevertStatement",
																							"src": "15686:33:1"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1165,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1151,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1150,
																				"mutability": "mutable",
																				"name": "reason",
																				"nameLocation": "15559:6:1",
																				"nodeType": "VariableDeclaration",
																				"scope": 1165,
																				"src": "15546:19:1",
																				"stateVariable": false,
																				"storageLocation": "memory",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes"
																				},
																				"typeName": {
																					"id": 1149,
																					"name": "bytes",
																					"nodeType": "ElementaryTypeName",
																					"src": "15546:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_storage_ptr",
																						"typeString": "bytes"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "15545:21:1"
																	},
																	"src": "15539:409:1"
																}
															],
															"externalCall": {
																"arguments": [
																	{
																		"id": 1127,
																		"name": "operator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1103,
																		"src": "15236:8:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1128,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1105,
																		"src": "15246:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1129,
																		"name": "ids",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1110,
																		"src": "15252:3:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	{
																		"id": 1130,
																		"name": "values",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1113,
																		"src": "15257:6:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	{
																		"id": 1131,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1115,
																		"src": "15265:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		},
																		{
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1124,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1107,
																				"src": "15209:2:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1123,
																			"name": "IERC1155Receiver",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1352,
																			"src": "15192:16:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$1352_$",
																				"typeString": "type(contract IERC1155Receiver)"
																			}
																		},
																		"id": 1125,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "15192:20:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1155Receiver_$1352",
																			"typeString": "contract IERC1155Receiver"
																		}
																	},
																	"id": 1126,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "15213:22:1",
																	"memberName": "onERC1155BatchReceived",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1351,
																	"src": "15192:43:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																		"typeString": "function (address,address,uint256[] memory,uint256[] memory,bytes memory) external returns (bytes4)"
																	}
																},
																"id": 1132,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "15192:78:1",
																"tryCall": true,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"id": 1166,
															"nodeType": "TryStatement",
															"src": "15188:760:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1101,
										"nodeType": "StructuredDocumentation",
										"src": "14741:177:1",
										"text": " @dev Performs a batch acceptance check by calling {IERC1155-onERC1155BatchReceived} on the `to` address\n if it contains code at the moment of execution."
									},
									"id": 1170,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_doSafeBatchTransferAcceptanceCheck",
									"nameLocation": "14932:35:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1116,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1103,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "14985:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1170,
												"src": "14977:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1102,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14977:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1105,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "15011:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 1170,
												"src": "15003:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1104,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15003:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1107,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "15033:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 1170,
												"src": "15025:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1106,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15025:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1110,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "15062:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 1170,
												"src": "15045:20:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1108,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "15045:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1109,
													"nodeType": "ArrayTypeName",
													"src": "15045:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1113,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "15092:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 1170,
												"src": "15075:23:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1111,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "15075:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1112,
													"nodeType": "ArrayTypeName",
													"src": "15075:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1115,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "15121:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 1170,
												"src": "15108:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1114,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "15108:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14967:164:1"
									},
									"returnParameters": {
										"id": 1117,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15140:0:1"
									},
									"scope": 1187,
									"src": "14923:1041:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1185,
										"nodeType": "Block",
										"src": "16238:691:1",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "16300:623:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16358:21:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16374:4:1",
																		"type": "",
																		"value": "0x40"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "16368:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16368:11:1"
															},
															"variableNames": [
																{
																	"name": "array1",
																	"nodeType": "YulIdentifier",
																	"src": "16358:6:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array1",
																		"nodeType": "YulIdentifier",
																		"src": "16436:6:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16444:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16429:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16429:17:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16429:17:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "array1",
																				"nodeType": "YulIdentifier",
																				"src": "16567:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16575:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16563:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16563:17:1"
																	},
																	{
																		"name": "element1",
																		"nodeType": "YulIdentifier",
																		"src": "16582:8:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16556:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16556:35:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16556:35:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16682:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "array1",
																		"nodeType": "YulIdentifier",
																		"src": "16696:6:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16704:4:1",
																		"type": "",
																		"value": "0x40"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16692:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16692:17:1"
															},
															"variableNames": [
																{
																	"name": "array2",
																	"nodeType": "YulIdentifier",
																	"src": "16682:6:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array2",
																		"nodeType": "YulIdentifier",
																		"src": "16729:6:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16737:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16722:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16722:17:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16722:17:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "array2",
																				"nodeType": "YulIdentifier",
																				"src": "16763:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16771:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16759:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16759:17:1"
																	},
																	{
																		"name": "element2",
																		"nodeType": "YulIdentifier",
																		"src": "16778:8:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16752:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16752:35:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16752:35:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16889:4:1",
																		"type": "",
																		"value": "0x40"
																	},
																	{
																		"arguments": [
																			{
																				"name": "array2",
																				"nodeType": "YulIdentifier",
																				"src": "16899:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16907:4:1",
																				"type": "",
																				"value": "0x40"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16895:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16895:17:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16882:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16882:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16882:31:1"
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 1179,
														"isOffset": false,
														"isSlot": false,
														"src": "16358:6:1",
														"valueSize": 1
													},
													{
														"declaration": 1179,
														"isOffset": false,
														"isSlot": false,
														"src": "16436:6:1",
														"valueSize": 1
													},
													{
														"declaration": 1179,
														"isOffset": false,
														"isSlot": false,
														"src": "16567:6:1",
														"valueSize": 1
													},
													{
														"declaration": 1179,
														"isOffset": false,
														"isSlot": false,
														"src": "16696:6:1",
														"valueSize": 1
													},
													{
														"declaration": 1182,
														"isOffset": false,
														"isSlot": false,
														"src": "16682:6:1",
														"valueSize": 1
													},
													{
														"declaration": 1182,
														"isOffset": false,
														"isSlot": false,
														"src": "16729:6:1",
														"valueSize": 1
													},
													{
														"declaration": 1182,
														"isOffset": false,
														"isSlot": false,
														"src": "16763:6:1",
														"valueSize": 1
													},
													{
														"declaration": 1182,
														"isOffset": false,
														"isSlot": false,
														"src": "16899:6:1",
														"valueSize": 1
													},
													{
														"declaration": 1173,
														"isOffset": false,
														"isSlot": false,
														"src": "16582:8:1",
														"valueSize": 1
													},
													{
														"declaration": 1175,
														"isOffset": false,
														"isSlot": false,
														"src": "16778:8:1",
														"valueSize": 1
													}
												],
												"id": 1184,
												"nodeType": "InlineAssembly",
												"src": "16291:632:1"
											}
										]
									},
									"documentation": {
										"id": 1171,
										"nodeType": "StructuredDocumentation",
										"src": "15970:105:1",
										"text": " @dev Creates an array in memory with only one value for each of the elements provided."
									},
									"id": 1186,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_asSingletonArrays",
									"nameLocation": "16089:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1176,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1173,
												"mutability": "mutable",
												"name": "element1",
												"nameLocation": "16125:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1186,
												"src": "16117:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1172,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16117:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1175,
												"mutability": "mutable",
												"name": "element2",
												"nameLocation": "16151:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1186,
												"src": "16143:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1174,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16143:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16107:58:1"
									},
									"returnParameters": {
										"id": 1183,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1179,
												"mutability": "mutable",
												"name": "array1",
												"nameLocation": "16205:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 1186,
												"src": "16188:23:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1177,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "16188:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1178,
													"nodeType": "ArrayTypeName",
													"src": "16188:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1182,
												"mutability": "mutable",
												"name": "array2",
												"nameLocation": "16230:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 1186,
												"src": "16213:23:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1180,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "16213:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1181,
													"nodeType": "ArrayTypeName",
													"src": "16213:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16187:50:1"
									},
									"scope": 1187,
									"src": "16080:849:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1188,
							"src": "727:16204:1",
							"usedErrors": [
								101,
								106,
								111,
								118,
								123,
								128,
								135
							],
							"usedEvents": [
								1207,
								1222,
								1231,
								1238
							]
						}
					],
					"src": "109:16823:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC1155/IERC1155.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC1155/IERC1155.sol",
					"exportedSymbols": {
						"IERC1155": [
							1310
						],
						"IERC165": [
							1979
						]
					},
					"id": 1311,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1189,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "110:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../../utils/introspection/IERC165.sol",
							"id": 1191,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1311,
							"sourceUnit": 1980,
							"src": "136:62:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1190,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1979,
										"src": "144:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1193,
										"name": "IERC165",
										"nameLocations": [
											"358:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1979,
										"src": "358:7:2"
									},
									"id": 1194,
									"nodeType": "InheritanceSpecifier",
									"src": "358:7:2"
								}
							],
							"canonicalName": "IERC1155",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1192,
								"nodeType": "StructuredDocumentation",
								"src": "200:135:2",
								"text": " @dev Required interface of an ERC1155 compliant contract, as defined in the\n https://eips.ethereum.org/EIPS/eip-1155[EIP]."
							},
							"fullyImplemented": false,
							"id": 1310,
							"linearizedBaseContracts": [
								1310,
								1979
							],
							"name": "IERC1155",
							"nameLocation": "346:8:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1195,
										"nodeType": "StructuredDocumentation",
										"src": "372:125:2",
										"text": " @dev Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`."
									},
									"eventSelector": "c3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62",
									"id": 1207,
									"name": "TransferSingle",
									"nameLocation": "508:14:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1206,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1197,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "539:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1207,
												"src": "523:24:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1196,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "523:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1199,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "565:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1207,
												"src": "549:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1198,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "549:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1201,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "587:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1207,
												"src": "571:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1200,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "571:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1203,
												"indexed": false,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "599:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1207,
												"src": "591:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1202,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "591:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1205,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "611:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1207,
												"src": "603:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1204,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "603:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "522:95:2"
									},
									"src": "502:116:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1208,
										"nodeType": "StructuredDocumentation",
										"src": "624:144:2",
										"text": " @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\n transfers."
									},
									"eventSelector": "4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb",
									"id": 1222,
									"name": "TransferBatch",
									"nameLocation": "779:13:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1221,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1210,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "818:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1222,
												"src": "802:24:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1209,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "802:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1212,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "852:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1222,
												"src": "836:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1211,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "836:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1214,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "882:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1222,
												"src": "866:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1213,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "866:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1217,
												"indexed": false,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "904:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 1222,
												"src": "894:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1215,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "894:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1216,
													"nodeType": "ArrayTypeName",
													"src": "894:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1220,
												"indexed": false,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "927:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 1222,
												"src": "917:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1218,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "917:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1219,
													"nodeType": "ArrayTypeName",
													"src": "917:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:147:2"
									},
									"src": "773:167:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1223,
										"nodeType": "StructuredDocumentation",
										"src": "946:147:2",
										"text": " @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\n `approved`."
									},
									"eventSelector": "17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31",
									"id": 1231,
									"name": "ApprovalForAll",
									"nameLocation": "1104:14:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1225,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1135:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1231,
												"src": "1119:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1224,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1119:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1227,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "1160:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1231,
												"src": "1144:24:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1226,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1144:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1229,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "1175:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1231,
												"src": "1170:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1228,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1170:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1118:66:2"
									},
									"src": "1098:87:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1232,
										"nodeType": "StructuredDocumentation",
										"src": "1191:343:2",
										"text": " @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\n If an {URI} event was emitted for `id`, the standard\n https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\n returned by {IERC1155MetadataURI-uri}."
									},
									"eventSelector": "6bb7ff708619ba0610cba295a58592e0451dee2622938c8755667688daf3529b",
									"id": 1238,
									"name": "URI",
									"nameLocation": "1545:3:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1237,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1234,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1556:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1238,
												"src": "1549:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1233,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1549:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1236,
												"indexed": true,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "1579:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1238,
												"src": "1563:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1235,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1563:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1548:34:2"
									},
									"src": "1539:44:2"
								},
								{
									"documentation": {
										"id": 1239,
										"nodeType": "StructuredDocumentation",
										"src": "1589:172:2",
										"text": " @dev Returns the value of tokens of token type `id` owned by `account`.\n Requirements:\n - `account` cannot be the zero address."
									},
									"functionSelector": "00fdd58e",
									"id": 1248,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "1775:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1244,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1241,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1793:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1248,
												"src": "1785:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1240,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1785:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1243,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "1810:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1248,
												"src": "1802:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1242,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1802:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1784:29:2"
									},
									"returnParameters": {
										"id": 1247,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1246,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1248,
												"src": "1837:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1245,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1837:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1836:9:2"
									},
									"scope": 1310,
									"src": "1766:80:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1249,
										"nodeType": "StructuredDocumentation",
										"src": "1852:188:2",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\n Requirements:\n - `accounts` and `ids` must have the same length."
									},
									"functionSelector": "4e1273f4",
									"id": 1261,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOfBatch",
									"nameLocation": "2054:14:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1256,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1252,
												"mutability": "mutable",
												"name": "accounts",
												"nameLocation": "2097:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1261,
												"src": "2078:27:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1250,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2078:7:2",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1251,
													"nodeType": "ArrayTypeName",
													"src": "2078:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1255,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "2134:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 1261,
												"src": "2115:22:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1253,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2115:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1254,
													"nodeType": "ArrayTypeName",
													"src": "2115:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2068:75:2"
									},
									"returnParameters": {
										"id": 1260,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1259,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1261,
												"src": "2167:16:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1257,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2167:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1258,
													"nodeType": "ArrayTypeName",
													"src": "2167:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2166:18:2"
									},
									"scope": 1310,
									"src": "2045:140:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1262,
										"nodeType": "StructuredDocumentation",
										"src": "2191:248:2",
										"text": " @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\n Emits an {ApprovalForAll} event.\n Requirements:\n - `operator` cannot be the caller."
									},
									"functionSelector": "a22cb465",
									"id": 1269,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "2453:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1267,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1264,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "2479:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1269,
												"src": "2471:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1263,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2471:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1266,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "2494:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1269,
												"src": "2489:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1265,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2489:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2470:33:2"
									},
									"returnParameters": {
										"id": 1268,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2512:0:2"
									},
									"scope": 1310,
									"src": "2444:69:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1270,
										"nodeType": "StructuredDocumentation",
										"src": "2519:135:2",
										"text": " @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\n See {setApprovalForAll}."
									},
									"functionSelector": "e985e9c5",
									"id": 1279,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "2668:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1272,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2693:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1279,
												"src": "2685:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1271,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2685:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1274,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "2710:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1279,
												"src": "2702:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1273,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2702:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2684:35:2"
									},
									"returnParameters": {
										"id": 1278,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1277,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1279,
												"src": "2743:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1276,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2743:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2742:6:2"
									},
									"scope": 1310,
									"src": "2659:90:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1280,
										"nodeType": "StructuredDocumentation",
										"src": "2755:910:2",
										"text": " @dev Transfers a `value` amount of tokens of type `id` from `from` to `to`.\n WARNING: This function can potentially allow a reentrancy attack when transferring tokens\n to an untrusted contract, when invoking {onERC1155Received} on the receiver.\n Ensure to follow the checks-effects-interactions pattern and consider employing\n reentrancy guards when interacting with untrusted contracts.\n Emits a {TransferSingle} event.\n Requirements:\n - `to` cannot be the zero address.\n - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}.\n - `from` must have a balance of tokens of type `id` of at least `value` amount.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."
									},
									"functionSelector": "f242432a",
									"id": 1293,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "3679:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1291,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1282,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3704:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1293,
												"src": "3696:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1281,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3696:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1284,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3718:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1293,
												"src": "3710:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1283,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3710:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1286,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "3730:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1293,
												"src": "3722:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1285,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3722:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1288,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3742:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1293,
												"src": "3734:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1287,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3734:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1290,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3764:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1293,
												"src": "3749:19:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1289,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3749:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3695:74:2"
									},
									"returnParameters": {
										"id": 1292,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3778:0:2"
									},
									"scope": 1310,
									"src": "3670:109:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1294,
										"nodeType": "StructuredDocumentation",
										"src": "3785:814:2",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\n WARNING: This function can potentially allow a reentrancy attack when transferring tokens\n to an untrusted contract, when invoking {onERC1155BatchReceived} on the receiver.\n Ensure to follow the checks-effects-interactions pattern and consider employing\n reentrancy guards when interacting with untrusted contracts.\n Emits either a {TransferSingle} or a {TransferBatch} event, depending on the length of the array arguments.\n Requirements:\n - `ids` and `values` must have the same length.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n acceptance magic value."
									},
									"functionSelector": "2eb2c2d6",
									"id": 1309,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeBatchTransferFrom",
									"nameLocation": "4613:21:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1307,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1296,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4652:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1309,
												"src": "4644:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1295,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4644:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1298,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4674:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1309,
												"src": "4666:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1297,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4666:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1301,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "4705:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 1309,
												"src": "4686:22:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1299,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "4686:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1300,
													"nodeType": "ArrayTypeName",
													"src": "4686:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1304,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "4737:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 1309,
												"src": "4718:25:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1302,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "4718:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1303,
													"nodeType": "ArrayTypeName",
													"src": "4718:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1306,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4768:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1309,
												"src": "4753:19:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1305,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4753:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4634:144:2"
									},
									"returnParameters": {
										"id": 1308,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4787:0:2"
									},
									"scope": 1310,
									"src": "4604:184:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1311,
							"src": "336:4454:2",
							"usedErrors": [],
							"usedEvents": [
								1207,
								1222,
								1231,
								1238
							]
						}
					],
					"src": "110:4681:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol",
					"exportedSymbols": {
						"IERC1155Receiver": [
							1352
						],
						"IERC165": [
							1979
						]
					},
					"id": 1353,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1312,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "118:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../../utils/introspection/IERC165.sol",
							"id": 1314,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1353,
							"sourceUnit": 1980,
							"src": "144:62:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1313,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1979,
										"src": "152:7:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1316,
										"name": "IERC165",
										"nameLocations": [
											"357:7:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1979,
										"src": "357:7:3"
									},
									"id": 1317,
									"nodeType": "InheritanceSpecifier",
									"src": "357:7:3"
								}
							],
							"canonicalName": "IERC1155Receiver",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1315,
								"nodeType": "StructuredDocumentation",
								"src": "208:118:3",
								"text": " @dev Interface that must be implemented by smart contracts in order to receive\n ERC-1155 token transfers."
							},
							"fullyImplemented": false,
							"id": 1352,
							"linearizedBaseContracts": [
								1352,
								1979
							],
							"name": "IERC1155Receiver",
							"nameLocation": "337:16:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1318,
										"nodeType": "StructuredDocumentation",
										"src": "371:826:3",
										"text": " @dev Handles the receipt of a single ERC1155 token type. This function is\n called at the end of a `safeTransferFrom` after the balance has been updated.\n NOTE: To accept the transfer, this must return\n `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))`\n (i.e. 0xf23a6e61, or its own function selector).\n @param operator The address which initiated the transfer (i.e. msg.sender)\n @param from The address which previously owned the token\n @param id The ID of the token being transferred\n @param value The amount of tokens being transferred\n @param data Additional data with no specified format\n @return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed"
									},
									"functionSelector": "f23a6e61",
									"id": 1333,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC1155Received",
									"nameLocation": "1211:17:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1329,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1320,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "1246:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1333,
												"src": "1238:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1319,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1238:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1322,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1272:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1333,
												"src": "1264:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1321,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1264:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1324,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "1294:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1333,
												"src": "1286:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1323,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1286:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1326,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1314:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1333,
												"src": "1306:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1325,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1306:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1328,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1344:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1333,
												"src": "1329:19:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1327,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1329:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1228:126:3"
									},
									"returnParameters": {
										"id": 1332,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1331,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1333,
												"src": "1373:6:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1330,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1373:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1372:8:3"
									},
									"scope": 1352,
									"src": "1202:179:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1334,
										"nodeType": "StructuredDocumentation",
										"src": "1387:994:3",
										"text": " @dev Handles the receipt of a multiple ERC1155 token types. This function\n is called at the end of a `safeBatchTransferFrom` after the balances have\n been updated.\n NOTE: To accept the transfer(s), this must return\n `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))`\n (i.e. 0xbc197c81, or its own function selector).\n @param operator The address which initiated the batch transfer (i.e. msg.sender)\n @param from The address which previously owned the token\n @param ids An array containing ids of each token being transferred (order and length must match values array)\n @param values An array containing amounts of each token being transferred (order and length must match ids array)\n @param data Additional data with no specified format\n @return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed"
									},
									"functionSelector": "bc197c81",
									"id": 1351,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC1155BatchReceived",
									"nameLocation": "2395:22:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1347,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1336,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "2435:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1351,
												"src": "2427:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1335,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2427:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1338,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2461:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1351,
												"src": "2453:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1337,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2453:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1341,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "2494:3:3",
												"nodeType": "VariableDeclaration",
												"scope": 1351,
												"src": "2475:22:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1339,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2475:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1340,
													"nodeType": "ArrayTypeName",
													"src": "2475:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1344,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "2526:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 1351,
												"src": "2507:25:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1342,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2507:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1343,
													"nodeType": "ArrayTypeName",
													"src": "2507:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1346,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2557:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1351,
												"src": "2542:19:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1345,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2542:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2417:150:3"
									},
									"returnParameters": {
										"id": 1350,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1349,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1351,
												"src": "2586:6:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1348,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "2586:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2585:8:3"
									},
									"scope": 1352,
									"src": "2386:208:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1353,
							"src": "327:2269:3",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "118:2479:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol",
					"exportedSymbols": {
						"ERC1155": [
							1187
						],
						"ERC1155Burnable": [
							1432
						]
					},
					"id": 1433,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1354,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "128:24:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol",
							"file": "../ERC1155.sol",
							"id": 1356,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1433,
							"sourceUnit": 1188,
							"src": "154:39:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1355,
										"name": "ERC1155",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1187,
										"src": "162:7:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1358,
										"name": "ERC1155",
										"nameLocations": [
											"380:7:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1187,
										"src": "380:7:4"
									},
									"id": 1359,
									"nodeType": "InheritanceSpecifier",
									"src": "380:7:4"
								}
							],
							"canonicalName": "ERC1155Burnable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1357,
								"nodeType": "StructuredDocumentation",
								"src": "195:147:4",
								"text": " @dev Extension of {ERC1155} that allows token holders to destroy both their\n own tokens and those that they have been approved to use."
							},
							"fullyImplemented": true,
							"id": 1432,
							"linearizedBaseContracts": [
								1432,
								1187,
								136,
								1620,
								1310,
								1967,
								1979,
								1833
							],
							"name": "ERC1155Burnable",
							"nameLocation": "361:15:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1393,
										"nodeType": "Block",
										"src": "467:208:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1378,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 1371,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1368,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1361,
															"src": "481:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1369,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1815,
																"src": "492:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1370,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "492:12:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "481:23:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 1377,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "508:40:4",
														"subExpression": {
															"arguments": [
																{
																	"id": 1373,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1361,
																	"src": "526:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 1374,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1815,
																		"src": "535:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 1375,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "535:12:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1372,
																"name": "isApprovedForAll",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 359,
																"src": "509:16:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address,address) view returns (bool)"
																}
															},
															"id": 1376,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "509:39:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "481:67:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1386,
												"nodeType": "IfStatement",
												"src": "477:156:4",
												"trueBody": {
													"id": 1385,
													"nodeType": "Block",
													"src": "550:83:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 1380,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1815,
																			"src": "600:10:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 1381,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "600:12:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1382,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1361,
																		"src": "614:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1379,
																	"name": "ERC1155MissingApprovalForAll",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 118,
																	"src": "571:28:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (address,address) pure"
																	}
																},
																"id": 1383,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "571:51:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1384,
															"nodeType": "RevertStatement",
															"src": "564:58:4"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1388,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1361,
															"src": "649:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1389,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1363,
															"src": "658:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1390,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1365,
															"src": "662:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1387,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 953,
														"src": "643:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 1391,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "643:25:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1392,
												"nodeType": "ExpressionStatement",
												"src": "643:25:4"
											}
										]
									},
									"functionSelector": "f5298aca",
									"id": 1394,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nameLocation": "403:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1366,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1361,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "416:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1394,
												"src": "408:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1360,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "408:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1363,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "433:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1394,
												"src": "425:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1362,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "425:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1365,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "445:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1394,
												"src": "437:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1364,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "437:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "407:44:4"
									},
									"returnParameters": {
										"id": 1367,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "467:0:4"
									},
									"scope": 1432,
									"src": "394:281:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1430,
										"nodeType": "Block",
										"src": "779:215:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1415,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 1408,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1405,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1396,
															"src": "793:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1406,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1815,
																"src": "804:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1407,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "804:12:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "793:23:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 1414,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "820:40:4",
														"subExpression": {
															"arguments": [
																{
																	"id": 1410,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1396,
																	"src": "838:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 1411,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1815,
																		"src": "847:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 1412,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "847:12:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1409,
																"name": "isApprovedForAll",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 359,
																"src": "821:16:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address,address) view returns (bool)"
																}
															},
															"id": 1413,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "821:39:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "793:67:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1423,
												"nodeType": "IfStatement",
												"src": "789:156:4",
												"trueBody": {
													"id": 1422,
													"nodeType": "Block",
													"src": "862:83:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 1417,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1815,
																			"src": "912:10:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 1418,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "912:12:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1419,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1396,
																		"src": "926:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1416,
																	"name": "ERC1155MissingApprovalForAll",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 118,
																	"src": "883:28:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (address,address) pure"
																	}
																},
																"id": 1420,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "883:51:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1421,
															"nodeType": "RevertStatement",
															"src": "876:58:4"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1425,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1396,
															"src": "966:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1426,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1399,
															"src": "975:3:4",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 1427,
															"name": "values",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1402,
															"src": "980:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														],
														"id": 1424,
														"name": "_burnBatch",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 992,
														"src": "955:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
															"typeString": "function (address,uint256[] memory,uint256[] memory)"
														}
													},
													"id": 1428,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "955:32:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1429,
												"nodeType": "ExpressionStatement",
												"src": "955:32:4"
											}
										]
									},
									"functionSelector": "6b20c454",
									"id": 1431,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "burnBatch",
									"nameLocation": "690:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1403,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1396,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "708:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1431,
												"src": "700:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1395,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "700:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1399,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "734:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 1431,
												"src": "717:20:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1397,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "717:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1398,
													"nodeType": "ArrayTypeName",
													"src": "717:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1402,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "756:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1431,
												"src": "739:23:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1400,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "739:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1401,
													"nodeType": "ArrayTypeName",
													"src": "739:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "699:64:4"
									},
									"returnParameters": {
										"id": 1404,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "779:0:4"
									},
									"scope": 1432,
									"src": "681:313:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 1433,
							"src": "343:653:4",
							"usedErrors": [
								101,
								106,
								111,
								118,
								123,
								128,
								135
							],
							"usedEvents": [
								1207,
								1222,
								1231,
								1238
							]
						}
					],
					"src": "128:869:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol",
					"exportedSymbols": {
						"ERC1155": [
							1187
						],
						"ERC1155Supply": [
							1604
						]
					},
					"id": 1605,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1434,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "126:24:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol",
							"file": "../ERC1155.sol",
							"id": 1436,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1605,
							"sourceUnit": 1188,
							"src": "152:39:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1435,
										"name": "ERC1155",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1187,
										"src": "160:7:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1438,
										"name": "ERC1155",
										"nameLocations": [
											"780:7:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1187,
										"src": "780:7:5"
									},
									"id": 1439,
									"nodeType": "InheritanceSpecifier",
									"src": "780:7:5"
								}
							],
							"canonicalName": "ERC1155Supply",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1437,
								"nodeType": "StructuredDocumentation",
								"src": "193:551:5",
								"text": " @dev Extension of ERC1155 that adds tracking of total supply per id.\n Useful for scenarios where Fungible and Non-fungible tokens have to be\n clearly identified. Note: While a totalSupply of 1 might mean the\n corresponding is an NFT, there is no guarantees that no other token with the\n same id are not going to be minted.\n NOTE: This contract implies a global limit of 2**256 - 1 to the number of tokens\n that can be minted.\n CAUTION: This extension should not be added in an upgrade to an already deployed contract."
							},
							"fullyImplemented": true,
							"id": 1604,
							"linearizedBaseContracts": [
								1604,
								1187,
								136,
								1620,
								1310,
								1967,
								1979,
								1833
							],
							"name": "ERC1155Supply",
							"nameLocation": "763:13:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 1443,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "833:12:5",
									"nodeType": "VariableDeclaration",
									"scope": 1604,
									"src": "794:51:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
										"typeString": "mapping(uint256 => uint256)"
									},
									"typeName": {
										"id": 1442,
										"keyName": "id",
										"keyNameLocation": "810:2:5",
										"keyType": {
											"id": 1440,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "802:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "794:30:5",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
											"typeString": "mapping(uint256 => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1441,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "816:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1445,
									"mutability": "mutable",
									"name": "_totalSupplyAll",
									"nameLocation": "867:15:5",
									"nodeType": "VariableDeclaration",
									"scope": 1604,
									"src": "851:31:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1444,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "851:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 1457,
										"nodeType": "Block",
										"src": "1030:40:5",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 1453,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1443,
														"src": "1047:12:5",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
															"typeString": "mapping(uint256 => uint256)"
														}
													},
													"id": 1455,
													"indexExpression": {
														"id": 1454,
														"name": "id",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1448,
														"src": "1060:2:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1047:16:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1452,
												"id": 1456,
												"nodeType": "Return",
												"src": "1040:23:5"
											}
										]
									},
									"documentation": {
										"id": 1446,
										"nodeType": "StructuredDocumentation",
										"src": "889:65:5",
										"text": " @dev Total value of tokens in with a given id."
									},
									"functionSelector": "bd85b039",
									"id": 1458,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "968:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1449,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1448,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "988:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1458,
												"src": "980:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1447,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "980:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "979:12:5"
									},
									"returnParameters": {
										"id": 1452,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1451,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1458,
												"src": "1021:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1450,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1021:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1020:9:5"
									},
									"scope": 1604,
									"src": "959:111:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1466,
										"nodeType": "Block",
										"src": "1188:39:5",
										"statements": [
											{
												"expression": {
													"id": 1464,
													"name": "_totalSupplyAll",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1445,
													"src": "1205:15:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1463,
												"id": 1465,
												"nodeType": "Return",
												"src": "1198:22:5"
											}
										]
									},
									"documentation": {
										"id": 1459,
										"nodeType": "StructuredDocumentation",
										"src": "1076:46:5",
										"text": " @dev Total value of tokens."
									},
									"functionSelector": "18160ddd",
									"id": 1467,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "1136:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1460,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1147:2:5"
									},
									"returnParameters": {
										"id": 1463,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1462,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1467,
												"src": "1179:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1461,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1179:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1178:9:5"
									},
									"scope": 1604,
									"src": "1127:100:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1481,
										"nodeType": "Block",
										"src": "1383:43:5",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1479,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 1476,
																"name": "id",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1470,
																"src": "1412:2:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 1475,
															"name": "totalSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [
																1458,
																1467
															],
															"referencedDeclaration": 1458,
															"src": "1400:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
																"typeString": "function (uint256) view returns (uint256)"
															}
														},
														"id": 1477,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1400:15:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1478,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1418:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1400:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1474,
												"id": 1480,
												"nodeType": "Return",
												"src": "1393:26:5"
											}
										]
									},
									"documentation": {
										"id": 1468,
										"nodeType": "StructuredDocumentation",
										"src": "1233:82:5",
										"text": " @dev Indicates whether any token exist with a given id, or not."
									},
									"functionSelector": "4f558e79",
									"id": 1482,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "exists",
									"nameLocation": "1329:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1471,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1470,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "1344:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1482,
												"src": "1336:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1469,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1336:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1335:12:5"
									},
									"returnParameters": {
										"id": 1474,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1473,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1482,
												"src": "1377:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1472,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1377:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1376:6:5"
									},
									"scope": 1604,
									"src": "1320:106:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										602
									],
									"body": {
										"id": 1602,
										"nodeType": "Block",
										"src": "1637:1364:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1500,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1485,
															"src": "1661:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1501,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1487,
															"src": "1667:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1502,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1490,
															"src": "1671:3:5",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 1503,
															"name": "values",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1493,
															"src": "1676:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														],
														"expression": {
															"id": 1497,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "1647:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_ERC1155Supply_$1604_$",
																"typeString": "type(contract super ERC1155Supply)"
															}
														},
														"id": 1499,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1653:7:5",
														"memberName": "_update",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 602,
														"src": "1647:13:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256[] memory,uint256[] memory)"
														}
													},
													"id": 1504,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1647:36:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1505,
												"nodeType": "ExpressionStatement",
												"src": "1647:36:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1511,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1506,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1485,
														"src": "1698:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1509,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1714:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1508,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1706:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1507,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1706:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 1510,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1706:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1698:18:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1552,
												"nodeType": "IfStatement",
												"src": "1694:533:5",
												"trueBody": {
													"id": 1551,
													"nodeType": "Block",
													"src": "1718:509:5",
													"statements": [
														{
															"assignments": [
																1513
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1513,
																	"mutability": "mutable",
																	"name": "totalMintValue",
																	"nameLocation": "1740:14:5",
																	"nodeType": "VariableDeclaration",
																	"scope": 1551,
																	"src": "1732:22:5",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1512,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "1732:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1515,
															"initialValue": {
																"hexValue": "30",
																"id": 1514,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1757:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "1732:26:5"
														},
														{
															"body": {
																"id": 1545,
																"nodeType": "Block",
																"src": "1813:252:5",
																"statements": [
																	{
																		"assignments": [
																			1528
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 1528,
																				"mutability": "mutable",
																				"name": "value",
																				"nameLocation": "1839:5:5",
																				"nodeType": "VariableDeclaration",
																				"scope": 1545,
																				"src": "1831:13:5",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 1527,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "1831:7:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 1532,
																		"initialValue": {
																			"baseExpression": {
																				"id": 1529,
																				"name": "values",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1493,
																				"src": "1847:6:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																					"typeString": "uint256[] memory"
																				}
																			},
																			"id": 1531,
																			"indexExpression": {
																				"id": 1530,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1517,
																				"src": "1854:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "1847:9:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "1831:25:5"
																	},
																	{
																		"expression": {
																			"id": 1539,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"baseExpression": {
																					"id": 1533,
																					"name": "_totalSupply",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1443,
																					"src": "1980:12:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																						"typeString": "mapping(uint256 => uint256)"
																					}
																				},
																				"id": 1537,
																				"indexExpression": {
																					"baseExpression": {
																						"id": 1534,
																						"name": "ids",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1490,
																						"src": "1993:3:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																							"typeString": "uint256[] memory"
																						}
																					},
																					"id": 1536,
																					"indexExpression": {
																						"id": 1535,
																						"name": "i",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1517,
																						"src": "1997:1:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "1993:6:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "1980:20:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "+=",
																			"rightHandSide": {
																				"id": 1538,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1528,
																				"src": "2004:5:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "1980:29:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1540,
																		"nodeType": "ExpressionStatement",
																		"src": "1980:29:5"
																	},
																	{
																		"expression": {
																			"id": 1543,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 1541,
																				"name": "totalMintValue",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1513,
																				"src": "2027:14:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "+=",
																			"rightHandSide": {
																				"id": 1542,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1528,
																				"src": "2045:5:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "2027:23:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1544,
																		"nodeType": "ExpressionStatement",
																		"src": "2027:23:5"
																	}
																]
															},
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1523,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1520,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1517,
																	"src": "1792:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"expression": {
																		"id": 1521,
																		"name": "ids",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1490,
																		"src": "1796:3:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 1522,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1800:6:5",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "1796:10:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1792:14:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1546,
															"initializationExpression": {
																"assignments": [
																	1517
																],
																"declarations": [
																	{
																		"constant": false,
																		"id": 1517,
																		"mutability": "mutable",
																		"name": "i",
																		"nameLocation": "1785:1:5",
																		"nodeType": "VariableDeclaration",
																		"scope": 1546,
																		"src": "1777:9:5",
																		"stateVariable": false,
																		"storageLocation": "default",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"typeName": {
																			"id": 1516,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "1777:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"visibility": "internal"
																	}
																],
																"id": 1519,
																"initialValue": {
																	"hexValue": "30",
																	"id": 1518,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1789:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"nodeType": "VariableDeclarationStatement",
																"src": "1777:13:5"
															},
															"loopExpression": {
																"expression": {
																	"id": 1525,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "++",
																	"prefix": true,
																	"src": "1808:3:5",
																	"subExpression": {
																		"id": 1524,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1517,
																		"src": "1810:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1526,
																"nodeType": "ExpressionStatement",
																"src": "1808:3:5"
															},
															"nodeType": "ForStatement",
															"src": "1772:293:5"
														},
														{
															"expression": {
																"id": 1549,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1547,
																	"name": "_totalSupplyAll",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1445,
																	"src": "2183:15:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 1548,
																	"name": "totalMintValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1513,
																	"src": "2202:14:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2183:33:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1550,
															"nodeType": "ExpressionStatement",
															"src": "2183:33:5"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1558,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1553,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1487,
														"src": "2241:2:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1556,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2255:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1555,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2247:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1554,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2247:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 1557,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2247:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2241:16:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1601,
												"nodeType": "IfStatement",
												"src": "2237:758:5",
												"trueBody": {
													"id": 1600,
													"nodeType": "Block",
													"src": "2259:736:5",
													"statements": [
														{
															"assignments": [
																1560
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1560,
																	"mutability": "mutable",
																	"name": "totalBurnValue",
																	"nameLocation": "2281:14:5",
																	"nodeType": "VariableDeclaration",
																	"scope": 1600,
																	"src": "2273:22:5",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1559,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "2273:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1562,
															"initialValue": {
																"hexValue": "30",
																"id": 1561,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2298:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "2273:26:5"
														},
														{
															"body": {
																"id": 1593,
																"nodeType": "Block",
																"src": "2354:418:5",
																"statements": [
																	{
																		"assignments": [
																			1575
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 1575,
																				"mutability": "mutable",
																				"name": "value",
																				"nameLocation": "2380:5:5",
																				"nodeType": "VariableDeclaration",
																				"scope": 1593,
																				"src": "2372:13:5",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 1574,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "2372:7:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 1579,
																		"initialValue": {
																			"baseExpression": {
																				"id": 1576,
																				"name": "values",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1493,
																				"src": "2388:6:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																					"typeString": "uint256[] memory"
																				}
																			},
																			"id": 1578,
																			"indexExpression": {
																				"id": 1577,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1564,
																				"src": "2395:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "2388:9:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "2372:25:5"
																	},
																	{
																		"id": 1592,
																		"nodeType": "UncheckedBlock",
																		"src": "2416:342:5",
																		"statements": [
																			{
																				"expression": {
																					"id": 1586,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftHandSide": {
																						"baseExpression": {
																							"id": 1580,
																							"name": "_totalSupply",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1443,
																							"src": "2554:12:5",
																							"typeDescriptions": {
																								"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																								"typeString": "mapping(uint256 => uint256)"
																							}
																						},
																						"id": 1584,
																						"indexExpression": {
																							"baseExpression": {
																								"id": 1581,
																								"name": "ids",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1490,
																								"src": "2567:3:5",
																								"typeDescriptions": {
																									"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																									"typeString": "uint256[] memory"
																								}
																							},
																							"id": 1583,
																							"indexExpression": {
																								"id": 1582,
																								"name": "i",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1564,
																								"src": "2571:1:5",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "IndexAccess",
																							"src": "2567:6:5",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": true,
																						"nodeType": "IndexAccess",
																						"src": "2554:20:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "Assignment",
																					"operator": "-=",
																					"rightHandSide": {
																						"id": 1585,
																						"name": "value",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1575,
																						"src": "2578:5:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "2554:29:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 1587,
																				"nodeType": "ExpressionStatement",
																				"src": "2554:29:5"
																			},
																			{
																				"expression": {
																					"id": 1590,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftHandSide": {
																						"id": 1588,
																						"name": "totalBurnValue",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1560,
																						"src": "2716:14:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "Assignment",
																					"operator": "+=",
																					"rightHandSide": {
																						"id": 1589,
																						"name": "value",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1575,
																						"src": "2734:5:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "2716:23:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 1591,
																				"nodeType": "ExpressionStatement",
																				"src": "2716:23:5"
																			}
																		]
																	}
																]
															},
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1570,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1567,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1564,
																	"src": "2333:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"expression": {
																		"id": 1568,
																		"name": "ids",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1490,
																		"src": "2337:3:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 1569,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2341:6:5",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "2337:10:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2333:14:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1594,
															"initializationExpression": {
																"assignments": [
																	1564
																],
																"declarations": [
																	{
																		"constant": false,
																		"id": 1564,
																		"mutability": "mutable",
																		"name": "i",
																		"nameLocation": "2326:1:5",
																		"nodeType": "VariableDeclaration",
																		"scope": 1594,
																		"src": "2318:9:5",
																		"stateVariable": false,
																		"storageLocation": "default",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"typeName": {
																			"id": 1563,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "2318:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"visibility": "internal"
																	}
																],
																"id": 1566,
																"initialValue": {
																	"hexValue": "30",
																	"id": 1565,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2330:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"nodeType": "VariableDeclarationStatement",
																"src": "2318:13:5"
															},
															"loopExpression": {
																"expression": {
																	"id": 1572,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "++",
																	"prefix": true,
																	"src": "2349:3:5",
																	"subExpression": {
																		"id": 1571,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1564,
																		"src": "2351:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1573,
																"nodeType": "ExpressionStatement",
																"src": "2349:3:5"
															},
															"nodeType": "ForStatement",
															"src": "2313:459:5"
														},
														{
															"id": 1599,
															"nodeType": "UncheckedBlock",
															"src": "2785:200:5",
															"statements": [
																{
																	"expression": {
																		"id": 1597,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1595,
																			"name": "_totalSupplyAll",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1445,
																			"src": "2937:15:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 1596,
																			"name": "totalBurnValue",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1560,
																			"src": "2956:14:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "2937:33:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1598,
																	"nodeType": "ExpressionStatement",
																	"src": "2937:33:5"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1483,
										"nodeType": "StructuredDocumentation",
										"src": "1432:46:5",
										"text": " @dev See {ERC1155-_update}."
									},
									"id": 1603,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "1492:7:5",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1495,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1628:8:5"
									},
									"parameters": {
										"id": 1494,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1485,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1517:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1603,
												"src": "1509:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1484,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1509:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1487,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1539:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1603,
												"src": "1531:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1486,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1531:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1490,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "1568:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 1603,
												"src": "1551:20:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1488,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "1551:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1489,
													"nodeType": "ArrayTypeName",
													"src": "1551:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1493,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "1598:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1603,
												"src": "1581:23:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1491,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "1581:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1492,
													"nodeType": "ArrayTypeName",
													"src": "1581:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1499:111:5"
									},
									"returnParameters": {
										"id": 1496,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1637:0:5"
									},
									"scope": 1604,
									"src": "1483:1518:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1605,
							"src": "745:2258:5",
							"usedErrors": [
								101,
								106,
								111,
								118,
								123,
								128,
								135
							],
							"usedEvents": [
								1207,
								1222,
								1231,
								1238
							]
						}
					],
					"src": "126:2878:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol",
					"exportedSymbols": {
						"IERC1155": [
							1310
						],
						"IERC1155MetadataURI": [
							1620
						]
					},
					"id": 1621,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1606,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "132:24:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC1155/IERC1155.sol",
							"file": "../IERC1155.sol",
							"id": 1608,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1621,
							"sourceUnit": 1311,
							"src": "158:41:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1607,
										"name": "IERC1155",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1310,
										"src": "166:8:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1610,
										"name": "IERC1155",
										"nameLocations": [
											"399:8:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1310,
										"src": "399:8:6"
									},
									"id": 1611,
									"nodeType": "InheritanceSpecifier",
									"src": "399:8:6"
								}
							],
							"canonicalName": "IERC1155MetadataURI",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1609,
								"nodeType": "StructuredDocumentation",
								"src": "201:164:6",
								"text": " @dev Interface of the optional ERC1155MetadataExtension interface, as defined\n in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[EIP]."
							},
							"fullyImplemented": false,
							"id": 1620,
							"linearizedBaseContracts": [
								1620,
								1310,
								1979
							],
							"name": "IERC1155MetadataURI",
							"nameLocation": "376:19:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1612,
										"nodeType": "StructuredDocumentation",
										"src": "414:192:6",
										"text": " @dev Returns the URI for token type `id`.\n If the `\\{id\\}` substring is present in the URI, it must be replaced by\n clients with the actual token type ID."
									},
									"functionSelector": "0e89341c",
									"id": 1619,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "uri",
									"nameLocation": "620:3:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1615,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1614,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "632:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1619,
												"src": "624:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1613,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "624:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "623:12:6"
									},
									"returnParameters": {
										"id": 1618,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1617,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1619,
												"src": "659:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1616,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "659:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "658:15:6"
									},
									"scope": 1620,
									"src": "611:63:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1621,
							"src": "366:310:6",
							"usedErrors": [],
							"usedEvents": [
								1207,
								1222,
								1231,
								1238
							]
						}
					],
					"src": "132:545:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/utils/Arrays.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Arrays.sol",
					"exportedSymbols": {
						"Arrays": [
							1803
						],
						"Math": [
							3033
						],
						"StorageSlot": [
							1943
						]
					},
					"id": 1804,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1622,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "100:24:7"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/StorageSlot.sol",
							"file": "./StorageSlot.sol",
							"id": 1624,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1804,
							"sourceUnit": 1944,
							"src": "126:46:7",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1623,
										"name": "StorageSlot",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1943,
										"src": "134:11:7",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/Math.sol",
							"file": "./math/Math.sol",
							"id": 1626,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1804,
							"sourceUnit": 3034,
							"src": "173:37:7",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1625,
										"name": "Math",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 3033,
										"src": "181:4:7",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Arrays",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1627,
								"nodeType": "StructuredDocumentation",
								"src": "212:63:7",
								"text": " @dev Collection of functions related to array types."
							},
							"fullyImplemented": true,
							"id": 1803,
							"linearizedBaseContracts": [
								1803
							],
							"name": "Arrays",
							"nameLocation": "284:6:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 1630,
									"libraryName": {
										"id": 1628,
										"name": "StorageSlot",
										"nameLocations": [
											"303:11:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1943,
										"src": "303:11:7"
									},
									"nodeType": "UsingForDirective",
									"src": "297:30:7",
									"typeName": {
										"id": 1629,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "319:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									}
								},
								{
									"body": {
										"id": 1712,
										"nodeType": "Block",
										"src": "843:834:7",
										"statements": [
											{
												"assignments": [
													1642
												],
												"declarations": [
													{
														"constant": false,
														"id": 1642,
														"mutability": "mutable",
														"name": "low",
														"nameLocation": "861:3:7",
														"nodeType": "VariableDeclaration",
														"scope": 1712,
														"src": "853:11:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1641,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "853:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1644,
												"initialValue": {
													"hexValue": "30",
													"id": 1643,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "867:1:7",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "853:15:7"
											},
											{
												"assignments": [
													1646
												],
												"declarations": [
													{
														"constant": false,
														"id": 1646,
														"mutability": "mutable",
														"name": "high",
														"nameLocation": "886:4:7",
														"nodeType": "VariableDeclaration",
														"scope": 1712,
														"src": "878:12:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1645,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "878:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1649,
												"initialValue": {
													"expression": {
														"id": 1647,
														"name": "array",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1634,
														"src": "893:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
															"typeString": "uint256[] storage pointer"
														}
													},
													"id": 1648,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "899:6:7",
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "893:12:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "878:27:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1652,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1650,
														"name": "high",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1646,
														"src": "920:4:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1651,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "928:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "920:9:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1656,
												"nodeType": "IfStatement",
												"src": "916:48:7",
												"trueBody": {
													"id": 1655,
													"nodeType": "Block",
													"src": "931:33:7",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 1653,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "952:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 1640,
															"id": 1654,
															"nodeType": "Return",
															"src": "945:8:7"
														}
													]
												}
											},
											{
												"body": {
													"id": 1688,
													"nodeType": "Block",
													"src": "993:423:7",
													"statements": [
														{
															"assignments": [
																1661
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1661,
																	"mutability": "mutable",
																	"name": "mid",
																	"nameLocation": "1015:3:7",
																	"nodeType": "VariableDeclaration",
																	"scope": 1688,
																	"src": "1007:11:7",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1660,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "1007:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1667,
															"initialValue": {
																"arguments": [
																	{
																		"id": 1664,
																		"name": "low",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1642,
																		"src": "1034:3:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1665,
																		"name": "high",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1646,
																		"src": "1039:4:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1662,
																		"name": "Math",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3033,
																		"src": "1021:4:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Math_$3033_$",
																			"typeString": "type(library Math)"
																		}
																	},
																	"id": 1663,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1026:7:7",
																	"memberName": "average",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2207,
																	"src": "1021:12:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1666,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1021:23:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "1007:37:7"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1674,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"arguments": [
																			{
																				"id": 1669,
																				"name": "array",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1634,
																				"src": "1282:5:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																					"typeString": "uint256[] storage pointer"
																				}
																			},
																			{
																				"id": 1670,
																				"name": "mid",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1661,
																				"src": "1289:3:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																					"typeString": "uint256[] storage pointer"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 1668,
																			"name": "unsafeAccess",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				1734,
																				1755,
																				1776
																			],
																			"referencedDeclaration": 1776,
																			"src": "1269:12:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Uint256Slot_$1848_storage_ptr_$",
																				"typeString": "function (uint256[] storage pointer,uint256) pure returns (struct StorageSlot.Uint256Slot storage pointer)"
																			}
																		},
																		"id": 1671,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1269:24:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Uint256Slot_$1848_storage_ptr",
																			"typeString": "struct StorageSlot.Uint256Slot storage pointer"
																		}
																	},
																	"id": 1672,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1294:5:7",
																	"memberName": "value",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1847,
																	"src": "1269:30:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"id": 1673,
																	"name": "element",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1636,
																	"src": "1302:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1269:40:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 1686,
																"nodeType": "Block",
																"src": "1360:46:7",
																"statements": [
																	{
																		"expression": {
																			"id": 1684,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 1680,
																				"name": "low",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1642,
																				"src": "1378:3:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1683,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1681,
																					"name": "mid",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1661,
																					"src": "1384:3:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "+",
																				"rightExpression": {
																					"hexValue": "31",
																					"id": 1682,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "1390:1:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1_by_1",
																						"typeString": "int_const 1"
																					},
																					"value": "1"
																				},
																				"src": "1384:7:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "1378:13:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1685,
																		"nodeType": "ExpressionStatement",
																		"src": "1378:13:7"
																	}
																]
															},
															"id": 1687,
															"nodeType": "IfStatement",
															"src": "1265:141:7",
															"trueBody": {
																"id": 1679,
																"nodeType": "Block",
																"src": "1311:43:7",
																"statements": [
																	{
																		"expression": {
																			"id": 1677,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 1675,
																				"name": "high",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1646,
																				"src": "1329:4:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"id": 1676,
																				"name": "mid",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1661,
																				"src": "1336:3:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "1329:10:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1678,
																		"nodeType": "ExpressionStatement",
																		"src": "1329:10:7"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1659,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1657,
														"name": "low",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1642,
														"src": "981:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1658,
														"name": "high",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1646,
														"src": "987:4:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "981:10:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1689,
												"nodeType": "WhileStatement",
												"src": "974:442:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1702,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1692,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1690,
															"name": "low",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1642,
															"src": "1533:3:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 1691,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1539:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "1533:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1701,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 1694,
																		"name": "array",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1634,
																		"src": "1557:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																			"typeString": "uint256[] storage pointer"
																		}
																	},
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1697,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1695,
																			"name": "low",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1642,
																			"src": "1564:3:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 1696,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1570:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "1564:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																			"typeString": "uint256[] storage pointer"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1693,
																	"name": "unsafeAccess",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		1734,
																		1755,
																		1776
																	],
																	"referencedDeclaration": 1776,
																	"src": "1544:12:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Uint256Slot_$1848_storage_ptr_$",
																		"typeString": "function (uint256[] storage pointer,uint256) pure returns (struct StorageSlot.Uint256Slot storage pointer)"
																	}
																},
																"id": 1698,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1544:28:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Uint256Slot_$1848_storage_ptr",
																	"typeString": "struct StorageSlot.Uint256Slot storage pointer"
																}
															},
															"id": 1699,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1573:5:7",
															"memberName": "value",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1847,
															"src": "1544:34:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"id": 1700,
															"name": "element",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1636,
															"src": "1582:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1544:45:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1533:56:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1710,
													"nodeType": "Block",
													"src": "1636:35:7",
													"statements": [
														{
															"expression": {
																"id": 1708,
																"name": "low",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1642,
																"src": "1657:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 1640,
															"id": 1709,
															"nodeType": "Return",
															"src": "1650:10:7"
														}
													]
												},
												"id": 1711,
												"nodeType": "IfStatement",
												"src": "1529:142:7",
												"trueBody": {
													"id": 1707,
													"nodeType": "Block",
													"src": "1591:39:7",
													"statements": [
														{
															"expression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1705,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1703,
																	"name": "low",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1642,
																	"src": "1612:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1704,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1618:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "1612:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 1640,
															"id": 1706,
															"nodeType": "Return",
															"src": "1605:14:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1631,
										"nodeType": "StructuredDocumentation",
										"src": "333:407:7",
										"text": " @dev Searches a sorted `array` and returns the first index that contains\n a value greater or equal to `element`. If no such index exists (i.e. all\n values in the array are strictly less than `element`), the array length is\n returned. Time complexity O(log n).\n `array` is expected to be sorted in ascending order, and to contain no\n repeated elements."
									},
									"id": 1713,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "findUpperBound",
									"nameLocation": "754:14:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1637,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1634,
												"mutability": "mutable",
												"name": "array",
												"nameLocation": "787:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1713,
												"src": "769:23:7",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1632,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "769:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1633,
													"nodeType": "ArrayTypeName",
													"src": "769:9:7",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1636,
												"mutability": "mutable",
												"name": "element",
												"nameLocation": "802:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1713,
												"src": "794:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1635,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "794:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "768:42:7"
									},
									"returnParameters": {
										"id": 1640,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1639,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1713,
												"src": "834:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1638,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "834:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "833:9:7"
									},
									"scope": 1803,
									"src": "745:932:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1733,
										"nodeType": "Block",
										"src": "1993:459:7",
										"statements": [
											{
												"assignments": [
													1726
												],
												"declarations": [
													{
														"constant": false,
														"id": 1726,
														"mutability": "mutable",
														"name": "slot",
														"nameLocation": "2011:4:7",
														"nodeType": "VariableDeclaration",
														"scope": 1733,
														"src": "2003:12:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 1725,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "2003:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1727,
												"nodeType": "VariableDeclarationStatement",
												"src": "2003:12:7"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "2316:92:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2337:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "arr.slot",
																		"nodeType": "YulIdentifier",
																		"src": "2340:8:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2330:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2330:19:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2330:19:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2362:36:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2384:1:7",
																				"type": "",
																				"value": "0"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2387:4:7",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "keccak256",
																			"nodeType": "YulIdentifier",
																			"src": "2374:9:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2374:18:7"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2394:3:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2370:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2370:28:7"
															},
															"variableNames": [
																{
																	"name": "slot",
																	"nodeType": "YulIdentifier",
																	"src": "2362:4:7"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 1717,
														"isOffset": false,
														"isSlot": true,
														"src": "2340:8:7",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1719,
														"isOffset": false,
														"isSlot": false,
														"src": "2394:3:7",
														"valueSize": 1
													},
													{
														"declaration": 1726,
														"isOffset": false,
														"isSlot": false,
														"src": "2362:4:7",
														"valueSize": 1
													}
												],
												"id": 1728,
												"nodeType": "InlineAssembly",
												"src": "2307:101:7"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1729,
															"name": "slot",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1726,
															"src": "2424:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"id": 1730,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2429:14:7",
														"memberName": "getAddressSlot",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1865,
														"src": "2424:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1839_storage_ptr_$attached_to$_t_bytes32_$",
															"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
														}
													},
													"id": 1731,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2424:21:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSlot_$1839_storage_ptr",
														"typeString": "struct StorageSlot.AddressSlot storage pointer"
													}
												},
												"functionReturnParameters": 1724,
												"id": 1732,
												"nodeType": "Return",
												"src": "2417:28:7"
											}
										]
									},
									"documentation": {
										"id": 1714,
										"nodeType": "StructuredDocumentation",
										"src": "1683:191:7",
										"text": " @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."
									},
									"id": 1734,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unsafeAccess",
									"nameLocation": "1888:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1720,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1717,
												"mutability": "mutable",
												"name": "arr",
												"nameLocation": "1919:3:7",
												"nodeType": "VariableDeclaration",
												"scope": 1734,
												"src": "1901:21:7",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1715,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "1901:7:7",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1716,
													"nodeType": "ArrayTypeName",
													"src": "1901:9:7",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1719,
												"mutability": "mutable",
												"name": "pos",
												"nameLocation": "1932:3:7",
												"nodeType": "VariableDeclaration",
												"scope": 1734,
												"src": "1924:11:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1718,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1924:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1900:36:7"
									},
									"returnParameters": {
										"id": 1724,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1723,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1734,
												"src": "1960:31:7",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSlot_$1839_storage_ptr",
													"typeString": "struct StorageSlot.AddressSlot"
												},
												"typeName": {
													"id": 1722,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1721,
														"name": "StorageSlot.AddressSlot",
														"nameLocations": [
															"1960:11:7",
															"1972:11:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1839,
														"src": "1960:23:7"
													},
													"referencedDeclaration": 1839,
													"src": "1960:23:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSlot_$1839_storage_ptr",
														"typeString": "struct StorageSlot.AddressSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1959:33:7"
									},
									"scope": 1803,
									"src": "1879:573:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1754,
										"nodeType": "Block",
										"src": "2768:459:7",
										"statements": [
											{
												"assignments": [
													1747
												],
												"declarations": [
													{
														"constant": false,
														"id": 1747,
														"mutability": "mutable",
														"name": "slot",
														"nameLocation": "2786:4:7",
														"nodeType": "VariableDeclaration",
														"scope": 1754,
														"src": "2778:12:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 1746,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "2778:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1748,
												"nodeType": "VariableDeclarationStatement",
												"src": "2778:12:7"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "3091:92:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3112:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "arr.slot",
																		"nodeType": "YulIdentifier",
																		"src": "3115:8:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3105:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3105:19:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3105:19:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3137:36:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3159:1:7",
																				"type": "",
																				"value": "0"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3162:4:7",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "keccak256",
																			"nodeType": "YulIdentifier",
																			"src": "3149:9:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3149:18:7"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3169:3:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3145:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3145:28:7"
															},
															"variableNames": [
																{
																	"name": "slot",
																	"nodeType": "YulIdentifier",
																	"src": "3137:4:7"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 1738,
														"isOffset": false,
														"isSlot": true,
														"src": "3115:8:7",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1740,
														"isOffset": false,
														"isSlot": false,
														"src": "3169:3:7",
														"valueSize": 1
													},
													{
														"declaration": 1747,
														"isOffset": false,
														"isSlot": false,
														"src": "3137:4:7",
														"valueSize": 1
													}
												],
												"id": 1749,
												"nodeType": "InlineAssembly",
												"src": "3082:101:7"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1750,
															"name": "slot",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1747,
															"src": "3199:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"id": 1751,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3204:14:7",
														"memberName": "getBytes32Slot",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1887,
														"src": "3199:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_Bytes32Slot_$1845_storage_ptr_$attached_to$_t_bytes32_$",
															"typeString": "function (bytes32) pure returns (struct StorageSlot.Bytes32Slot storage pointer)"
														}
													},
													"id": 1752,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3199:21:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Slot_$1845_storage_ptr",
														"typeString": "struct StorageSlot.Bytes32Slot storage pointer"
													}
												},
												"functionReturnParameters": 1745,
												"id": 1753,
												"nodeType": "Return",
												"src": "3192:28:7"
											}
										]
									},
									"documentation": {
										"id": 1735,
										"nodeType": "StructuredDocumentation",
										"src": "2458:191:7",
										"text": " @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."
									},
									"id": 1755,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unsafeAccess",
									"nameLocation": "2663:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1741,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1738,
												"mutability": "mutable",
												"name": "arr",
												"nameLocation": "2694:3:7",
												"nodeType": "VariableDeclaration",
												"scope": 1755,
												"src": "2676:21:7",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
													"typeString": "bytes32[]"
												},
												"typeName": {
													"baseType": {
														"id": 1736,
														"name": "bytes32",
														"nodeType": "ElementaryTypeName",
														"src": "2676:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"id": 1737,
													"nodeType": "ArrayTypeName",
													"src": "2676:9:7",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
														"typeString": "bytes32[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1740,
												"mutability": "mutable",
												"name": "pos",
												"nameLocation": "2707:3:7",
												"nodeType": "VariableDeclaration",
												"scope": 1755,
												"src": "2699:11:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1739,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2699:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2675:36:7"
									},
									"returnParameters": {
										"id": 1745,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1744,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1755,
												"src": "2735:31:7",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Slot_$1845_storage_ptr",
													"typeString": "struct StorageSlot.Bytes32Slot"
												},
												"typeName": {
													"id": 1743,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1742,
														"name": "StorageSlot.Bytes32Slot",
														"nameLocations": [
															"2735:11:7",
															"2747:11:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1845,
														"src": "2735:23:7"
													},
													"referencedDeclaration": 1845,
													"src": "2735:23:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Slot_$1845_storage_ptr",
														"typeString": "struct StorageSlot.Bytes32Slot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2734:33:7"
									},
									"scope": 1803,
									"src": "2654:573:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1775,
										"nodeType": "Block",
										"src": "3543:459:7",
										"statements": [
											{
												"assignments": [
													1768
												],
												"declarations": [
													{
														"constant": false,
														"id": 1768,
														"mutability": "mutable",
														"name": "slot",
														"nameLocation": "3561:4:7",
														"nodeType": "VariableDeclaration",
														"scope": 1775,
														"src": "3553:12:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 1767,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "3553:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1769,
												"nodeType": "VariableDeclarationStatement",
												"src": "3553:12:7"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "3866:92:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3887:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "arr.slot",
																		"nodeType": "YulIdentifier",
																		"src": "3890:8:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3880:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3880:19:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3880:19:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3912:36:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3934:1:7",
																				"type": "",
																				"value": "0"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3937:4:7",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "keccak256",
																			"nodeType": "YulIdentifier",
																			"src": "3924:9:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3924:18:7"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3944:3:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3920:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3920:28:7"
															},
															"variableNames": [
																{
																	"name": "slot",
																	"nodeType": "YulIdentifier",
																	"src": "3912:4:7"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 1759,
														"isOffset": false,
														"isSlot": true,
														"src": "3890:8:7",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1761,
														"isOffset": false,
														"isSlot": false,
														"src": "3944:3:7",
														"valueSize": 1
													},
													{
														"declaration": 1768,
														"isOffset": false,
														"isSlot": false,
														"src": "3912:4:7",
														"valueSize": 1
													}
												],
												"id": 1770,
												"nodeType": "InlineAssembly",
												"src": "3857:101:7"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1771,
															"name": "slot",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1768,
															"src": "3974:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"id": 1772,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3979:14:7",
														"memberName": "getUint256Slot",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1898,
														"src": "3974:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_Uint256Slot_$1848_storage_ptr_$attached_to$_t_bytes32_$",
															"typeString": "function (bytes32) pure returns (struct StorageSlot.Uint256Slot storage pointer)"
														}
													},
													"id": 1773,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3974:21:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Uint256Slot_$1848_storage_ptr",
														"typeString": "struct StorageSlot.Uint256Slot storage pointer"
													}
												},
												"functionReturnParameters": 1766,
												"id": 1774,
												"nodeType": "Return",
												"src": "3967:28:7"
											}
										]
									},
									"documentation": {
										"id": 1756,
										"nodeType": "StructuredDocumentation",
										"src": "3233:191:7",
										"text": " @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."
									},
									"id": 1776,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unsafeAccess",
									"nameLocation": "3438:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1762,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1759,
												"mutability": "mutable",
												"name": "arr",
												"nameLocation": "3469:3:7",
												"nodeType": "VariableDeclaration",
												"scope": 1776,
												"src": "3451:21:7",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1757,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "3451:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1758,
													"nodeType": "ArrayTypeName",
													"src": "3451:9:7",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1761,
												"mutability": "mutable",
												"name": "pos",
												"nameLocation": "3482:3:7",
												"nodeType": "VariableDeclaration",
												"scope": 1776,
												"src": "3474:11:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1760,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3474:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3450:36:7"
									},
									"returnParameters": {
										"id": 1766,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1765,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1776,
												"src": "3510:31:7",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Uint256Slot_$1848_storage_ptr",
													"typeString": "struct StorageSlot.Uint256Slot"
												},
												"typeName": {
													"id": 1764,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1763,
														"name": "StorageSlot.Uint256Slot",
														"nameLocations": [
															"3510:11:7",
															"3522:11:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1848,
														"src": "3510:23:7"
													},
													"referencedDeclaration": 1848,
													"src": "3510:23:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Uint256Slot_$1848_storage_ptr",
														"typeString": "struct StorageSlot.Uint256Slot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3509:33:7"
									},
									"scope": 1803,
									"src": "3429:573:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1788,
										"nodeType": "Block",
										"src": "4303:98:7",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "4322:73:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4336:49:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "arr",
																						"nodeType": "YulIdentifier",
																						"src": "4357:3:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4362:4:7",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4353:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4353:14:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "4373:3:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4378:4:7",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nodeType": "YulIdentifier",
																					"src": "4369:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4369:14:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4349:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4349:35:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "4343:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4343:42:7"
															},
															"variableNames": [
																{
																	"name": "res",
																	"nodeType": "YulIdentifier",
																	"src": "4336:3:7"
																}
															]
														}
													]
												},
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 1780,
														"isOffset": false,
														"isSlot": false,
														"src": "4357:3:7",
														"valueSize": 1
													},
													{
														"declaration": 1782,
														"isOffset": false,
														"isSlot": false,
														"src": "4373:3:7",
														"valueSize": 1
													},
													{
														"declaration": 1785,
														"isOffset": false,
														"isSlot": false,
														"src": "4336:3:7",
														"valueSize": 1
													}
												],
												"id": 1787,
												"nodeType": "InlineAssembly",
												"src": "4313:82:7"
											}
										]
									},
									"documentation": {
										"id": 1777,
										"nodeType": "StructuredDocumentation",
										"src": "4008:191:7",
										"text": " @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."
									},
									"id": 1789,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unsafeMemoryAccess",
									"nameLocation": "4213:18:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1783,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1780,
												"mutability": "mutable",
												"name": "arr",
												"nameLocation": "4249:3:7",
												"nodeType": "VariableDeclaration",
												"scope": 1789,
												"src": "4232:20:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1778,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "4232:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1779,
													"nodeType": "ArrayTypeName",
													"src": "4232:9:7",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1782,
												"mutability": "mutable",
												"name": "pos",
												"nameLocation": "4262:3:7",
												"nodeType": "VariableDeclaration",
												"scope": 1789,
												"src": "4254:11:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1781,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4254:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4231:35:7"
									},
									"returnParameters": {
										"id": 1786,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1785,
												"mutability": "mutable",
												"name": "res",
												"nameLocation": "4298:3:7",
												"nodeType": "VariableDeclaration",
												"scope": 1789,
												"src": "4290:11:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1784,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4290:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4289:13:7"
									},
									"scope": 1803,
									"src": "4204:197:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1801,
										"nodeType": "Block",
										"src": "4702:98:7",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "4721:73:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4735:49:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "arr",
																						"nodeType": "YulIdentifier",
																						"src": "4756:3:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4761:4:7",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4752:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4752:14:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "4772:3:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4777:4:7",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nodeType": "YulIdentifier",
																					"src": "4768:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4768:14:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4748:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4748:35:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "4742:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4742:42:7"
															},
															"variableNames": [
																{
																	"name": "res",
																	"nodeType": "YulIdentifier",
																	"src": "4735:3:7"
																}
															]
														}
													]
												},
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 1793,
														"isOffset": false,
														"isSlot": false,
														"src": "4756:3:7",
														"valueSize": 1
													},
													{
														"declaration": 1795,
														"isOffset": false,
														"isSlot": false,
														"src": "4772:3:7",
														"valueSize": 1
													},
													{
														"declaration": 1798,
														"isOffset": false,
														"isSlot": false,
														"src": "4735:3:7",
														"valueSize": 1
													}
												],
												"id": 1800,
												"nodeType": "InlineAssembly",
												"src": "4712:82:7"
											}
										]
									},
									"documentation": {
										"id": 1790,
										"nodeType": "StructuredDocumentation",
										"src": "4407:191:7",
										"text": " @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."
									},
									"id": 1802,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unsafeMemoryAccess",
									"nameLocation": "4612:18:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1796,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1793,
												"mutability": "mutable",
												"name": "arr",
												"nameLocation": "4648:3:7",
												"nodeType": "VariableDeclaration",
												"scope": 1802,
												"src": "4631:20:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1791,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "4631:7:7",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1792,
													"nodeType": "ArrayTypeName",
													"src": "4631:9:7",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1795,
												"mutability": "mutable",
												"name": "pos",
												"nameLocation": "4661:3:7",
												"nodeType": "VariableDeclaration",
												"scope": 1802,
												"src": "4653:11:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1794,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4653:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4630:35:7"
									},
									"returnParameters": {
										"id": 1799,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1798,
												"mutability": "mutable",
												"name": "res",
												"nameLocation": "4697:3:7",
												"nodeType": "VariableDeclaration",
												"scope": 1802,
												"src": "4689:11:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1797,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4689:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4688:13:7"
									},
									"scope": 1803,
									"src": "4603:197:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1804,
							"src": "276:4526:7",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "100:4703:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							1833
						]
					},
					"id": 1834,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1805,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:8"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1806,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:8",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1833,
							"linearizedBaseContracts": [
								1833
							],
							"name": "Context",
							"nameLocation": "642:7:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1814,
										"nodeType": "Block",
										"src": "718:34:8",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1811,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:8",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1812,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:8",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1810,
												"id": 1813,
												"nodeType": "Return",
												"src": "728:17:8"
											}
										]
									},
									"id": 1815,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1807,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:8"
									},
									"returnParameters": {
										"id": 1810,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1809,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1815,
												"src": "709:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1808,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:8"
									},
									"scope": 1833,
									"src": "656:96:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1823,
										"nodeType": "Block",
										"src": "825:32:8",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1820,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:8",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1821,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:8",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1819,
												"id": 1822,
												"nodeType": "Return",
												"src": "835:15:8"
											}
										]
									},
									"id": 1824,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1816,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:8"
									},
									"returnParameters": {
										"id": 1819,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1818,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1824,
												"src": "809:14:8",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1817,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:8"
									},
									"scope": 1833,
									"src": "758:99:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1831,
										"nodeType": "Block",
										"src": "935:25:8",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 1829,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:8",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 1828,
												"id": 1830,
												"nodeType": "Return",
												"src": "945:8:8"
											}
										]
									},
									"id": 1832,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1825,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:8"
									},
									"returnParameters": {
										"id": 1828,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1827,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1832,
												"src": "926:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1826,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:8"
									},
									"scope": 1833,
									"src": "863:97:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1834,
							"src": "624:338:8",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:8"
				},
				"id": 8
			},
			"@openzeppelin/contracts/utils/StorageSlot.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/StorageSlot.sol",
					"exportedSymbols": {
						"StorageSlot": [
							1943
						]
					},
					"id": 1944,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1835,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "193:24:9"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "StorageSlot",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1836,
								"nodeType": "StructuredDocumentation",
								"src": "219:1025:9",
								"text": " @dev Library for reading and writing primitive types to specific storage slots.\n Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n This library helps with reading and writing to such slots without the need for inline assembly.\n The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n Example usage to set ERC1967 implementation slot:\n ```solidity\n contract ERC1967 {\n     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n     function _getImplementation() internal view returns (address) {\n         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n     }\n     function _setImplementation(address newImplementation) internal {\n         require(newImplementation.code.length > 0);\n         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n     }\n }\n ```"
							},
							"fullyImplemented": true,
							"id": 1943,
							"linearizedBaseContracts": [
								1943
							],
							"name": "StorageSlot",
							"nameLocation": "1253:11:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "StorageSlot.AddressSlot",
									"id": 1839,
									"members": [
										{
											"constant": false,
											"id": 1838,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1308:5:9",
											"nodeType": "VariableDeclaration",
											"scope": 1839,
											"src": "1300:13:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1837,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1300:7:9",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "AddressSlot",
									"nameLocation": "1278:11:9",
									"nodeType": "StructDefinition",
									"scope": 1943,
									"src": "1271:49:9",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.BooleanSlot",
									"id": 1842,
									"members": [
										{
											"constant": false,
											"id": 1841,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1360:5:9",
											"nodeType": "VariableDeclaration",
											"scope": 1842,
											"src": "1355:10:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 1840,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1355:4:9",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "BooleanSlot",
									"nameLocation": "1333:11:9",
									"nodeType": "StructDefinition",
									"scope": 1943,
									"src": "1326:46:9",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.Bytes32Slot",
									"id": 1845,
									"members": [
										{
											"constant": false,
											"id": 1844,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1415:5:9",
											"nodeType": "VariableDeclaration",
											"scope": 1845,
											"src": "1407:13:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 1843,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "1407:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Bytes32Slot",
									"nameLocation": "1385:11:9",
									"nodeType": "StructDefinition",
									"scope": 1943,
									"src": "1378:49:9",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.Uint256Slot",
									"id": 1848,
									"members": [
										{
											"constant": false,
											"id": 1847,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1470:5:9",
											"nodeType": "VariableDeclaration",
											"scope": 1848,
											"src": "1462:13:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1846,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1462:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Uint256Slot",
									"nameLocation": "1440:11:9",
									"nodeType": "StructDefinition",
									"scope": 1943,
									"src": "1433:49:9",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.StringSlot",
									"id": 1851,
									"members": [
										{
											"constant": false,
											"id": 1850,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1523:5:9",
											"nodeType": "VariableDeclaration",
											"scope": 1851,
											"src": "1516:12:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 1849,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "1516:6:9",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "StringSlot",
									"nameLocation": "1495:10:9",
									"nodeType": "StructDefinition",
									"scope": 1943,
									"src": "1488:47:9",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.BytesSlot",
									"id": 1854,
									"members": [
										{
											"constant": false,
											"id": 1853,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1574:5:9",
											"nodeType": "VariableDeclaration",
											"scope": 1854,
											"src": "1568:11:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes_storage_ptr",
												"typeString": "bytes"
											},
											"typeName": {
												"id": 1852,
												"name": "bytes",
												"nodeType": "ElementaryTypeName",
												"src": "1568:5:9",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "BytesSlot",
									"nameLocation": "1548:9:9",
									"nodeType": "StructDefinition",
									"scope": 1943,
									"src": "1541:45:9",
									"visibility": "public"
								},
								{
									"body": {
										"id": 1864,
										"nodeType": "Block",
										"src": "1768:106:9",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "1830:38:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1844:14:9",
															"value": {
																"name": "slot",
																"nodeType": "YulIdentifier",
																"src": "1854:4:9"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nodeType": "YulIdentifier",
																	"src": "1844:6:9"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 1861,
														"isOffset": false,
														"isSlot": true,
														"src": "1844:6:9",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1857,
														"isOffset": false,
														"isSlot": false,
														"src": "1854:4:9",
														"valueSize": 1
													}
												],
												"id": 1863,
												"nodeType": "InlineAssembly",
												"src": "1821:47:9"
											}
										]
									},
									"documentation": {
										"id": 1855,
										"nodeType": "StructuredDocumentation",
										"src": "1592:87:9",
										"text": " @dev Returns an `AddressSlot` with member `value` located at `slot`."
									},
									"id": 1865,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAddressSlot",
									"nameLocation": "1693:14:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1858,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1857,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "1716:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1865,
												"src": "1708:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1856,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1708:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1707:14:9"
									},
									"returnParameters": {
										"id": 1862,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1861,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "1765:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1865,
												"src": "1745:21:9",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSlot_$1839_storage_ptr",
													"typeString": "struct StorageSlot.AddressSlot"
												},
												"typeName": {
													"id": 1860,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1859,
														"name": "AddressSlot",
														"nameLocations": [
															"1745:11:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1839,
														"src": "1745:11:9"
													},
													"referencedDeclaration": 1839,
													"src": "1745:11:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSlot_$1839_storage_ptr",
														"typeString": "struct StorageSlot.AddressSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1744:23:9"
									},
									"scope": 1943,
									"src": "1684:190:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1875,
										"nodeType": "Block",
										"src": "2056:106:9",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "2118:38:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2132:14:9",
															"value": {
																"name": "slot",
																"nodeType": "YulIdentifier",
																"src": "2142:4:9"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nodeType": "YulIdentifier",
																	"src": "2132:6:9"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 1872,
														"isOffset": false,
														"isSlot": true,
														"src": "2132:6:9",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1868,
														"isOffset": false,
														"isSlot": false,
														"src": "2142:4:9",
														"valueSize": 1
													}
												],
												"id": 1874,
												"nodeType": "InlineAssembly",
												"src": "2109:47:9"
											}
										]
									},
									"documentation": {
										"id": 1866,
										"nodeType": "StructuredDocumentation",
										"src": "1880:87:9",
										"text": " @dev Returns an `BooleanSlot` with member `value` located at `slot`."
									},
									"id": 1876,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBooleanSlot",
									"nameLocation": "1981:14:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1869,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1868,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2004:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1876,
												"src": "1996:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1867,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1996:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1995:14:9"
									},
									"returnParameters": {
										"id": 1873,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1872,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2053:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1876,
												"src": "2033:21:9",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BooleanSlot_$1842_storage_ptr",
													"typeString": "struct StorageSlot.BooleanSlot"
												},
												"typeName": {
													"id": 1871,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1870,
														"name": "BooleanSlot",
														"nameLocations": [
															"2033:11:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1842,
														"src": "2033:11:9"
													},
													"referencedDeclaration": 1842,
													"src": "2033:11:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BooleanSlot_$1842_storage_ptr",
														"typeString": "struct StorageSlot.BooleanSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2032:23:9"
									},
									"scope": 1943,
									"src": "1972:190:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1886,
										"nodeType": "Block",
										"src": "2344:106:9",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "2406:38:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2420:14:9",
															"value": {
																"name": "slot",
																"nodeType": "YulIdentifier",
																"src": "2430:4:9"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nodeType": "YulIdentifier",
																	"src": "2420:6:9"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 1883,
														"isOffset": false,
														"isSlot": true,
														"src": "2420:6:9",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1879,
														"isOffset": false,
														"isSlot": false,
														"src": "2430:4:9",
														"valueSize": 1
													}
												],
												"id": 1885,
												"nodeType": "InlineAssembly",
												"src": "2397:47:9"
											}
										]
									},
									"documentation": {
										"id": 1877,
										"nodeType": "StructuredDocumentation",
										"src": "2168:87:9",
										"text": " @dev Returns an `Bytes32Slot` with member `value` located at `slot`."
									},
									"id": 1887,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBytes32Slot",
									"nameLocation": "2269:14:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1880,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1879,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2292:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1887,
												"src": "2284:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1878,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2284:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2283:14:9"
									},
									"returnParameters": {
										"id": 1884,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1883,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2341:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1887,
												"src": "2321:21:9",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Slot_$1845_storage_ptr",
													"typeString": "struct StorageSlot.Bytes32Slot"
												},
												"typeName": {
													"id": 1882,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1881,
														"name": "Bytes32Slot",
														"nameLocations": [
															"2321:11:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1845,
														"src": "2321:11:9"
													},
													"referencedDeclaration": 1845,
													"src": "2321:11:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Slot_$1845_storage_ptr",
														"typeString": "struct StorageSlot.Bytes32Slot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2320:23:9"
									},
									"scope": 1943,
									"src": "2260:190:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1897,
										"nodeType": "Block",
										"src": "2632:106:9",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "2694:38:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2708:14:9",
															"value": {
																"name": "slot",
																"nodeType": "YulIdentifier",
																"src": "2718:4:9"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nodeType": "YulIdentifier",
																	"src": "2708:6:9"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 1894,
														"isOffset": false,
														"isSlot": true,
														"src": "2708:6:9",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1890,
														"isOffset": false,
														"isSlot": false,
														"src": "2718:4:9",
														"valueSize": 1
													}
												],
												"id": 1896,
												"nodeType": "InlineAssembly",
												"src": "2685:47:9"
											}
										]
									},
									"documentation": {
										"id": 1888,
										"nodeType": "StructuredDocumentation",
										"src": "2456:87:9",
										"text": " @dev Returns an `Uint256Slot` with member `value` located at `slot`."
									},
									"id": 1898,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getUint256Slot",
									"nameLocation": "2557:14:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1891,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1890,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2580:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1898,
												"src": "2572:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1889,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2572:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2571:14:9"
									},
									"returnParameters": {
										"id": 1895,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1894,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2629:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1898,
												"src": "2609:21:9",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Uint256Slot_$1848_storage_ptr",
													"typeString": "struct StorageSlot.Uint256Slot"
												},
												"typeName": {
													"id": 1893,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1892,
														"name": "Uint256Slot",
														"nameLocations": [
															"2609:11:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1848,
														"src": "2609:11:9"
													},
													"referencedDeclaration": 1848,
													"src": "2609:11:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Uint256Slot_$1848_storage_ptr",
														"typeString": "struct StorageSlot.Uint256Slot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2608:23:9"
									},
									"scope": 1943,
									"src": "2548:190:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1908,
										"nodeType": "Block",
										"src": "2917:106:9",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "2979:38:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2993:14:9",
															"value": {
																"name": "slot",
																"nodeType": "YulIdentifier",
																"src": "3003:4:9"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nodeType": "YulIdentifier",
																	"src": "2993:6:9"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 1905,
														"isOffset": false,
														"isSlot": true,
														"src": "2993:6:9",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1901,
														"isOffset": false,
														"isSlot": false,
														"src": "3003:4:9",
														"valueSize": 1
													}
												],
												"id": 1907,
												"nodeType": "InlineAssembly",
												"src": "2970:47:9"
											}
										]
									},
									"documentation": {
										"id": 1899,
										"nodeType": "StructuredDocumentation",
										"src": "2744:86:9",
										"text": " @dev Returns an `StringSlot` with member `value` located at `slot`."
									},
									"id": 1909,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getStringSlot",
									"nameLocation": "2844:13:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1902,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1901,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2866:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1909,
												"src": "2858:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1900,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2858:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2857:14:9"
									},
									"returnParameters": {
										"id": 1906,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1905,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2914:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1909,
												"src": "2895:20:9",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_StringSlot_$1851_storage_ptr",
													"typeString": "struct StorageSlot.StringSlot"
												},
												"typeName": {
													"id": 1904,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1903,
														"name": "StringSlot",
														"nameLocations": [
															"2895:10:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1851,
														"src": "2895:10:9"
													},
													"referencedDeclaration": 1851,
													"src": "2895:10:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StringSlot_$1851_storage_ptr",
														"typeString": "struct StorageSlot.StringSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2894:22:9"
									},
									"scope": 1943,
									"src": "2835:188:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1919,
										"nodeType": "Block",
										"src": "3225:112:9",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "3287:44:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3301:20:9",
															"value": {
																"name": "store.slot",
																"nodeType": "YulIdentifier",
																"src": "3311:10:9"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nodeType": "YulIdentifier",
																	"src": "3301:6:9"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 1916,
														"isOffset": false,
														"isSlot": true,
														"src": "3301:6:9",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1912,
														"isOffset": false,
														"isSlot": true,
														"src": "3311:10:9",
														"suffix": "slot",
														"valueSize": 1
													}
												],
												"id": 1918,
												"nodeType": "InlineAssembly",
												"src": "3278:53:9"
											}
										]
									},
									"documentation": {
										"id": 1910,
										"nodeType": "StructuredDocumentation",
										"src": "3029:101:9",
										"text": " @dev Returns an `StringSlot` representation of the string storage pointer `store`."
									},
									"id": 1920,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getStringSlot",
									"nameLocation": "3144:13:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1913,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1912,
												"mutability": "mutable",
												"name": "store",
												"nameLocation": "3173:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1920,
												"src": "3158:20:9",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1911,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3158:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3157:22:9"
									},
									"returnParameters": {
										"id": 1917,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1916,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3222:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1920,
												"src": "3203:20:9",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_StringSlot_$1851_storage_ptr",
													"typeString": "struct StorageSlot.StringSlot"
												},
												"typeName": {
													"id": 1915,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1914,
														"name": "StringSlot",
														"nameLocations": [
															"3203:10:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1851,
														"src": "3203:10:9"
													},
													"referencedDeclaration": 1851,
													"src": "3203:10:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StringSlot_$1851_storage_ptr",
														"typeString": "struct StorageSlot.StringSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3202:22:9"
									},
									"scope": 1943,
									"src": "3135:202:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1930,
										"nodeType": "Block",
										"src": "3513:106:9",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "3575:38:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3589:14:9",
															"value": {
																"name": "slot",
																"nodeType": "YulIdentifier",
																"src": "3599:4:9"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nodeType": "YulIdentifier",
																	"src": "3589:6:9"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 1927,
														"isOffset": false,
														"isSlot": true,
														"src": "3589:6:9",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1923,
														"isOffset": false,
														"isSlot": false,
														"src": "3599:4:9",
														"valueSize": 1
													}
												],
												"id": 1929,
												"nodeType": "InlineAssembly",
												"src": "3566:47:9"
											}
										]
									},
									"documentation": {
										"id": 1921,
										"nodeType": "StructuredDocumentation",
										"src": "3343:85:9",
										"text": " @dev Returns an `BytesSlot` with member `value` located at `slot`."
									},
									"id": 1931,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBytesSlot",
									"nameLocation": "3442:12:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1924,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1923,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "3463:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1931,
												"src": "3455:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1922,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3455:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3454:14:9"
									},
									"returnParameters": {
										"id": 1928,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1927,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3510:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1931,
												"src": "3492:19:9",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BytesSlot_$1854_storage_ptr",
													"typeString": "struct StorageSlot.BytesSlot"
												},
												"typeName": {
													"id": 1926,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1925,
														"name": "BytesSlot",
														"nameLocations": [
															"3492:9:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1854,
														"src": "3492:9:9"
													},
													"referencedDeclaration": 1854,
													"src": "3492:9:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BytesSlot_$1854_storage_ptr",
														"typeString": "struct StorageSlot.BytesSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3491:21:9"
									},
									"scope": 1943,
									"src": "3433:186:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1941,
										"nodeType": "Block",
										"src": "3816:112:9",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "3878:44:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3892:20:9",
															"value": {
																"name": "store.slot",
																"nodeType": "YulIdentifier",
																"src": "3902:10:9"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nodeType": "YulIdentifier",
																	"src": "3892:6:9"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 1938,
														"isOffset": false,
														"isSlot": true,
														"src": "3892:6:9",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1934,
														"isOffset": false,
														"isSlot": true,
														"src": "3902:10:9",
														"suffix": "slot",
														"valueSize": 1
													}
												],
												"id": 1940,
												"nodeType": "InlineAssembly",
												"src": "3869:53:9"
											}
										]
									},
									"documentation": {
										"id": 1932,
										"nodeType": "StructuredDocumentation",
										"src": "3625:99:9",
										"text": " @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`."
									},
									"id": 1942,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBytesSlot",
									"nameLocation": "3738:12:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1935,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1934,
												"mutability": "mutable",
												"name": "store",
												"nameLocation": "3765:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1942,
												"src": "3751:19:9",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1933,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3751:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3750:21:9"
									},
									"returnParameters": {
										"id": 1939,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1938,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3813:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1942,
												"src": "3795:19:9",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BytesSlot_$1854_storage_ptr",
													"typeString": "struct StorageSlot.BytesSlot"
												},
												"typeName": {
													"id": 1937,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1936,
														"name": "BytesSlot",
														"nameLocations": [
															"3795:9:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1854,
														"src": "3795:9:9"
													},
													"referencedDeclaration": 1854,
													"src": "3795:9:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BytesSlot_$1854_storage_ptr",
														"typeString": "struct StorageSlot.BytesSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3794:21:9"
									},
									"scope": 1943,
									"src": "3729:199:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1944,
							"src": "1245:2685:9",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "193:3738:9"
				},
				"id": 9
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
					"exportedSymbols": {
						"ERC165": [
							1967
						],
						"IERC165": [
							1979
						]
					},
					"id": 1968,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1945,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "114:24:10"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 1947,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1968,
							"sourceUnit": 1980,
							"src": "140:38:10",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1946,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1979,
										"src": "148:7:10",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1949,
										"name": "IERC165",
										"nameLocations": [
											"687:7:10"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1979,
										"src": "687:7:10"
									},
									"id": 1950,
									"nodeType": "InheritanceSpecifier",
									"src": "687:7:10"
								}
							],
							"canonicalName": "ERC165",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1948,
								"nodeType": "StructuredDocumentation",
								"src": "180:478:10",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```"
							},
							"fullyImplemented": true,
							"id": 1967,
							"linearizedBaseContracts": [
								1967,
								1979
							],
							"name": "ERC165",
							"nameLocation": "677:6:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										1978
									],
									"body": {
										"id": 1965,
										"nodeType": "Block",
										"src": "844:64:10",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 1963,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1958,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1953,
														"src": "861:11:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1960,
																	"name": "IERC165",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1979,
																	"src": "881:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1979_$",
																		"typeString": "type(contract IERC165)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1979_$",
																		"typeString": "type(contract IERC165)"
																	}
																],
																"id": 1959,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "876:4:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1961,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "876:13:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$1979",
																"typeString": "type(contract IERC165)"
															}
														},
														"id": 1962,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "890:11:10",
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "876:25:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "861:40:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1957,
												"id": 1964,
												"nodeType": "Return",
												"src": "854:47:10"
											}
										]
									},
									"documentation": {
										"id": 1951,
										"nodeType": "StructuredDocumentation",
										"src": "701:56:10",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 1966,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "771:17:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1954,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1953,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "796:11:10",
												"nodeType": "VariableDeclaration",
												"scope": 1966,
												"src": "789:18:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1952,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "789:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "788:20:10"
									},
									"returnParameters": {
										"id": 1957,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1956,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1966,
												"src": "838:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1955,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "838:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "837:6:10"
									},
									"scope": 1967,
									"src": "762:146:10",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 1968,
							"src": "659:251:10",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "114:797:10"
				},
				"id": 10
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							1979
						]
					},
					"id": 1980,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1969,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:11"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1970,
								"nodeType": "StructuredDocumentation",
								"src": "141:279:11",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 1979,
							"linearizedBaseContracts": [
								1979
							],
							"name": "IERC165",
							"nameLocation": "431:7:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1971,
										"nodeType": "StructuredDocumentation",
										"src": "445:340:11",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 1978,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "799:17:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1974,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1973,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "824:11:11",
												"nodeType": "VariableDeclaration",
												"scope": 1978,
												"src": "817:18:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1972,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "817:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "816:20:11"
									},
									"returnParameters": {
										"id": 1977,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1976,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1978,
												"src": "860:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1975,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "860:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "859:6:11"
									},
									"scope": 1979,
									"src": "790:76:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1980,
							"src": "421:447:11",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "115:754:11"
				},
				"id": 11
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/Math.sol",
					"exportedSymbols": {
						"Math": [
							3033
						]
					},
					"id": 3034,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1981,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "103:24:12"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Math",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1982,
								"nodeType": "StructuredDocumentation",
								"src": "129:73:12",
								"text": " @dev Standard math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 3033,
							"linearizedBaseContracts": [
								3033
							],
							"name": "Math",
							"nameLocation": "211:4:12",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1983,
										"nodeType": "StructuredDocumentation",
										"src": "222:50:12",
										"text": " @dev Muldiv operation overflow."
									},
									"errorSelector": "227bc153",
									"id": 1985,
									"name": "MathOverflowedMulDiv",
									"nameLocation": "283:20:12",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1984,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "303:2:12"
									},
									"src": "277:29:12"
								},
								{
									"canonicalName": "Math.Rounding",
									"id": 1990,
									"members": [
										{
											"id": 1986,
											"name": "Floor",
											"nameLocation": "336:5:12",
											"nodeType": "EnumValue",
											"src": "336:5:12"
										},
										{
											"id": 1987,
											"name": "Ceil",
											"nameLocation": "379:4:12",
											"nodeType": "EnumValue",
											"src": "379:4:12"
										},
										{
											"id": 1988,
											"name": "Trunc",
											"nameLocation": "421:5:12",
											"nodeType": "EnumValue",
											"src": "421:5:12"
										},
										{
											"id": 1989,
											"name": "Expand",
											"nameLocation": "451:6:12",
											"nodeType": "EnumValue",
											"src": "451:6:12"
										}
									],
									"name": "Rounding",
									"nameLocation": "317:8:12",
									"nodeType": "EnumDefinition",
									"src": "312:169:12"
								},
								{
									"body": {
										"id": 2021,
										"nodeType": "Block",
										"src": "661:140:12",
										"statements": [
											{
												"id": 2020,
												"nodeType": "UncheckedBlock",
												"src": "671:124:12",
												"statements": [
													{
														"assignments": [
															2003
														],
														"declarations": [
															{
																"constant": false,
																"id": 2003,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "703:1:12",
																"nodeType": "VariableDeclaration",
																"scope": 2020,
																"src": "695:9:12",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2002,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "695:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2007,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2006,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2004,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1993,
																"src": "707:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 2005,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1995,
																"src": "711:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "707:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "695:17:12"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2010,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2008,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2003,
																"src": "730:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 2009,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1993,
																"src": "734:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "730:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2015,
														"nodeType": "IfStatement",
														"src": "726:28:12",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2011,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "745:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2012,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "752:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2013,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "744:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2001,
															"id": 2014,
															"nodeType": "Return",
															"src": "737:17:12"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2016,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "776:4:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 2017,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2003,
																	"src": "782:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2018,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "775:9:12",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2001,
														"id": 2019,
														"nodeType": "Return",
														"src": "768:16:12"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1991,
										"nodeType": "StructuredDocumentation",
										"src": "487:93:12",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag."
									},
									"id": 2022,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "594:6:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1996,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1993,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "609:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2022,
												"src": "601:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1992,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "601:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1995,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "620:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2022,
												"src": "612:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1994,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "612:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "600:22:12"
									},
									"returnParameters": {
										"id": 2001,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1998,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2022,
												"src": "646:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1997,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "646:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2000,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2022,
												"src": "652:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1999,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "645:15:12"
									},
									"scope": 3033,
									"src": "585:216:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2049,
										"nodeType": "Block",
										"src": "984:113:12",
										"statements": [
											{
												"id": 2048,
												"nodeType": "UncheckedBlock",
												"src": "994:97:12",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2036,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2034,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2027,
																"src": "1022:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 2035,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2025,
																"src": "1026:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1022:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2041,
														"nodeType": "IfStatement",
														"src": "1018:28:12",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2037,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1037:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2038,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1044:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2039,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1036:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2033,
															"id": 2040,
															"nodeType": "Return",
															"src": "1029:17:12"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2042,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1068:4:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2045,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2043,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2025,
																		"src": "1074:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 2044,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2027,
																		"src": "1078:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1074:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2046,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1067:13:12",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2033,
														"id": 2047,
														"nodeType": "Return",
														"src": "1060:20:12"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2023,
										"nodeType": "StructuredDocumentation",
										"src": "807:96:12",
										"text": " @dev Returns the subtraction of two unsigned integers, with an overflow flag."
									},
									"id": 2050,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "917:6:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2028,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2025,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "932:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2050,
												"src": "924:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2024,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "924:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2027,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "943:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2050,
												"src": "935:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2026,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "935:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "923:22:12"
									},
									"returnParameters": {
										"id": 2033,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2030,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2050,
												"src": "969:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2029,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "969:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2032,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2050,
												"src": "975:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2031,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "975:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "968:15:12"
									},
									"scope": 3033,
									"src": "908:189:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2091,
										"nodeType": "Block",
										"src": "1283:417:12",
										"statements": [
											{
												"id": 2090,
												"nodeType": "UncheckedBlock",
												"src": "1293:401:12",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2064,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2062,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2053,
																"src": "1551:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2063,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1556:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1551:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2069,
														"nodeType": "IfStatement",
														"src": "1547:28:12",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 2065,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1567:4:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 2066,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1573:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2067,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1566:9:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2061,
															"id": 2068,
															"nodeType": "Return",
															"src": "1559:16:12"
														}
													},
													{
														"assignments": [
															2071
														],
														"declarations": [
															{
																"constant": false,
																"id": 2071,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1597:1:12",
																"nodeType": "VariableDeclaration",
																"scope": 2090,
																"src": "1589:9:12",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2070,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1589:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2075,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2074,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2072,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2053,
																"src": "1601:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 2073,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2055,
																"src": "1605:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1601:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1589:17:12"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2080,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2078,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2076,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2071,
																	"src": "1624:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 2077,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2053,
																	"src": "1628:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1624:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 2079,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2055,
																"src": "1633:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1624:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2085,
														"nodeType": "IfStatement",
														"src": "1620:33:12",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2081,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1644:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2082,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1651:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2083,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1643:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2061,
															"id": 2084,
															"nodeType": "Return",
															"src": "1636:17:12"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2086,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1675:4:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 2087,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2071,
																	"src": "1681:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2088,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1674:9:12",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2061,
														"id": 2089,
														"nodeType": "Return",
														"src": "1667:16:12"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2051,
										"nodeType": "StructuredDocumentation",
										"src": "1103:99:12",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag."
									},
									"id": 2092,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1216:6:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2056,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2053,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1231:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2092,
												"src": "1223:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2052,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2055,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1242:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2092,
												"src": "1234:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2054,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1222:22:12"
									},
									"returnParameters": {
										"id": 2061,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2058,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2092,
												"src": "1268:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2057,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1268:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2060,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2092,
												"src": "1274:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2059,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1274:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1267:15:12"
									},
									"scope": 3033,
									"src": "1207:493:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2119,
										"nodeType": "Block",
										"src": "1887:114:12",
										"statements": [
											{
												"id": 2118,
												"nodeType": "UncheckedBlock",
												"src": "1897:98:12",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2106,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2104,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2097,
																"src": "1925:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2105,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1930:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1925:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2111,
														"nodeType": "IfStatement",
														"src": "1921:29:12",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2107,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1941:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2108,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1948:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2109,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1940:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2103,
															"id": 2110,
															"nodeType": "Return",
															"src": "1933:17:12"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2112,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1972:4:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2115,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2113,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2095,
																		"src": "1978:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 2114,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2097,
																		"src": "1982:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1978:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2116,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1971:13:12",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2103,
														"id": 2117,
														"nodeType": "Return",
														"src": "1964:20:12"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2093,
										"nodeType": "StructuredDocumentation",
										"src": "1706:100:12",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag."
									},
									"id": 2120,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1820:6:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2098,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2095,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1835:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2120,
												"src": "1827:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2094,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1827:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2097,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1846:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2120,
												"src": "1838:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2096,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1838:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1826:22:12"
									},
									"returnParameters": {
										"id": 2103,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2100,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2120,
												"src": "1872:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2099,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1872:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2102,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2120,
												"src": "1878:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2101,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1878:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1871:15:12"
									},
									"scope": 3033,
									"src": "1811:190:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2147,
										"nodeType": "Block",
										"src": "2198:114:12",
										"statements": [
											{
												"id": 2146,
												"nodeType": "UncheckedBlock",
												"src": "2208:98:12",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2134,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2132,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2125,
																"src": "2236:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2133,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2241:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2236:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2139,
														"nodeType": "IfStatement",
														"src": "2232:29:12",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2135,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2252:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2136,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2259:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2137,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2251:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2131,
															"id": 2138,
															"nodeType": "Return",
															"src": "2244:17:12"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2140,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2283:4:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2143,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2141,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2123,
																		"src": "2289:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 2142,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2125,
																		"src": "2293:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2289:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2144,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2282:13:12",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2131,
														"id": 2145,
														"nodeType": "Return",
														"src": "2275:20:12"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2121,
										"nodeType": "StructuredDocumentation",
										"src": "2007:110:12",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag."
									},
									"id": 2148,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2131:6:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2126,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2123,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2146:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2148,
												"src": "2138:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2122,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2138:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2125,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2157:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2148,
												"src": "2149:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2124,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2149:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2137:22:12"
									},
									"returnParameters": {
										"id": 2131,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2128,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2148,
												"src": "2183:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2127,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2183:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2130,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2148,
												"src": "2189:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2129,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2189:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2182:15:12"
									},
									"scope": 3033,
									"src": "2122:190:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2165,
										"nodeType": "Block",
										"src": "2449:37:12",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2160,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2158,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2151,
															"src": "2466:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 2159,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2153,
															"src": "2470:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2466:5:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 2162,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2153,
														"src": "2478:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2163,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2466:13:12",
													"trueExpression": {
														"id": 2161,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2151,
														"src": "2474:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2157,
												"id": 2164,
												"nodeType": "Return",
												"src": "2459:20:12"
											}
										]
									},
									"documentation": {
										"id": 2149,
										"nodeType": "StructuredDocumentation",
										"src": "2318:59:12",
										"text": " @dev Returns the largest of two numbers."
									},
									"id": 2166,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "2391:3:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2154,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2151,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2403:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2166,
												"src": "2395:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2150,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2395:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2153,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2414:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2166,
												"src": "2406:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2152,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2406:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2394:22:12"
									},
									"returnParameters": {
										"id": 2157,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2156,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2166,
												"src": "2440:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2155,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2440:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2439:9:12"
									},
									"scope": 3033,
									"src": "2382:104:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2183,
										"nodeType": "Block",
										"src": "2624:37:12",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2178,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2176,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2169,
															"src": "2641:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 2177,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2171,
															"src": "2645:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2641:5:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 2180,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2171,
														"src": "2653:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2181,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2641:13:12",
													"trueExpression": {
														"id": 2179,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2169,
														"src": "2649:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2175,
												"id": 2182,
												"nodeType": "Return",
												"src": "2634:20:12"
											}
										]
									},
									"documentation": {
										"id": 2167,
										"nodeType": "StructuredDocumentation",
										"src": "2492:60:12",
										"text": " @dev Returns the smallest of two numbers."
									},
									"id": 2184,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "2566:3:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2172,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2169,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2578:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2184,
												"src": "2570:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2168,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2171,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2589:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2184,
												"src": "2581:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2170,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2581:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:22:12"
									},
									"returnParameters": {
										"id": 2175,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2174,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2184,
												"src": "2615:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2173,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2615:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2614:9:12"
									},
									"scope": 3033,
									"src": "2557:104:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2206,
										"nodeType": "Block",
										"src": "2845:82:12",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2204,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2196,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2194,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2187,
																	"src": "2900:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 2195,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2189,
																	"src": "2904:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2900:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 2197,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2899:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2203,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2200,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2198,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2187,
																		"src": "2910:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "^",
																	"rightExpression": {
																		"id": 2199,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2189,
																		"src": "2914:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2910:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2201,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2909:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "32",
															"id": 2202,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2919:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "2909:11:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2899:21:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2193,
												"id": 2205,
												"nodeType": "Return",
												"src": "2892:28:12"
											}
										]
									},
									"documentation": {
										"id": 2185,
										"nodeType": "StructuredDocumentation",
										"src": "2667:102:12",
										"text": " @dev Returns the average of two numbers. The result is rounded towards\n zero."
									},
									"id": 2207,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "2783:7:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2190,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2187,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2799:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2207,
												"src": "2791:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2186,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2791:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2189,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2810:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2207,
												"src": "2802:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2188,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2802:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2790:22:12"
									},
									"returnParameters": {
										"id": 2193,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2192,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2207,
												"src": "2836:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2191,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2836:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2835:9:12"
									},
									"scope": 3033,
									"src": "2774:153:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2240,
										"nodeType": "Block",
										"src": "3219:260:12",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2219,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2217,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2212,
														"src": "3233:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 2218,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3238:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3233:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2225,
												"nodeType": "IfStatement",
												"src": "3229:127:12",
												"trueBody": {
													"id": 2224,
													"nodeType": "Block",
													"src": "3241:115:12",
													"statements": [
														{
															"expression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2222,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2220,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2210,
																	"src": "3340:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 2221,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2212,
																	"src": "3344:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3340:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 2216,
															"id": 2223,
															"nodeType": "Return",
															"src": "3333:12:12"
														}
													]
												}
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2228,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2226,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2210,
															"src": "3444:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 2227,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3449:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "3444:6:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2237,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2235,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2232,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2230,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2210,
																			"src": "3458:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 2231,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3462:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "3458:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2233,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3457:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 2234,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2212,
																"src": "3467:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3457:11:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 2236,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3471:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "3457:15:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2238,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "3444:28:12",
													"trueExpression": {
														"hexValue": "30",
														"id": 2229,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3453:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2216,
												"id": 2239,
												"nodeType": "Return",
												"src": "3437:35:12"
											}
										]
									},
									"documentation": {
										"id": 2208,
										"nodeType": "StructuredDocumentation",
										"src": "2933:210:12",
										"text": " @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds towards infinity instead\n of rounding towards zero."
									},
									"id": 2241,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ceilDiv",
									"nameLocation": "3157:7:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2210,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3173:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2241,
												"src": "3165:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2209,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3165:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2212,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3184:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2241,
												"src": "3176:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2211,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3176:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3164:22:12"
									},
									"returnParameters": {
										"id": 2216,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2215,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2241,
												"src": "3210:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2214,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3210:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3209:9:12"
									},
									"scope": 3033,
									"src": "3148:331:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2366,
										"nodeType": "Block",
										"src": "3901:4018:12",
										"statements": [
											{
												"id": 2365,
												"nodeType": "UncheckedBlock",
												"src": "3911:4002:12",
												"statements": [
													{
														"assignments": [
															2254
														],
														"declarations": [
															{
																"constant": false,
																"id": 2254,
																"mutability": "mutable",
																"name": "prod0",
																"nameLocation": "4240:5:12",
																"nodeType": "VariableDeclaration",
																"scope": 2365,
																"src": "4232:13:12",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2253,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4232:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2258,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2257,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2255,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2244,
																"src": "4248:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 2256,
																"name": "y",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2246,
																"src": "4252:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4248:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "4232:21:12"
													},
													{
														"assignments": [
															2260
														],
														"declarations": [
															{
																"constant": false,
																"id": 2260,
																"mutability": "mutable",
																"name": "prod1",
																"nameLocation": "4320:5:12",
																"nodeType": "VariableDeclaration",
																"scope": 2365,
																"src": "4312:13:12",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2259,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4312:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2261,
														"nodeType": "VariableDeclarationStatement",
														"src": "4312:13:12"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "4392:122:12",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4410:30:12",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "4427:1:12"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "4430:1:12"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4437:1:12",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "4433:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4433:6:12"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nodeType": "YulIdentifier",
																			"src": "4420:6:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4420:20:12"
																	},
																	"variables": [
																		{
																			"name": "mm",
																			"nodeType": "YulTypedName",
																			"src": "4414:2:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4457:43:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nodeType": "YulIdentifier",
																						"src": "4474:2:12"
																					},
																					{
																						"name": "prod0",
																						"nodeType": "YulIdentifier",
																						"src": "4478:5:12"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "4470:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4470:14:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nodeType": "YulIdentifier",
																						"src": "4489:2:12"
																					},
																					{
																						"name": "prod0",
																						"nodeType": "YulIdentifier",
																						"src": "4493:5:12"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "4486:2:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4486:13:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4466:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4466:34:12"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nodeType": "YulIdentifier",
																			"src": "4457:5:12"
																		}
																	]
																}
															]
														},
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 2254,
																"isOffset": false,
																"isSlot": false,
																"src": "4478:5:12",
																"valueSize": 1
															},
															{
																"declaration": 2254,
																"isOffset": false,
																"isSlot": false,
																"src": "4493:5:12",
																"valueSize": 1
															},
															{
																"declaration": 2260,
																"isOffset": false,
																"isSlot": false,
																"src": "4457:5:12",
																"valueSize": 1
															},
															{
																"declaration": 2244,
																"isOffset": false,
																"isSlot": false,
																"src": "4427:1:12",
																"valueSize": 1
															},
															{
																"declaration": 2246,
																"isOffset": false,
																"isSlot": false,
																"src": "4430:1:12",
																"valueSize": 1
															}
														],
														"id": 2262,
														"nodeType": "InlineAssembly",
														"src": "4383:131:12"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2265,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2263,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2260,
																"src": "4595:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2264,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4604:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4595:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2271,
														"nodeType": "IfStatement",
														"src": "4591:368:12",
														"trueBody": {
															"id": 2270,
															"nodeType": "Block",
															"src": "4607:352:12",
															"statements": [
																{
																	"expression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2268,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2266,
																			"name": "prod0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2254,
																			"src": "4925:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 2267,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2248,
																			"src": "4933:11:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "4925:19:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"functionReturnParameters": 2252,
																	"id": 2269,
																	"nodeType": "Return",
																	"src": "4918:26:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2274,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2272,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2248,
																"src": "5065:11:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 2273,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2260,
																"src": "5080:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5065:20:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2279,
														"nodeType": "IfStatement",
														"src": "5061:88:12",
														"trueBody": {
															"id": 2278,
															"nodeType": "Block",
															"src": "5087:62:12",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 2275,
																			"name": "MathOverflowedMulDiv",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1985,
																			"src": "5112:20:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 2276,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5112:22:12",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 2277,
																	"nodeType": "RevertStatement",
																	"src": "5105:29:12"
																}
															]
														}
													},
													{
														"assignments": [
															2281
														],
														"declarations": [
															{
																"constant": false,
																"id": 2281,
																"mutability": "mutable",
																"name": "remainder",
																"nameLocation": "5412:9:12",
																"nodeType": "VariableDeclaration",
																"scope": 2365,
																"src": "5404:17:12",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2280,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "5404:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2282,
														"nodeType": "VariableDeclarationStatement",
														"src": "5404:17:12"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "5444:291:12",
															"statements": [
																{
																	"nodeType": "YulAssignment",
																	"src": "5513:38:12",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "5533:1:12"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "5536:1:12"
																			},
																			{
																				"name": "denominator",
																				"nodeType": "YulIdentifier",
																				"src": "5539:11:12"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nodeType": "YulIdentifier",
																			"src": "5526:6:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5526:25:12"
																	},
																	"variableNames": [
																		{
																			"name": "remainder",
																			"nodeType": "YulIdentifier",
																			"src": "5513:9:12"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5633:41:12",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod1",
																				"nodeType": "YulIdentifier",
																				"src": "5646:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "remainder",
																						"nodeType": "YulIdentifier",
																						"src": "5656:9:12"
																					},
																					{
																						"name": "prod0",
																						"nodeType": "YulIdentifier",
																						"src": "5667:5:12"
																					}
																				],
																				"functionName": {
																					"name": "gt",
																					"nodeType": "YulIdentifier",
																					"src": "5653:2:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5653:20:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5642:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5642:32:12"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nodeType": "YulIdentifier",
																			"src": "5633:5:12"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5691:30:12",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nodeType": "YulIdentifier",
																				"src": "5704:5:12"
																			},
																			{
																				"name": "remainder",
																				"nodeType": "YulIdentifier",
																				"src": "5711:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5700:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5700:21:12"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nodeType": "YulIdentifier",
																			"src": "5691:5:12"
																		}
																	]
																}
															]
														},
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 2248,
																"isOffset": false,
																"isSlot": false,
																"src": "5539:11:12",
																"valueSize": 1
															},
															{
																"declaration": 2254,
																"isOffset": false,
																"isSlot": false,
																"src": "5667:5:12",
																"valueSize": 1
															},
															{
																"declaration": 2254,
																"isOffset": false,
																"isSlot": false,
																"src": "5691:5:12",
																"valueSize": 1
															},
															{
																"declaration": 2254,
																"isOffset": false,
																"isSlot": false,
																"src": "5704:5:12",
																"valueSize": 1
															},
															{
																"declaration": 2260,
																"isOffset": false,
																"isSlot": false,
																"src": "5633:5:12",
																"valueSize": 1
															},
															{
																"declaration": 2260,
																"isOffset": false,
																"isSlot": false,
																"src": "5646:5:12",
																"valueSize": 1
															},
															{
																"declaration": 2281,
																"isOffset": false,
																"isSlot": false,
																"src": "5513:9:12",
																"valueSize": 1
															},
															{
																"declaration": 2281,
																"isOffset": false,
																"isSlot": false,
																"src": "5656:9:12",
																"valueSize": 1
															},
															{
																"declaration": 2281,
																"isOffset": false,
																"isSlot": false,
																"src": "5711:9:12",
																"valueSize": 1
															},
															{
																"declaration": 2244,
																"isOffset": false,
																"isSlot": false,
																"src": "5533:1:12",
																"valueSize": 1
															},
															{
																"declaration": 2246,
																"isOffset": false,
																"isSlot": false,
																"src": "5536:1:12",
																"valueSize": 1
															}
														],
														"id": 2283,
														"nodeType": "InlineAssembly",
														"src": "5435:300:12"
													},
													{
														"assignments": [
															2285
														],
														"declarations": [
															{
																"constant": false,
																"id": 2285,
																"mutability": "mutable",
																"name": "twos",
																"nameLocation": "5947:4:12",
																"nodeType": "VariableDeclaration",
																"scope": 2365,
																"src": "5939:12:12",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2284,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "5939:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2292,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2291,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2286,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2248,
																"src": "5954:11:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2289,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "30",
																			"id": 2287,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5969:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"id": 2288,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2248,
																			"src": "5973:11:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "5969:15:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2290,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "5968:17:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5954:31:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "5939:46:12"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "6008:362:12",
															"statements": [
																{
																	"nodeType": "YulAssignment",
																	"src": "6073:37:12",
																	"value": {
																		"arguments": [
																			{
																				"name": "denominator",
																				"nodeType": "YulIdentifier",
																				"src": "6092:11:12"
																			},
																			{
																				"name": "twos",
																				"nodeType": "YulIdentifier",
																				"src": "6105:4:12"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nodeType": "YulIdentifier",
																			"src": "6088:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6088:22:12"
																	},
																	"variableNames": [
																		{
																			"name": "denominator",
																			"nodeType": "YulIdentifier",
																			"src": "6073:11:12"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6177:25:12",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nodeType": "YulIdentifier",
																				"src": "6190:5:12"
																			},
																			{
																				"name": "twos",
																				"nodeType": "YulIdentifier",
																				"src": "6197:4:12"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nodeType": "YulIdentifier",
																			"src": "6186:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6186:16:12"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nodeType": "YulIdentifier",
																			"src": "6177:5:12"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6317:39:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "6337:1:12",
																								"type": "",
																								"value": "0"
																							},
																							{
																								"name": "twos",
																								"nodeType": "YulIdentifier",
																								"src": "6340:4:12"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "6333:3:12"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "6333:12:12"
																					},
																					{
																						"name": "twos",
																						"nodeType": "YulIdentifier",
																						"src": "6347:4:12"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "6329:3:12"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6329:23:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6354:1:12",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6325:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6325:31:12"
																	},
																	"variableNames": [
																		{
																			"name": "twos",
																			"nodeType": "YulIdentifier",
																			"src": "6317:4:12"
																		}
																	]
																}
															]
														},
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 2248,
																"isOffset": false,
																"isSlot": false,
																"src": "6073:11:12",
																"valueSize": 1
															},
															{
																"declaration": 2248,
																"isOffset": false,
																"isSlot": false,
																"src": "6092:11:12",
																"valueSize": 1
															},
															{
																"declaration": 2254,
																"isOffset": false,
																"isSlot": false,
																"src": "6177:5:12",
																"valueSize": 1
															},
															{
																"declaration": 2254,
																"isOffset": false,
																"isSlot": false,
																"src": "6190:5:12",
																"valueSize": 1
															},
															{
																"declaration": 2285,
																"isOffset": false,
																"isSlot": false,
																"src": "6105:4:12",
																"valueSize": 1
															},
															{
																"declaration": 2285,
																"isOffset": false,
																"isSlot": false,
																"src": "6197:4:12",
																"valueSize": 1
															},
															{
																"declaration": 2285,
																"isOffset": false,
																"isSlot": false,
																"src": "6317:4:12",
																"valueSize": 1
															},
															{
																"declaration": 2285,
																"isOffset": false,
																"isSlot": false,
																"src": "6340:4:12",
																"valueSize": 1
															},
															{
																"declaration": 2285,
																"isOffset": false,
																"isSlot": false,
																"src": "6347:4:12",
																"valueSize": 1
															}
														],
														"id": 2293,
														"nodeType": "InlineAssembly",
														"src": "5999:371:12"
													},
													{
														"expression": {
															"id": 2298,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2294,
																"name": "prod0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2254,
																"src": "6436:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "|=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2297,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2295,
																	"name": "prod1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2260,
																	"src": "6445:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 2296,
																	"name": "twos",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2285,
																	"src": "6453:4:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6445:12:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6436:21:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2299,
														"nodeType": "ExpressionStatement",
														"src": "6436:21:12"
													},
													{
														"assignments": [
															2301
														],
														"declarations": [
															{
																"constant": false,
																"id": 2301,
																"mutability": "mutable",
																"name": "inverse",
																"nameLocation": "6783:7:12",
																"nodeType": "VariableDeclaration",
																"scope": 2365,
																"src": "6775:15:12",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2300,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "6775:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2308,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2307,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2304,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "33",
																			"id": 2302,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "6794:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_3_by_1",
																				"typeString": "int_const 3"
																			},
																			"value": "3"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 2303,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2248,
																			"src": "6798:11:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6794:15:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2305,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "6793:17:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "^",
															"rightExpression": {
																"hexValue": "32",
																"id": 2306,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6813:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "6793:21:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "6775:39:12"
													},
													{
														"expression": {
															"id": 2315,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2309,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2301,
																"src": "7031:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2314,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2310,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7042:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2313,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2311,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2248,
																		"src": "7046:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2312,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2301,
																		"src": "7060:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7046:21:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7042:25:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7031:36:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2316,
														"nodeType": "ExpressionStatement",
														"src": "7031:36:12"
													},
													{
														"expression": {
															"id": 2323,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2317,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2301,
																"src": "7100:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2322,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2318,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7111:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2321,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2319,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2248,
																		"src": "7115:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2320,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2301,
																		"src": "7129:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7115:21:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7111:25:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7100:36:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2324,
														"nodeType": "ExpressionStatement",
														"src": "7100:36:12"
													},
													{
														"expression": {
															"id": 2331,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2325,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2301,
																"src": "7170:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2330,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2326,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7181:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2329,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2327,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2248,
																		"src": "7185:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2328,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2301,
																		"src": "7199:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7185:21:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7181:25:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7170:36:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2332,
														"nodeType": "ExpressionStatement",
														"src": "7170:36:12"
													},
													{
														"expression": {
															"id": 2339,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2333,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2301,
																"src": "7240:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2338,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2334,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7251:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2337,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2335,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2248,
																		"src": "7255:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2336,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2301,
																		"src": "7269:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7255:21:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7251:25:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7240:36:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2340,
														"nodeType": "ExpressionStatement",
														"src": "7240:36:12"
													},
													{
														"expression": {
															"id": 2347,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2341,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2301,
																"src": "7310:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2346,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2342,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7321:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2345,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2343,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2248,
																		"src": "7325:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2344,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2301,
																		"src": "7339:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7325:21:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7321:25:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7310:36:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2348,
														"nodeType": "ExpressionStatement",
														"src": "7310:36:12"
													},
													{
														"expression": {
															"id": 2355,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2349,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2301,
																"src": "7381:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2354,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2350,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7392:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2353,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2351,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2248,
																		"src": "7396:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2352,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2301,
																		"src": "7410:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7396:21:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7392:25:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7381:36:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2356,
														"nodeType": "ExpressionStatement",
														"src": "7381:36:12"
													},
													{
														"expression": {
															"id": 2361,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2357,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2251,
																"src": "7851:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2360,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2358,
																	"name": "prod0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2254,
																	"src": "7860:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 2359,
																	"name": "inverse",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2301,
																	"src": "7868:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7860:15:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7851:24:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2362,
														"nodeType": "ExpressionStatement",
														"src": "7851:24:12"
													},
													{
														"expression": {
															"id": 2363,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2251,
															"src": "7896:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2252,
														"id": 2364,
														"nodeType": "Return",
														"src": "7889:13:12"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2242,
										"nodeType": "StructuredDocumentation",
										"src": "3485:313:12",
										"text": " @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n denominator == 0.\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n Uniswap Labs also under MIT license."
									},
									"id": 2367,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "3812:6:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2249,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2244,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "3827:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2367,
												"src": "3819:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2243,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3819:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2246,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "3838:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2367,
												"src": "3830:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2245,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3830:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2248,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "3849:11:12",
												"nodeType": "VariableDeclaration",
												"scope": 2367,
												"src": "3841:19:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2247,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3841:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3818:43:12"
									},
									"returnParameters": {
										"id": 2252,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2251,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "3893:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 2367,
												"src": "3885:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2250,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3885:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3884:16:12"
									},
									"scope": 3033,
									"src": "3803:4116:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2409,
										"nodeType": "Block",
										"src": "8161:192:12",
										"statements": [
											{
												"assignments": [
													2383
												],
												"declarations": [
													{
														"constant": false,
														"id": 2383,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "8179:6:12",
														"nodeType": "VariableDeclaration",
														"scope": 2409,
														"src": "8171:14:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2382,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8171:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2389,
												"initialValue": {
													"arguments": [
														{
															"id": 2385,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2370,
															"src": "8195:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2386,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2372,
															"src": "8198:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2387,
															"name": "denominator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2374,
															"src": "8201:11:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2384,
														"name": "mulDiv",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2367,
															2410
														],
														"referencedDeclaration": 2367,
														"src": "8188:6:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 2388,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8188:25:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8171:42:12"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 2400,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 2391,
																"name": "rounding",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2377,
																"src": "8244:8:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Rounding_$1990",
																	"typeString": "enum Math.Rounding"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_enum$_Rounding_$1990",
																	"typeString": "enum Math.Rounding"
																}
															],
															"id": 2390,
															"name": "unsignedRoundsUp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3032,
															"src": "8227:16:12",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$1990_$returns$_t_bool_$",
																"typeString": "function (enum Math.Rounding) pure returns (bool)"
															}
														},
														"id": 2392,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8227:26:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2399,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 2394,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2370,
																	"src": "8264:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 2395,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2372,
																	"src": "8267:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 2396,
																	"name": "denominator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2374,
																	"src": "8270:11:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2393,
																"name": "mulmod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967280,
																"src": "8257:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 2397,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8257:25:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 2398,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8285:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8257:29:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "8227:59:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2406,
												"nodeType": "IfStatement",
												"src": "8223:101:12",
												"trueBody": {
													"id": 2405,
													"nodeType": "Block",
													"src": "8288:36:12",
													"statements": [
														{
															"expression": {
																"id": 2403,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2401,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2383,
																	"src": "8302:6:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 2402,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8312:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "8302:11:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2404,
															"nodeType": "ExpressionStatement",
															"src": "8302:11:12"
														}
													]
												}
											},
											{
												"expression": {
													"id": 2407,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2383,
													"src": "8340:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2381,
												"id": 2408,
												"nodeType": "Return",
												"src": "8333:13:12"
											}
										]
									},
									"documentation": {
										"id": 2368,
										"nodeType": "StructuredDocumentation",
										"src": "7925:121:12",
										"text": " @notice Calculates x * y / denominator with full precision, following the selected rounding direction."
									},
									"id": 2410,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "8060:6:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2378,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2370,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "8075:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2410,
												"src": "8067:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2369,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8067:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2372,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "8086:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2410,
												"src": "8078:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2371,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8078:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2374,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "8097:11:12",
												"nodeType": "VariableDeclaration",
												"scope": 2410,
												"src": "8089:19:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2373,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8089:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2377,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "8119:8:12",
												"nodeType": "VariableDeclaration",
												"scope": 2410,
												"src": "8110:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1990",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2376,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2375,
														"name": "Rounding",
														"nameLocations": [
															"8110:8:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1990,
														"src": "8110:8:12"
													},
													"referencedDeclaration": 1990,
													"src": "8110:8:12",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1990",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8066:62:12"
									},
									"returnParameters": {
										"id": 2381,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2380,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2410,
												"src": "8152:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2379,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8152:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8151:9:12"
									},
									"scope": 3033,
									"src": "8051:302:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2521,
										"nodeType": "Block",
										"src": "8644:1585:12",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2420,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2418,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2413,
														"src": "8658:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 2419,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8663:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8658:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2424,
												"nodeType": "IfStatement",
												"src": "8654:45:12",
												"trueBody": {
													"id": 2423,
													"nodeType": "Block",
													"src": "8666:33:12",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 2421,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8687:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 2417,
															"id": 2422,
															"nodeType": "Return",
															"src": "8680:8:12"
														}
													]
												}
											},
											{
												"assignments": [
													2426
												],
												"declarations": [
													{
														"constant": false,
														"id": 2426,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "9386:6:12",
														"nodeType": "VariableDeclaration",
														"scope": 2521,
														"src": "9378:14:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2425,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9378:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2435,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2434,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 2427,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9395:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2432,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 2429,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2413,
																			"src": "9406:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 2428,
																		"name": "log2",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			2689,
																			2724
																		],
																		"referencedDeclaration": 2689,
																		"src": "9401:4:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) pure returns (uint256)"
																		}
																	},
																	"id": 2430,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9401:7:12",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2431,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9412:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9401:12:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 2433,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "9400:14:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9395:19:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9378:36:12"
											},
											{
												"id": 2520,
												"nodeType": "UncheckedBlock",
												"src": "9815:408:12",
												"statements": [
													{
														"expression": {
															"id": 2445,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2436,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2426,
																"src": "9839:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2444,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2441,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2437,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2426,
																				"src": "9849:6:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2440,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2438,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2413,
																					"src": "9858:1:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2439,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2426,
																					"src": "9862:6:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9858:10:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9849:19:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2442,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9848:21:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2443,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9873:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9848:26:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9839:35:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2446,
														"nodeType": "ExpressionStatement",
														"src": "9839:35:12"
													},
													{
														"expression": {
															"id": 2456,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2447,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2426,
																"src": "9888:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2455,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2452,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2448,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2426,
																				"src": "9898:6:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2451,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2449,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2413,
																					"src": "9907:1:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2450,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2426,
																					"src": "9911:6:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9907:10:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9898:19:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2453,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9897:21:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2454,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9922:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9897:26:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9888:35:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2457,
														"nodeType": "ExpressionStatement",
														"src": "9888:35:12"
													},
													{
														"expression": {
															"id": 2467,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2458,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2426,
																"src": "9937:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2466,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2463,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2459,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2426,
																				"src": "9947:6:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2462,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2460,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2413,
																					"src": "9956:1:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2461,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2426,
																					"src": "9960:6:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9956:10:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9947:19:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2464,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9946:21:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2465,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9971:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9946:26:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9937:35:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2468,
														"nodeType": "ExpressionStatement",
														"src": "9937:35:12"
													},
													{
														"expression": {
															"id": 2478,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2469,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2426,
																"src": "9986:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2477,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2474,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2470,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2426,
																				"src": "9996:6:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2473,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2471,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2413,
																					"src": "10005:1:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2472,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2426,
																					"src": "10009:6:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10005:10:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9996:19:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2475,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9995:21:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2476,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10020:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9995:26:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9986:35:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2479,
														"nodeType": "ExpressionStatement",
														"src": "9986:35:12"
													},
													{
														"expression": {
															"id": 2489,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2480,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2426,
																"src": "10035:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2488,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2485,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2481,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2426,
																				"src": "10045:6:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2484,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2482,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2413,
																					"src": "10054:1:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2483,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2426,
																					"src": "10058:6:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10054:10:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10045:19:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2486,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10044:21:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2487,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10069:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10044:26:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10035:35:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2490,
														"nodeType": "ExpressionStatement",
														"src": "10035:35:12"
													},
													{
														"expression": {
															"id": 2500,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2491,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2426,
																"src": "10084:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2499,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2496,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2492,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2426,
																				"src": "10094:6:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2495,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2493,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2413,
																					"src": "10103:1:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2494,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2426,
																					"src": "10107:6:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10103:10:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10094:19:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2497,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10093:21:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2498,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10118:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10093:26:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10084:35:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2501,
														"nodeType": "ExpressionStatement",
														"src": "10084:35:12"
													},
													{
														"expression": {
															"id": 2511,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2502,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2426,
																"src": "10133:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2510,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2507,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2503,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2426,
																				"src": "10143:6:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2506,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2504,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2413,
																					"src": "10152:1:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2505,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2426,
																					"src": "10156:6:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10152:10:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10143:19:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2508,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10142:21:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2509,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10167:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10142:26:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10133:35:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2512,
														"nodeType": "ExpressionStatement",
														"src": "10133:35:12"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 2514,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2426,
																	"src": "10193:6:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2517,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2515,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2413,
																		"src": "10201:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 2516,
																		"name": "result",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2426,
																		"src": "10205:6:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "10201:10:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2513,
																"name": "min",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2184,
																"src": "10189:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 2518,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10189:23:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2417,
														"id": 2519,
														"nodeType": "Return",
														"src": "10182:30:12"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2411,
										"nodeType": "StructuredDocumentation",
										"src": "8359:223:12",
										"text": " @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n towards zero.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."
									},
									"id": 2522,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "8596:4:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2414,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2413,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "8609:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2522,
												"src": "8601:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2412,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8601:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8600:11:12"
									},
									"returnParameters": {
										"id": 2417,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2416,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2522,
												"src": "8635:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2415,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8635:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8634:9:12"
									},
									"scope": 3033,
									"src": "8587:1642:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2556,
										"nodeType": "Block",
										"src": "10405:164:12",
										"statements": [
											{
												"id": 2555,
												"nodeType": "UncheckedBlock",
												"src": "10415:148:12",
												"statements": [
													{
														"assignments": [
															2534
														],
														"declarations": [
															{
																"constant": false,
																"id": 2534,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "10447:6:12",
																"nodeType": "VariableDeclaration",
																"scope": 2555,
																"src": "10439:14:12",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2533,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "10439:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2538,
														"initialValue": {
															"arguments": [
																{
																	"id": 2536,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2525,
																	"src": "10461:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2535,
																"name": "sqrt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2522,
																	2557
																],
																"referencedDeclaration": 2522,
																"src": "10456:4:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2537,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10456:7:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "10439:24:12"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2553,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2539,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2534,
																"src": "10484:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2548,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2541,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2528,
																						"src": "10511:8:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$1990",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$1990",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 2540,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3032,
																					"src": "10494:16:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$1990_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 2542,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "10494:26:12",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2547,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2545,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 2543,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2534,
																						"src": "10524:6:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"id": 2544,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2534,
																						"src": "10533:6:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "10524:15:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2546,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2525,
																					"src": "10542:1:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10524:19:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "10494:49:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2550,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10550:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2551,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "10494:57:12",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2549,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10546:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2552,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "10493:59:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "10484:68:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2532,
														"id": 2554,
														"nodeType": "Return",
														"src": "10477:75:12"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2523,
										"nodeType": "StructuredDocumentation",
										"src": "10235:89:12",
										"text": " @notice Calculates sqrt(a), following the selected rounding direction."
									},
									"id": 2557,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "10338:4:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2529,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2525,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "10351:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2557,
												"src": "10343:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2524,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10343:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2528,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "10363:8:12",
												"nodeType": "VariableDeclaration",
												"scope": 2557,
												"src": "10354:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1990",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2527,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2526,
														"name": "Rounding",
														"nameLocations": [
															"10354:8:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1990,
														"src": "10354:8:12"
													},
													"referencedDeclaration": 1990,
													"src": "10354:8:12",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1990",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10342:30:12"
									},
									"returnParameters": {
										"id": 2532,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2531,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2557,
												"src": "10396:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2530,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10396:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10395:9:12"
									},
									"scope": 3033,
									"src": "10329:240:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2688,
										"nodeType": "Block",
										"src": "10760:922:12",
										"statements": [
											{
												"assignments": [
													2566
												],
												"declarations": [
													{
														"constant": false,
														"id": 2566,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "10778:6:12",
														"nodeType": "VariableDeclaration",
														"scope": 2688,
														"src": "10770:14:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2565,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10770:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2568,
												"initialValue": {
													"hexValue": "30",
													"id": 2567,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "10787:1:12",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10770:18:12"
											},
											{
												"id": 2685,
												"nodeType": "UncheckedBlock",
												"src": "10798:855:12",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2573,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2571,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2569,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2560,
																	"src": "10826:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 2570,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10835:3:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "10826:12:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2572,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10841:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "10826:16:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2583,
														"nodeType": "IfStatement",
														"src": "10822:99:12",
														"trueBody": {
															"id": 2582,
															"nodeType": "Block",
															"src": "10844:77:12",
															"statements": [
																{
																	"expression": {
																		"id": 2576,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2574,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2560,
																			"src": "10862:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2575,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10872:3:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "10862:13:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2577,
																	"nodeType": "ExpressionStatement",
																	"src": "10862:13:12"
																},
																{
																	"expression": {
																		"id": 2580,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2578,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2566,
																			"src": "10893:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2579,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10903:3:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "10893:13:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2581,
																	"nodeType": "ExpressionStatement",
																	"src": "10893:13:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2588,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2586,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2584,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2560,
																	"src": "10938:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2585,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10947:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "10938:11:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2587,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10952:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "10938:15:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2598,
														"nodeType": "IfStatement",
														"src": "10934:96:12",
														"trueBody": {
															"id": 2597,
															"nodeType": "Block",
															"src": "10955:75:12",
															"statements": [
																{
																	"expression": {
																		"id": 2591,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2589,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2560,
																			"src": "10973:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2590,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10983:2:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "10973:12:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2592,
																	"nodeType": "ExpressionStatement",
																	"src": "10973:12:12"
																},
																{
																	"expression": {
																		"id": 2595,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2593,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2566,
																			"src": "11003:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2594,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11013:2:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "11003:12:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2596,
																	"nodeType": "ExpressionStatement",
																	"src": "11003:12:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2603,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2601,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2599,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2560,
																	"src": "11047:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2600,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11056:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "11047:11:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2602,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11061:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11047:15:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2613,
														"nodeType": "IfStatement",
														"src": "11043:96:12",
														"trueBody": {
															"id": 2612,
															"nodeType": "Block",
															"src": "11064:75:12",
															"statements": [
																{
																	"expression": {
																		"id": 2606,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2604,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2560,
																			"src": "11082:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2605,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11092:2:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "11082:12:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2607,
																	"nodeType": "ExpressionStatement",
																	"src": "11082:12:12"
																},
																{
																	"expression": {
																		"id": 2610,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2608,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2566,
																			"src": "11112:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2609,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11122:2:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "11112:12:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2611,
																	"nodeType": "ExpressionStatement",
																	"src": "11112:12:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2618,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2616,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2614,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2560,
																	"src": "11156:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2615,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11165:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "11156:11:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2617,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11170:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11156:15:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2628,
														"nodeType": "IfStatement",
														"src": "11152:96:12",
														"trueBody": {
															"id": 2627,
															"nodeType": "Block",
															"src": "11173:75:12",
															"statements": [
																{
																	"expression": {
																		"id": 2621,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2619,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2560,
																			"src": "11191:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2620,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11201:2:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11191:12:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2622,
																	"nodeType": "ExpressionStatement",
																	"src": "11191:12:12"
																},
																{
																	"expression": {
																		"id": 2625,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2623,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2566,
																			"src": "11221:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2624,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11231:2:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11221:12:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2626,
																	"nodeType": "ExpressionStatement",
																	"src": "11221:12:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2633,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2631,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2629,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2560,
																	"src": "11265:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2630,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11274:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "11265:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2632,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11278:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11265:14:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2643,
														"nodeType": "IfStatement",
														"src": "11261:93:12",
														"trueBody": {
															"id": 2642,
															"nodeType": "Block",
															"src": "11281:73:12",
															"statements": [
																{
																	"expression": {
																		"id": 2636,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2634,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2560,
																			"src": "11299:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2635,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11309:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "11299:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2637,
																	"nodeType": "ExpressionStatement",
																	"src": "11299:11:12"
																},
																{
																	"expression": {
																		"id": 2640,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2638,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2566,
																			"src": "11328:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2639,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11338:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "11328:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2641,
																	"nodeType": "ExpressionStatement",
																	"src": "11328:11:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2648,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2646,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2644,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2560,
																	"src": "11371:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 2645,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11380:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "11371:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2647,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11384:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11371:14:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2658,
														"nodeType": "IfStatement",
														"src": "11367:93:12",
														"trueBody": {
															"id": 2657,
															"nodeType": "Block",
															"src": "11387:73:12",
															"statements": [
																{
																	"expression": {
																		"id": 2651,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2649,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2560,
																			"src": "11405:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2650,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11415:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "11405:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2652,
																	"nodeType": "ExpressionStatement",
																	"src": "11405:11:12"
																},
																{
																	"expression": {
																		"id": 2655,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2653,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2566,
																			"src": "11434:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2654,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11444:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "11434:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2656,
																	"nodeType": "ExpressionStatement",
																	"src": "11434:11:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2663,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2661,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2659,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2560,
																	"src": "11477:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 2660,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11486:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "11477:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2662,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11490:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11477:14:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2673,
														"nodeType": "IfStatement",
														"src": "11473:93:12",
														"trueBody": {
															"id": 2672,
															"nodeType": "Block",
															"src": "11493:73:12",
															"statements": [
																{
																	"expression": {
																		"id": 2666,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2664,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2560,
																			"src": "11511:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2665,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11521:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "11511:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2667,
																	"nodeType": "ExpressionStatement",
																	"src": "11511:11:12"
																},
																{
																	"expression": {
																		"id": 2670,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2668,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2566,
																			"src": "11540:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2669,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11550:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "11540:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2671,
																	"nodeType": "ExpressionStatement",
																	"src": "11540:11:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2678,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2676,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2674,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2560,
																	"src": "11583:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2675,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11592:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "11583:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2677,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11596:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11583:14:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2684,
														"nodeType": "IfStatement",
														"src": "11579:64:12",
														"trueBody": {
															"id": 2683,
															"nodeType": "Block",
															"src": "11599:44:12",
															"statements": [
																{
																	"expression": {
																		"id": 2681,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2679,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2566,
																			"src": "11617:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2680,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11627:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "11617:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2682,
																	"nodeType": "ExpressionStatement",
																	"src": "11617:11:12"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 2686,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2566,
													"src": "11669:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2564,
												"id": 2687,
												"nodeType": "Return",
												"src": "11662:13:12"
											}
										]
									},
									"documentation": {
										"id": 2558,
										"nodeType": "StructuredDocumentation",
										"src": "10575:119:12",
										"text": " @dev Return the log in base 2 of a positive value rounded towards zero.\n Returns 0 if given 0."
									},
									"id": 2689,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "10708:4:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2561,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2560,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10721:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 2689,
												"src": "10713:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2559,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10713:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10712:15:12"
									},
									"returnParameters": {
										"id": 2564,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2563,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2689,
												"src": "10751:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2562,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10751:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10750:9:12"
									},
									"scope": 3033,
									"src": "10699:983:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2723,
										"nodeType": "Block",
										"src": "11915:168:12",
										"statements": [
											{
												"id": 2722,
												"nodeType": "UncheckedBlock",
												"src": "11925:152:12",
												"statements": [
													{
														"assignments": [
															2701
														],
														"declarations": [
															{
																"constant": false,
																"id": 2701,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "11957:6:12",
																"nodeType": "VariableDeclaration",
																"scope": 2722,
																"src": "11949:14:12",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2700,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "11949:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2705,
														"initialValue": {
															"arguments": [
																{
																	"id": 2703,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2692,
																	"src": "11971:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2702,
																"name": "log2",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2689,
																	2724
																],
																"referencedDeclaration": 2689,
																"src": "11966:4:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2704,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11966:11:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "11949:28:12"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2720,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2706,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2701,
																"src": "11998:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2715,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2708,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2695,
																						"src": "12025:8:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$1990",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$1990",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 2707,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3032,
																					"src": "12008:16:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$1990_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 2709,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "12008:26:12",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2714,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2712,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 2710,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "12038:1:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"id": 2711,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2701,
																						"src": "12043:6:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "12038:11:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2713,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2692,
																					"src": "12052:5:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "12038:19:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "12008:49:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2717,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12064:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2718,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "12008:57:12",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2716,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12060:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2719,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "12007:59:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "11998:68:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2699,
														"id": 2721,
														"nodeType": "Return",
														"src": "11991:75:12"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2690,
										"nodeType": "StructuredDocumentation",
										"src": "11688:142:12",
										"text": " @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2724,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "11844:4:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2696,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2692,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11857:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 2724,
												"src": "11849:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2691,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11849:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2695,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "11873:8:12",
												"nodeType": "VariableDeclaration",
												"scope": 2724,
												"src": "11864:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1990",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2694,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2693,
														"name": "Rounding",
														"nameLocations": [
															"11864:8:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1990,
														"src": "11864:8:12"
													},
													"referencedDeclaration": 1990,
													"src": "11864:8:12",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1990",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11848:34:12"
									},
									"returnParameters": {
										"id": 2699,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2698,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2724,
												"src": "11906:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2697,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11906:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11905:9:12"
									},
									"scope": 3033,
									"src": "11835:248:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2852,
										"nodeType": "Block",
										"src": "12276:854:12",
										"statements": [
											{
												"assignments": [
													2733
												],
												"declarations": [
													{
														"constant": false,
														"id": 2733,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "12294:6:12",
														"nodeType": "VariableDeclaration",
														"scope": 2852,
														"src": "12286:14:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2732,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "12286:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2735,
												"initialValue": {
													"hexValue": "30",
													"id": 2734,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "12303:1:12",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12286:18:12"
											},
											{
												"id": 2849,
												"nodeType": "UncheckedBlock",
												"src": "12314:787:12",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2740,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2736,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2727,
																"src": "12342:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																},
																"id": 2739,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2737,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12351:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2738,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12357:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "12351:8:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																}
															},
															"src": "12342:17:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2752,
														"nodeType": "IfStatement",
														"src": "12338:103:12",
														"trueBody": {
															"id": 2751,
															"nodeType": "Block",
															"src": "12361:80:12",
															"statements": [
																{
																	"expression": {
																		"id": 2745,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2741,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2727,
																			"src": "12379:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			},
																			"id": 2744,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2742,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12388:2:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3634",
																				"id": 2743,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12394:2:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_64_by_1",
																					"typeString": "int_const 64"
																				},
																				"value": "64"
																			},
																			"src": "12388:8:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			}
																		},
																		"src": "12379:17:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2746,
																	"nodeType": "ExpressionStatement",
																	"src": "12379:17:12"
																},
																{
																	"expression": {
																		"id": 2749,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2747,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2733,
																			"src": "12414:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2748,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12424:2:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "12414:12:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2750,
																	"nodeType": "ExpressionStatement",
																	"src": "12414:12:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2757,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2753,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2727,
																"src": "12458:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																},
																"id": 2756,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2754,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12467:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2755,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12473:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "12467:8:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																}
															},
															"src": "12458:17:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2769,
														"nodeType": "IfStatement",
														"src": "12454:103:12",
														"trueBody": {
															"id": 2768,
															"nodeType": "Block",
															"src": "12477:80:12",
															"statements": [
																{
																	"expression": {
																		"id": 2762,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2758,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2727,
																			"src": "12495:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			},
																			"id": 2761,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2759,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12504:2:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3332",
																				"id": 2760,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12510:2:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_32_by_1",
																					"typeString": "int_const 32"
																				},
																				"value": "32"
																			},
																			"src": "12504:8:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			}
																		},
																		"src": "12495:17:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2763,
																	"nodeType": "ExpressionStatement",
																	"src": "12495:17:12"
																},
																{
																	"expression": {
																		"id": 2766,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2764,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2733,
																			"src": "12530:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2765,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12540:2:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "12530:12:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2767,
																	"nodeType": "ExpressionStatement",
																	"src": "12530:12:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2774,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2770,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2727,
																"src": "12574:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																},
																"id": 2773,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2771,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12583:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2772,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12589:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "12583:8:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																}
															},
															"src": "12574:17:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2786,
														"nodeType": "IfStatement",
														"src": "12570:103:12",
														"trueBody": {
															"id": 2785,
															"nodeType": "Block",
															"src": "12593:80:12",
															"statements": [
																{
																	"expression": {
																		"id": 2779,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2775,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2727,
																			"src": "12611:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			},
																			"id": 2778,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2776,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12620:2:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3136",
																				"id": 2777,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12626:2:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_16_by_1",
																					"typeString": "int_const 16"
																				},
																				"value": "16"
																			},
																			"src": "12620:8:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			}
																		},
																		"src": "12611:17:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2780,
																	"nodeType": "ExpressionStatement",
																	"src": "12611:17:12"
																},
																{
																	"expression": {
																		"id": 2783,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2781,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2733,
																			"src": "12646:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2782,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12656:2:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "12646:12:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2784,
																	"nodeType": "ExpressionStatement",
																	"src": "12646:12:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2791,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2787,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2727,
																"src": "12690:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																},
																"id": 2790,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2788,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12699:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2789,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12705:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "12699:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																}
															},
															"src": "12690:16:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2803,
														"nodeType": "IfStatement",
														"src": "12686:100:12",
														"trueBody": {
															"id": 2802,
															"nodeType": "Block",
															"src": "12708:78:12",
															"statements": [
																{
																	"expression": {
																		"id": 2796,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2792,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2727,
																			"src": "12726:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			},
																			"id": 2795,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2793,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12735:2:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "38",
																				"id": 2794,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12741:1:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_8_by_1",
																					"typeString": "int_const 8"
																				},
																				"value": "8"
																			},
																			"src": "12735:7:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			}
																		},
																		"src": "12726:16:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2797,
																	"nodeType": "ExpressionStatement",
																	"src": "12726:16:12"
																},
																{
																	"expression": {
																		"id": 2800,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2798,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2733,
																			"src": "12760:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2799,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12770:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "12760:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2801,
																	"nodeType": "ExpressionStatement",
																	"src": "12760:11:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2808,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2804,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2727,
																"src": "12803:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																},
																"id": 2807,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2805,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12812:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 2806,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12818:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "12812:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																}
															},
															"src": "12803:16:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2820,
														"nodeType": "IfStatement",
														"src": "12799:100:12",
														"trueBody": {
															"id": 2819,
															"nodeType": "Block",
															"src": "12821:78:12",
															"statements": [
																{
																	"expression": {
																		"id": 2813,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2809,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2727,
																			"src": "12839:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			},
																			"id": 2812,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2810,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12848:2:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "34",
																				"id": 2811,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12854:1:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_4_by_1",
																					"typeString": "int_const 4"
																				},
																				"value": "4"
																			},
																			"src": "12848:7:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			}
																		},
																		"src": "12839:16:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2814,
																	"nodeType": "ExpressionStatement",
																	"src": "12839:16:12"
																},
																{
																	"expression": {
																		"id": 2817,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2815,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2733,
																			"src": "12873:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2816,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12883:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "12873:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2818,
																	"nodeType": "ExpressionStatement",
																	"src": "12873:11:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2825,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2821,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2727,
																"src": "12916:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"id": 2824,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2822,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12925:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 2823,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12931:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "12925:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																}
															},
															"src": "12916:16:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2837,
														"nodeType": "IfStatement",
														"src": "12912:100:12",
														"trueBody": {
															"id": 2836,
															"nodeType": "Block",
															"src": "12934:78:12",
															"statements": [
																{
																	"expression": {
																		"id": 2830,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2826,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2727,
																			"src": "12952:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			},
																			"id": 2829,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2827,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12961:2:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "32",
																				"id": 2828,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12967:1:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				},
																				"value": "2"
																			},
																			"src": "12961:7:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			}
																		},
																		"src": "12952:16:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2831,
																	"nodeType": "ExpressionStatement",
																	"src": "12952:16:12"
																},
																{
																	"expression": {
																		"id": 2834,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2832,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2733,
																			"src": "12986:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2833,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12996:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "12986:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2835,
																	"nodeType": "ExpressionStatement",
																	"src": "12986:11:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2842,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2838,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2727,
																"src": "13029:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"id": 2841,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2839,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13038:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2840,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13044:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "13038:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																}
															},
															"src": "13029:16:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2848,
														"nodeType": "IfStatement",
														"src": "13025:66:12",
														"trueBody": {
															"id": 2847,
															"nodeType": "Block",
															"src": "13047:44:12",
															"statements": [
																{
																	"expression": {
																		"id": 2845,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2843,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2733,
																			"src": "13065:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2844,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13075:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "13065:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2846,
																	"nodeType": "ExpressionStatement",
																	"src": "13065:11:12"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 2850,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2733,
													"src": "13117:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2731,
												"id": 2851,
												"nodeType": "Return",
												"src": "13110:13:12"
											}
										]
									},
									"documentation": {
										"id": 2725,
										"nodeType": "StructuredDocumentation",
										"src": "12089:120:12",
										"text": " @dev Return the log in base 10 of a positive value rounded towards zero.\n Returns 0 if given 0."
									},
									"id": 2853,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "12223:5:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2728,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2727,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "12237:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 2853,
												"src": "12229:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2726,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12229:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12228:15:12"
									},
									"returnParameters": {
										"id": 2731,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2730,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2853,
												"src": "12267:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2729,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12267:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12266:9:12"
									},
									"scope": 3033,
									"src": "12214:916:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2887,
										"nodeType": "Block",
										"src": "13365:170:12",
										"statements": [
											{
												"id": 2886,
												"nodeType": "UncheckedBlock",
												"src": "13375:154:12",
												"statements": [
													{
														"assignments": [
															2865
														],
														"declarations": [
															{
																"constant": false,
																"id": 2865,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "13407:6:12",
																"nodeType": "VariableDeclaration",
																"scope": 2886,
																"src": "13399:14:12",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2864,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "13399:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2869,
														"initialValue": {
															"arguments": [
																{
																	"id": 2867,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2856,
																	"src": "13422:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2866,
																"name": "log10",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2853,
																	2888
																],
																"referencedDeclaration": 2853,
																"src": "13416:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2868,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13416:12:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "13399:29:12"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2884,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2870,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2865,
																"src": "13449:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2879,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2872,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2859,
																						"src": "13476:8:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$1990",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$1990",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 2871,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3032,
																					"src": "13459:16:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$1990_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 2873,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "13459:26:12",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2878,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2876,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "3130",
																						"id": 2874,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "13489:2:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_10_by_1",
																							"typeString": "int_const 10"
																						},
																						"value": "10"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "**",
																					"rightExpression": {
																						"id": 2875,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2865,
																						"src": "13495:6:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "13489:12:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2877,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2856,
																					"src": "13504:5:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "13489:20:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "13459:50:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2881,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13516:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2882,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "13459:58:12",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2880,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13512:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2883,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "13458:60:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "13449:69:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2863,
														"id": 2885,
														"nodeType": "Return",
														"src": "13442:76:12"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2854,
										"nodeType": "StructuredDocumentation",
										"src": "13136:143:12",
										"text": " @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2888,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "13293:5:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2860,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2856,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "13307:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 2888,
												"src": "13299:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2855,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13299:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2859,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "13323:8:12",
												"nodeType": "VariableDeclaration",
												"scope": 2888,
												"src": "13314:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1990",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2858,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2857,
														"name": "Rounding",
														"nameLocations": [
															"13314:8:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1990,
														"src": "13314:8:12"
													},
													"referencedDeclaration": 1990,
													"src": "13314:8:12",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1990",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13298:34:12"
									},
									"returnParameters": {
										"id": 2863,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2862,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2888,
												"src": "13356:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2861,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13356:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13355:9:12"
									},
									"scope": 3033,
									"src": "13284:251:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2974,
										"nodeType": "Block",
										"src": "13855:600:12",
										"statements": [
											{
												"assignments": [
													2897
												],
												"declarations": [
													{
														"constant": false,
														"id": 2897,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "13873:6:12",
														"nodeType": "VariableDeclaration",
														"scope": 2974,
														"src": "13865:14:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2896,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "13865:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2899,
												"initialValue": {
													"hexValue": "30",
													"id": 2898,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "13882:1:12",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13865:18:12"
											},
											{
												"id": 2971,
												"nodeType": "UncheckedBlock",
												"src": "13893:533:12",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2904,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2902,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2900,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2891,
																	"src": "13921:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 2901,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13930:3:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "13921:12:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2903,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "13936:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "13921:16:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2914,
														"nodeType": "IfStatement",
														"src": "13917:98:12",
														"trueBody": {
															"id": 2913,
															"nodeType": "Block",
															"src": "13939:76:12",
															"statements": [
																{
																	"expression": {
																		"id": 2907,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2905,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2891,
																			"src": "13957:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2906,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13967:3:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "13957:13:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2908,
																	"nodeType": "ExpressionStatement",
																	"src": "13957:13:12"
																},
																{
																	"expression": {
																		"id": 2911,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2909,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2897,
																			"src": "13988:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2910,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13998:2:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "13988:12:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2912,
																	"nodeType": "ExpressionStatement",
																	"src": "13988:12:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2919,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2917,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2915,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2891,
																	"src": "14032:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2916,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14041:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "14032:11:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2918,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14046:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14032:15:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2929,
														"nodeType": "IfStatement",
														"src": "14028:95:12",
														"trueBody": {
															"id": 2928,
															"nodeType": "Block",
															"src": "14049:74:12",
															"statements": [
																{
																	"expression": {
																		"id": 2922,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2920,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2891,
																			"src": "14067:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2921,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14077:2:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "14067:12:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2923,
																	"nodeType": "ExpressionStatement",
																	"src": "14067:12:12"
																},
																{
																	"expression": {
																		"id": 2926,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2924,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2897,
																			"src": "14097:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2925,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14107:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "14097:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2927,
																	"nodeType": "ExpressionStatement",
																	"src": "14097:11:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2934,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2932,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2930,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2891,
																	"src": "14140:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2931,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14149:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "14140:11:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2933,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14154:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14140:15:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2944,
														"nodeType": "IfStatement",
														"src": "14136:95:12",
														"trueBody": {
															"id": 2943,
															"nodeType": "Block",
															"src": "14157:74:12",
															"statements": [
																{
																	"expression": {
																		"id": 2937,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2935,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2891,
																			"src": "14175:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2936,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14185:2:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "14175:12:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2938,
																	"nodeType": "ExpressionStatement",
																	"src": "14175:12:12"
																},
																{
																	"expression": {
																		"id": 2941,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2939,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2897,
																			"src": "14205:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2940,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14215:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "14205:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2942,
																	"nodeType": "ExpressionStatement",
																	"src": "14205:11:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2949,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2947,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2945,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2891,
																	"src": "14248:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2946,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14257:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "14248:11:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2948,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14262:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14248:15:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2959,
														"nodeType": "IfStatement",
														"src": "14244:95:12",
														"trueBody": {
															"id": 2958,
															"nodeType": "Block",
															"src": "14265:74:12",
															"statements": [
																{
																	"expression": {
																		"id": 2952,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2950,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2891,
																			"src": "14283:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2951,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14293:2:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "14283:12:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2953,
																	"nodeType": "ExpressionStatement",
																	"src": "14283:12:12"
																},
																{
																	"expression": {
																		"id": 2956,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2954,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2897,
																			"src": "14313:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2955,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14323:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "14313:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2957,
																	"nodeType": "ExpressionStatement",
																	"src": "14313:11:12"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2964,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2962,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2960,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2891,
																	"src": "14356:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2961,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14365:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "14356:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2963,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14369:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14356:14:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2970,
														"nodeType": "IfStatement",
														"src": "14352:64:12",
														"trueBody": {
															"id": 2969,
															"nodeType": "Block",
															"src": "14372:44:12",
															"statements": [
																{
																	"expression": {
																		"id": 2967,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2965,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2897,
																			"src": "14390:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2966,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14400:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "14390:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2968,
																	"nodeType": "ExpressionStatement",
																	"src": "14390:11:12"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 2972,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2897,
													"src": "14442:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2895,
												"id": 2973,
												"nodeType": "Return",
												"src": "14435:13:12"
											}
										]
									},
									"documentation": {
										"id": 2889,
										"nodeType": "StructuredDocumentation",
										"src": "13541:246:12",
										"text": " @dev Return the log in base 256 of a positive value rounded towards zero.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."
									},
									"id": 2975,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "13801:6:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2892,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2891,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "13816:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 2975,
												"src": "13808:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2890,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13808:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13807:15:12"
									},
									"returnParameters": {
										"id": 2895,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2894,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2975,
												"src": "13846:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2893,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13846:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13845:9:12"
									},
									"scope": 3033,
									"src": "13792:663:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3012,
										"nodeType": "Block",
										"src": "14692:177:12",
										"statements": [
											{
												"id": 3011,
												"nodeType": "UncheckedBlock",
												"src": "14702:161:12",
												"statements": [
													{
														"assignments": [
															2987
														],
														"declarations": [
															{
																"constant": false,
																"id": 2987,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "14734:6:12",
																"nodeType": "VariableDeclaration",
																"scope": 3011,
																"src": "14726:14:12",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2986,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "14726:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2991,
														"initialValue": {
															"arguments": [
																{
																	"id": 2989,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2978,
																	"src": "14750:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2988,
																"name": "log256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2975,
																	3013
																],
																"referencedDeclaration": 2975,
																"src": "14743:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2990,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14743:13:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "14726:30:12"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3009,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2992,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2987,
																"src": "14777:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 3004,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2994,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2981,
																						"src": "14804:8:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$1990",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$1990",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 2993,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3032,
																					"src": "14787:16:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$1990_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 2995,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "14787:26:12",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 3003,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 3001,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 2996,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "14817:1:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"components": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 2999,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 2997,
																									"name": "result",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 2987,
																									"src": "14823:6:12",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "<<",
																								"rightExpression": {
																									"hexValue": "33",
																									"id": 2998,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "14833:1:12",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_3_by_1",
																										"typeString": "int_const 3"
																									},
																									"value": "3"
																								},
																								"src": "14823:11:12",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"id": 3000,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "14822:13:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "14817:18:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 3002,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2978,
																					"src": "14838:5:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "14817:26:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "14787:56:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 3006,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14850:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 3007,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "14787:64:12",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 3005,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14846:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 3008,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "14786:66:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "14777:75:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2985,
														"id": 3010,
														"nodeType": "Return",
														"src": "14770:82:12"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2976,
										"nodeType": "StructuredDocumentation",
										"src": "14461:144:12",
										"text": " @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 3013,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "14619:6:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2982,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2978,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "14634:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 3013,
												"src": "14626:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2977,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14626:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2981,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "14650:8:12",
												"nodeType": "VariableDeclaration",
												"scope": 3013,
												"src": "14641:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1990",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2980,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2979,
														"name": "Rounding",
														"nameLocations": [
															"14641:8:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1990,
														"src": "14641:8:12"
													},
													"referencedDeclaration": 1990,
													"src": "14641:8:12",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1990",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14625:34:12"
									},
									"returnParameters": {
										"id": 2985,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2984,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3013,
												"src": "14683:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2983,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14683:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14682:9:12"
									},
									"scope": 3033,
									"src": "14610:259:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3031,
										"nodeType": "Block",
										"src": "15067:48:12",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													},
													"id": 3029,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"id": 3027,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 3024,
																	"name": "rounding",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3017,
																	"src": "15090:8:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_Rounding_$1990",
																		"typeString": "enum Math.Rounding"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_enum$_Rounding_$1990",
																		"typeString": "enum Math.Rounding"
																	}
																],
																"id": 3023,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "15084:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint8_$",
																	"typeString": "type(uint8)"
																},
																"typeName": {
																	"id": 3022,
																	"name": "uint8",
																	"nodeType": "ElementaryTypeName",
																	"src": "15084:5:12",
																	"typeDescriptions": {}
																}
															},
															"id": 3025,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15084:15:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "%",
														"rightExpression": {
															"hexValue": "32",
															"id": 3026,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15102:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "15084:19:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "31",
														"id": 3028,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "15107:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "15084:24:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 3021,
												"id": 3030,
												"nodeType": "Return",
												"src": "15077:31:12"
											}
										]
									},
									"documentation": {
										"id": 3014,
										"nodeType": "StructuredDocumentation",
										"src": "14875:113:12",
										"text": " @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers."
									},
									"id": 3032,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unsignedRoundsUp",
									"nameLocation": "15002:16:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3018,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3017,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "15028:8:12",
												"nodeType": "VariableDeclaration",
												"scope": 3032,
												"src": "15019:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1990",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 3016,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3015,
														"name": "Rounding",
														"nameLocations": [
															"15019:8:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1990,
														"src": "15019:8:12"
													},
													"referencedDeclaration": 1990,
													"src": "15019:8:12",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1990",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15018:19:12"
									},
									"returnParameters": {
										"id": 3021,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3020,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3032,
												"src": "15061:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3019,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15061:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15060:6:12"
									},
									"scope": 3033,
									"src": "14993:122:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 3034,
							"src": "203:14914:12",
							"usedErrors": [
								1985
							],
							"usedEvents": []
						}
					],
					"src": "103:15015:12"
				},
				"id": 12
			},
			"contracts/Items/Items.sol": {
				"ast": {
					"absolutePath": "contracts/Items/Items.sol",
					"exportedSymbols": {
						"Arrays": [
							1803
						],
						"Context": [
							1833
						],
						"ERC1155": [
							1187
						],
						"ERC1155Burnable": [
							1432
						],
						"ERC1155Supply": [
							1604
						],
						"ERC165": [
							1967
						],
						"IERC1155": [
							1310
						],
						"IERC1155Errors": [
							136
						],
						"IERC1155MetadataURI": [
							1620
						],
						"IERC1155Receiver": [
							1352
						],
						"IERC165": [
							1979
						],
						"Items": [
							3143
						]
					},
					"id": 3144,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 3035,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:13"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol",
							"file": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol",
							"id": 3036,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3144,
							"sourceUnit": 1188,
							"src": "58:59:13",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol",
							"file": "@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol",
							"id": 3037,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3144,
							"sourceUnit": 1433,
							"src": "118:78:13",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol",
							"file": "@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol",
							"id": 3038,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3144,
							"sourceUnit": 1605,
							"src": "197:76:13",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 3040,
										"name": "ERC1155",
										"nameLocations": [
											"341:7:13"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1187,
										"src": "341:7:13"
									},
									"id": 3041,
									"nodeType": "InheritanceSpecifier",
									"src": "341:7:13"
								},
								{
									"baseName": {
										"id": 3042,
										"name": "ERC1155Burnable",
										"nameLocations": [
											"350:15:13"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1432,
										"src": "350:15:13"
									},
									"id": 3043,
									"nodeType": "InheritanceSpecifier",
									"src": "350:15:13"
								},
								{
									"baseName": {
										"id": 3044,
										"name": "ERC1155Supply",
										"nameLocations": [
											"367:13:13"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1604,
										"src": "367:13:13"
									},
									"id": 3045,
									"nodeType": "InheritanceSpecifier",
									"src": "367:13:13"
								}
							],
							"canonicalName": "Items",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 3039,
								"nodeType": "StructuredDocumentation",
								"src": "275:48:13",
								"text": "@custom:security-contact krlebyte@gmail.com"
							},
							"fullyImplemented": true,
							"id": 3143,
							"linearizedBaseContracts": [
								3143,
								1604,
								1432,
								1187,
								136,
								1620,
								1310,
								1967,
								1979,
								1833
							],
							"name": "Items",
							"nameLocation": "332:5:13",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 3047,
									"mutability": "immutable",
									"name": "_gameAddress",
									"nameLocation": "411:12:13",
									"nodeType": "VariableDeclaration",
									"scope": 3143,
									"src": "385:38:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 3046,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "385:7:13",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 3059,
										"nodeType": "Block",
										"src": "508:37:13",
										"statements": [
											{
												"expression": {
													"id": 3057,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3055,
														"name": "_gameAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3047,
														"src": "514:12:13",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 3056,
														"name": "gameAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3049,
														"src": "529:11:13",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "514:26:13",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 3058,
												"nodeType": "ExpressionStatement",
												"src": "514:26:13"
											}
										]
									},
									"id": 3060,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "68747470733a2f2f736f6d2e657465726e697461732e67616d65732f6a736f6e",
													"id": 3052,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "472:34:13",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_f093146c159b7c12d8fb28c25874ba2265309239099c0dcf30939cae3f3144b8",
														"typeString": "literal_string \"https://som.eternitas.games/json\""
													},
													"value": "https://som.eternitas.games/json"
												}
											],
											"id": 3053,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 3051,
												"name": "ERC1155",
												"nameLocations": [
													"464:7:13"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1187,
												"src": "464:7:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "464:43:13"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3050,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3049,
												"mutability": "mutable",
												"name": "gameAddress",
												"nameLocation": "449:11:13",
												"nodeType": "VariableDeclaration",
												"scope": 3060,
												"src": "441:19:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3048,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "441:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "440:21:13"
									},
									"returnParameters": {
										"id": 3054,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "508:0:13"
									},
									"scope": 3143,
									"src": "428:117:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3071,
										"nodeType": "Block",
										"src": "567:80:13",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 3066,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 3063,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "581:3:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 3064,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "585:6:13",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "581:10:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 3065,
																"name": "_gameAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3047,
																"src": "595:12:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "581:26:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f6e6c792067616d6520636f6e74726163742063616e2063616c6c2e",
															"id": 3067,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "609:30:13",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1bc1562e94238003917761236421517f1e0102048098634d927432356ee253a7",
																"typeString": "literal_string \"Only game contract can call.\""
															},
															"value": "Only game contract can call."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1bc1562e94238003917761236421517f1e0102048098634d927432356ee253a7",
																"typeString": "literal_string \"Only game contract can call.\""
															}
														],
														"id": 3062,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "573:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3068,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "573:67:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3069,
												"nodeType": "ExpressionStatement",
												"src": "573:67:13"
											},
											{
												"id": 3070,
												"nodeType": "PlaceholderStatement",
												"src": "641:1:13"
											}
										]
									},
									"id": 3072,
									"name": "onlyGame",
									"nameLocation": "558:8:13",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 3061,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "567:0:13"
									},
									"src": "549:98:13",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3092,
										"nodeType": "Block",
										"src": "766:43:13",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 3086,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3074,
															"src": "778:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3087,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3076,
															"src": "787:2:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 3088,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3078,
															"src": "791:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 3089,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3080,
															"src": "799:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 3085,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 862,
														"src": "772:5:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,uint256,uint256,bytes memory)"
														}
													},
													"id": 3090,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "772:32:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3091,
												"nodeType": "ExpressionStatement",
												"src": "772:32:13"
											}
										]
									},
									"functionSelector": "731133e9",
									"id": 3093,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 3083,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 3082,
												"name": "onlyGame",
												"nameLocations": [
													"757:8:13"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 3072,
												"src": "757:8:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "757:8:13"
										}
									],
									"name": "mint",
									"nameLocation": "660:4:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3081,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3074,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "679:7:13",
												"nodeType": "VariableDeclaration",
												"scope": 3093,
												"src": "671:15:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3073,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "671:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3076,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "700:2:13",
												"nodeType": "VariableDeclaration",
												"scope": 3093,
												"src": "692:10:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3075,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "692:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3078,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "716:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 3093,
												"src": "708:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3077,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "708:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3080,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "741:4:13",
												"nodeType": "VariableDeclaration",
												"scope": 3093,
												"src": "728:17:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 3079,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "728:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "665:84:13"
									},
									"returnParameters": {
										"id": 3084,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "766:0:13"
									},
									"scope": 3143,
									"src": "651:158:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3115,
										"nodeType": "Block",
										"src": "948:45:13",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 3109,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3095,
															"src": "965:2:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3110,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3098,
															"src": "969:3:13",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 3111,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3101,
															"src": "974:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 3112,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3103,
															"src": "983:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 3108,
														"name": "_mintBatch",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 903,
														"src": "954:10:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 3113,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "954:34:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3114,
												"nodeType": "ExpressionStatement",
												"src": "954:34:13"
											}
										]
									},
									"functionSelector": "1f7fdffa",
									"id": 3116,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 3106,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 3105,
												"name": "onlyGame",
												"nameLocations": [
													"939:8:13"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 3072,
												"src": "939:8:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "939:8:13"
										}
									],
									"name": "mintBatch",
									"nameLocation": "822:9:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3104,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3095,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "846:2:13",
												"nodeType": "VariableDeclaration",
												"scope": 3116,
												"src": "838:10:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3094,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "838:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3098,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "871:3:13",
												"nodeType": "VariableDeclaration",
												"scope": 3116,
												"src": "854:20:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 3096,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "854:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 3097,
													"nodeType": "ArrayTypeName",
													"src": "854:9:13",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3101,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "897:7:13",
												"nodeType": "VariableDeclaration",
												"scope": 3116,
												"src": "880:24:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 3099,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "880:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 3100,
													"nodeType": "ArrayTypeName",
													"src": "880:9:13",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3103,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "923:4:13",
												"nodeType": "VariableDeclaration",
												"scope": 3116,
												"src": "910:17:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 3102,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "910:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "832:99:13"
									},
									"returnParameters": {
										"id": 3107,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "948:0:13"
									},
									"scope": 3143,
									"src": "813:180:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										602,
										1603
									],
									"body": {
										"id": 3141,
										"nodeType": "Block",
										"src": "1150:47:13",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 3135,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3118,
															"src": "1170:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3136,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3120,
															"src": "1176:2:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3137,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3123,
															"src": "1180:3:13",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 3138,
															"name": "values",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3126,
															"src": "1185:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														],
														"expression": {
															"id": 3132,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "1156:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_Items_$3143_$",
																"typeString": "type(contract super Items)"
															}
														},
														"id": 3134,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1162:7:13",
														"memberName": "_update",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1603,
														"src": "1156:13:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256[] memory,uint256[] memory)"
														}
													},
													"id": 3139,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1156:36:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3140,
												"nodeType": "ExpressionStatement",
												"src": "1156:36:13"
											}
										]
									},
									"id": 3142,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "1006:7:13",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 3130,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 3128,
												"name": "ERC1155",
												"nameLocations": [
													"1126:7:13"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1187,
												"src": "1126:7:13"
											},
											{
												"id": 3129,
												"name": "ERC1155Supply",
												"nameLocations": [
													"1135:13:13"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1604,
												"src": "1135:13:13"
											}
										],
										"src": "1117:32:13"
									},
									"parameters": {
										"id": 3127,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3118,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1028:4:13",
												"nodeType": "VariableDeclaration",
												"scope": 3142,
												"src": "1020:12:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3117,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1020:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3120,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1046:2:13",
												"nodeType": "VariableDeclaration",
												"scope": 3142,
												"src": "1038:10:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3119,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1038:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3123,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "1071:3:13",
												"nodeType": "VariableDeclaration",
												"scope": 3142,
												"src": "1054:20:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 3121,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "1054:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 3122,
													"nodeType": "ArrayTypeName",
													"src": "1054:9:13",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3126,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "1097:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 3142,
												"src": "1080:23:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 3124,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "1080:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 3125,
													"nodeType": "ArrayTypeName",
													"src": "1080:9:13",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1014:93:13"
									},
									"returnParameters": {
										"id": 3131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1150:0:13"
									},
									"scope": 3143,
									"src": "997:200:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 3144,
							"src": "323:876:13",
							"usedErrors": [
								101,
								106,
								111,
								118,
								123,
								128,
								135
							],
							"usedEvents": [
								1207,
								1222,
								1231,
								1238
							]
						}
					],
					"src": "32:1168:13"
				},
				"id": 13
			}
		}
	}
}