{
	"id": "700e40f2b2e57ebf031785b60b283c9d",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.20",
	"solcLongVersion": "0.8.20+commit.a1b79de6",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/SomTokens/SomTokens.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\";\nimport \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\";\nimport \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol\";\n\n/// @custom:security-contact krlebyte@gmail.com\ncontract SomTokens is ERC1155, ERC1155Burnable, Ownable, ERC1155Supply {\n  address public gameAddress;\n\n  constructor(address initialOwner)\n    ERC1155(\"https://som.eternitas.games/json\")\n    Ownable(initialOwner) {}\n\n  function mint (\n    address account,\n    uint256 id,\n    uint256 amount,\n    bytes memory data\n  ) public {\n    require(gameAddress != address(0), \"Game address not set.\");\n    require(msg.sender == gameAddress, \"Only game contract can mint.\");\n    _mint(account, id, amount, data);\n  }\n\n  function mintBatch (\n    address to,\n    uint256[] memory ids,\n    uint256[] memory amounts,\n    bytes memory data\n  ) public {\n    require(gameAddress != address(0), \"Game address not set.\");\n    require(msg.sender == gameAddress, \"Only game contract can mint.\");\n    _mintBatch(to, ids, amounts, data);\n  }\n\n  // function burn (address account, uint256 id, uint256 value) public override {\n  //   require(msg.sender == gameAddress, \"Only game contract can burn.\");\n  //   super._burn(account, id, value);\n  // }\n\n  // function burnBatch (\n  //   address account,\n  //   uint256[] memory ids,\n  //   uint256[] memory values\n  // ) public override {\n  //   require(msg.sender == gameAddress, \"Only game contract can burn.\");\n  //   super._burnBatch(account, ids, values);\n  // }\n\n  // function uri (uint256 id) override public view returns (string memory) {\n  //   return _tokenUri[id];\n  // }\n\n  // function setTokenUri (uint256 id, string memory tokenUri) public onlyOwner {\n  //   _tokenUri[id] = tokenUri;\n  // }\n\n  function setGameAddress (address account) public onlyOwner {\n    require(gameAddress == address(0), \"Game address is already set.\");\n    gameAddress = account;\n  }\n\n  function _update (\n    address from,\n    address to,\n    uint256[] memory ids,\n    uint256[] memory values\n  ) internal override(ERC1155, ERC1155Supply) {\n    super._update(from, to, ids, values);\n  }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC1155/extensions/ERC1155Supply.sol)\n\npragma solidity ^0.8.20;\n\nimport {ERC1155} from \"../ERC1155.sol\";\n\n/**\n * @dev Extension of ERC1155 that adds tracking of total supply per id.\n *\n * Useful for scenarios where Fungible and Non-fungible tokens have to be\n * clearly identified. Note: While a totalSupply of 1 might mean the\n * corresponding is an NFT, there is no guarantees that no other token with the\n * same id are not going to be minted.\n *\n * NOTE: This contract implies a global limit of 2**256 - 1 to the number of tokens\n * that can be minted.\n *\n * CAUTION: This extension should not be added in an upgrade to an already deployed contract.\n */\nabstract contract ERC1155Supply is ERC1155 {\n    mapping(uint256 id => uint256) private _totalSupply;\n    uint256 private _totalSupplyAll;\n\n    /**\n     * @dev Total value of tokens in with a given id.\n     */\n    function totalSupply(uint256 id) public view virtual returns (uint256) {\n        return _totalSupply[id];\n    }\n\n    /**\n     * @dev Total value of tokens.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupplyAll;\n    }\n\n    /**\n     * @dev Indicates whether any token exist with a given id, or not.\n     */\n    function exists(uint256 id) public view virtual returns (bool) {\n        return totalSupply(id) > 0;\n    }\n\n    /**\n     * @dev See {ERC1155-_update}.\n     */\n    function _update(\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory values\n    ) internal virtual override {\n        super._update(from, to, ids, values);\n\n        if (from == address(0)) {\n            uint256 totalMintValue = 0;\n            for (uint256 i = 0; i < ids.length; ++i) {\n                uint256 value = values[i];\n                // Overflow check required: The rest of the code assumes that totalSupply never overflows\n                _totalSupply[ids[i]] += value;\n                totalMintValue += value;\n            }\n            // Overflow check required: The rest of the code assumes that totalSupplyAll never overflows\n            _totalSupplyAll += totalMintValue;\n        }\n\n        if (to == address(0)) {\n            uint256 totalBurnValue = 0;\n            for (uint256 i = 0; i < ids.length; ++i) {\n                uint256 value = values[i];\n\n                unchecked {\n                    // Overflow not possible: values[i] <= balanceOf(from, ids[i]) <= totalSupply(ids[i])\n                    _totalSupply[ids[i]] -= value;\n                    // Overflow not possible: sum_i(values[i]) <= sum_i(totalSupply(ids[i])) <= totalSupplyAll\n                    totalBurnValue += value;\n                }\n            }\n            unchecked {\n                // Overflow not possible: totalBurnValue = sum_i(values[i]) <= sum_i(totalSupply(ids[i])) <= totalSupplyAll\n                _totalSupplyAll -= totalBurnValue;\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC1155/extensions/ERC1155Burnable.sol)\n\npragma solidity ^0.8.20;\n\nimport {ERC1155} from \"../ERC1155.sol\";\n\n/**\n * @dev Extension of {ERC1155} that allows token holders to destroy both their\n * own tokens and those that they have been approved to use.\n */\nabstract contract ERC1155Burnable is ERC1155 {\n    function burn(address account, uint256 id, uint256 value) public virtual {\n        if (account != _msgSender() && !isApprovedForAll(account, _msgSender())) {\n            revert ERC1155MissingApprovalForAll(_msgSender(), account);\n        }\n\n        _burn(account, id, value);\n    }\n\n    function burnBatch(address account, uint256[] memory ids, uint256[] memory values) public virtual {\n        if (account != _msgSender() && !isApprovedForAll(account, _msgSender())) {\n            revert ERC1155MissingApprovalForAll(_msgSender(), account);\n        }\n\n        _burnBatch(account, ids, values);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC1155/ERC1155.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC1155/ERC1155.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC1155} from \"./IERC1155.sol\";\nimport {IERC1155Receiver} from \"./IERC1155Receiver.sol\";\nimport {IERC1155MetadataURI} from \"./extensions/IERC1155MetadataURI.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC165, ERC165} from \"../../utils/introspection/ERC165.sol\";\nimport {Arrays} from \"../../utils/Arrays.sol\";\nimport {IERC1155Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the basic standard multi-token.\n * See https://eips.ethereum.org/EIPS/eip-1155\n * Originally based on code by Enjin: https://github.com/enjin/erc-1155\n */\nabstract contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI, IERC1155Errors {\n    using Arrays for uint256[];\n    using Arrays for address[];\n\n    mapping(uint256 id => mapping(address account => uint256)) private _balances;\n\n    mapping(address account => mapping(address operator => bool)) private _operatorApprovals;\n\n    // Used as the URI for all token types by relying on ID substitution, e.g. https://token-cdn-domain/{id}.json\n    string private _uri;\n\n    /**\n     * @dev See {_setURI}.\n     */\n    constructor(string memory uri_) {\n        _setURI(uri_);\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\n        return\n            interfaceId == type(IERC1155).interfaceId ||\n            interfaceId == type(IERC1155MetadataURI).interfaceId ||\n            super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC1155MetadataURI-uri}.\n     *\n     * This implementation returns the same URI for *all* token types. It relies\n     * on the token type ID substitution mechanism\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\n     *\n     * Clients calling this function must replace the `\\{id\\}` substring with the\n     * actual token type ID.\n     */\n    function uri(uint256 /* id */) public view virtual returns (string memory) {\n        return _uri;\n    }\n\n    /**\n     * @dev See {IERC1155-balanceOf}.\n     */\n    function balanceOf(address account, uint256 id) public view virtual returns (uint256) {\n        return _balances[id][account];\n    }\n\n    /**\n     * @dev See {IERC1155-balanceOfBatch}.\n     *\n     * Requirements:\n     *\n     * - `accounts` and `ids` must have the same length.\n     */\n    function balanceOfBatch(\n        address[] memory accounts,\n        uint256[] memory ids\n    ) public view virtual returns (uint256[] memory) {\n        if (accounts.length != ids.length) {\n            revert ERC1155InvalidArrayLength(ids.length, accounts.length);\n        }\n\n        uint256[] memory batchBalances = new uint256[](accounts.length);\n\n        for (uint256 i = 0; i < accounts.length; ++i) {\n            batchBalances[i] = balanceOf(accounts.unsafeMemoryAccess(i), ids.unsafeMemoryAccess(i));\n        }\n\n        return batchBalances;\n    }\n\n    /**\n     * @dev See {IERC1155-setApprovalForAll}.\n     */\n    function setApprovalForAll(address operator, bool approved) public virtual {\n        _setApprovalForAll(_msgSender(), operator, approved);\n    }\n\n    /**\n     * @dev See {IERC1155-isApprovedForAll}.\n     */\n    function isApprovedForAll(address account, address operator) public view virtual returns (bool) {\n        return _operatorApprovals[account][operator];\n    }\n\n    /**\n     * @dev See {IERC1155-safeTransferFrom}.\n     */\n    function safeTransferFrom(address from, address to, uint256 id, uint256 value, bytes memory data) public virtual {\n        address sender = _msgSender();\n        if (from != sender && !isApprovedForAll(from, sender)) {\n            revert ERC1155MissingApprovalForAll(sender, from);\n        }\n        _safeTransferFrom(from, to, id, value, data);\n    }\n\n    /**\n     * @dev See {IERC1155-safeBatchTransferFrom}.\n     */\n    function safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory values,\n        bytes memory data\n    ) public virtual {\n        address sender = _msgSender();\n        if (from != sender && !isApprovedForAll(from, sender)) {\n            revert ERC1155MissingApprovalForAll(sender, from);\n        }\n        _safeBatchTransferFrom(from, to, ids, values, data);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens of type `id` from `from` to `to`. Will mint (or burn) if `from`\n     * (or `to`) is the zero address.\n     *\n     * Emits a {TransferSingle} event if the arrays contain one element, and {TransferBatch} otherwise.\n     *\n     * Requirements:\n     *\n     * - If `to` refers to a smart contract, it must implement either {IERC1155Receiver-onERC1155Received}\n     *   or {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\n     * - `ids` and `values` must have the same length.\n     *\n     * NOTE: The ERC-1155 acceptance check is not performed in this function. See {_updateWithAcceptanceCheck} instead.\n     */\n    function _update(address from, address to, uint256[] memory ids, uint256[] memory values) internal virtual {\n        if (ids.length != values.length) {\n            revert ERC1155InvalidArrayLength(ids.length, values.length);\n        }\n\n        address operator = _msgSender();\n\n        for (uint256 i = 0; i < ids.length; ++i) {\n            uint256 id = ids.unsafeMemoryAccess(i);\n            uint256 value = values.unsafeMemoryAccess(i);\n\n            if (from != address(0)) {\n                uint256 fromBalance = _balances[id][from];\n                if (fromBalance < value) {\n                    revert ERC1155InsufficientBalance(from, fromBalance, value, id);\n                }\n                unchecked {\n                    // Overflow not possible: value <= fromBalance\n                    _balances[id][from] = fromBalance - value;\n                }\n            }\n\n            if (to != address(0)) {\n                _balances[id][to] += value;\n            }\n        }\n\n        if (ids.length == 1) {\n            uint256 id = ids.unsafeMemoryAccess(0);\n            uint256 value = values.unsafeMemoryAccess(0);\n            emit TransferSingle(operator, from, to, id, value);\n        } else {\n            emit TransferBatch(operator, from, to, ids, values);\n        }\n    }\n\n    /**\n     * @dev Version of {_update} that performs the token acceptance check by calling\n     * {IERC1155Receiver-onERC1155Received} or {IERC1155Receiver-onERC1155BatchReceived} on the receiver address if it\n     * contains code (eg. is a smart contract at the moment of execution).\n     *\n     * IMPORTANT: Overriding this function is discouraged because it poses a reentrancy risk from the receiver. So any\n     * update to the contract state after this function would break the check-effect-interaction pattern. Consider\n     * overriding {_update} instead.\n     */\n    function _updateWithAcceptanceCheck(\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory values,\n        bytes memory data\n    ) internal virtual {\n        _update(from, to, ids, values);\n        if (to != address(0)) {\n            address operator = _msgSender();\n            if (ids.length == 1) {\n                uint256 id = ids.unsafeMemoryAccess(0);\n                uint256 value = values.unsafeMemoryAccess(0);\n                _doSafeTransferAcceptanceCheck(operator, from, to, id, value, data);\n            } else {\n                _doSafeBatchTransferAcceptanceCheck(operator, from, to, ids, values, data);\n            }\n        }\n    }\n\n    /**\n     * @dev Transfers a `value` tokens of token type `id` from `from` to `to`.\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `from` must have a balance of tokens of type `id` of at least `value` amount.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n     * acceptance magic value.\n     */\n    function _safeTransferFrom(address from, address to, uint256 id, uint256 value, bytes memory data) internal {\n        if (to == address(0)) {\n            revert ERC1155InvalidReceiver(address(0));\n        }\n        if (from == address(0)) {\n            revert ERC1155InvalidSender(address(0));\n        }\n        (uint256[] memory ids, uint256[] memory values) = _asSingletonArrays(id, value);\n        _updateWithAcceptanceCheck(from, to, ids, values, data);\n    }\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_safeTransferFrom}.\n     *\n     * Emits a {TransferBatch} event.\n     *\n     * Requirements:\n     *\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n     * acceptance magic value.\n     * - `ids` and `values` must have the same length.\n     */\n    function _safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory values,\n        bytes memory data\n    ) internal {\n        if (to == address(0)) {\n            revert ERC1155InvalidReceiver(address(0));\n        }\n        if (from == address(0)) {\n            revert ERC1155InvalidSender(address(0));\n        }\n        _updateWithAcceptanceCheck(from, to, ids, values, data);\n    }\n\n    /**\n     * @dev Sets a new URI for all token types, by relying on the token type ID\n     * substitution mechanism\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\n     *\n     * By this mechanism, any occurrence of the `\\{id\\}` substring in either the\n     * URI or any of the values in the JSON file at said URI will be replaced by\n     * clients with the token type ID.\n     *\n     * For example, the `https://token-cdn-domain/\\{id\\}.json` URI would be\n     * interpreted by clients as\n     * `https://token-cdn-domain/000000000000000000000000000000000000000000000000000000000004cce0.json`\n     * for token type ID 0x4cce0.\n     *\n     * See {uri}.\n     *\n     * Because these URIs cannot be meaningfully represented by the {URI} event,\n     * this function emits no events.\n     */\n    function _setURI(string memory newuri) internal virtual {\n        _uri = newuri;\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens of type `id`, and assigns them to `to`.\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n     * acceptance magic value.\n     */\n    function _mint(address to, uint256 id, uint256 value, bytes memory data) internal {\n        if (to == address(0)) {\n            revert ERC1155InvalidReceiver(address(0));\n        }\n        (uint256[] memory ids, uint256[] memory values) = _asSingletonArrays(id, value);\n        _updateWithAcceptanceCheck(address(0), to, ids, values, data);\n    }\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_mint}.\n     *\n     * Emits a {TransferBatch} event.\n     *\n     * Requirements:\n     *\n     * - `ids` and `values` must have the same length.\n     * - `to` cannot be the zero address.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n     * acceptance magic value.\n     */\n    function _mintBatch(address to, uint256[] memory ids, uint256[] memory values, bytes memory data) internal {\n        if (to == address(0)) {\n            revert ERC1155InvalidReceiver(address(0));\n        }\n        _updateWithAcceptanceCheck(address(0), to, ids, values, data);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens of type `id` from `from`\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `from` must have at least `value` amount of tokens of type `id`.\n     */\n    function _burn(address from, uint256 id, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC1155InvalidSender(address(0));\n        }\n        (uint256[] memory ids, uint256[] memory values) = _asSingletonArrays(id, value);\n        _updateWithAcceptanceCheck(from, address(0), ids, values, \"\");\n    }\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_burn}.\n     *\n     * Emits a {TransferBatch} event.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `from` must have at least `value` amount of tokens of type `id`.\n     * - `ids` and `values` must have the same length.\n     */\n    function _burnBatch(address from, uint256[] memory ids, uint256[] memory values) internal {\n        if (from == address(0)) {\n            revert ERC1155InvalidSender(address(0));\n        }\n        _updateWithAcceptanceCheck(from, address(0), ids, values, \"\");\n    }\n\n    /**\n     * @dev Approve `operator` to operate on all of `owner` tokens\n     *\n     * Emits an {ApprovalForAll} event.\n     *\n     * Requirements:\n     *\n     * - `operator` cannot be the zero address.\n     */\n    function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {\n        if (operator == address(0)) {\n            revert ERC1155InvalidOperator(address(0));\n        }\n        _operatorApprovals[owner][operator] = approved;\n        emit ApprovalForAll(owner, operator, approved);\n    }\n\n    /**\n     * @dev Performs an acceptance check by calling {IERC1155-onERC1155Received} on the `to` address\n     * if it contains code at the moment of execution.\n     */\n    function _doSafeTransferAcceptanceCheck(\n        address operator,\n        address from,\n        address to,\n        uint256 id,\n        uint256 value,\n        bytes memory data\n    ) private {\n        if (to.code.length > 0) {\n            try IERC1155Receiver(to).onERC1155Received(operator, from, id, value, data) returns (bytes4 response) {\n                if (response != IERC1155Receiver.onERC1155Received.selector) {\n                    // Tokens rejected\n                    revert ERC1155InvalidReceiver(to);\n                }\n            } catch (bytes memory reason) {\n                if (reason.length == 0) {\n                    // non-ERC1155Receiver implementer\n                    revert ERC1155InvalidReceiver(to);\n                } else {\n                    /// @solidity memory-safe-assembly\n                    assembly {\n                        revert(add(32, reason), mload(reason))\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * @dev Performs a batch acceptance check by calling {IERC1155-onERC1155BatchReceived} on the `to` address\n     * if it contains code at the moment of execution.\n     */\n    function _doSafeBatchTransferAcceptanceCheck(\n        address operator,\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory values,\n        bytes memory data\n    ) private {\n        if (to.code.length > 0) {\n            try IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, values, data) returns (\n                bytes4 response\n            ) {\n                if (response != IERC1155Receiver.onERC1155BatchReceived.selector) {\n                    // Tokens rejected\n                    revert ERC1155InvalidReceiver(to);\n                }\n            } catch (bytes memory reason) {\n                if (reason.length == 0) {\n                    // non-ERC1155Receiver implementer\n                    revert ERC1155InvalidReceiver(to);\n                } else {\n                    /// @solidity memory-safe-assembly\n                    assembly {\n                        revert(add(32, reason), mload(reason))\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * @dev Creates an array in memory with only one value for each of the elements provided.\n     */\n    function _asSingletonArrays(\n        uint256 element1,\n        uint256 element2\n    ) private pure returns (uint256[] memory array1, uint256[] memory array2) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            // Load the free memory pointer\n            array1 := mload(0x40)\n            // Set array length to 1\n            mstore(array1, 1)\n            // Store the single element at the next word after the length (where content starts)\n            mstore(add(array1, 0x20), element1)\n\n            // Repeat for next array locating it right after the first array\n            array2 := add(array1, 0x40)\n            mstore(array2, 1)\n            mstore(add(array2, 0x20), element2)\n\n            // Update the free memory pointer by pointing after the second array\n            mstore(0x40, add(array2, 0x40))\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/utils/Arrays.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Arrays.sol)\n\npragma solidity ^0.8.20;\n\nimport {StorageSlot} from \"./StorageSlot.sol\";\nimport {Math} from \"./math/Math.sol\";\n\n/**\n * @dev Collection of functions related to array types.\n */\nlibrary Arrays {\n    using StorageSlot for bytes32;\n\n    /**\n     * @dev Searches a sorted `array` and returns the first index that contains\n     * a value greater or equal to `element`. If no such index exists (i.e. all\n     * values in the array are strictly less than `element`), the array length is\n     * returned. Time complexity O(log n).\n     *\n     * `array` is expected to be sorted in ascending order, and to contain no\n     * repeated elements.\n     */\n    function findUpperBound(uint256[] storage array, uint256 element) internal view returns (uint256) {\n        uint256 low = 0;\n        uint256 high = array.length;\n\n        if (high == 0) {\n            return 0;\n        }\n\n        while (low < high) {\n            uint256 mid = Math.average(low, high);\n\n            // Note that mid will always be strictly less than high (i.e. it will be a valid array index)\n            // because Math.average rounds towards zero (it does integer division with truncation).\n            if (unsafeAccess(array, mid).value > element) {\n                high = mid;\n            } else {\n                low = mid + 1;\n            }\n        }\n\n        // At this point `low` is the exclusive upper bound. We will return the inclusive upper bound.\n        if (low > 0 && unsafeAccess(array, low - 1).value == element) {\n            return low - 1;\n        } else {\n            return low;\n        }\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeAccess(address[] storage arr, uint256 pos) internal pure returns (StorageSlot.AddressSlot storage) {\n        bytes32 slot;\n        // We use assembly to calculate the storage slot of the element at index `pos` of the dynamic array `arr`\n        // following https://docs.soliditylang.org/en/v0.8.20/internals/layout_in_storage.html#mappings-and-dynamic-arrays.\n\n        /// @solidity memory-safe-assembly\n        assembly {\n            mstore(0, arr.slot)\n            slot := add(keccak256(0, 0x20), pos)\n        }\n        return slot.getAddressSlot();\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeAccess(bytes32[] storage arr, uint256 pos) internal pure returns (StorageSlot.Bytes32Slot storage) {\n        bytes32 slot;\n        // We use assembly to calculate the storage slot of the element at index `pos` of the dynamic array `arr`\n        // following https://docs.soliditylang.org/en/v0.8.20/internals/layout_in_storage.html#mappings-and-dynamic-arrays.\n\n        /// @solidity memory-safe-assembly\n        assembly {\n            mstore(0, arr.slot)\n            slot := add(keccak256(0, 0x20), pos)\n        }\n        return slot.getBytes32Slot();\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeAccess(uint256[] storage arr, uint256 pos) internal pure returns (StorageSlot.Uint256Slot storage) {\n        bytes32 slot;\n        // We use assembly to calculate the storage slot of the element at index `pos` of the dynamic array `arr`\n        // following https://docs.soliditylang.org/en/v0.8.20/internals/layout_in_storage.html#mappings-and-dynamic-arrays.\n\n        /// @solidity memory-safe-assembly\n        assembly {\n            mstore(0, arr.slot)\n            slot := add(keccak256(0, 0x20), pos)\n        }\n        return slot.getUint256Slot();\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeMemoryAccess(uint256[] memory arr, uint256 pos) internal pure returns (uint256 res) {\n        assembly {\n            res := mload(add(add(arr, 0x20), mul(pos, 0x20)))\n        }\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeMemoryAccess(address[] memory arr, uint256 pos) internal pure returns (address res) {\n        assembly {\n            res := mload(add(add(arr, 0x20), mul(pos, 0x20)))\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC1155/extensions/IERC1155MetadataURI.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC1155} from \"../IERC1155.sol\";\n\n/**\n * @dev Interface of the optional ERC1155MetadataExtension interface, as defined\n * in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[EIP].\n */\ninterface IERC1155MetadataURI is IERC1155 {\n    /**\n     * @dev Returns the URI for token type `id`.\n     *\n     * If the `\\{id\\}` substring is present in the URI, it must be replaced by\n     * clients with the actual token type ID.\n     */\n    function uri(uint256 id) external view returns (string memory);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC1155/IERC1155Receiver.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Interface that must be implemented by smart contracts in order to receive\n * ERC-1155 token transfers.\n */\ninterface IERC1155Receiver is IERC165 {\n    /**\n     * @dev Handles the receipt of a single ERC1155 token type. This function is\n     * called at the end of a `safeTransferFrom` after the balance has been updated.\n     *\n     * NOTE: To accept the transfer, this must return\n     * `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))`\n     * (i.e. 0xf23a6e61, or its own function selector).\n     *\n     * @param operator The address which initiated the transfer (i.e. msg.sender)\n     * @param from The address which previously owned the token\n     * @param id The ID of the token being transferred\n     * @param value The amount of tokens being transferred\n     * @param data Additional data with no specified format\n     * @return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed\n     */\n    function onERC1155Received(\n        address operator,\n        address from,\n        uint256 id,\n        uint256 value,\n        bytes calldata data\n    ) external returns (bytes4);\n\n    /**\n     * @dev Handles the receipt of a multiple ERC1155 token types. This function\n     * is called at the end of a `safeBatchTransferFrom` after the balances have\n     * been updated.\n     *\n     * NOTE: To accept the transfer(s), this must return\n     * `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))`\n     * (i.e. 0xbc197c81, or its own function selector).\n     *\n     * @param operator The address which initiated the batch transfer (i.e. msg.sender)\n     * @param from The address which previously owned the token\n     * @param ids An array containing ids of each token being transferred (order and length must match values array)\n     * @param values An array containing amounts of each token being transferred (order and length must match ids array)\n     * @param data Additional data with no specified format\n     * @return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed\n     */\n    function onERC1155BatchReceived(\n        address operator,\n        address from,\n        uint256[] calldata ids,\n        uint256[] calldata values,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC1155/IERC1155.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC1155/IERC1155.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC1155 compliant contract, as defined in the\n * https://eips.ethereum.org/EIPS/eip-1155[EIP].\n */\ninterface IERC1155 is IERC165 {\n    /**\n     * @dev Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`.\n     */\n    event TransferSingle(address indexed operator, address indexed from, address indexed to, uint256 id, uint256 value);\n\n    /**\n     * @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\n     * transfers.\n     */\n    event TransferBatch(\n        address indexed operator,\n        address indexed from,\n        address indexed to,\n        uint256[] ids,\n        uint256[] values\n    );\n\n    /**\n     * @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\n     * `approved`.\n     */\n    event ApprovalForAll(address indexed account, address indexed operator, bool approved);\n\n    /**\n     * @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\n     *\n     * If an {URI} event was emitted for `id`, the standard\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\n     * returned by {IERC1155MetadataURI-uri}.\n     */\n    event URI(string value, uint256 indexed id);\n\n    /**\n     * @dev Returns the value of tokens of token type `id` owned by `account`.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     */\n    function balanceOf(address account, uint256 id) external view returns (uint256);\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\n     *\n     * Requirements:\n     *\n     * - `accounts` and `ids` must have the same length.\n     */\n    function balanceOfBatch(\n        address[] calldata accounts,\n        uint256[] calldata ids\n    ) external view returns (uint256[] memory);\n\n    /**\n     * @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\n     *\n     * Emits an {ApprovalForAll} event.\n     *\n     * Requirements:\n     *\n     * - `operator` cannot be the caller.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\n     *\n     * See {setApprovalForAll}.\n     */\n    function isApprovedForAll(address account, address operator) external view returns (bool);\n\n    /**\n     * @dev Transfers a `value` amount of tokens of type `id` from `from` to `to`.\n     *\n     * WARNING: This function can potentially allow a reentrancy attack when transferring tokens\n     * to an untrusted contract, when invoking {onERC1155Received} on the receiver.\n     * Ensure to follow the checks-effects-interactions pattern and consider employing\n     * reentrancy guards when interacting with untrusted contracts.\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}.\n     * - `from` must have a balance of tokens of type `id` of at least `value` amount.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n     * acceptance magic value.\n     */\n    function safeTransferFrom(address from, address to, uint256 id, uint256 value, bytes calldata data) external;\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\n     *\n     *\n     * WARNING: This function can potentially allow a reentrancy attack when transferring tokens\n     * to an untrusted contract, when invoking {onERC1155BatchReceived} on the receiver.\n     * Ensure to follow the checks-effects-interactions pattern and consider employing\n     * reentrancy guards when interacting with untrusted contracts.\n     *\n     * Emits a {TransferBatch} event.\n     *\n     * Requirements:\n     *\n     * - `ids` and `values` must have the same length.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n     * acceptance magic value.\n     */\n    function safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] calldata ids,\n        uint256[] calldata values,\n        bytes calldata data\n    ) external;\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    /**\n     * @dev Muldiv operation overflow.\n     */\n    error MathOverflowedMulDiv();\n\n    enum Rounding {\n        Floor, // Toward negative infinity\n        Ceil, // Toward positive infinity\n        Trunc, // Toward zero\n        Expand // Away from zero\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds towards infinity instead\n     * of rounding towards zero.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (b == 0) {\n            // Guarantee the same behavior as in a regular Solidity division.\n            return a / b;\n        }\n\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n     * denominator == 0.\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n     * Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0 = x * y; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            if (denominator <= prod1) {\n                revert MathOverflowedMulDiv();\n            }\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\n\n            uint256 twos = denominator & (0 - denominator);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\n            // works in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n     * towards zero.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (unsignedRoundsUp(rounding) && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (unsignedRoundsUp(rounding) && 10 ** result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << (result << 3) < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\n     */\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\n        return uint8(rounding) % 2 == 1;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/StorageSlot.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/StorageSlot.sol)\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Library for reading and writing primitive types to specific storage slots.\n *\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n * This library helps with reading and writing to such slots without the need for inline assembly.\n *\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n *\n * Example usage to set ERC1967 implementation slot:\n * ```solidity\n * contract ERC1967 {\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n *\n *     function _getImplementation() internal view returns (address) {\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n *     }\n *\n *     function _setImplementation(address newImplementation) internal {\n *         require(newImplementation.code.length > 0);\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n *     }\n * }\n * ```\n */\nlibrary StorageSlot {\n    struct AddressSlot {\n        address value;\n    }\n\n    struct BooleanSlot {\n        bool value;\n    }\n\n    struct Bytes32Slot {\n        bytes32 value;\n    }\n\n    struct Uint256Slot {\n        uint256 value;\n    }\n\n    struct StringSlot {\n        string value;\n    }\n\n    struct BytesSlot {\n        bytes value;\n    }\n\n    /**\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\n     */\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\n     */\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\n     */\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\n     */\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` with member `value` located at `slot`.\n     */\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\n     */\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := store.slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` with member `value` located at `slot`.\n     */\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\n     */\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := store.slot\n        }\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867\",\"dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC1155/ERC1155.sol": {
				"ERC1155": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								}
							],
							"name": "TransferBatch",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "TransferSingle",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "value",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "URI",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "accounts",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								}
							],
							"name": "balanceOfBatch",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeBatchTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "uri",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the basic standard multi-token. See https://eips.ethereum.org/EIPS/eip-1155 Originally based on code by Enjin: https://github.com/enjin/erc-1155",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"events": {
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`."
							},
							"TransferBatch(address,address,address,uint256[],uint256[])": {
								"details": "Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers."
							},
							"TransferSingle(address,address,address,uint256,uint256)": {
								"details": "Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`."
							},
							"URI(string,uint256)": {
								"details": "Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}."
							}
						},
						"kind": "dev",
						"methods": {
							"balanceOf(address,uint256)": {
								"details": "See {IERC1155-balanceOf}."
							},
							"balanceOfBatch(address[],uint256[])": {
								"details": "See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length."
							},
							"constructor": {
								"details": "See {_setURI}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC1155-isApprovedForAll}."
							},
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
								"details": "See {IERC1155-safeBatchTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,uint256,bytes)": {
								"details": "See {IERC1155-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC1155-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"uri(uint256)": {
								"details": "See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP]. Clients calling this function must replace the `\\{id\\}` substring with the actual token type ID."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"balanceOf(address,uint256)": "00fdd58e",
							"balanceOfBatch(address[],uint256[])": "4e1273f4",
							"isApprovedForAll(address,address)": "e985e9c5",
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
							"safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"uri(uint256)": "0e89341c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the basic standard multi-token. See https://eips.ethereum.org/EIPS/eip-1155 Originally based on code by Enjin: https://github.com/enjin/erc-1155\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"See {IERC1155-balanceOf}.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length.\"},\"constructor\":{\"details\":\"See {_setURI}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC1155-isApprovedForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"See {IERC1155-safeBatchTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"See {IERC1155-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC1155-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"uri(uint256)\":{\"details\":\"See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP]. Clients calling this function must replace the `\\\\{id\\\\}` substring with the actual token type ID.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":\"ERC1155\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":{\"keccak256\":\"0xd9b0b8ee1ac6dfee14eb1ad4383a4739dbaa0f2036594bb3a16f0408085dadde\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6309805132e519162d1134c67df22dd963323a9208b4f41344a4c13ed63c1026\",\"dweb:/ipfs/QmTBPHnf6qbtAD4NVnKVFmubUHRqMDPLkseR6apxTUpsQo\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0xe64b3445a3f638890af7ad92464cd18f1f202a2f5a7ed42dabf74317bae43303\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6620b77b8dcd786149534b1c664f94ff1f8bb1ad141e8da7d9ec64b9624c73f0\",\"dweb:/ipfs/QmVWHh5UvQ7PxRUtUNfd94mSxxxStuzV1NBZtLiKqKpBrQ\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0xb69597a63b202e28401128bed6a6d259e8730191274471af7303eafb247881a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://25addbda49a578b3318130585601344c5149a5549d749adf88e9685349a46b23\",\"dweb:/ipfs/Qme2DuD8gpsve1ZvaSMQpBwMdpU7yAtekDwr7gUp8dX4zX\"]},\"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":{\"keccak256\":\"0xe92b5e199b963d108ad6e06feeede151ba23849e0d064956535489ff967ffe68\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://280e17738a67b06dae02fec32982bd48a8ab71d8df95e9975ae03532634bc522\",\"dweb:/ipfs/QmecjsNcFgy2mMjuNfRDkLpAYMRWnh5o73fw1Bj2rCso2z\"]},\"@openzeppelin/contracts/utils/Arrays.sol\":{\"keccak256\":\"0x8806d620b6571932b662cfd48fbd518d4f70df1f88a23b5724cacde64a77bda1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8043304c8f9e1c1dc4a41935efa067daa77ad7abbae1fda41f015d53fbf327a5\",\"dweb:/ipfs/QmTrF2hSkRZoN9EEu8zdEhBpGNZ7RxzCdXf9ydzc2HQ3tM\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867\",\"dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 326,
								"contract": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:ERC1155",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 332,
								"contract": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:ERC1155",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							},
							{
								"astId": 334,
								"contract": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol:ERC1155",
								"label": "_uri",
								"offset": 0,
								"slot": "2",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC1155/IERC1155.sol": {
				"IERC1155": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								}
							],
							"name": "TransferBatch",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "TransferSingle",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "value",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "URI",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "accounts",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								}
							],
							"name": "balanceOfBatch",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeBatchTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Required interface of an ERC1155 compliant contract, as defined in the https://eips.ethereum.org/EIPS/eip-1155[EIP].",
						"events": {
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`."
							},
							"TransferBatch(address,address,address,uint256[],uint256[])": {
								"details": "Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers."
							},
							"TransferSingle(address,address,address,uint256,uint256)": {
								"details": "Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`."
							},
							"URI(string,uint256)": {
								"details": "Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}."
							}
						},
						"kind": "dev",
						"methods": {
							"balanceOf(address,uint256)": {
								"details": "Returns the value of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address."
							},
							"balanceOfBatch(address[],uint256[])": {
								"details": "xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}."
							},
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
								"details": "xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {onERC1155BatchReceived} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits a {TransferBatch} event. Requirements: - `ids` and `values` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value."
							},
							"safeTransferFrom(address,address,uint256,uint256,bytes)": {
								"details": "Transfers a `value` amount of tokens of type `id` from `from` to `to`. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {onERC1155Received} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `value` amount. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"balanceOf(address,uint256)": "00fdd58e",
							"balanceOfBatch(address[],uint256[])": "4e1273f4",
							"isApprovedForAll(address,address)": "e985e9c5",
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
							"safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC1155 compliant contract, as defined in the https://eips.ethereum.org/EIPS/eip-1155[EIP].\",\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"Returns the value of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {onERC1155BatchReceived} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits a {TransferBatch} event. Requirements: - `ids` and `values` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"Transfers a `value` amount of tokens of type `id` from `from` to `to`. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {onERC1155Received} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `value` amount. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":\"IERC1155\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0xe64b3445a3f638890af7ad92464cd18f1f202a2f5a7ed42dabf74317bae43303\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6620b77b8dcd786149534b1c664f94ff1f8bb1ad141e8da7d9ec64b9624c73f0\",\"dweb:/ipfs/QmVWHh5UvQ7PxRUtUNfd94mSxxxStuzV1NBZtLiKqKpBrQ\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol": {
				"IERC1155Receiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC1155BatchReceived",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC1155Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface that must be implemented by smart contracts in order to receive ERC-1155 token transfers.",
						"kind": "dev",
						"methods": {
							"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": {
								"details": "Handles the receipt of a multiple ERC1155 token types. This function is called at the end of a `safeBatchTransferFrom` after the balances have been updated. NOTE: To accept the transfer(s), this must return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` (i.e. 0xbc197c81, or its own function selector).",
								"params": {
									"data": "Additional data with no specified format",
									"from": "The address which previously owned the token",
									"ids": "An array containing ids of each token being transferred (order and length must match values array)",
									"operator": "The address which initiated the batch transfer (i.e. msg.sender)",
									"values": "An array containing amounts of each token being transferred (order and length must match ids array)"
								},
								"returns": {
									"_0": "`bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed"
								}
							},
							"onERC1155Received(address,address,uint256,uint256,bytes)": {
								"details": "Handles the receipt of a single ERC1155 token type. This function is called at the end of a `safeTransferFrom` after the balance has been updated. NOTE: To accept the transfer, this must return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` (i.e. 0xf23a6e61, or its own function selector).",
								"params": {
									"data": "Additional data with no specified format",
									"from": "The address which previously owned the token",
									"id": "The ID of the token being transferred",
									"operator": "The address which initiated the transfer (i.e. msg.sender)",
									"value": "The amount of tokens being transferred"
								},
								"returns": {
									"_0": "`bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed"
								}
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": "bc197c81",
							"onERC1155Received(address,address,uint256,uint256,bytes)": "f23a6e61",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155BatchReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface that must be implemented by smart contracts in order to receive ERC-1155 token transfers.\",\"kind\":\"dev\",\"methods\":{\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\":{\"details\":\"Handles the receipt of a multiple ERC1155 token types. This function is called at the end of a `safeBatchTransferFrom` after the balances have been updated. NOTE: To accept the transfer(s), this must return `bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` (i.e. 0xbc197c81, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"ids\":\"An array containing ids of each token being transferred (order and length must match values array)\",\"operator\":\"The address which initiated the batch transfer (i.e. msg.sender)\",\"values\":\"An array containing amounts of each token being transferred (order and length must match ids array)\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` if transfer is allowed\"}},\"onERC1155Received(address,address,uint256,uint256,bytes)\":{\"details\":\"Handles the receipt of a single ERC1155 token type. This function is called at the end of a `safeTransferFrom` after the balance has been updated. NOTE: To accept the transfer, this must return `bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` (i.e. 0xf23a6e61, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"id\":\"The ID of the token being transferred\",\"operator\":\"The address which initiated the transfer (i.e. msg.sender)\",\"value\":\"The amount of tokens being transferred\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` if transfer is allowed\"}},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":\"IERC1155Receiver\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0xb69597a63b202e28401128bed6a6d259e8730191274471af7303eafb247881a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://25addbda49a578b3318130585601344c5149a5549d749adf88e9685349a46b23\",\"dweb:/ipfs/Qme2DuD8gpsve1ZvaSMQpBwMdpU7yAtekDwr7gUp8dX4zX\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol": {
				"ERC1155Burnable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								}
							],
							"name": "TransferBatch",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "TransferSingle",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "value",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "URI",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "accounts",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								}
							],
							"name": "balanceOfBatch",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								}
							],
							"name": "burnBatch",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeBatchTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "uri",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Extension of {ERC1155} that allows token holders to destroy both their own tokens and those that they have been approved to use.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"events": {
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`."
							},
							"TransferBatch(address,address,address,uint256[],uint256[])": {
								"details": "Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers."
							},
							"TransferSingle(address,address,address,uint256,uint256)": {
								"details": "Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`."
							},
							"URI(string,uint256)": {
								"details": "Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}."
							}
						},
						"kind": "dev",
						"methods": {
							"balanceOf(address,uint256)": {
								"details": "See {IERC1155-balanceOf}."
							},
							"balanceOfBatch(address[],uint256[])": {
								"details": "See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC1155-isApprovedForAll}."
							},
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
								"details": "See {IERC1155-safeBatchTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,uint256,bytes)": {
								"details": "See {IERC1155-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC1155-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"uri(uint256)": {
								"details": "See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP]. Clients calling this function must replace the `\\{id\\}` substring with the actual token type ID."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"balanceOf(address,uint256)": "00fdd58e",
							"balanceOfBatch(address[],uint256[])": "4e1273f4",
							"burn(address,uint256,uint256)": "f5298aca",
							"burnBatch(address,uint256[],uint256[])": "6b20c454",
							"isApprovedForAll(address,address)": "e985e9c5",
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
							"safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"uri(uint256)": "0e89341c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"burnBatch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Extension of {ERC1155} that allows token holders to destroy both their own tokens and those that they have been approved to use.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"See {IERC1155-balanceOf}.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC1155-isApprovedForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"See {IERC1155-safeBatchTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"See {IERC1155-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC1155-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"uri(uint256)\":{\"details\":\"See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP]. Clients calling this function must replace the `\\\\{id\\\\}` substring with the actual token type ID.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":\"ERC1155Burnable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":{\"keccak256\":\"0xd9b0b8ee1ac6dfee14eb1ad4383a4739dbaa0f2036594bb3a16f0408085dadde\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6309805132e519162d1134c67df22dd963323a9208b4f41344a4c13ed63c1026\",\"dweb:/ipfs/QmTBPHnf6qbtAD4NVnKVFmubUHRqMDPLkseR6apxTUpsQo\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0xe64b3445a3f638890af7ad92464cd18f1f202a2f5a7ed42dabf74317bae43303\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6620b77b8dcd786149534b1c664f94ff1f8bb1ad141e8da7d9ec64b9624c73f0\",\"dweb:/ipfs/QmVWHh5UvQ7PxRUtUNfd94mSxxxStuzV1NBZtLiKqKpBrQ\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0xb69597a63b202e28401128bed6a6d259e8730191274471af7303eafb247881a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://25addbda49a578b3318130585601344c5149a5549d749adf88e9685349a46b23\",\"dweb:/ipfs/Qme2DuD8gpsve1ZvaSMQpBwMdpU7yAtekDwr7gUp8dX4zX\"]},\"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":{\"keccak256\":\"0xdfab949ba677f4b122d0c14225e6db7ca8a65524e2f00049e57b04f68eceeb87\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://25d240211d484954a409a8870c3a971af9e2eb6b6d0ab46b50c193c4a1576006\",\"dweb:/ipfs/QmdzSJoJ6iqoWrGKNeDjV4KVfCqna7Vc7AMoQxpxTdTMpF\"]},\"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":{\"keccak256\":\"0xe92b5e199b963d108ad6e06feeede151ba23849e0d064956535489ff967ffe68\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://280e17738a67b06dae02fec32982bd48a8ab71d8df95e9975ae03532634bc522\",\"dweb:/ipfs/QmecjsNcFgy2mMjuNfRDkLpAYMRWnh5o73fw1Bj2rCso2z\"]},\"@openzeppelin/contracts/utils/Arrays.sol\":{\"keccak256\":\"0x8806d620b6571932b662cfd48fbd518d4f70df1f88a23b5724cacde64a77bda1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8043304c8f9e1c1dc4a41935efa067daa77ad7abbae1fda41f015d53fbf327a5\",\"dweb:/ipfs/QmTrF2hSkRZoN9EEu8zdEhBpGNZ7RxzCdXf9ydzc2HQ3tM\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867\",\"dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 326,
								"contract": "@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol:ERC1155Burnable",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 332,
								"contract": "@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol:ERC1155Burnable",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							},
							{
								"astId": 334,
								"contract": "@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol:ERC1155Burnable",
								"label": "_uri",
								"offset": 0,
								"slot": "2",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol": {
				"ERC1155Supply": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								}
							],
							"name": "TransferBatch",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "TransferSingle",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "value",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "URI",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "accounts",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								}
							],
							"name": "balanceOfBatch",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "exists",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeBatchTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "uri",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Extension of ERC1155 that adds tracking of total supply per id. Useful for scenarios where Fungible and Non-fungible tokens have to be clearly identified. Note: While a totalSupply of 1 might mean the corresponding is an NFT, there is no guarantees that no other token with the same id are not going to be minted. NOTE: This contract implies a global limit of 2**256 - 1 to the number of tokens that can be minted. CAUTION: This extension should not be added in an upgrade to an already deployed contract.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"events": {
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`."
							},
							"TransferBatch(address,address,address,uint256[],uint256[])": {
								"details": "Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers."
							},
							"TransferSingle(address,address,address,uint256,uint256)": {
								"details": "Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`."
							},
							"URI(string,uint256)": {
								"details": "Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}."
							}
						},
						"kind": "dev",
						"methods": {
							"balanceOf(address,uint256)": {
								"details": "See {IERC1155-balanceOf}."
							},
							"balanceOfBatch(address[],uint256[])": {
								"details": "See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length."
							},
							"exists(uint256)": {
								"details": "Indicates whether any token exist with a given id, or not."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC1155-isApprovedForAll}."
							},
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
								"details": "See {IERC1155-safeBatchTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,uint256,bytes)": {
								"details": "See {IERC1155-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC1155-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"totalSupply()": {
								"details": "Total value of tokens."
							},
							"totalSupply(uint256)": {
								"details": "Total value of tokens in with a given id."
							},
							"uri(uint256)": {
								"details": "See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP]. Clients calling this function must replace the `\\{id\\}` substring with the actual token type ID."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"balanceOf(address,uint256)": "00fdd58e",
							"balanceOfBatch(address[],uint256[])": "4e1273f4",
							"exists(uint256)": "4f558e79",
							"isApprovedForAll(address,address)": "e985e9c5",
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
							"safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"totalSupply()": "18160ddd",
							"totalSupply(uint256)": "bd85b039",
							"uri(uint256)": "0e89341c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"exists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Extension of ERC1155 that adds tracking of total supply per id. Useful for scenarios where Fungible and Non-fungible tokens have to be clearly identified. Note: While a totalSupply of 1 might mean the corresponding is an NFT, there is no guarantees that no other token with the same id are not going to be minted. NOTE: This contract implies a global limit of 2**256 - 1 to the number of tokens that can be minted. CAUTION: This extension should not be added in an upgrade to an already deployed contract.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"See {IERC1155-balanceOf}.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length.\"},\"exists(uint256)\":{\"details\":\"Indicates whether any token exist with a given id, or not.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC1155-isApprovedForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"See {IERC1155-safeBatchTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"See {IERC1155-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC1155-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"totalSupply()\":{\"details\":\"Total value of tokens.\"},\"totalSupply(uint256)\":{\"details\":\"Total value of tokens in with a given id.\"},\"uri(uint256)\":{\"details\":\"See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP]. Clients calling this function must replace the `\\\\{id\\\\}` substring with the actual token type ID.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":\"ERC1155Supply\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":{\"keccak256\":\"0xd9b0b8ee1ac6dfee14eb1ad4383a4739dbaa0f2036594bb3a16f0408085dadde\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6309805132e519162d1134c67df22dd963323a9208b4f41344a4c13ed63c1026\",\"dweb:/ipfs/QmTBPHnf6qbtAD4NVnKVFmubUHRqMDPLkseR6apxTUpsQo\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0xe64b3445a3f638890af7ad92464cd18f1f202a2f5a7ed42dabf74317bae43303\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6620b77b8dcd786149534b1c664f94ff1f8bb1ad141e8da7d9ec64b9624c73f0\",\"dweb:/ipfs/QmVWHh5UvQ7PxRUtUNfd94mSxxxStuzV1NBZtLiKqKpBrQ\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0xb69597a63b202e28401128bed6a6d259e8730191274471af7303eafb247881a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://25addbda49a578b3318130585601344c5149a5549d749adf88e9685349a46b23\",\"dweb:/ipfs/Qme2DuD8gpsve1ZvaSMQpBwMdpU7yAtekDwr7gUp8dX4zX\"]},\"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":{\"keccak256\":\"0x1cebc792116430641b9ec887f245ce5dde0ace17a8d5fc38e03fd087e061b537\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://21fea8da292377bdc2930254fd5536c1d2be84a1fcb6268527ab8dd1142b23ee\",\"dweb:/ipfs/QmS5AwrNHbvcFB7TmwcXZNXPgMXZxRxmmcey4eP8YTvBgX\"]},\"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":{\"keccak256\":\"0xe92b5e199b963d108ad6e06feeede151ba23849e0d064956535489ff967ffe68\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://280e17738a67b06dae02fec32982bd48a8ab71d8df95e9975ae03532634bc522\",\"dweb:/ipfs/QmecjsNcFgy2mMjuNfRDkLpAYMRWnh5o73fw1Bj2rCso2z\"]},\"@openzeppelin/contracts/utils/Arrays.sol\":{\"keccak256\":\"0x8806d620b6571932b662cfd48fbd518d4f70df1f88a23b5724cacde64a77bda1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8043304c8f9e1c1dc4a41935efa067daa77ad7abbae1fda41f015d53fbf327a5\",\"dweb:/ipfs/QmTrF2hSkRZoN9EEu8zdEhBpGNZ7RxzCdXf9ydzc2HQ3tM\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867\",\"dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 326,
								"contract": "@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol:ERC1155Supply",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 332,
								"contract": "@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol:ERC1155Supply",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							},
							{
								"astId": 334,
								"contract": "@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol:ERC1155Supply",
								"label": "_uri",
								"offset": 0,
								"slot": "2",
								"type": "t_string_storage"
							},
							{
								"astId": 1591,
								"contract": "@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol:ERC1155Supply",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_uint256,t_uint256)"
							},
							{
								"astId": 1593,
								"contract": "@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol:ERC1155Supply",
								"label": "_totalSupplyAll",
								"offset": 0,
								"slot": "4",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_uint256,t_uint256)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol": {
				"IERC1155MetadataURI": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								}
							],
							"name": "TransferBatch",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "TransferSingle",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "value",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "URI",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "accounts",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								}
							],
							"name": "balanceOfBatch",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeBatchTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "uri",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the optional ERC1155MetadataExtension interface, as defined in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[EIP].",
						"events": {
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`."
							},
							"TransferBatch(address,address,address,uint256[],uint256[])": {
								"details": "Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers."
							},
							"TransferSingle(address,address,address,uint256,uint256)": {
								"details": "Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`."
							},
							"URI(string,uint256)": {
								"details": "Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}."
							}
						},
						"kind": "dev",
						"methods": {
							"balanceOf(address,uint256)": {
								"details": "Returns the value of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address."
							},
							"balanceOfBatch(address[],uint256[])": {
								"details": "xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}."
							},
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
								"details": "xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {onERC1155BatchReceived} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits a {TransferBatch} event. Requirements: - `ids` and `values` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value."
							},
							"safeTransferFrom(address,address,uint256,uint256,bytes)": {
								"details": "Transfers a `value` amount of tokens of type `id` from `from` to `to`. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {onERC1155Received} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `value` amount. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"uri(uint256)": {
								"details": "Returns the URI for token type `id`. If the `\\{id\\}` substring is present in the URI, it must be replaced by clients with the actual token type ID."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"balanceOf(address,uint256)": "00fdd58e",
							"balanceOfBatch(address[],uint256[])": "4e1273f4",
							"isApprovedForAll(address,address)": "e985e9c5",
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
							"safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"uri(uint256)": "0e89341c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the optional ERC1155MetadataExtension interface, as defined in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[EIP].\",\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"Returns the value of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {onERC1155BatchReceived} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits a {TransferBatch} event. Requirements: - `ids` and `values` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"Transfers a `value` amount of tokens of type `id` from `from` to `to`. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {onERC1155Received} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `value` amount. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"uri(uint256)\":{\"details\":\"Returns the URI for token type `id`. If the `\\\\{id\\\\}` substring is present in the URI, it must be replaced by clients with the actual token type ID.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":\"IERC1155MetadataURI\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0xe64b3445a3f638890af7ad92464cd18f1f202a2f5a7ed42dabf74317bae43303\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6620b77b8dcd786149534b1c664f94ff1f8bb1ad141e8da7d9ec64b9624c73f0\",\"dweb:/ipfs/QmVWHh5UvQ7PxRUtUNfd94mSxxxStuzV1NBZtLiKqKpBrQ\"]},\"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":{\"keccak256\":\"0xe92b5e199b963d108ad6e06feeede151ba23849e0d064956535489ff967ffe68\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://280e17738a67b06dae02fec32982bd48a8ab71d8df95e9975ae03532634bc522\",\"dweb:/ipfs/QmecjsNcFgy2mMjuNfRDkLpAYMRWnh5o73fw1Bj2rCso2z\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Arrays.sol": {
				"Arrays": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to array types.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Arrays.sol\":276:4802  library Arrays {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":276:4802  library Arrays {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212209ddeb7f30316ca043df9ae887f9e40324d506221a9b0525d847bb63ccfe2e59164736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212209ddeb7f30316ca043df9ae887f9e40324d506221a9b0525d847bb63ccfe2e59164736f6c63430008140033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP14 0xDE 0xB7 RETURN SUB AND 0xCA DIV RETURNDATASIZE 0xF9 0xAE DUP9 PUSH32 0x9E40324D506221A9B0525D847BB63CCFE2E59164736F6C634300081400330000 ",
							"sourceMap": "276:4526:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212209ddeb7f30316ca043df9ae887f9e40324d506221a9b0525d847bb63ccfe2e59164736f6c63430008140033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP14 0xDE 0xB7 RETURN SUB AND 0xCA DIV RETURNDATASIZE 0xF9 0xAE DUP9 PUSH32 0x9E40324D506221A9B0525D847BB63CCFE2E59164736F6C634300081400330000 ",
							"sourceMap": "276:4526:8:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"findUpperBound(uint256[] storage pointer,uint256)": "infinite",
								"unsafeAccess(address[] storage pointer,uint256)": "infinite",
								"unsafeAccess(bytes32[] storage pointer,uint256)": "infinite",
								"unsafeAccess(uint256[] storage pointer,uint256)": "infinite",
								"unsafeMemoryAccess(address[] memory,uint256)": "infinite",
								"unsafeMemoryAccess(uint256[] memory,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 276,
									"end": 4802,
									"name": "PUSH #[$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "PUSH [$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "PUSH",
									"source": 8,
									"value": "B"
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "BYTE",
									"source": 8
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "PUSH",
									"source": 8,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "tag",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "ADDRESS",
									"source": 8
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "MSTORE8",
									"source": 8
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 276,
									"end": 4802,
									"name": "RETURN",
									"source": 8
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212209ddeb7f30316ca043df9ae887f9e40324d506221a9b0525d847bb63ccfe2e59164736f6c63430008140033",
									".code": [
										{
											"begin": 276,
											"end": 4802,
											"name": "PUSHDEPLOYADDRESS",
											"source": 8
										},
										{
											"begin": 276,
											"end": 4802,
											"name": "ADDRESS",
											"source": 8
										},
										{
											"begin": 276,
											"end": 4802,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 276,
											"end": 4802,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 276,
											"end": 4802,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 276,
											"end": 4802,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 276,
											"end": 4802,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 276,
											"end": 4802,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 276,
											"end": 4802,
											"name": "REVERT",
											"source": 8
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC1155/ERC1155.sol",
								"@openzeppelin/contracts/token/ERC1155/IERC1155.sol",
								"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol",
								"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol",
								"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol",
								"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol",
								"@openzeppelin/contracts/utils/Arrays.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"contracts/SomTokens/SomTokens.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to array types.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Arrays.sol\":\"Arrays\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Arrays.sol\":{\"keccak256\":\"0x8806d620b6571932b662cfd48fbd518d4f70df1f88a23b5724cacde64a77bda1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8043304c8f9e1c1dc4a41935efa067daa77ad7abbae1fda41f015d53fbf327a5\",\"dweb:/ipfs/QmTrF2hSkRZoN9EEu8zdEhBpGNZ7RxzCdXf9ydzc2HQ3tM\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867\",\"dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/StorageSlot.sol": {
				"StorageSlot": {
					"abi": [],
					"devdoc": {
						"details": "Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC1967 implementation slot: ```solidity contract ERC1967 {     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(newImplementation.code.length > 0);         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ```",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/StorageSlot.sol\":1245:3930  library StorageSlot {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/StorageSlot.sol\":1245:3930  library StorageSlot {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220122bdb37b83b84a84480ef52227fb13b9f3ed775d4693784d4e6a75172b45ee464736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220122bdb37b83b84a84480ef52227fb13b9f3ed775d4693784d4e6a75172b45ee464736f6c63430008140033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SLT 0x2B 0xDB CALLDATACOPY 0xB8 EXTCODESIZE DUP5 0xA8 PREVRANDAO DUP1 0xEF MSTORE 0x22 PUSH32 0xB13B9F3ED775D4693784D4E6A75172B45EE464736F6C63430008140033000000 ",
							"sourceMap": "1245:2685:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220122bdb37b83b84a84480ef52227fb13b9f3ed775d4693784d4e6a75172b45ee464736f6c63430008140033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SLT 0x2B 0xDB CALLDATACOPY 0xB8 EXTCODESIZE DUP5 0xA8 PREVRANDAO DUP1 0xEF MSTORE 0x22 PUSH32 0xB13B9F3ED775D4693784D4E6A75172B45EE464736F6C63430008140033000000 ",
							"sourceMap": "1245:2685:10:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"getAddressSlot(bytes32)": "infinite",
								"getBooleanSlot(bytes32)": "infinite",
								"getBytes32Slot(bytes32)": "infinite",
								"getBytesSlot(bytes storage pointer)": "infinite",
								"getBytesSlot(bytes32)": "infinite",
								"getStringSlot(bytes32)": "infinite",
								"getStringSlot(string storage pointer)": "infinite",
								"getUint256Slot(bytes32)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH #[$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH [$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 10,
									"value": "B"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "CODECOPY",
									"source": 10
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "BYTE",
									"source": 10
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "EQ",
									"source": 10
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 10,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "tag",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "ADDRESS",
									"source": 10
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "MSTORE8",
									"source": 10
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "RETURN",
									"source": 10
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220122bdb37b83b84a84480ef52227fb13b9f3ed775d4693784d4e6a75172b45ee464736f6c63430008140033",
									".code": [
										{
											"begin": 1245,
											"end": 3930,
											"name": "PUSHDEPLOYADDRESS",
											"source": 10
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "ADDRESS",
											"source": 10
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "REVERT",
											"source": 10
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC1155/ERC1155.sol",
								"@openzeppelin/contracts/token/ERC1155/IERC1155.sol",
								"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol",
								"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol",
								"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol",
								"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol",
								"@openzeppelin/contracts/utils/Arrays.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"contracts/SomTokens/SomTokens.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC1967 implementation slot: ```solidity contract ERC1967 {     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(newImplementation.code.length > 0);         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ```\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":\"StorageSlot\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"Math": {
					"abi": [
						{
							"inputs": [],
							"name": "MathOverflowedMulDiv",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard math utilities missing in the Solidity language.",
						"errors": {
							"MathOverflowedMulDiv()": [
								{
									"details": "Muldiv operation overflow."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/Math.sol\":203:15117  library Math {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":203:15117  library Math {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212204a90bcf65ffb48e9c51d3503f33f51a10bd9a2c31b2d95cf873206fc780da2d364736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212204a90bcf65ffb48e9c51d3503f33f51a10bd9a2c31b2d95cf873206fc780da2d364736f6c63430008140033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4A SWAP1 0xBC 0xF6 PUSH0 0xFB BASEFEE 0xE9 0xC5 SAR CALLDATALOAD SUB RETURN EXTCODEHASH MLOAD LOG1 SIGNEXTEND 0xD9 LOG2 0xC3 SHL 0x2D SWAP6 0xCF DUP8 ORIGIN MOD 0xFC PUSH25 0xDA2D364736F6C634300081400330000000000000000000000 ",
							"sourceMap": "203:14914:13:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212204a90bcf65ffb48e9c51d3503f33f51a10bd9a2c31b2d95cf873206fc780da2d364736f6c63430008140033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4A SWAP1 0xBC 0xF6 PUSH0 0xFB BASEFEE 0xE9 0xC5 SAR CALLDATALOAD SUB RETURN EXTCODEHASH MLOAD LOG1 SIGNEXTEND 0xD9 LOG2 0xC3 SHL 0x2D SWAP6 0xCF DUP8 ORIGIN MOD 0xFC PUSH25 0xDA2D364736F6C634300081400330000000000000000000000 ",
							"sourceMap": "203:14914:13:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"average(uint256,uint256)": "infinite",
								"ceilDiv(uint256,uint256)": "infinite",
								"log10(uint256)": "infinite",
								"log10(uint256,enum Math.Rounding)": "infinite",
								"log2(uint256)": "infinite",
								"log2(uint256,enum Math.Rounding)": "infinite",
								"log256(uint256)": "infinite",
								"log256(uint256,enum Math.Rounding)": "infinite",
								"max(uint256,uint256)": "infinite",
								"min(uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256,enum Math.Rounding)": "infinite",
								"sqrt(uint256)": "infinite",
								"sqrt(uint256,enum Math.Rounding)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite",
								"unsignedRoundsUp(enum Math.Rounding)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH #[$]",
									"source": 13,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH [$]",
									"source": 13,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 13,
									"value": "B"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "CODECOPY",
									"source": 13
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "BYTE",
									"source": 13
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 13,
									"value": "73"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "EQ",
									"source": 13
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 13,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 13,
									"value": "4"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "tag",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "ADDRESS",
									"source": 13
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 13,
									"value": "73"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE8",
									"source": 13
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "RETURN",
									"source": 13
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212204a90bcf65ffb48e9c51d3503f33f51a10bd9a2c31b2d95cf873206fc780da2d364736f6c63430008140033",
									".code": [
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSHDEPLOYADDRESS",
											"source": 13
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "ADDRESS",
											"source": 13
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "REVERT",
											"source": 13
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC1155/ERC1155.sol",
								"@openzeppelin/contracts/token/ERC1155/IERC1155.sol",
								"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol",
								"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol",
								"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol",
								"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol",
								"@openzeppelin/contracts/utils/Arrays.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"contracts/SomTokens/SomTokens.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"MathOverflowedMulDiv\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"errors\":{\"MathOverflowedMulDiv()\":[{\"details\":\"Muldiv operation overflow.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/SomTokens/SomTokens.sol": {
				"SomTokens": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "initialOwner",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								}
							],
							"name": "TransferBatch",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "TransferSingle",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "value",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "URI",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "accounts",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								}
							],
							"name": "balanceOfBatch",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								}
							],
							"name": "burnBatch",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "exists",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "gameAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "mintBatch",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeBatchTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "setGameAddress",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "uri",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"custom:security-contact": "krlebyte@gmail.com",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"events": {
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`."
							},
							"TransferBatch(address,address,address,uint256[],uint256[])": {
								"details": "Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers."
							},
							"TransferSingle(address,address,address,uint256,uint256)": {
								"details": "Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`."
							},
							"URI(string,uint256)": {
								"details": "Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}."
							}
						},
						"kind": "dev",
						"methods": {
							"balanceOf(address,uint256)": {
								"details": "See {IERC1155-balanceOf}."
							},
							"balanceOfBatch(address[],uint256[])": {
								"details": "See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length."
							},
							"exists(uint256)": {
								"details": "Indicates whether any token exist with a given id, or not."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC1155-isApprovedForAll}."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
								"details": "See {IERC1155-safeBatchTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,uint256,bytes)": {
								"details": "See {IERC1155-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC1155-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"totalSupply()": {
								"details": "Total value of tokens."
							},
							"totalSupply(uint256)": {
								"details": "Total value of tokens in with a given id."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							},
							"uri(uint256)": {
								"details": "See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP]. Clients calling this function must replace the `\\{id\\}` substring with the actual token type ID."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/SomTokens/SomTokens.sol\":376:2275  contract SomTokens is ERC1155, ERC1155Burnable, Ownable, ERC1155Supply {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/SomTokens/SomTokens.sol\":482:592  constructor(address initialOwner)... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/SomTokens/SomTokens.sol\":576:588  initialOwner */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1251:1313  constructor(string memory uri_) {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x20\n  dup2\n  mstore\n  0x20\n  add\n  0x68747470733a2f2f736f6d2e657465726e697461732e67616d65732f6a736f6e\n  dup2\n  mstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1293:1306  _setURI(uri_) */\n  tag_8\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1301:1305  uri_ */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1293:1300  _setURI */\n  shl(0x20, tag_9)\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1293:1306  _setURI(uri_) */\n  0x20\n  shr\n  jump\t// in\ntag_8:\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1251:1313  constructor(string memory uri_) {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1298  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1285  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_11\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_12\n  swap2\n  swap1\n  tag_13\n  jump\t// in\ntag_12:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_11:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_14\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  shl(0x20, tag_15)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_14:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1225:1412  constructor(address initialOwner) {... */\n  pop\n    /* \"contracts/SomTokens/SomTokens.sol\":482:592  constructor(address initialOwner)... */\n  pop\n    /* \"contracts/SomTokens/SomTokens.sol\":376:2275  contract SomTokens is ERC1155, ERC1155Burnable, Ownable, ERC1155Supply {... */\n  jump(tag_17)\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10282:10368  function _setURI(string memory newuri) internal virtual {... */\ntag_9:\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10355:10361  newuri */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10348:10352  _uri */\n  0x02\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10348:10361  _uri = newuri */\n  swap1\n  dup2\n  tag_19\n  swap2\n  swap1\n  tag_20\n  jump\t// in\ntag_19:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10282:10368  function _setURI(string memory newuri) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_15:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  0x03\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n  0x03\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_23:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_25:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_26:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_56\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_25\n  jump\t// in\ntag_56:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_27:\n    /* \"#utility.yul\":641:665   */\n  tag_58\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_26\n  jump\t// in\ntag_58:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_59\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  dup1\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_59:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_28:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_61\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_27\n  jump\t// in\ntag_61:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:1196   */\ntag_3:\n    /* \"#utility.yul\":915:921   */\n  0x00\n    /* \"#utility.yul\":964:966   */\n  0x20\n    /* \"#utility.yul\":952:961   */\n  dup3\n    /* \"#utility.yul\":943:950   */\n  dup5\n    /* \"#utility.yul\":939:962   */\n  sub\n    /* \"#utility.yul\":935:967   */\n  slt\n    /* \"#utility.yul\":932:1051   */\n  iszero\n  tag_63\n  jumpi\n    /* \"#utility.yul\":970:1049   */\n  tag_64\n  tag_23\n  jump\t// in\ntag_64:\n    /* \"#utility.yul\":932:1051   */\ntag_63:\n    /* \"#utility.yul\":1090:1091   */\n  0x00\n    /* \"#utility.yul\":1115:1179   */\n  tag_65\n    /* \"#utility.yul\":1171:1178   */\n  dup5\n    /* \"#utility.yul\":1162:1168   */\n  dup3\n    /* \"#utility.yul\":1151:1160   */\n  dup6\n    /* \"#utility.yul\":1147:1169   */\n  add\n    /* \"#utility.yul\":1115:1179   */\n  tag_28\n  jump\t// in\ntag_65:\n    /* \"#utility.yul\":1105:1179   */\n  swap2\n  pop\n    /* \"#utility.yul\":1061:1189   */\n  pop\n    /* \"#utility.yul\":845:1196   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1202:1320   */\ntag_29:\n    /* \"#utility.yul\":1289:1313   */\n  tag_67\n    /* \"#utility.yul\":1307:1312   */\n  dup2\n    /* \"#utility.yul\":1289:1313   */\n  tag_26\n  jump\t// in\ntag_67:\n    /* \"#utility.yul\":1284:1287   */\n  dup3\n    /* \"#utility.yul\":1277:1314   */\n  mstore\n    /* \"#utility.yul\":1202:1320   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1326:1548   */\ntag_13:\n    /* \"#utility.yul\":1419:1423   */\n  0x00\n    /* \"#utility.yul\":1457:1459   */\n  0x20\n    /* \"#utility.yul\":1446:1455   */\n  dup3\n    /* \"#utility.yul\":1442:1460   */\n  add\n    /* \"#utility.yul\":1434:1460   */\n  swap1\n  pop\n    /* \"#utility.yul\":1470:1541   */\n  tag_69\n    /* \"#utility.yul\":1538:1539   */\n  0x00\n    /* \"#utility.yul\":1527:1536   */\n  dup4\n    /* \"#utility.yul\":1523:1540   */\n  add\n    /* \"#utility.yul\":1514:1520   */\n  dup5\n    /* \"#utility.yul\":1470:1541   */\n  tag_29\n  jump\t// in\ntag_69:\n    /* \"#utility.yul\":1326:1548   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1554:1653   */\ntag_30:\n    /* \"#utility.yul\":1606:1612   */\n  0x00\n    /* \"#utility.yul\":1640:1645   */\n  dup2\n    /* \"#utility.yul\":1634:1646   */\n  mload\n    /* \"#utility.yul\":1624:1646   */\n  swap1\n  pop\n    /* \"#utility.yul\":1554:1653   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1659:1839   */\ntag_31:\n    /* \"#utility.yul\":1707:1784   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":1704:1705   */\n  0x00\n    /* \"#utility.yul\":1697:1785   */\n  mstore\n    /* \"#utility.yul\":1804:1808   */\n  0x41\n    /* \"#utility.yul\":1801:1802   */\n  0x04\n    /* \"#utility.yul\":1794:1809   */\n  mstore\n    /* \"#utility.yul\":1828:1832   */\n  0x24\n    /* \"#utility.yul\":1825:1826   */\n  0x00\n    /* \"#utility.yul\":1818:1833   */\n  revert\n    /* \"#utility.yul\":1845:2025   */\ntag_32:\n    /* \"#utility.yul\":1893:1970   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":1890:1891   */\n  0x00\n    /* \"#utility.yul\":1883:1971   */\n  mstore\n    /* \"#utility.yul\":1990:1994   */\n  0x22\n    /* \"#utility.yul\":1987:1988   */\n  0x04\n    /* \"#utility.yul\":1980:1995   */\n  mstore\n    /* \"#utility.yul\":2014:2018   */\n  0x24\n    /* \"#utility.yul\":2011:2012   */\n  0x00\n    /* \"#utility.yul\":2004:2019   */\n  revert\n    /* \"#utility.yul\":2031:2351   */\ntag_33:\n    /* \"#utility.yul\":2075:2081   */\n  0x00\n    /* \"#utility.yul\":2112:2113   */\n  0x02\n    /* \"#utility.yul\":2106:2110   */\n  dup3\n    /* \"#utility.yul\":2102:2114   */\n  div\n    /* \"#utility.yul\":2092:2114   */\n  swap1\n  pop\n    /* \"#utility.yul\":2159:2160   */\n  0x01\n    /* \"#utility.yul\":2153:2157   */\n  dup3\n    /* \"#utility.yul\":2149:2161   */\n  and\n    /* \"#utility.yul\":2180:2198   */\n  dup1\n    /* \"#utility.yul\":2170:2251   */\n  tag_74\n  jumpi\n    /* \"#utility.yul\":2236:2240   */\n  0x7f\n    /* \"#utility.yul\":2228:2234   */\n  dup3\n    /* \"#utility.yul\":2224:2241   */\n  and\n    /* \"#utility.yul\":2214:2241   */\n  swap2\n  pop\n    /* \"#utility.yul\":2170:2251   */\ntag_74:\n    /* \"#utility.yul\":2298:2300   */\n  0x20\n    /* \"#utility.yul\":2290:2296   */\n  dup3\n    /* \"#utility.yul\":2287:2301   */\n  lt\n    /* \"#utility.yul\":2267:2285   */\n  dup2\n    /* \"#utility.yul\":2264:2302   */\n  sub\n    /* \"#utility.yul\":2261:2345   */\n  tag_75\n  jumpi\n    /* \"#utility.yul\":2317:2335   */\n  tag_76\n  tag_32\n  jump\t// in\ntag_76:\n    /* \"#utility.yul\":2261:2345   */\ntag_75:\n    /* \"#utility.yul\":2082:2351   */\n  pop\n    /* \"#utility.yul\":2031:2351   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2357:2498   */\ntag_34:\n    /* \"#utility.yul\":2406:2410   */\n  0x00\n    /* \"#utility.yul\":2429:2432   */\n  dup2\n    /* \"#utility.yul\":2421:2432   */\n  swap1\n  pop\n    /* \"#utility.yul\":2452:2455   */\n  dup2\n    /* \"#utility.yul\":2449:2450   */\n  0x00\n    /* \"#utility.yul\":2442:2456   */\n  mstore\n    /* \"#utility.yul\":2486:2490   */\n  0x20\n    /* \"#utility.yul\":2483:2484   */\n  0x00\n    /* \"#utility.yul\":2473:2491   */\n  keccak256\n    /* \"#utility.yul\":2465:2491   */\n  swap1\n  pop\n    /* \"#utility.yul\":2357:2498   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2504:2597   */\ntag_35:\n    /* \"#utility.yul\":2541:2547   */\n  0x00\n    /* \"#utility.yul\":2588:2590   */\n  0x20\n    /* \"#utility.yul\":2583:2585   */\n  0x1f\n    /* \"#utility.yul\":2576:2581   */\n  dup4\n    /* \"#utility.yul\":2572:2586   */\n  add\n    /* \"#utility.yul\":2568:2591   */\n  div\n    /* \"#utility.yul\":2558:2591   */\n  swap1\n  pop\n    /* \"#utility.yul\":2504:2597   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2603:2710   */\ntag_36:\n    /* \"#utility.yul\":2647:2655   */\n  0x00\n    /* \"#utility.yul\":2697:2702   */\n  dup3\n    /* \"#utility.yul\":2691:2695   */\n  dup3\n    /* \"#utility.yul\":2687:2703   */\n  shl\n    /* \"#utility.yul\":2666:2703   */\n  swap1\n  pop\n    /* \"#utility.yul\":2603:2710   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2716:3109   */\ntag_37:\n    /* \"#utility.yul\":2785:2791   */\n  0x00\n    /* \"#utility.yul\":2835:2836   */\n  0x08\n    /* \"#utility.yul\":2823:2833   */\n  dup4\n    /* \"#utility.yul\":2819:2837   */\n  mul\n    /* \"#utility.yul\":2858:2955   */\n  tag_81\n    /* \"#utility.yul\":2888:2954   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":2877:2886   */\n  dup3\n    /* \"#utility.yul\":2858:2955   */\n  tag_36\n  jump\t// in\ntag_81:\n    /* \"#utility.yul\":2976:3015   */\n  tag_82\n    /* \"#utility.yul\":3006:3014   */\n  dup7\n    /* \"#utility.yul\":2995:3004   */\n  dup4\n    /* \"#utility.yul\":2976:3015   */\n  tag_36\n  jump\t// in\ntag_82:\n    /* \"#utility.yul\":2964:3015   */\n  swap6\n  pop\n    /* \"#utility.yul\":3048:3052   */\n  dup1\n    /* \"#utility.yul\":3044:3053   */\n  not\n    /* \"#utility.yul\":3037:3042   */\n  dup5\n    /* \"#utility.yul\":3033:3054   */\n  and\n    /* \"#utility.yul\":3024:3054   */\n  swap4\n  pop\n    /* \"#utility.yul\":3097:3101   */\n  dup1\n    /* \"#utility.yul\":3087:3095   */\n  dup7\n    /* \"#utility.yul\":3083:3102   */\n  and\n    /* \"#utility.yul\":3076:3081   */\n  dup5\n    /* \"#utility.yul\":3073:3103   */\n  or\n    /* \"#utility.yul\":3063:3103   */\n  swap3\n  pop\n    /* \"#utility.yul\":2792:3109   */\n  pop\n  pop\n    /* \"#utility.yul\":2716:3109   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3115:3192   */\ntag_38:\n    /* \"#utility.yul\":3152:3159   */\n  0x00\n    /* \"#utility.yul\":3181:3186   */\n  dup2\n    /* \"#utility.yul\":3170:3186   */\n  swap1\n  pop\n    /* \"#utility.yul\":3115:3192   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3198:3258   */\ntag_39:\n    /* \"#utility.yul\":3226:3229   */\n  0x00\n    /* \"#utility.yul\":3247:3252   */\n  dup2\n    /* \"#utility.yul\":3240:3252   */\n  swap1\n  pop\n    /* \"#utility.yul\":3198:3258   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3264:3406   */\ntag_40:\n    /* \"#utility.yul\":3314:3323   */\n  0x00\n    /* \"#utility.yul\":3347:3400   */\n  tag_86\n    /* \"#utility.yul\":3365:3399   */\n  tag_87\n    /* \"#utility.yul\":3374:3398   */\n  tag_88\n    /* \"#utility.yul\":3392:3397   */\n  dup5\n    /* \"#utility.yul\":3374:3398   */\n  tag_38\n  jump\t// in\ntag_88:\n    /* \"#utility.yul\":3365:3399   */\n  tag_39\n  jump\t// in\ntag_87:\n    /* \"#utility.yul\":3347:3400   */\n  tag_38\n  jump\t// in\ntag_86:\n    /* \"#utility.yul\":3334:3400   */\n  swap1\n  pop\n    /* \"#utility.yul\":3264:3406   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3412:3487   */\ntag_41:\n    /* \"#utility.yul\":3455:3458   */\n  0x00\n    /* \"#utility.yul\":3476:3481   */\n  dup2\n    /* \"#utility.yul\":3469:3481   */\n  swap1\n  pop\n    /* \"#utility.yul\":3412:3487   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3493:3762   */\ntag_42:\n    /* \"#utility.yul\":3603:3642   */\n  tag_91\n    /* \"#utility.yul\":3634:3641   */\n  dup4\n    /* \"#utility.yul\":3603:3642   */\n  tag_40\n  jump\t// in\ntag_91:\n    /* \"#utility.yul\":3664:3755   */\n  tag_92\n    /* \"#utility.yul\":3713:3754   */\n  tag_93\n    /* \"#utility.yul\":3737:3753   */\n  dup3\n    /* \"#utility.yul\":3713:3754   */\n  tag_41\n  jump\t// in\ntag_93:\n    /* \"#utility.yul\":3705:3711   */\n  dup5\n    /* \"#utility.yul\":3698:3702   */\n  dup5\n    /* \"#utility.yul\":3692:3703   */\n  sload\n    /* \"#utility.yul\":3664:3755   */\n  tag_37\n  jump\t// in\ntag_92:\n    /* \"#utility.yul\":3658:3662   */\n  dup3\n    /* \"#utility.yul\":3651:3756   */\n  sstore\n    /* \"#utility.yul\":3569:3762   */\n  pop\n    /* \"#utility.yul\":3493:3762   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3768:3841   */\ntag_43:\n    /* \"#utility.yul\":3813:3816   */\n  0x00\n    /* \"#utility.yul\":3768:3841   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":3847:4036   */\ntag_44:\n    /* \"#utility.yul\":3924:3956   */\n  tag_96\n  tag_43\n  jump\t// in\ntag_96:\n    /* \"#utility.yul\":3965:4030   */\n  tag_97\n    /* \"#utility.yul\":4023:4029   */\n  dup2\n    /* \"#utility.yul\":4015:4021   */\n  dup5\n    /* \"#utility.yul\":4009:4013   */\n  dup5\n    /* \"#utility.yul\":3965:4030   */\n  tag_42\n  jump\t// in\ntag_97:\n    /* \"#utility.yul\":3900:4036   */\n  pop\n    /* \"#utility.yul\":3847:4036   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4042:4228   */\ntag_45:\n    /* \"#utility.yul\":4102:4222   */\ntag_99:\n    /* \"#utility.yul\":4119:4122   */\n  dup2\n    /* \"#utility.yul\":4112:4117   */\n  dup2\n    /* \"#utility.yul\":4109:4123   */\n  lt\n    /* \"#utility.yul\":4102:4222   */\n  iszero\n  tag_101\n  jumpi\n    /* \"#utility.yul\":4173:4212   */\n  tag_102\n    /* \"#utility.yul\":4210:4211   */\n  0x00\n    /* \"#utility.yul\":4203:4208   */\n  dup3\n    /* \"#utility.yul\":4173:4212   */\n  tag_44\n  jump\t// in\ntag_102:\n    /* \"#utility.yul\":4146:4147   */\n  0x01\n    /* \"#utility.yul\":4139:4144   */\n  dup2\n    /* \"#utility.yul\":4135:4148   */\n  add\n    /* \"#utility.yul\":4126:4148   */\n  swap1\n  pop\n    /* \"#utility.yul\":4102:4222   */\n  jump(tag_99)\ntag_101:\n    /* \"#utility.yul\":4042:4228   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4234:4777   */\ntag_46:\n    /* \"#utility.yul\":4335:4337   */\n  0x1f\n    /* \"#utility.yul\":4330:4333   */\n  dup3\n    /* \"#utility.yul\":4327:4338   */\n  gt\n    /* \"#utility.yul\":4324:4770   */\n  iszero\n  tag_104\n  jumpi\n    /* \"#utility.yul\":4369:4407   */\n  tag_105\n    /* \"#utility.yul\":4401:4406   */\n  dup2\n    /* \"#utility.yul\":4369:4407   */\n  tag_34\n  jump\t// in\ntag_105:\n    /* \"#utility.yul\":4453:4482   */\n  tag_106\n    /* \"#utility.yul\":4471:4481   */\n  dup5\n    /* \"#utility.yul\":4453:4482   */\n  tag_35\n  jump\t// in\ntag_106:\n    /* \"#utility.yul\":4443:4451   */\n  dup2\n    /* \"#utility.yul\":4439:4483   */\n  add\n    /* \"#utility.yul\":4636:4638   */\n  0x20\n    /* \"#utility.yul\":4624:4634   */\n  dup6\n    /* \"#utility.yul\":4621:4639   */\n  lt\n    /* \"#utility.yul\":4618:4667   */\n  iszero\n  tag_107\n  jumpi\n    /* \"#utility.yul\":4657:4665   */\n  dup2\n    /* \"#utility.yul\":4642:4665   */\n  swap1\n  pop\n    /* \"#utility.yul\":4618:4667   */\ntag_107:\n    /* \"#utility.yul\":4680:4760   */\n  tag_108\n    /* \"#utility.yul\":4736:4758   */\n  tag_109\n    /* \"#utility.yul\":4754:4757   */\n  dup6\n    /* \"#utility.yul\":4736:4758   */\n  tag_35\n  jump\t// in\ntag_109:\n    /* \"#utility.yul\":4726:4734   */\n  dup4\n    /* \"#utility.yul\":4722:4759   */\n  add\n    /* \"#utility.yul\":4709:4720   */\n  dup3\n    /* \"#utility.yul\":4680:4760   */\n  tag_45\n  jump\t// in\ntag_108:\n    /* \"#utility.yul\":4339:4770   */\n  pop\n  pop\n    /* \"#utility.yul\":4324:4770   */\ntag_104:\n    /* \"#utility.yul\":4234:4777   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4783:4900   */\ntag_47:\n    /* \"#utility.yul\":4837:4845   */\n  0x00\n    /* \"#utility.yul\":4887:4892   */\n  dup3\n    /* \"#utility.yul\":4881:4885   */\n  dup3\n    /* \"#utility.yul\":4877:4893   */\n  shr\n    /* \"#utility.yul\":4856:4893   */\n  swap1\n  pop\n    /* \"#utility.yul\":4783:4900   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4906:5075   */\ntag_48:\n    /* \"#utility.yul\":4950:4956   */\n  0x00\n    /* \"#utility.yul\":4983:5034   */\n  tag_112\n    /* \"#utility.yul\":5031:5032   */\n  0x00\n    /* \"#utility.yul\":5027:5033   */\n  not\n    /* \"#utility.yul\":5019:5024   */\n  dup5\n    /* \"#utility.yul\":5016:5017   */\n  0x08\n    /* \"#utility.yul\":5012:5025   */\n  mul\n    /* \"#utility.yul\":4983:5034   */\n  tag_47\n  jump\t// in\ntag_112:\n    /* \"#utility.yul\":4979:5035   */\n  not\n    /* \"#utility.yul\":5064:5068   */\n  dup1\n    /* \"#utility.yul\":5058:5062   */\n  dup4\n    /* \"#utility.yul\":5054:5069   */\n  and\n    /* \"#utility.yul\":5044:5069   */\n  swap2\n  pop\n    /* \"#utility.yul\":4957:5075   */\n  pop\n    /* \"#utility.yul\":4906:5075   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5080:5375   */\ntag_49:\n    /* \"#utility.yul\":5156:5160   */\n  0x00\n    /* \"#utility.yul\":5302:5331   */\n  tag_114\n    /* \"#utility.yul\":5327:5330   */\n  dup4\n    /* \"#utility.yul\":5321:5325   */\n  dup4\n    /* \"#utility.yul\":5302:5331   */\n  tag_48\n  jump\t// in\ntag_114:\n    /* \"#utility.yul\":5294:5331   */\n  swap2\n  pop\n    /* \"#utility.yul\":5364:5367   */\n  dup3\n    /* \"#utility.yul\":5361:5362   */\n  0x02\n    /* \"#utility.yul\":5357:5368   */\n  mul\n    /* \"#utility.yul\":5351:5355   */\n  dup3\n    /* \"#utility.yul\":5348:5369   */\n  or\n    /* \"#utility.yul\":5340:5369   */\n  swap1\n  pop\n    /* \"#utility.yul\":5080:5375   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5380:6775   */\ntag_20:\n    /* \"#utility.yul\":5497:5534   */\n  tag_116\n    /* \"#utility.yul\":5530:5533   */\n  dup3\n    /* \"#utility.yul\":5497:5534   */\n  tag_30\n  jump\t// in\ntag_116:\n    /* \"#utility.yul\":5599:5617   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":5591:5597   */\n  dup2\n    /* \"#utility.yul\":5588:5618   */\n  gt\n    /* \"#utility.yul\":5585:5641   */\n  iszero\n  tag_117\n  jumpi\n    /* \"#utility.yul\":5621:5639   */\n  tag_118\n  tag_31\n  jump\t// in\ntag_118:\n    /* \"#utility.yul\":5585:5641   */\ntag_117:\n    /* \"#utility.yul\":5665:5703   */\n  tag_119\n    /* \"#utility.yul\":5697:5701   */\n  dup3\n    /* \"#utility.yul\":5691:5702   */\n  sload\n    /* \"#utility.yul\":5665:5703   */\n  tag_33\n  jump\t// in\ntag_119:\n    /* \"#utility.yul\":5750:5817   */\n  tag_120\n    /* \"#utility.yul\":5810:5816   */\n  dup3\n    /* \"#utility.yul\":5802:5808   */\n  dup3\n    /* \"#utility.yul\":5796:5800   */\n  dup6\n    /* \"#utility.yul\":5750:5817   */\n  tag_46\n  jump\t// in\ntag_120:\n    /* \"#utility.yul\":5844:5845   */\n  0x00\n    /* \"#utility.yul\":5868:5872   */\n  0x20\n    /* \"#utility.yul\":5855:5872   */\n  swap1\n  pop\n    /* \"#utility.yul\":5900:5902   */\n  0x1f\n    /* \"#utility.yul\":5892:5898   */\n  dup4\n    /* \"#utility.yul\":5889:5903   */\n  gt\n    /* \"#utility.yul\":5917:5918   */\n  0x01\n    /* \"#utility.yul\":5912:6530   */\n  dup2\n  eq\n  tag_122\n  jumpi\n    /* \"#utility.yul\":6574:6575   */\n  0x00\n    /* \"#utility.yul\":6591:6597   */\n  dup5\n    /* \"#utility.yul\":6588:6665   */\n  iszero\n  tag_123\n  jumpi\n    /* \"#utility.yul\":6640:6649   */\n  dup3\n    /* \"#utility.yul\":6635:6638   */\n  dup8\n    /* \"#utility.yul\":6631:6650   */\n  add\n    /* \"#utility.yul\":6625:6651   */\n  mload\n    /* \"#utility.yul\":6616:6651   */\n  swap1\n  pop\n    /* \"#utility.yul\":6588:6665   */\ntag_123:\n    /* \"#utility.yul\":6691:6758   */\n  tag_124\n    /* \"#utility.yul\":6751:6757   */\n  dup6\n    /* \"#utility.yul\":6744:6749   */\n  dup3\n    /* \"#utility.yul\":6691:6758   */\n  tag_49\n  jump\t// in\ntag_124:\n    /* \"#utility.yul\":6685:6689   */\n  dup7\n    /* \"#utility.yul\":6678:6759   */\n  sstore\n    /* \"#utility.yul\":6547:6769   */\n  pop\n    /* \"#utility.yul\":5882:6769   */\n  jump(tag_121)\n    /* \"#utility.yul\":5912:6530   */\ntag_122:\n    /* \"#utility.yul\":5964:5968   */\n  0x1f\n    /* \"#utility.yul\":5960:5969   */\n  not\n    /* \"#utility.yul\":5952:5958   */\n  dup5\n    /* \"#utility.yul\":5948:5970   */\n  and\n    /* \"#utility.yul\":5998:6035   */\n  tag_125\n    /* \"#utility.yul\":6030:6034   */\n  dup7\n    /* \"#utility.yul\":5998:6035   */\n  tag_34\n  jump\t// in\ntag_125:\n    /* \"#utility.yul\":6057:6058   */\n  0x00\n    /* \"#utility.yul\":6071:6279   */\ntag_126:\n    /* \"#utility.yul\":6085:6092   */\n  dup3\n    /* \"#utility.yul\":6082:6083   */\n  dup2\n    /* \"#utility.yul\":6079:6093   */\n  lt\n    /* \"#utility.yul\":6071:6279   */\n  iszero\n  tag_128\n  jumpi\n    /* \"#utility.yul\":6164:6173   */\n  dup5\n    /* \"#utility.yul\":6159:6162   */\n  dup10\n    /* \"#utility.yul\":6155:6174   */\n  add\n    /* \"#utility.yul\":6149:6175   */\n  mload\n    /* \"#utility.yul\":6141:6147   */\n  dup3\n    /* \"#utility.yul\":6134:6176   */\n  sstore\n    /* \"#utility.yul\":6215:6216   */\n  0x01\n    /* \"#utility.yul\":6207:6213   */\n  dup3\n    /* \"#utility.yul\":6203:6217   */\n  add\n    /* \"#utility.yul\":6193:6217   */\n  swap2\n  pop\n    /* \"#utility.yul\":6262:6264   */\n  0x20\n    /* \"#utility.yul\":6251:6260   */\n  dup6\n    /* \"#utility.yul\":6247:6265   */\n  add\n    /* \"#utility.yul\":6234:6265   */\n  swap5\n  pop\n    /* \"#utility.yul\":6108:6112   */\n  0x20\n    /* \"#utility.yul\":6105:6106   */\n  dup2\n    /* \"#utility.yul\":6101:6113   */\n  add\n    /* \"#utility.yul\":6096:6113   */\n  swap1\n  pop\n    /* \"#utility.yul\":6071:6279   */\n  jump(tag_126)\ntag_128:\n    /* \"#utility.yul\":6307:6313   */\n  dup7\n    /* \"#utility.yul\":6298:6305   */\n  dup4\n    /* \"#utility.yul\":6295:6314   */\n  lt\n    /* \"#utility.yul\":6292:6471   */\n  iszero\n  tag_129\n  jumpi\n    /* \"#utility.yul\":6365:6374   */\n  dup5\n    /* \"#utility.yul\":6360:6363   */\n  dup10\n    /* \"#utility.yul\":6356:6375   */\n  add\n    /* \"#utility.yul\":6350:6376   */\n  mload\n    /* \"#utility.yul\":6408:6456   */\n  tag_130\n    /* \"#utility.yul\":6450:6454   */\n  0x1f\n    /* \"#utility.yul\":6442:6448   */\n  dup10\n    /* \"#utility.yul\":6438:6455   */\n  and\n    /* \"#utility.yul\":6427:6436   */\n  dup3\n    /* \"#utility.yul\":6408:6456   */\n  tag_48\n  jump\t// in\ntag_130:\n    /* \"#utility.yul\":6400:6406   */\n  dup4\n    /* \"#utility.yul\":6393:6457   */\n  sstore\n    /* \"#utility.yul\":6315:6471   */\n  pop\n    /* \"#utility.yul\":6292:6471   */\ntag_129:\n    /* \"#utility.yul\":6517:6518   */\n  0x01\n    /* \"#utility.yul\":6513:6514   */\n  0x02\n    /* \"#utility.yul\":6505:6511   */\n  dup9\n    /* \"#utility.yul\":6501:6515   */\n  mul\n    /* \"#utility.yul\":6497:6519   */\n  add\n    /* \"#utility.yul\":6491:6495   */\n  dup9\n    /* \"#utility.yul\":6484:6520   */\n  sstore\n    /* \"#utility.yul\":5919:6530   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":5882:6769   */\ntag_121:\n  pop\n    /* \"#utility.yul\":5472:6775   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":5380:6775   */\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/SomTokens/SomTokens.sol\":376:2275  contract SomTokens is ERC1155, ERC1155Burnable, Ownable, ERC1155Supply {... */\ntag_17:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/SomTokens/SomTokens.sol\":376:2275  contract SomTokens is ERC1155, ERC1155Burnable, Ownable, ERC1155Supply {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x715018a6\n      gt\n      tag_23\n      jumpi\n      dup1\n      0xbd85b039\n      gt\n      tag_24\n      jumpi\n      dup1\n      0xbd85b039\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xe985e9c5\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xf242432a\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xf5298aca\n      eq\n      tag_22\n      jumpi\n      jump(tag_2)\n    tag_24:\n      dup1\n      0x715018a6\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x731133e9\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xa168d873\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xa22cb465\n      eq\n      tag_17\n      jumpi\n      jump(tag_2)\n    tag_23:\n      dup1\n      0x2eb2c2d6\n      gt\n      tag_25\n      jumpi\n      dup1\n      0x2eb2c2d6\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x4e1273f4\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x4f558e79\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x6b20c454\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x711953ef\n      eq\n      tag_12\n      jumpi\n      jump(tag_2)\n    tag_25:\n      dup1\n      0xfdd58e\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x01ffc9a7\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x0e89341c\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x1f7fdffa\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2247:2379  function balanceOf(address account, uint256 id) public view virtual returns (uint256) {... */\n    tag_3:\n      tag_26\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_27\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_27:\n      tag_29\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      tag_30\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1380:1685  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_4:\n      tag_32\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_33\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_33:\n      tag_35\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      tag_36\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2084:2187  function uri(uint256 /* id */) public view virtual returns (string memory) {... */\n    tag_5:\n      tag_38\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_39\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_39:\n      tag_41\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      tag_42\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":1127:1227  function totalSupply() public view virtual returns (uint256) {... */\n    tag_6:\n      tag_44\n      tag_45\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      tag_46\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/SomTokens/SomTokens.sol\":886:1194  function mintBatch (... */\n    tag_7:\n      tag_47\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_48\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_48:\n      tag_50\n      jump\t// in\n    tag_47:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4014:4443  function safeBatchTransferFrom(... */\n    tag_8:\n      tag_51\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_52\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_52:\n      tag_54\n      jump\t// in\n    tag_51:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2536:3088  function balanceOfBatch(... */\n    tag_9:\n      tag_55\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_56\n      swap2\n      swap1\n      tag_57\n      jump\t// in\n    tag_56:\n      tag_58\n      jump\t// in\n    tag_55:\n      mload(0x40)\n      tag_59\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_59:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":1320:1426  function exists(uint256 id) public view virtual returns (bool) {... */\n    tag_10:\n      tag_61\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_62\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_62:\n      tag_63\n      jump\t// in\n    tag_61:\n      mload(0x40)\n      tag_64\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_64:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":681:994  function burnBatch(address account, uint256[] memory ids, uint256[] memory values) public virtual {... */\n    tag_11:\n      tag_65\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_66\n      swap2\n      swap1\n      tag_67\n      jump\t// in\n    tag_66:\n      tag_68\n      jump\t// in\n    tag_65:\n      stop\n        /* \"contracts/SomTokens/SomTokens.sol\":1906:2069  function setGameAddress (address account) public onlyOwner {... */\n    tag_12:\n      tag_69\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_70\n      swap2\n      swap1\n      tag_71\n      jump\t// in\n    tag_70:\n      tag_72\n      jump\t// in\n    tag_69:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_13:\n      tag_73\n      tag_74\n      jump\t// in\n    tag_73:\n      stop\n        /* \"contracts/SomTokens/SomTokens.sol\":596:882  function mint (... */\n    tag_14:\n      tag_75\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_76\n      swap2\n      swap1\n      tag_77\n      jump\t// in\n    tag_76:\n      tag_78\n      jump\t// in\n    tag_75:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_15:\n      tag_79\n      tag_80\n      jump\t// in\n    tag_79:\n      mload(0x40)\n      tag_81\n      swap2\n      swap1\n      tag_82\n      jump\t// in\n    tag_81:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/SomTokens/SomTokens.sol\":451:477  address public gameAddress */\n    tag_16:\n      tag_83\n      tag_84\n      jump\t// in\n    tag_83:\n      mload(0x40)\n      tag_85\n      swap2\n      swap1\n      tag_82\n      jump\t// in\n    tag_85:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3156:3300  function setApprovalForAll(address operator, bool approved) public virtual {... */\n    tag_17:\n      tag_86\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_87\n      swap2\n      swap1\n      tag_88\n      jump\t// in\n    tag_87:\n      tag_89\n      jump\t// in\n    tag_86:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":959:1070  function totalSupply(uint256 id) public view virtual returns (uint256) {... */\n    tag_18:\n      tag_90\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_91\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_91:\n      tag_92\n      jump\t// in\n    tag_90:\n      mload(0x40)\n      tag_93\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_93:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3367:3524  function isApprovedForAll(address account, address operator) public view virtual returns (bool) {... */\n    tag_19:\n      tag_94\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_95\n      swap2\n      swap1\n      tag_96\n      jump\t// in\n    tag_95:\n      tag_97\n      jump\t// in\n    tag_94:\n      mload(0x40)\n      tag_98\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_98:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3591:3942  function safeTransferFrom(address from, address to, uint256 id, uint256 value, bytes memory data) public virtual {... */\n    tag_20:\n      tag_99\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_100\n      swap2\n      swap1\n      tag_101\n      jump\t// in\n    tag_100:\n      tag_102\n      jump\t// in\n    tag_99:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_21:\n      tag_103\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_104\n      swap2\n      swap1\n      tag_71\n      jump\t// in\n    tag_104:\n      tag_105\n      jump\t// in\n    tag_103:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":394:675  function burn(address account, uint256 id, uint256 value) public virtual {... */\n    tag_22:\n      tag_106\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_107\n      swap2\n      swap1\n      tag_108\n      jump\t// in\n    tag_107:\n      tag_109\n      jump\t// in\n    tag_106:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2247:2379  function balanceOf(address account, uint256 id) public view virtual returns (uint256) {... */\n    tag_29:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2324:2331  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2350:2359  _balances */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2350:2363  _balances[id] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2360:2362  id */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2350:2363  _balances[id] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2350:2372  _balances[id][account] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2364:2371  account */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2350:2372  _balances[id][account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2343:2372  return _balances[id][account] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2247:2379  function balanceOf(address account, uint256 id) public view virtual returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1380:1685  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_35:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1482:1486  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1532:1558  type(IERC1155).interfaceId */\n      0xd9b67a2600000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1517:1558  interfaceId == type(IERC1155).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1517:1528  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1517:1558  interfaceId == type(IERC1155).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1517:1626  interfaceId == type(IERC1155).interfaceId ||... */\n      dup1\n      tag_112\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1589:1626  type(IERC1155MetadataURI).interfaceId */\n      0x0e89341c00000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1574:1626  interfaceId == type(IERC1155MetadataURI).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1574:1585  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1574:1626  interfaceId == type(IERC1155MetadataURI).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1517:1626  interfaceId == type(IERC1155).interfaceId ||... */\n    tag_112:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1517:1678  interfaceId == type(IERC1155).interfaceId ||... */\n      dup1\n      tag_113\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1642:1678  super.supportsInterface(interfaceId) */\n      tag_114\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1666:1677  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1642:1665  super.supportsInterface */\n      tag_115\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1642:1678  super.supportsInterface(interfaceId) */\n      jump\t// in\n    tag_114:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1517:1678  interfaceId == type(IERC1155).interfaceId ||... */\n    tag_113:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1498:1678  return... */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":1380:1685  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2084:2187  function uri(uint256 /* id */) public view virtual returns (string memory) {... */\n    tag_41:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2144:2157  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2176:2180  _uri */\n      0x02\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2169:2180  return _uri */\n      dup1\n      sload\n      tag_117\n      swap1\n      tag_118\n      jump\t// in\n    tag_117:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_119\n      swap1\n      tag_118\n      jump\t// in\n    tag_119:\n      dup1\n      iszero\n      tag_120\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_121\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_120)\n    tag_121:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_122:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_122\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_120:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2084:2187  function uri(uint256 /* id */) public view virtual returns (string memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":1127:1227  function totalSupply() public view virtual returns (uint256) {... */\n    tag_45:\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":1179:1186  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":1205:1220  _totalSupplyAll */\n      sload(0x05)\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":1198:1220  return _totalSupplyAll */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":1127:1227  function totalSupply() public view virtual returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/SomTokens/SomTokens.sol\":886:1194  function mintBatch (... */\n    tag_50:\n        /* \"contracts/SomTokens/SomTokens.sol\":1049:1050  0 */\n      0x00\n        /* \"contracts/SomTokens/SomTokens.sol\":1026:1051  gameAddress != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/SomTokens/SomTokens.sol\":1026:1037  gameAddress */\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/SomTokens/SomTokens.sol\":1026:1051  gameAddress != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/SomTokens/SomTokens.sol\":1018:1077  require(gameAddress != address(0), \"Game address not set.\") */\n      tag_125\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_126\n      swap1\n      tag_127\n      jump\t// in\n    tag_126:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_125:\n        /* \"contracts/SomTokens/SomTokens.sol\":1105:1116  gameAddress */\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/SomTokens/SomTokens.sol\":1091:1116  msg.sender == gameAddress */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/SomTokens/SomTokens.sol\":1091:1101  msg.sender */\n      caller\n        /* \"contracts/SomTokens/SomTokens.sol\":1091:1116  msg.sender == gameAddress */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/SomTokens/SomTokens.sol\":1083:1149  require(msg.sender == gameAddress, \"Only game contract can mint.\") */\n      tag_128\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_129\n      swap1\n      tag_130\n      jump\t// in\n    tag_129:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_128:\n        /* \"contracts/SomTokens/SomTokens.sol\":1155:1189  _mintBatch(to, ids, amounts, data) */\n      tag_131\n        /* \"contracts/SomTokens/SomTokens.sol\":1166:1168  to */\n      dup5\n        /* \"contracts/SomTokens/SomTokens.sol\":1170:1173  ids */\n      dup5\n        /* \"contracts/SomTokens/SomTokens.sol\":1175:1182  amounts */\n      dup5\n        /* \"contracts/SomTokens/SomTokens.sol\":1184:1188  data */\n      dup5\n        /* \"contracts/SomTokens/SomTokens.sol\":1155:1165  _mintBatch */\n      tag_132\n        /* \"contracts/SomTokens/SomTokens.sol\":1155:1189  _mintBatch(to, ids, amounts, data) */\n      jump\t// in\n    tag_131:\n        /* \"contracts/SomTokens/SomTokens.sol\":886:1194  function mintBatch (... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4014:4443  function safeBatchTransferFrom(... */\n    tag_54:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4208:4222  address sender */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4225:4237  _msgSender() */\n      tag_134\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4225:4235  _msgSender */\n      tag_135\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4225:4237  _msgSender() */\n      jump\t// in\n    tag_134:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4208:4237  address sender = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4259:4265  sender */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4251:4265  from != sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4251:4255  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4251:4265  from != sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4251:4300  from != sender && !isApprovedForAll(from, sender) */\n      dup1\n      iszero\n      tag_136\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4270:4300  isApprovedForAll(from, sender) */\n      tag_137\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4287:4291  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4293:4299  sender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4270:4286  isApprovedForAll */\n      tag_97\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4270:4300  isApprovedForAll(from, sender) */\n      jump\t// in\n    tag_137:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4269:4300  !isApprovedForAll(from, sender) */\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4251:4300  from != sender && !isApprovedForAll(from, sender) */\n    tag_136:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4247:4376  if (from != sender && !isApprovedForAll(from, sender)) {... */\n      iszero\n      tag_138\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4352:4358  sender */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4360:4364  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4323:4365  ERC1155MissingApprovalForAll(sender, from) */\n      mload(0x40)\n      0xe237d92200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_139\n      swap3\n      swap2\n      swap1\n      tag_140\n      jump\t// in\n    tag_139:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4247:4376  if (from != sender && !isApprovedForAll(from, sender)) {... */\n    tag_138:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4385:4436  _safeBatchTransferFrom(from, to, ids, values, data) */\n      tag_141\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4408:4412  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4414:4416  to */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4418:4421  ids */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4423:4429  values */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4431:4435  data */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4385:4407  _safeBatchTransferFrom */\n      tag_142\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4385:4436  _safeBatchTransferFrom(from, to, ids, values, data) */\n      jump\t// in\n    tag_141:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4198:4443  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":4014:4443  function safeBatchTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2536:3088  function balanceOfBatch(... */\n    tag_58:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2660:2676  uint256[] memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2711:2714  ids */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2711:2721  ids.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2692:2700  accounts */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2692:2707  accounts.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2692:2721  accounts.length != ids.length */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2688:2809  if (accounts.length != ids.length) {... */\n      tag_144\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2770:2773  ids */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2770:2780  ids.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2782:2790  accounts */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2782:2797  accounts.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2744:2798  ERC1155InvalidArrayLength(ids.length, accounts.length) */\n      mload(0x40)\n      0x5b05999100000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_145\n      swap3\n      swap2\n      swap1\n      tag_146\n      jump\t// in\n    tag_145:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2688:2809  if (accounts.length != ids.length) {... */\n    tag_144:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2819:2849  uint256[] memory batchBalances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2866:2874  accounts */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2866:2881  accounts.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2852:2882  new uint256[](accounts.length) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_147\n      jumpi\n      tag_148\n      tag_149\n      jump\t// in\n    tag_148:\n    tag_147:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_150\n      jumpi\n      dup2\n      0x20\n      add\n      0x20\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      dup1\n      dup3\n      add\n      swap2\n      pop\n      pop\n      swap1\n      pop\n    tag_150:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2819:2882  uint256[] memory batchBalances = new uint256[](accounts.length) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2898:2907  uint256 i */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2893:3051  for (uint256 i = 0; i < accounts.length; ++i) {... */\n    tag_151:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2917:2925  accounts */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2917:2932  accounts.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2913:2914  i */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2913:2932  i < accounts.length */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2893:3051  for (uint256 i = 0; i < accounts.length; ++i) {... */\n      iszero\n      tag_152\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2972:3040  balanceOf(accounts.unsafeMemoryAccess(i), ids.unsafeMemoryAccess(i)) */\n      tag_154\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2982:3012  accounts.unsafeMemoryAccess(i) */\n      tag_155\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3010:3011  i */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2982:2990  accounts */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2982:3009  accounts.unsafeMemoryAccess */\n      tag_156\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2982:3012  accounts.unsafeMemoryAccess(i) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_155:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3014:3039  ids.unsafeMemoryAccess(i) */\n      tag_157\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3037:3038  i */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3014:3017  ids */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3014:3036  ids.unsafeMemoryAccess */\n      tag_158\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3014:3039  ids.unsafeMemoryAccess(i) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_157:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2972:2981  balanceOf */\n      tag_29\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2972:3040  balanceOf(accounts.unsafeMemoryAccess(i), ids.unsafeMemoryAccess(i)) */\n      jump\t// in\n    tag_154:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2953:2966  batchBalances */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2967:2968  i */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2953:2969  batchBalances[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_159\n      jumpi\n      tag_160\n      tag_161\n      jump\t// in\n    tag_160:\n    tag_159:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2953:3040  batchBalances[i] = balanceOf(accounts.unsafeMemoryAccess(i), ids.unsafeMemoryAccess(i)) */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2934:2937  ++i */\n      dup1\n      tag_162\n      swap1\n      tag_163\n      jump\t// in\n    tag_162:\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2893:3051  for (uint256 i = 0; i < accounts.length; ++i) {... */\n      jump(tag_151)\n    tag_152:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3068:3081  batchBalances */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3061:3081  return batchBalances */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":2536:3088  function balanceOfBatch(... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":1320:1426  function exists(uint256 id) public view virtual returns (bool) {... */\n    tag_63:\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":1377:1381  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":1418:1419  0 */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":1400:1415  totalSupply(id) */\n      tag_165\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":1412:1414  id */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":1400:1411  totalSupply */\n      tag_92\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":1400:1415  totalSupply(id) */\n      jump\t// in\n    tag_165:\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":1400:1419  totalSupply(id) > 0 */\n      gt\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":1393:1419  return totalSupply(id) > 0 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":1320:1426  function exists(uint256 id) public view virtual returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":681:994  function burnBatch(address account, uint256[] memory ids, uint256[] memory values) public virtual {... */\n    tag_68:\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":804:816  _msgSender() */\n      tag_167\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":804:814  _msgSender */\n      tag_135\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":804:816  _msgSender() */\n      jump\t// in\n    tag_167:\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":793:816  account != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":793:800  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":793:816  account != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":793:860  account != _msgSender() && !isApprovedForAll(account, _msgSender()) */\n      dup1\n      iszero\n      tag_168\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":821:860  isApprovedForAll(account, _msgSender()) */\n      tag_169\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":838:845  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":847:859  _msgSender() */\n      tag_170\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":847:857  _msgSender */\n      tag_135\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":847:859  _msgSender() */\n      jump\t// in\n    tag_170:\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":821:837  isApprovedForAll */\n      tag_97\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":821:860  isApprovedForAll(account, _msgSender()) */\n      jump\t// in\n    tag_169:\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":820:860  !isApprovedForAll(account, _msgSender()) */\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":793:860  account != _msgSender() && !isApprovedForAll(account, _msgSender()) */\n    tag_168:\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":789:945  if (account != _msgSender() && !isApprovedForAll(account, _msgSender())) {... */\n      iszero\n      tag_171\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":912:924  _msgSender() */\n      tag_172\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":912:922  _msgSender */\n      tag_135\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":912:924  _msgSender() */\n      jump\t// in\n    tag_172:\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":926:933  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":883:934  ERC1155MissingApprovalForAll(_msgSender(), account) */\n      mload(0x40)\n      0xe237d92200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_173\n      swap3\n      swap2\n      swap1\n      tag_140\n      jump\t// in\n    tag_173:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":789:945  if (account != _msgSender() && !isApprovedForAll(account, _msgSender())) {... */\n    tag_171:\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":955:987  _burnBatch(account, ids, values) */\n      tag_174\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":966:973  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":975:978  ids */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":980:986  values */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":955:965  _burnBatch */\n      tag_175\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":955:987  _burnBatch(account, ids, values) */\n      jump\t// in\n    tag_174:\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":681:994  function burnBatch(address account, uint256[] memory ids, uint256[] memory values) public virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/SomTokens/SomTokens.sol\":1906:2069  function setGameAddress (address account) public onlyOwner {... */\n    tag_72:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_177\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_178\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_177:\n        /* \"contracts/SomTokens/SomTokens.sol\":2002:2003  0 */\n      0x00\n        /* \"contracts/SomTokens/SomTokens.sol\":1979:2004  gameAddress == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/SomTokens/SomTokens.sol\":1979:1990  gameAddress */\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/SomTokens/SomTokens.sol\":1979:2004  gameAddress == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/SomTokens/SomTokens.sol\":1971:2037  require(gameAddress == address(0), \"Game address is already set.\") */\n      tag_180\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_181\n      swap1\n      tag_182\n      jump\t// in\n    tag_181:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_180:\n        /* \"contracts/SomTokens/SomTokens.sol\":2057:2064  account */\n      dup1\n        /* \"contracts/SomTokens/SomTokens.sol\":2043:2054  gameAddress */\n      0x06\n      0x00\n        /* \"contracts/SomTokens/SomTokens.sol\":2043:2064  gameAddress = account */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/SomTokens/SomTokens.sol\":1906:2069  function setGameAddress (address account) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_74:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_184\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_178\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_184:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_186\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_187\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_186:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"contracts/SomTokens/SomTokens.sol\":596:882  function mint (... */\n    tag_78:\n        /* \"contracts/SomTokens/SomTokens.sol\":739:740  0 */\n      0x00\n        /* \"contracts/SomTokens/SomTokens.sol\":716:741  gameAddress != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/SomTokens/SomTokens.sol\":716:727  gameAddress */\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/SomTokens/SomTokens.sol\":716:741  gameAddress != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/SomTokens/SomTokens.sol\":708:767  require(gameAddress != address(0), \"Game address not set.\") */\n      tag_189\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_190\n      swap1\n      tag_127\n      jump\t// in\n    tag_190:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_189:\n        /* \"contracts/SomTokens/SomTokens.sol\":795:806  gameAddress */\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/SomTokens/SomTokens.sol\":781:806  msg.sender == gameAddress */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/SomTokens/SomTokens.sol\":781:791  msg.sender */\n      caller\n        /* \"contracts/SomTokens/SomTokens.sol\":781:806  msg.sender == gameAddress */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/SomTokens/SomTokens.sol\":773:839  require(msg.sender == gameAddress, \"Only game contract can mint.\") */\n      tag_191\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_192\n      swap1\n      tag_130\n      jump\t// in\n    tag_192:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_191:\n        /* \"contracts/SomTokens/SomTokens.sol\":845:877  _mint(account, id, amount, data) */\n      tag_193\n        /* \"contracts/SomTokens/SomTokens.sol\":851:858  account */\n      dup5\n        /* \"contracts/SomTokens/SomTokens.sol\":860:862  id */\n      dup5\n        /* \"contracts/SomTokens/SomTokens.sol\":864:870  amount */\n      dup5\n        /* \"contracts/SomTokens/SomTokens.sol\":872:876  data */\n      dup5\n        /* \"contracts/SomTokens/SomTokens.sol\":845:850  _mint */\n      tag_194\n        /* \"contracts/SomTokens/SomTokens.sol\":845:877  _mint(account, id, amount, data) */\n      jump\t// in\n    tag_193:\n        /* \"contracts/SomTokens/SomTokens.sol\":596:882  function mint (... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_80:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1703:1716  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/SomTokens/SomTokens.sol\":451:477  address public gameAddress */\n    tag_84:\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3156:3300  function setApprovalForAll(address operator, bool approved) public virtual {... */\n    tag_89:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3241:3293  _setApprovalForAll(_msgSender(), operator, approved) */\n      tag_197\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3260:3272  _msgSender() */\n      tag_198\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3260:3270  _msgSender */\n      tag_135\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3260:3272  _msgSender() */\n      jump\t// in\n    tag_198:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3274:3282  operator */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3284:3292  approved */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3241:3259  _setApprovalForAll */\n      tag_199\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3241:3293  _setApprovalForAll(_msgSender(), operator, approved) */\n      jump\t// in\n    tag_197:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3156:3300  function setApprovalForAll(address operator, bool approved) public virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":959:1070  function totalSupply(uint256 id) public view virtual returns (uint256) {... */\n    tag_92:\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":1021:1028  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":1047:1059  _totalSupply */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":1047:1063  _totalSupply[id] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":1060:1062  id */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":1047:1063  _totalSupply[id] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":1040:1063  return _totalSupply[id] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":959:1070  function totalSupply(uint256 id) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3367:3524  function isApprovedForAll(address account, address operator) public view virtual returns (bool) {... */\n    tag_97:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3457:3461  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3480:3498  _operatorApprovals */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3480:3507  _operatorApprovals[account] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3499:3506  account */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3480:3507  _operatorApprovals[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3480:3517  _operatorApprovals[account][operator] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3508:3516  operator */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3480:3517  _operatorApprovals[account][operator] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3473:3517  return _operatorApprovals[account][operator] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3367:3524  function isApprovedForAll(address account, address operator) public view virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3591:3942  function safeTransferFrom(address from, address to, uint256 id, uint256 value, bytes memory data) public virtual {... */\n    tag_102:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3714:3728  address sender */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3731:3743  _msgSender() */\n      tag_203\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3731:3741  _msgSender */\n      tag_135\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3731:3743  _msgSender() */\n      jump\t// in\n    tag_203:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3714:3743  address sender = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3765:3771  sender */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3757:3771  from != sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3757:3761  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3757:3771  from != sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3757:3806  from != sender && !isApprovedForAll(from, sender) */\n      dup1\n      iszero\n      tag_204\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3776:3806  isApprovedForAll(from, sender) */\n      tag_205\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3793:3797  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3799:3805  sender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3776:3792  isApprovedForAll */\n      tag_97\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3776:3806  isApprovedForAll(from, sender) */\n      jump\t// in\n    tag_205:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3775:3806  !isApprovedForAll(from, sender) */\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3757:3806  from != sender && !isApprovedForAll(from, sender) */\n    tag_204:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3753:3882  if (from != sender && !isApprovedForAll(from, sender)) {... */\n      iszero\n      tag_206\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3858:3864  sender */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3866:3870  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3829:3871  ERC1155MissingApprovalForAll(sender, from) */\n      mload(0x40)\n      0xe237d92200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_207\n      swap3\n      swap2\n      swap1\n      tag_140\n      jump\t// in\n    tag_207:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3753:3882  if (from != sender && !isApprovedForAll(from, sender)) {... */\n    tag_206:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3891:3935  _safeTransferFrom(from, to, id, value, data) */\n      tag_208\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3909:3913  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3915:3917  to */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3919:3921  id */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3923:3928  value */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3930:3934  data */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3891:3908  _safeTransferFrom */\n      tag_209\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3891:3935  _safeTransferFrom(from, to, id, value, data) */\n      jump\t// in\n    tag_208:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3704:3942  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":3591:3942  function safeTransferFrom(address from, address to, uint256 id, uint256 value, bytes memory data) public virtual {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_105:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_211\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_178\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_211:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2647:2648  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2635  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_213\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_214\n      swap2\n      swap1\n      tag_82\n      jump\t// in\n    tag_214:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_213:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_215\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_187\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_215:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":394:675  function burn(address account, uint256 id, uint256 value) public virtual {... */\n    tag_109:\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":492:504  _msgSender() */\n      tag_217\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":492:502  _msgSender */\n      tag_135\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":492:504  _msgSender() */\n      jump\t// in\n    tag_217:\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":481:504  account != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":481:488  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":481:504  account != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":481:548  account != _msgSender() && !isApprovedForAll(account, _msgSender()) */\n      dup1\n      iszero\n      tag_218\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":509:548  isApprovedForAll(account, _msgSender()) */\n      tag_219\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":526:533  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":535:547  _msgSender() */\n      tag_220\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":535:545  _msgSender */\n      tag_135\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":535:547  _msgSender() */\n      jump\t// in\n    tag_220:\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":509:525  isApprovedForAll */\n      tag_97\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":509:548  isApprovedForAll(account, _msgSender()) */\n      jump\t// in\n    tag_219:\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":508:548  !isApprovedForAll(account, _msgSender()) */\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":481:548  account != _msgSender() && !isApprovedForAll(account, _msgSender()) */\n    tag_218:\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":477:633  if (account != _msgSender() && !isApprovedForAll(account, _msgSender())) {... */\n      iszero\n      tag_221\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":600:612  _msgSender() */\n      tag_222\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":600:610  _msgSender */\n      tag_135\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":600:612  _msgSender() */\n      jump\t// in\n    tag_222:\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":614:621  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":571:622  ERC1155MissingApprovalForAll(_msgSender(), account) */\n      mload(0x40)\n      0xe237d92200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_223\n      swap3\n      swap2\n      swap1\n      tag_140\n      jump\t// in\n    tag_223:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":477:633  if (account != _msgSender() && !isApprovedForAll(account, _msgSender())) {... */\n    tag_221:\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":643:668  _burn(account, id, value) */\n      tag_224\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":649:656  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":658:660  id */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":662:667  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":643:648  _burn */\n      tag_225\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":643:668  _burn(account, id, value) */\n      jump\t// in\n    tag_224:\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":394:675  function burn(address account, uint256 id, uint256 value) public virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":762:908  function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {... */\n    tag_115:\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":838:842  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":876:901  type(IERC165).interfaceId */\n      0x01ffc9a700000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":861:901  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":861:872  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":861:901  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":854:901  return interfaceId == type(IERC165).interfaceId */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":762:908  function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":11523:11805  function _mintBatch(address to, uint256[] memory ids, uint256[] memory values, bytes memory data) internal {... */\n    tag_132:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":11658:11659  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":11644:11660  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":11644:11646  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":11644:11660  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":11640:11728  if (to == address(0)) {... */\n      tag_228\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":11714:11715  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":11683:11717  ERC1155InvalidReceiver(address(0)) */\n      mload(0x40)\n      0x57f447ce00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_229\n      swap2\n      swap1\n      tag_82\n      jump\t// in\n    tag_229:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":11640:11728  if (to == address(0)) {... */\n    tag_228:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":11737:11798  _updateWithAcceptanceCheck(address(0), to, ids, values, data) */\n      tag_230\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":11772:11773  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":11776:11778  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":11780:11783  ids */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":11785:11791  values */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":11793:11797  data */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":11737:11763  _updateWithAcceptanceCheck */\n      tag_231\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":11737:11798  _updateWithAcceptanceCheck(address(0), to, ids, values, data) */\n      jump\t// in\n    tag_230:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":11523:11805  function _mintBatch(address to, uint256[] memory ids, uint256[] memory values, bytes memory data) internal {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_135:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9015:9460  function _safeBatchTransferFrom(... */\n    tag_142:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9222:9223  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9208:9224  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9208:9210  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9208:9224  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9204:9292  if (to == address(0)) {... */\n      tag_234\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9278:9279  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9247:9281  ERC1155InvalidReceiver(address(0)) */\n      mload(0x40)\n      0x57f447ce00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_235\n      swap2\n      swap1\n      tag_82\n      jump\t// in\n    tag_235:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9204:9292  if (to == address(0)) {... */\n    tag_234:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9321:9322  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9305:9323  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9305:9309  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9305:9323  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9301:9389  if (from == address(0)) {... */\n      tag_236\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9375:9376  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9346:9378  ERC1155InvalidSender(address(0)) */\n      mload(0x40)\n      0x01a8351400000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_237\n      swap2\n      swap1\n      tag_82\n      jump\t// in\n    tag_237:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9301:9389  if (from == address(0)) {... */\n    tag_236:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9398:9453  _updateWithAcceptanceCheck(from, to, ids, values, data) */\n      tag_238\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9425:9429  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9431:9433  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9435:9438  ids */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9440:9446  values */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9448:9452  data */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9398:9424  _updateWithAcceptanceCheck */\n      tag_231\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9398:9453  _updateWithAcceptanceCheck(from, to, ids, values, data) */\n      jump\t// in\n    tag_238:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":9015:9460  function _safeBatchTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":4603:4800  function unsafeMemoryAccess(address[] memory arr, uint256 pos) internal pure returns (address res) {... */\n    tag_156:\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":4689:4700  address res */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":4777:4781  0x20 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":4772:4775  pos */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":4768:4782  mul(pos, 0x20) */\n      mul\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":4761:4765  0x20 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":4756:4759  arr */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":4752:4766  add(arr, 0x20) */\n      add\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":4748:4783  add(add(arr, 0x20), mul(pos, 0x20)) */\n      add\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":4742:4784  mload(add(add(arr, 0x20), mul(pos, 0x20))) */\n      mload\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":4735:4784  res := mload(add(add(arr, 0x20), mul(pos, 0x20))) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":4603:4800  function unsafeMemoryAccess(address[] memory arr, uint256 pos) internal pure returns (address res) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":4204:4401  function unsafeMemoryAccess(uint256[] memory arr, uint256 pos) internal pure returns (uint256 res) {... */\n    tag_158:\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":4290:4301  uint256 res */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":4378:4382  0x20 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":4373:4376  pos */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":4369:4383  mul(pos, 0x20) */\n      mul\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":4362:4366  0x20 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":4357:4360  arr */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":4353:4367  add(arr, 0x20) */\n      add\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":4349:4384  add(add(arr, 0x20), mul(pos, 0x20)) */\n      add\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":4343:4385  mload(add(add(arr, 0x20), mul(pos, 0x20))) */\n      mload\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":4336:4385  res := mload(add(add(arr, 0x20), mul(pos, 0x20))) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Arrays.sol\":4204:4401  function unsafeMemoryAccess(uint256[] memory arr, uint256 pos) internal pure returns (uint256 res) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12784:13049  function _burnBatch(address from, uint256[] memory ids, uint256[] memory values) internal {... */\n    tag_175:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12904:12905  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12888:12906  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12888:12892  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12888:12906  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12884:12972  if (from == address(0)) {... */\n      tag_242\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12958:12959  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12929:12961  ERC1155InvalidSender(address(0)) */\n      mload(0x40)\n      0x01a8351400000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_243\n      swap2\n      swap1\n      tag_82\n      jump\t// in\n    tag_243:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12884:12972  if (from == address(0)) {... */\n    tag_242:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12981:13042  _updateWithAcceptanceCheck(from, address(0), ids, values, \"\") */\n      tag_244\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13008:13012  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13022:13023  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13026:13029  ids */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13031:13037  values */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12981:13042  _updateWithAcceptanceCheck(from, address(0), ids, values, \"\") */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12981:13007  _updateWithAcceptanceCheck */\n      tag_231\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12981:13042  _updateWithAcceptanceCheck(from, address(0), ids, values, \"\") */\n      jump\t// in\n    tag_244:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12784:13049  function _burnBatch(address from, uint256[] memory ids, uint256[] memory values) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_178:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      tag_246\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1876  _msgSender */\n      tag_135\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      jump\t// in\n    tag_246:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      tag_247\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1860  owner */\n      tag_80\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      jump\t// in\n    tag_247:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_248\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      tag_249\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1938  _msgSender */\n      tag_135\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      jump\t// in\n    tag_249:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_250\n      swap2\n      swap1\n      tag_82\n      jump\t// in\n    tag_250:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n    tag_248:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_187:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n      0x03\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10746:11092  function _mint(address to, uint256 id, uint256 value, bytes memory data) internal {... */\n    tag_194:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10856:10857  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10842:10858  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10842:10844  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10842:10858  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10838:10926  if (to == address(0)) {... */\n      tag_253\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10912:10913  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10881:10915  ERC1155InvalidReceiver(address(0)) */\n      mload(0x40)\n      0x57f447ce00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_254\n      swap2\n      swap1\n      tag_82\n      jump\t// in\n    tag_254:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10838:10926  if (to == address(0)) {... */\n    tag_253:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10936:10956  uint256[] memory ids */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10958:10981  uint256[] memory values */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10985:11014  _asSingletonArrays(id, value) */\n      tag_255\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":11004:11006  id */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":11008:11013  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10985:11003  _asSingletonArrays */\n      tag_256\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10985:11014  _asSingletonArrays(id, value) */\n      jump\t// in\n    tag_255:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10935:11014  (uint256[] memory ids, uint256[] memory values) = _asSingletonArrays(id, value) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":11024:11085  _updateWithAcceptanceCheck(address(0), to, ids, values, data) */\n      tag_257\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":11059:11060  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":11063:11065  to */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":11067:11070  ids */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":11072:11078  values */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":11080:11084  data */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":11024:11050  _updateWithAcceptanceCheck */\n      tag_231\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":11024:11085  _updateWithAcceptanceCheck(address(0), to, ids, values, data) */\n      jump\t// in\n    tag_257:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10828:11092  {... */\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":10746:11092  function _mint(address to, uint256 id, uint256 value, bytes memory data) internal {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13268:13583  function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {... */\n    tag_199:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13395:13396  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13375:13397  operator == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13375:13383  operator */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13375:13397  operator == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13371:13465  if (operator == address(0)) {... */\n      tag_259\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13451:13452  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13420:13454  ERC1155InvalidOperator(address(0)) */\n      mload(0x40)\n      0xced3e10000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_260\n      swap2\n      swap1\n      tag_82\n      jump\t// in\n    tag_260:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13371:13465  if (operator == address(0)) {... */\n    tag_259:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13512:13520  approved */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13474:13492  _operatorApprovals */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13474:13499  _operatorApprovals[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13493:13498  owner */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13474:13499  _operatorApprovals[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13474:13509  _operatorApprovals[owner][operator] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13500:13508  operator */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13474:13509  _operatorApprovals[owner][operator] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13474:13520  _operatorApprovals[owner][operator] = approved */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13557:13565  operator */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13535:13576  ApprovalForAll(owner, operator, approved) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13550:13555  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13535:13576  ApprovalForAll(owner, operator, approved) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13567:13575  approved */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13535:13576  ApprovalForAll(owner, operator, approved) */\n      mload(0x40)\n      tag_261\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_261:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13268:13583  function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8151:8614  function _safeTransferFrom(address from, address to, uint256 id, uint256 value, bytes memory data) internal {... */\n    tag_209:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8287:8288  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8273:8289  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8273:8275  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8273:8289  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8269:8357  if (to == address(0)) {... */\n      tag_263\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8343:8344  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8312:8346  ERC1155InvalidReceiver(address(0)) */\n      mload(0x40)\n      0x57f447ce00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_264\n      swap2\n      swap1\n      tag_82\n      jump\t// in\n    tag_264:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8269:8357  if (to == address(0)) {... */\n    tag_263:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8386:8387  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8370:8388  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8370:8374  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8370:8388  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8366:8454  if (from == address(0)) {... */\n      tag_265\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8440:8441  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8411:8443  ERC1155InvalidSender(address(0)) */\n      mload(0x40)\n      0x01a8351400000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_266\n      swap2\n      swap1\n      tag_82\n      jump\t// in\n    tag_266:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8366:8454  if (from == address(0)) {... */\n    tag_265:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8464:8484  uint256[] memory ids */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8486:8509  uint256[] memory values */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8513:8542  _asSingletonArrays(id, value) */\n      tag_267\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8532:8534  id */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8536:8541  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8513:8531  _asSingletonArrays */\n      tag_256\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8513:8542  _asSingletonArrays(id, value) */\n      jump\t// in\n    tag_267:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8463:8542  (uint256[] memory ids, uint256[] memory values) = _asSingletonArrays(id, value) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8552:8607  _updateWithAcceptanceCheck(from, to, ids, values, data) */\n      tag_268\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8579:8583  from */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8585:8587  to */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8589:8592  ids */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8594:8600  values */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8602:8606  data */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8552:8578  _updateWithAcceptanceCheck */\n      tag_231\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8552:8607  _updateWithAcceptanceCheck(from, to, ids, values, data) */\n      jump\t// in\n    tag_268:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8259:8614  {... */\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":8151:8614  function _safeTransferFrom(address from, address to, uint256 id, uint256 value, bytes memory data) internal {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12099:12428  function _burn(address from, uint256 id, uint256 value) internal {... */\n    tag_225:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12194:12195  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12178:12196  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12178:12182  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12178:12196  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12174:12262  if (from == address(0)) {... */\n      tag_270\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12248:12249  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12219:12251  ERC1155InvalidSender(address(0)) */\n      mload(0x40)\n      0x01a8351400000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_271\n      swap2\n      swap1\n      tag_82\n      jump\t// in\n    tag_271:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12174:12262  if (from == address(0)) {... */\n    tag_270:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12272:12292  uint256[] memory ids */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12294:12317  uint256[] memory values */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12321:12350  _asSingletonArrays(id, value) */\n      tag_272\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12340:12342  id */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12344:12349  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12321:12339  _asSingletonArrays */\n      tag_256\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12321:12350  _asSingletonArrays(id, value) */\n      jump\t// in\n    tag_272:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12271:12350  (uint256[] memory ids, uint256[] memory values) = _asSingletonArrays(id, value) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12360:12421  _updateWithAcceptanceCheck(from, address(0), ids, values, \"\") */\n      tag_273\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12387:12391  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12401:12402  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12405:12408  ids */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12410:12416  values */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12360:12421  _updateWithAcceptanceCheck(from, address(0), ids, values, \"\") */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12360:12386  _updateWithAcceptanceCheck */\n      tag_231\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12360:12421  _updateWithAcceptanceCheck(from, address(0), ids, values, \"\") */\n      jump\t// in\n    tag_273:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12164:12428  {... */\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":12099:12428  function _burn(address from, uint256 id, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7004:7694  function _updateWithAcceptanceCheck(... */\n    tag_231:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7205:7235  _update(from, to, ids, values) */\n      tag_275\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7213:7217  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7219:7221  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7223:7226  ids */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7228:7234  values */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7205:7212  _update */\n      tag_276\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7205:7235  _update(from, to, ids, values) */\n      jump\t// in\n    tag_275:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7263:7264  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7249:7265  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7249:7251  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7249:7265  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7245:7688  if (to != address(0)) {... */\n      tag_277\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7281:7297  address operator */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7300:7312  _msgSender() */\n      tag_278\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7300:7310  _msgSender */\n      tag_135\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7300:7312  _msgSender() */\n      jump\t// in\n    tag_278:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7281:7312  address operator = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7344:7345  1 */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7330:7333  ids */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7330:7340  ids.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7330:7345  ids.length == 1 */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7326:7678  if (ids.length == 1) {... */\n      tag_279\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7365:7375  uint256 id */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7378:7403  ids.unsafeMemoryAccess(0) */\n      tag_280\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7401:7402  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7378:7381  ids */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7378:7400  ids.unsafeMemoryAccess */\n      tag_158\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7378:7403  ids.unsafeMemoryAccess(0) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_280:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7365:7403  uint256 id = ids.unsafeMemoryAccess(0) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7421:7434  uint256 value */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7437:7465  values.unsafeMemoryAccess(0) */\n      tag_281\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7463:7464  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7437:7443  values */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7437:7462  values.unsafeMemoryAccess */\n      tag_158\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7437:7465  values.unsafeMemoryAccess(0) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_281:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7421:7465  uint256 value = values.unsafeMemoryAccess(0) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7483:7550  _doSafeTransferAcceptanceCheck(operator, from, to, id, value, data) */\n      tag_282\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7514:7522  operator */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7524:7528  from */\n      dup10\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7530:7532  to */\n      dup10\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7534:7536  id */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7538:7543  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7545:7549  data */\n      dup10\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7483:7513  _doSafeTransferAcceptanceCheck */\n      tag_283\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7483:7550  _doSafeTransferAcceptanceCheck(operator, from, to, id, value, data) */\n      jump\t// in\n    tag_282:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7347:7565  {... */\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7326:7678  if (ids.length == 1) {... */\n      jump(tag_284)\n    tag_279:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7589:7663  _doSafeBatchTransferAcceptanceCheck(operator, from, to, ids, values, data) */\n      tag_285\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7625:7633  operator */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7635:7639  from */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7641:7643  to */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7645:7648  ids */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7650:7656  values */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7658:7662  data */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7589:7624  _doSafeBatchTransferAcceptanceCheck */\n      tag_286\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7589:7663  _doSafeBatchTransferAcceptanceCheck(operator, from, to, ids, values, data) */\n      jump\t// in\n    tag_285:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7326:7678  if (ids.length == 1) {... */\n    tag_284:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7267:7688  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7245:7688  if (to != address(0)) {... */\n    tag_277:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":7004:7694  function _updateWithAcceptanceCheck(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16080:16929  function _asSingletonArrays(... */\n    tag_256:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16188:16211  uint256[] memory array1 */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16213:16236  uint256[] memory array2 */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16374:16378  0x40 */\n      0x40\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16368:16379  mload(0x40) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16358:16379  array1 := mload(0x40) */\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16444:16445  1 */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16436:16442  array1 */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16429:16446  mstore(array1, 1) */\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16582:16590  element1 */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16575:16579  0x20 */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16567:16573  array1 */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16563:16580  add(array1, 0x20) */\n      add\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16556:16591  mstore(add(array1, 0x20), element1) */\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16704:16708  0x40 */\n      0x40\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16696:16702  array1 */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16692:16709  add(array1, 0x40) */\n      add\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16682:16709  array2 := add(array1, 0x40) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16737:16738  1 */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16729:16735  array2 */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16722:16739  mstore(array2, 1) */\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16778:16786  element2 */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16771:16775  0x20 */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16763:16769  array2 */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16759:16776  add(array2, 0x20) */\n      add\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16752:16787  mstore(add(array2, 0x20), element2) */\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16907:16911  0x40 */\n      0x40\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16899:16905  array2 */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16895:16912  add(array2, 0x40) */\n      add\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16889:16893  0x40 */\n      0x40\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16882:16913  mstore(0x40, add(array2, 0x40)) */\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":16080:16929  function _asSingletonArrays(... */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/SomTokens/SomTokens.sol\":2073:2273  function _update (... */\n    tag_276:\n        /* \"contracts/SomTokens/SomTokens.sol\":2232:2268  super._update(from, to, ids, values) */\n      tag_289\n        /* \"contracts/SomTokens/SomTokens.sol\":2246:2250  from */\n      dup5\n        /* \"contracts/SomTokens/SomTokens.sol\":2252:2254  to */\n      dup5\n        /* \"contracts/SomTokens/SomTokens.sol\":2256:2259  ids */\n      dup5\n        /* \"contracts/SomTokens/SomTokens.sol\":2261:2267  values */\n      dup5\n        /* \"contracts/SomTokens/SomTokens.sol\":2232:2245  super._update */\n      tag_290\n        /* \"contracts/SomTokens/SomTokens.sol\":2232:2268  super._update(from, to, ids, values) */\n      jump\t// in\n    tag_289:\n        /* \"contracts/SomTokens/SomTokens.sol\":2073:2273  function _update (... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13761:14735  function _doSafeTransferAcceptanceCheck(... */\n    tag_283:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13984:13985  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13967:13969  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13967:13981  to.code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13967:13985  to.code.length > 0 */\n      gt\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13963:14729  if (to.code.length > 0) {... */\n      iszero\n      tag_292\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14022:14024  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14005:14043  IERC1155Receiver(to).onERC1155Received */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xf23a6e61\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14044:14052  operator */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14054:14058  from */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14060:14062  id */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14064:14069  value */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14071:14075  data */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14005:14076  IERC1155Receiver(to).onERC1155Received(operator, from, id, value, data) */\n      mload(0x40)\n      dup7\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_293\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_294\n      jump\t// in\n    tag_293:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_295\n      jumpi\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_296\n      swap2\n      swap1\n      tag_297\n      jump\t// in\n    tag_296:\n      0x01\n    tag_295:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14001:14719  try IERC1155Receiver(to).onERC1155Received(operator, from, id, value, data) returns (bytes4 response) {... */\n      tag_298\n      jumpi\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_303\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_302)\n    tag_303:\n      0x60\n      swap2\n      pop\n    tag_302:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14377:14378  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14360:14366  reason */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14360:14373  reason.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14360:14378  reason.length == 0 */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14356:14705  if (reason.length == 0) {... */\n      tag_304\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14487:14489  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14464:14490  ERC1155InvalidReceiver(to) */\n      mload(0x40)\n      0x57f447ce00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_305\n      swap2\n      swap1\n      tag_82\n      jump\t// in\n    tag_305:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14356:14705  if (reason.length == 0) {... */\n    tag_304:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14657:14663  reason */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14651:14664  mload(reason) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14642:14648  reason */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14638:14640  32 */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14634:14649  add(32, reason) */\n      add\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14627:14665  revert(add(32, reason), mload(reason)) */\n      revert\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14001:14719  try IERC1155Receiver(to).onERC1155Received(operator, from, id, value, data) returns (bytes4 response) {... */\n    tag_298:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14137:14180  IERC1155Receiver.onERC1155Received.selector */\n      shl(0xe0, 0xf23a6e61)\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14125:14180  response != IERC1155Receiver.onERC1155Received.selector */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14125:14133  response */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14125:14180  response != IERC1155Receiver.onERC1155Received.selector */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14121:14295  if (response != IERC1155Receiver.onERC1155Received.selector) {... */\n      tag_308\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14273:14275  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14250:14276  ERC1155InvalidReceiver(to) */\n      mload(0x40)\n      0x57f447ce00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_309\n      swap2\n      swap1\n      tag_82\n      jump\t// in\n    tag_309:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14121:14295  if (response != IERC1155Receiver.onERC1155Received.selector) {... */\n    tag_308:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14077:14309  returns (bytes4 response) {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13963:14729  if (to.code.length > 0) {... */\n    tag_292:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":13761:14735  function _doSafeTransferAcceptanceCheck(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14923:15964  function _doSafeBatchTransferAcceptanceCheck(... */\n    tag_286:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15171:15172  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15154:15156  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15154:15168  to.code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15154:15172  to.code.length > 0 */\n      gt\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15150:15958  if (to.code.length > 0) {... */\n      iszero\n      tag_311\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15209:15211  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15192:15235  IERC1155Receiver(to).onERC1155BatchReceived */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xbc197c81\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15236:15244  operator */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15246:15250  from */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15252:15255  ids */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15257:15263  values */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15265:15269  data */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15192:15270  IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, values, data) */\n      mload(0x40)\n      dup7\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_312\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_313\n      jump\t// in\n    tag_312:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_314\n      jumpi\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_315\n      swap2\n      swap1\n      tag_297\n      jump\t// in\n    tag_315:\n      0x01\n    tag_314:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15188:15948  try IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, values, data) returns (... */\n      tag_316\n      jumpi\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_321\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_320)\n    tag_321:\n      0x60\n      swap2\n      pop\n    tag_320:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15606:15607  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15589:15595  reason */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15589:15602  reason.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15589:15607  reason.length == 0 */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15585:15934  if (reason.length == 0) {... */\n      tag_322\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15716:15718  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15693:15719  ERC1155InvalidReceiver(to) */\n      mload(0x40)\n      0x57f447ce00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_323\n      swap2\n      swap1\n      tag_82\n      jump\t// in\n    tag_323:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15585:15934  if (reason.length == 0) {... */\n    tag_322:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15886:15892  reason */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15880:15893  mload(reason) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15871:15877  reason */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15867:15869  32 */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15863:15878  add(32, reason) */\n      add\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15856:15894  revert(add(32, reason), mload(reason)) */\n      revert\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15188:15948  try IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, values, data) returns (... */\n    tag_316:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15361:15409  IERC1155Receiver.onERC1155BatchReceived.selector */\n      shl(0xe0, 0xbc197c81)\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15349:15409  response != IERC1155Receiver.onERC1155BatchReceived.selector */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15349:15357  response */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15349:15409  response != IERC1155Receiver.onERC1155BatchReceived.selector */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15345:15524  if (response != IERC1155Receiver.onERC1155BatchReceived.selector) {... */\n      tag_326\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15502:15504  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15479:15505  ERC1155InvalidReceiver(to) */\n      mload(0x40)\n      0x57f447ce00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_327\n      swap2\n      swap1\n      tag_82\n      jump\t// in\n    tag_327:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15345:15524  if (response != IERC1155Receiver.onERC1155BatchReceived.selector) {... */\n    tag_326:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15271:15538  returns (... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":15150:15958  if (to.code.length > 0) {... */\n    tag_311:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":14923:15964  function _doSafeBatchTransferAcceptanceCheck(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":1483:3001  function _update(... */\n    tag_290:\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":1647:1683  super._update(from, to, ids, values) */\n      tag_329\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":1661:1665  from */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":1667:1669  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":1671:1674  ids */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":1676:1682  values */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":1647:1660  super._update */\n      tag_330\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":1647:1683  super._update(from, to, ids, values) */\n      jump\t// in\n    tag_329:\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":1714:1715  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":1698:1716  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":1698:1702  from */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":1698:1716  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":1694:2227  if (from == address(0)) {... */\n      tag_331\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":1732:1754  uint256 totalMintValue */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":1777:1786  uint256 i */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":1772:2065  for (uint256 i = 0; i < ids.length; ++i) {... */\n    tag_332:\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":1796:1799  ids */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":1796:1806  ids.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":1792:1793  i */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":1792:1806  i < ids.length */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":1772:2065  for (uint256 i = 0; i < ids.length; ++i) {... */\n      iszero\n      tag_333\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":1831:1844  uint256 value */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":1847:1853  values */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":1854:1855  i */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":1847:1856  values[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_335\n      jumpi\n      tag_336\n      tag_161\n      jump\t// in\n    tag_336:\n    tag_335:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":1831:1856  uint256 value = values[i] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":2004:2009  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":1980:1992  _totalSupply */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":1980:2000  _totalSupply[ids[i]] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":1993:1996  ids */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":1997:1998  i */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":1993:1999  ids[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_337\n      jumpi\n      tag_338\n      tag_161\n      jump\t// in\n    tag_338:\n    tag_337:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":1980:2000  _totalSupply[ids[i]] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":1980:2009  _totalSupply[ids[i]] += value */\n      dup3\n      dup3\n      sload\n      tag_339\n      swap2\n      swap1\n      tag_340\n      jump\t// in\n    tag_339:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":2045:2050  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":2027:2050  totalMintValue += value */\n      dup4\n      tag_341\n      swap2\n      swap1\n      tag_340\n      jump\t// in\n    tag_341:\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":1813:2065  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":1808:1811  ++i */\n      dup1\n      tag_342\n      swap1\n      tag_163\n      jump\t// in\n    tag_342:\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":1772:2065  for (uint256 i = 0; i < ids.length; ++i) {... */\n      jump(tag_332)\n    tag_333:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":2202:2216  totalMintValue */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":2183:2198  _totalSupplyAll */\n      0x05\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":2183:2216  _totalSupplyAll += totalMintValue */\n      dup3\n      dup3\n      sload\n      tag_343\n      swap2\n      swap1\n      tag_340\n      jump\t// in\n    tag_343:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":1718:2227  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":1694:2227  if (from == address(0)) {... */\n    tag_331:\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":2255:2256  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":2241:2257  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":2241:2243  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":2241:2257  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":2237:2995  if (to == address(0)) {... */\n      tag_344\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":2273:2295  uint256 totalBurnValue */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":2318:2327  uint256 i */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":2313:2772  for (uint256 i = 0; i < ids.length; ++i) {... */\n    tag_345:\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":2337:2340  ids */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":2337:2347  ids.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":2333:2334  i */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":2333:2347  i < ids.length */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":2313:2772  for (uint256 i = 0; i < ids.length; ++i) {... */\n      iszero\n      tag_346\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":2372:2385  uint256 value */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":2388:2394  values */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":2395:2396  i */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":2388:2397  values[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_348\n      jumpi\n      tag_349\n      tag_161\n      jump\t// in\n    tag_349:\n    tag_348:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":2372:2397  uint256 value = values[i] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":2578:2583  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":2554:2566  _totalSupply */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":2554:2574  _totalSupply[ids[i]] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":2567:2570  ids */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":2571:2572  i */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":2567:2573  ids[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_350\n      jumpi\n      tag_351\n      tag_161\n      jump\t// in\n    tag_351:\n    tag_350:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":2554:2574  _totalSupply[ids[i]] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":2554:2583  _totalSupply[ids[i]] -= value */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":2734:2739  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":2716:2739  totalBurnValue += value */\n      dup4\n      add\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":2354:2772  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":2349:2352  ++i */\n      dup1\n      tag_352\n      swap1\n      tag_163\n      jump\t// in\n    tag_352:\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":2313:2772  for (uint256 i = 0; i < ids.length; ++i) {... */\n      jump(tag_345)\n    tag_346:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":2956:2970  totalBurnValue */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":2937:2952  _totalSupplyAll */\n      0x05\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":2937:2970  _totalSupplyAll -= totalBurnValue */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":2259:2995  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":2237:2995  if (to == address(0)) {... */\n    tag_344:\n        /* \"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":1483:3001  function _update(... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5144:6425  function _update(address from, address to, uint256[] memory ids, uint256[] memory values) internal virtual {... */\n    tag_330:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5279:5285  values */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5279:5292  values.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5265:5268  ids */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5265:5275  ids.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5265:5292  ids.length != values.length */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5261:5378  if (ids.length != values.length) {... */\n      tag_354\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5341:5344  ids */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5341:5351  ids.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5353:5359  values */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5353:5366  values.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5315:5367  ERC1155InvalidArrayLength(ids.length, values.length) */\n      mload(0x40)\n      0x5b05999100000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_355\n      swap3\n      swap2\n      swap1\n      tag_146\n      jump\t// in\n    tag_355:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5261:5378  if (ids.length != values.length) {... */\n    tag_354:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5388:5404  address operator */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5407:5419  _msgSender() */\n      tag_356\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5407:5417  _msgSender */\n      tag_135\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5407:5419  _msgSender() */\n      jump\t// in\n    tag_356:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5388:5419  address operator = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5435:5444  uint256 i */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5430:6121  for (uint256 i = 0; i < ids.length; ++i) {... */\n    tag_357:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5454:5457  ids */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5454:5464  ids.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5450:5451  i */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5450:5464  i < ids.length */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5430:6121  for (uint256 i = 0; i < ids.length; ++i) {... */\n      iszero\n      tag_358\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5485:5495  uint256 id */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5498:5523  ids.unsafeMemoryAccess(i) */\n      tag_360\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5521:5522  i */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5498:5501  ids */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5498:5520  ids.unsafeMemoryAccess */\n      tag_158\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5498:5523  ids.unsafeMemoryAccess(i) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_360:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5485:5523  uint256 id = ids.unsafeMemoryAccess(i) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5537:5550  uint256 value */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5553:5581  values.unsafeMemoryAccess(i) */\n      tag_361\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5579:5580  i */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5553:5559  values */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5553:5578  values.unsafeMemoryAccess */\n      tag_158\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5553:5581  values.unsafeMemoryAccess(i) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_361:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5537:5581  uint256 value = values.unsafeMemoryAccess(i) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5616:5617  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5600:5618  from != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5600:5604  from */\n      dup9\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5600:5618  from != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5596:6016  if (from != address(0)) {... */\n      tag_362\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5638:5657  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5660:5669  _balances */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5660:5673  _balances[id] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5670:5672  id */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5660:5673  _balances[id] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5660:5679  _balances[id][from] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5674:5678  from */\n      dup11\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5660:5679  _balances[id][from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5638:5679  uint256 fromBalance = _balances[id][from] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5715:5720  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5701:5712  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5701:5720  fromBalance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5697:5826  if (fromBalance < value) {... */\n      iszero\n      tag_363\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5778:5782  from */\n      dup9\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5784:5795  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5797:5802  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5804:5806  id */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5751:5807  ERC1155InsufficientBalance(from, fromBalance, value, id) */\n      mload(0x40)\n      0x03dee4c500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_364\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_365\n      jump\t// in\n    tag_364:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5697:5826  if (fromBalance < value) {... */\n    tag_363:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5978:5983  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5964:5975  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5964:5983  fromBalance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5942:5951  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5942:5955  _balances[id] */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5952:5954  id */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5942:5955  _balances[id] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5942:5961  _balances[id][from] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5956:5960  from */\n      dup12\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5942:5961  _balances[id][from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5942:5983  _balances[id][from] = fromBalance - value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5620:6016  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5596:6016  if (from != address(0)) {... */\n    tag_362:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6048:6049  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6034:6050  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6034:6036  to */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6034:6050  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6030:6111  if (to != address(0)) {... */\n      tag_366\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6091:6096  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6070:6079  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6070:6083  _balances[id] */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6080:6082  id */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6070:6083  _balances[id] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6070:6087  _balances[id][to] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6084:6086  to */\n      dup10\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6070:6087  _balances[id][to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6070:6096  _balances[id][to] += value */\n      dup3\n      dup3\n      sload\n      tag_367\n      swap2\n      swap1\n      tag_340\n      jump\t// in\n    tag_367:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6030:6111  if (to != address(0)) {... */\n    tag_366:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5471:6121  {... */\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5466:5469  ++i */\n      dup1\n      tag_368\n      swap1\n      tag_163\n      jump\t// in\n    tag_368:\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5430:6121  for (uint256 i = 0; i < ids.length; ++i) {... */\n      jump(tag_357)\n    tag_358:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6149:6150  1 */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6135:6138  ids */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6135:6145  ids.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6135:6150  ids.length == 1 */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6131:6419  if (ids.length == 1) {... */\n      tag_369\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6166:6176  uint256 id */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6179:6204  ids.unsafeMemoryAccess(0) */\n      tag_370\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6202:6203  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6179:6182  ids */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6179:6201  ids.unsafeMemoryAccess */\n      tag_158\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6179:6204  ids.unsafeMemoryAccess(0) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_370:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6166:6204  uint256 id = ids.unsafeMemoryAccess(0) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6218:6231  uint256 value */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6234:6262  values.unsafeMemoryAccess(0) */\n      tag_371\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6260:6261  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6234:6240  values */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6234:6259  values.unsafeMemoryAccess */\n      tag_158\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6234:6262  values.unsafeMemoryAccess(0) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_371:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6218:6262  uint256 value = values.unsafeMemoryAccess(0) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6312:6314  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6281:6326  TransferSingle(operator, from, to, id, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6306:6310  from */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6281:6326  TransferSingle(operator, from, to, id, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6296:6304  operator */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6281:6326  TransferSingle(operator, from, to, id, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6316:6318  id */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6320:6325  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6281:6326  TransferSingle(operator, from, to, id, value) */\n      mload(0x40)\n      tag_372\n      swap3\n      swap2\n      swap1\n      tag_146\n      jump\t// in\n    tag_372:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6152:6337  {... */\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6131:6419  if (ids.length == 1) {... */\n      jump(tag_373)\n    tag_369:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6392:6394  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6362:6408  TransferBatch(operator, from, to, ids, values) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6386:6390  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6362:6408  TransferBatch(operator, from, to, ids, values) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6376:6384  operator */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6362:6408  TransferBatch(operator, from, to, ids, values) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6396:6399  ids */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6401:6407  values */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6362:6408  TransferBatch(operator, from, to, ids, values) */\n      mload(0x40)\n      tag_374\n      swap3\n      swap2\n      swap1\n      tag_375\n      jump\t// in\n    tag_374:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":6131:6419  if (ids.length == 1) {... */\n    tag_373:\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5251:6425  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":5144:6425  function _update(address from, address to, uint256[] memory ids, uint256[] memory values) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:82   */\n    tag_376:\n        /* \"#utility.yul\":40:46   */\n      0x00\n        /* \"#utility.yul\":73:75   */\n      0x40\n        /* \"#utility.yul\":67:76   */\n      mload\n        /* \"#utility.yul\":57:76   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:82   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_377:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":211:328   */\n    tag_378:\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      dup1\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":334:460   */\n    tag_379:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":411:453   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":404:409   */\n      dup3\n        /* \"#utility.yul\":400:454   */\n      and\n        /* \"#utility.yul\":389:454   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:460   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":466:562   */\n    tag_380:\n        /* \"#utility.yul\":503:510   */\n      0x00\n        /* \"#utility.yul\":532:556   */\n      tag_440\n        /* \"#utility.yul\":550:555   */\n      dup3\n        /* \"#utility.yul\":532:556   */\n      tag_379\n      jump\t// in\n    tag_440:\n        /* \"#utility.yul\":521:556   */\n      swap1\n      pop\n        /* \"#utility.yul\":466:562   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":568:690   */\n    tag_381:\n        /* \"#utility.yul\":641:665   */\n      tag_442\n        /* \"#utility.yul\":659:664   */\n      dup2\n        /* \"#utility.yul\":641:665   */\n      tag_380\n      jump\t// in\n    tag_442:\n        /* \"#utility.yul\":634:639   */\n      dup2\n        /* \"#utility.yul\":631:666   */\n      eq\n        /* \"#utility.yul\":621:684   */\n      tag_443\n      jumpi\n        /* \"#utility.yul\":680:681   */\n      0x00\n        /* \"#utility.yul\":677:678   */\n      dup1\n        /* \"#utility.yul\":670:682   */\n      revert\n        /* \"#utility.yul\":621:684   */\n    tag_443:\n        /* \"#utility.yul\":568:690   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":696:835   */\n    tag_382:\n        /* \"#utility.yul\":742:747   */\n      0x00\n        /* \"#utility.yul\":780:786   */\n      dup2\n        /* \"#utility.yul\":767:787   */\n      calldataload\n        /* \"#utility.yul\":758:787   */\n      swap1\n      pop\n        /* \"#utility.yul\":796:829   */\n      tag_445\n        /* \"#utility.yul\":823:828   */\n      dup2\n        /* \"#utility.yul\":796:829   */\n      tag_381\n      jump\t// in\n    tag_445:\n        /* \"#utility.yul\":696:835   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":841:918   */\n    tag_383:\n        /* \"#utility.yul\":878:885   */\n      0x00\n        /* \"#utility.yul\":907:912   */\n      dup2\n        /* \"#utility.yul\":896:912   */\n      swap1\n      pop\n        /* \"#utility.yul\":841:918   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":924:1046   */\n    tag_384:\n        /* \"#utility.yul\":997:1021   */\n      tag_448\n        /* \"#utility.yul\":1015:1020   */\n      dup2\n        /* \"#utility.yul\":997:1021   */\n      tag_383\n      jump\t// in\n    tag_448:\n        /* \"#utility.yul\":990:995   */\n      dup2\n        /* \"#utility.yul\":987:1022   */\n      eq\n        /* \"#utility.yul\":977:1040   */\n      tag_449\n      jumpi\n        /* \"#utility.yul\":1036:1037   */\n      0x00\n        /* \"#utility.yul\":1033:1034   */\n      dup1\n        /* \"#utility.yul\":1026:1038   */\n      revert\n        /* \"#utility.yul\":977:1040   */\n    tag_449:\n        /* \"#utility.yul\":924:1046   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1052:1191   */\n    tag_385:\n        /* \"#utility.yul\":1098:1103   */\n      0x00\n        /* \"#utility.yul\":1136:1142   */\n      dup2\n        /* \"#utility.yul\":1123:1143   */\n      calldataload\n        /* \"#utility.yul\":1114:1143   */\n      swap1\n      pop\n        /* \"#utility.yul\":1152:1185   */\n      tag_451\n        /* \"#utility.yul\":1179:1184   */\n      dup2\n        /* \"#utility.yul\":1152:1185   */\n      tag_384\n      jump\t// in\n    tag_451:\n        /* \"#utility.yul\":1052:1191   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1197:1671   */\n    tag_28:\n        /* \"#utility.yul\":1265:1271   */\n      0x00\n        /* \"#utility.yul\":1273:1279   */\n      dup1\n        /* \"#utility.yul\":1322:1324   */\n      0x40\n        /* \"#utility.yul\":1310:1319   */\n      dup4\n        /* \"#utility.yul\":1301:1308   */\n      dup6\n        /* \"#utility.yul\":1297:1320   */\n      sub\n        /* \"#utility.yul\":1293:1325   */\n      slt\n        /* \"#utility.yul\":1290:1409   */\n      iszero\n      tag_453\n      jumpi\n        /* \"#utility.yul\":1328:1407   */\n      tag_454\n      tag_377\n      jump\t// in\n    tag_454:\n        /* \"#utility.yul\":1290:1409   */\n    tag_453:\n        /* \"#utility.yul\":1448:1449   */\n      0x00\n        /* \"#utility.yul\":1473:1526   */\n      tag_455\n        /* \"#utility.yul\":1518:1525   */\n      dup6\n        /* \"#utility.yul\":1509:1515   */\n      dup3\n        /* \"#utility.yul\":1498:1507   */\n      dup7\n        /* \"#utility.yul\":1494:1516   */\n      add\n        /* \"#utility.yul\":1473:1526   */\n      tag_382\n      jump\t// in\n    tag_455:\n        /* \"#utility.yul\":1463:1526   */\n      swap3\n      pop\n        /* \"#utility.yul\":1419:1536   */\n      pop\n        /* \"#utility.yul\":1575:1577   */\n      0x20\n        /* \"#utility.yul\":1601:1654   */\n      tag_456\n        /* \"#utility.yul\":1646:1653   */\n      dup6\n        /* \"#utility.yul\":1637:1643   */\n      dup3\n        /* \"#utility.yul\":1626:1635   */\n      dup7\n        /* \"#utility.yul\":1622:1644   */\n      add\n        /* \"#utility.yul\":1601:1654   */\n      tag_385\n      jump\t// in\n    tag_456:\n        /* \"#utility.yul\":1591:1654   */\n      swap2\n      pop\n        /* \"#utility.yul\":1546:1664   */\n      pop\n        /* \"#utility.yul\":1197:1671   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1677:1795   */\n    tag_386:\n        /* \"#utility.yul\":1764:1788   */\n      tag_458\n        /* \"#utility.yul\":1782:1787   */\n      dup2\n        /* \"#utility.yul\":1764:1788   */\n      tag_383\n      jump\t// in\n    tag_458:\n        /* \"#utility.yul\":1759:1762   */\n      dup3\n        /* \"#utility.yul\":1752:1789   */\n      mstore\n        /* \"#utility.yul\":1677:1795   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1801:2023   */\n    tag_31:\n        /* \"#utility.yul\":1894:1898   */\n      0x00\n        /* \"#utility.yul\":1932:1934   */\n      0x20\n        /* \"#utility.yul\":1921:1930   */\n      dup3\n        /* \"#utility.yul\":1917:1935   */\n      add\n        /* \"#utility.yul\":1909:1935   */\n      swap1\n      pop\n        /* \"#utility.yul\":1945:2016   */\n      tag_460\n        /* \"#utility.yul\":2013:2014   */\n      0x00\n        /* \"#utility.yul\":2002:2011   */\n      dup4\n        /* \"#utility.yul\":1998:2015   */\n      add\n        /* \"#utility.yul\":1989:1995   */\n      dup5\n        /* \"#utility.yul\":1945:2016   */\n      tag_386\n      jump\t// in\n    tag_460:\n        /* \"#utility.yul\":1801:2023   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2029:2178   */\n    tag_387:\n        /* \"#utility.yul\":2065:2072   */\n      0x00\n        /* \"#utility.yul\":2105:2171   */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":2098:2103   */\n      dup3\n        /* \"#utility.yul\":2094:2172   */\n      and\n        /* \"#utility.yul\":2083:2172   */\n      swap1\n      pop\n        /* \"#utility.yul\":2029:2178   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2184:2304   */\n    tag_388:\n        /* \"#utility.yul\":2256:2279   */\n      tag_463\n        /* \"#utility.yul\":2273:2278   */\n      dup2\n        /* \"#utility.yul\":2256:2279   */\n      tag_387\n      jump\t// in\n    tag_463:\n        /* \"#utility.yul\":2249:2254   */\n      dup2\n        /* \"#utility.yul\":2246:2280   */\n      eq\n        /* \"#utility.yul\":2236:2298   */\n      tag_464\n      jumpi\n        /* \"#utility.yul\":2294:2295   */\n      0x00\n        /* \"#utility.yul\":2291:2292   */\n      dup1\n        /* \"#utility.yul\":2284:2296   */\n      revert\n        /* \"#utility.yul\":2236:2298   */\n    tag_464:\n        /* \"#utility.yul\":2184:2304   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2310:2447   */\n    tag_389:\n        /* \"#utility.yul\":2355:2360   */\n      0x00\n        /* \"#utility.yul\":2393:2399   */\n      dup2\n        /* \"#utility.yul\":2380:2400   */\n      calldataload\n        /* \"#utility.yul\":2371:2400   */\n      swap1\n      pop\n        /* \"#utility.yul\":2409:2441   */\n      tag_466\n        /* \"#utility.yul\":2435:2440   */\n      dup2\n        /* \"#utility.yul\":2409:2441   */\n      tag_388\n      jump\t// in\n    tag_466:\n        /* \"#utility.yul\":2310:2447   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2453:2780   */\n    tag_34:\n        /* \"#utility.yul\":2511:2517   */\n      0x00\n        /* \"#utility.yul\":2560:2562   */\n      0x20\n        /* \"#utility.yul\":2548:2557   */\n      dup3\n        /* \"#utility.yul\":2539:2546   */\n      dup5\n        /* \"#utility.yul\":2535:2558   */\n      sub\n        /* \"#utility.yul\":2531:2563   */\n      slt\n        /* \"#utility.yul\":2528:2647   */\n      iszero\n      tag_468\n      jumpi\n        /* \"#utility.yul\":2566:2645   */\n      tag_469\n      tag_377\n      jump\t// in\n    tag_469:\n        /* \"#utility.yul\":2528:2647   */\n    tag_468:\n        /* \"#utility.yul\":2686:2687   */\n      0x00\n        /* \"#utility.yul\":2711:2763   */\n      tag_470\n        /* \"#utility.yul\":2755:2762   */\n      dup5\n        /* \"#utility.yul\":2746:2752   */\n      dup3\n        /* \"#utility.yul\":2735:2744   */\n      dup6\n        /* \"#utility.yul\":2731:2753   */\n      add\n        /* \"#utility.yul\":2711:2763   */\n      tag_389\n      jump\t// in\n    tag_470:\n        /* \"#utility.yul\":2701:2763   */\n      swap2\n      pop\n        /* \"#utility.yul\":2657:2773   */\n      pop\n        /* \"#utility.yul\":2453:2780   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2786:2876   */\n    tag_390:\n        /* \"#utility.yul\":2820:2827   */\n      0x00\n        /* \"#utility.yul\":2863:2868   */\n      dup2\n        /* \"#utility.yul\":2856:2869   */\n      iszero\n        /* \"#utility.yul\":2849:2870   */\n      iszero\n        /* \"#utility.yul\":2838:2870   */\n      swap1\n      pop\n        /* \"#utility.yul\":2786:2876   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2882:2991   */\n    tag_391:\n        /* \"#utility.yul\":2963:2984   */\n      tag_473\n        /* \"#utility.yul\":2978:2983   */\n      dup2\n        /* \"#utility.yul\":2963:2984   */\n      tag_390\n      jump\t// in\n    tag_473:\n        /* \"#utility.yul\":2958:2961   */\n      dup3\n        /* \"#utility.yul\":2951:2985   */\n      mstore\n        /* \"#utility.yul\":2882:2991   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2997:3207   */\n    tag_37:\n        /* \"#utility.yul\":3084:3088   */\n      0x00\n        /* \"#utility.yul\":3122:3124   */\n      0x20\n        /* \"#utility.yul\":3111:3120   */\n      dup3\n        /* \"#utility.yul\":3107:3125   */\n      add\n        /* \"#utility.yul\":3099:3125   */\n      swap1\n      pop\n        /* \"#utility.yul\":3135:3200   */\n      tag_475\n        /* \"#utility.yul\":3197:3198   */\n      0x00\n        /* \"#utility.yul\":3186:3195   */\n      dup4\n        /* \"#utility.yul\":3182:3199   */\n      add\n        /* \"#utility.yul\":3173:3179   */\n      dup5\n        /* \"#utility.yul\":3135:3200   */\n      tag_391\n      jump\t// in\n    tag_475:\n        /* \"#utility.yul\":2997:3207   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3213:3542   */\n    tag_40:\n        /* \"#utility.yul\":3272:3278   */\n      0x00\n        /* \"#utility.yul\":3321:3323   */\n      0x20\n        /* \"#utility.yul\":3309:3318   */\n      dup3\n        /* \"#utility.yul\":3300:3307   */\n      dup5\n        /* \"#utility.yul\":3296:3319   */\n      sub\n        /* \"#utility.yul\":3292:3324   */\n      slt\n        /* \"#utility.yul\":3289:3408   */\n      iszero\n      tag_477\n      jumpi\n        /* \"#utility.yul\":3327:3406   */\n      tag_478\n      tag_377\n      jump\t// in\n    tag_478:\n        /* \"#utility.yul\":3289:3408   */\n    tag_477:\n        /* \"#utility.yul\":3447:3448   */\n      0x00\n        /* \"#utility.yul\":3472:3525   */\n      tag_479\n        /* \"#utility.yul\":3517:3524   */\n      dup5\n        /* \"#utility.yul\":3508:3514   */\n      dup3\n        /* \"#utility.yul\":3497:3506   */\n      dup6\n        /* \"#utility.yul\":3493:3515   */\n      add\n        /* \"#utility.yul\":3472:3525   */\n      tag_385\n      jump\t// in\n    tag_479:\n        /* \"#utility.yul\":3462:3525   */\n      swap2\n      pop\n        /* \"#utility.yul\":3418:3535   */\n      pop\n        /* \"#utility.yul\":3213:3542   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3548:3647   */\n    tag_392:\n        /* \"#utility.yul\":3600:3606   */\n      0x00\n        /* \"#utility.yul\":3634:3639   */\n      dup2\n        /* \"#utility.yul\":3628:3640   */\n      mload\n        /* \"#utility.yul\":3618:3640   */\n      swap1\n      pop\n        /* \"#utility.yul\":3548:3647   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3653:3822   */\n    tag_393:\n        /* \"#utility.yul\":3737:3748   */\n      0x00\n        /* \"#utility.yul\":3771:3777   */\n      dup3\n        /* \"#utility.yul\":3766:3769   */\n      dup3\n        /* \"#utility.yul\":3759:3778   */\n      mstore\n        /* \"#utility.yul\":3811:3815   */\n      0x20\n        /* \"#utility.yul\":3806:3809   */\n      dup3\n        /* \"#utility.yul\":3802:3816   */\n      add\n        /* \"#utility.yul\":3787:3816   */\n      swap1\n      pop\n        /* \"#utility.yul\":3653:3822   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3828:4074   */\n    tag_394:\n        /* \"#utility.yul\":3909:3910   */\n      0x00\n        /* \"#utility.yul\":3919:4032   */\n    tag_483:\n        /* \"#utility.yul\":3933:3939   */\n      dup4\n        /* \"#utility.yul\":3930:3931   */\n      dup2\n        /* \"#utility.yul\":3927:3940   */\n      lt\n        /* \"#utility.yul\":3919:4032   */\n      iszero\n      tag_485\n      jumpi\n        /* \"#utility.yul\":4018:4019   */\n      dup1\n        /* \"#utility.yul\":4013:4016   */\n      dup3\n        /* \"#utility.yul\":4009:4020   */\n      add\n        /* \"#utility.yul\":4003:4021   */\n      mload\n        /* \"#utility.yul\":3999:4000   */\n      dup2\n        /* \"#utility.yul\":3994:3997   */\n      dup5\n        /* \"#utility.yul\":3990:4001   */\n      add\n        /* \"#utility.yul\":3983:4022   */\n      mstore\n        /* \"#utility.yul\":3955:3957   */\n      0x20\n        /* \"#utility.yul\":3952:3953   */\n      dup2\n        /* \"#utility.yul\":3948:3958   */\n      add\n        /* \"#utility.yul\":3943:3958   */\n      swap1\n      pop\n        /* \"#utility.yul\":3919:4032   */\n      jump(tag_483)\n    tag_485:\n        /* \"#utility.yul\":4066:4067   */\n      0x00\n        /* \"#utility.yul\":4057:4063   */\n      dup5\n        /* \"#utility.yul\":4052:4055   */\n      dup5\n        /* \"#utility.yul\":4048:4064   */\n      add\n        /* \"#utility.yul\":4041:4068   */\n      mstore\n        /* \"#utility.yul\":3890:4074   */\n      pop\n        /* \"#utility.yul\":3828:4074   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4080:4182   */\n    tag_395:\n        /* \"#utility.yul\":4121:4127   */\n      0x00\n        /* \"#utility.yul\":4172:4174   */\n      0x1f\n        /* \"#utility.yul\":4168:4175   */\n      not\n        /* \"#utility.yul\":4163:4165   */\n      0x1f\n        /* \"#utility.yul\":4156:4161   */\n      dup4\n        /* \"#utility.yul\":4152:4166   */\n      add\n        /* \"#utility.yul\":4148:4176   */\n      and\n        /* \"#utility.yul\":4138:4176   */\n      swap1\n      pop\n        /* \"#utility.yul\":4080:4182   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4188:4565   */\n    tag_396:\n        /* \"#utility.yul\":4276:4279   */\n      0x00\n        /* \"#utility.yul\":4304:4343   */\n      tag_488\n        /* \"#utility.yul\":4337:4342   */\n      dup3\n        /* \"#utility.yul\":4304:4343   */\n      tag_392\n      jump\t// in\n    tag_488:\n        /* \"#utility.yul\":4359:4430   */\n      tag_489\n        /* \"#utility.yul\":4423:4429   */\n      dup2\n        /* \"#utility.yul\":4418:4421   */\n      dup6\n        /* \"#utility.yul\":4359:4430   */\n      tag_393\n      jump\t// in\n    tag_489:\n        /* \"#utility.yul\":4352:4430   */\n      swap4\n      pop\n        /* \"#utility.yul\":4439:4504   */\n      tag_490\n        /* \"#utility.yul\":4497:4503   */\n      dup2\n        /* \"#utility.yul\":4492:4495   */\n      dup6\n        /* \"#utility.yul\":4485:4489   */\n      0x20\n        /* \"#utility.yul\":4478:4483   */\n      dup7\n        /* \"#utility.yul\":4474:4490   */\n      add\n        /* \"#utility.yul\":4439:4504   */\n      tag_394\n      jump\t// in\n    tag_490:\n        /* \"#utility.yul\":4529:4558   */\n      tag_491\n        /* \"#utility.yul\":4551:4557   */\n      dup2\n        /* \"#utility.yul\":4529:4558   */\n      tag_395\n      jump\t// in\n    tag_491:\n        /* \"#utility.yul\":4524:4527   */\n      dup5\n        /* \"#utility.yul\":4520:4559   */\n      add\n        /* \"#utility.yul\":4513:4559   */\n      swap2\n      pop\n        /* \"#utility.yul\":4280:4565   */\n      pop\n        /* \"#utility.yul\":4188:4565   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4571:4884   */\n    tag_43:\n        /* \"#utility.yul\":4684:4688   */\n      0x00\n        /* \"#utility.yul\":4722:4724   */\n      0x20\n        /* \"#utility.yul\":4711:4720   */\n      dup3\n        /* \"#utility.yul\":4707:4725   */\n      add\n        /* \"#utility.yul\":4699:4725   */\n      swap1\n      pop\n        /* \"#utility.yul\":4771:4780   */\n      dup2\n        /* \"#utility.yul\":4765:4769   */\n      dup2\n        /* \"#utility.yul\":4761:4781   */\n      sub\n        /* \"#utility.yul\":4757:4758   */\n      0x00\n        /* \"#utility.yul\":4746:4755   */\n      dup4\n        /* \"#utility.yul\":4742:4759   */\n      add\n        /* \"#utility.yul\":4735:4782   */\n      mstore\n        /* \"#utility.yul\":4799:4877   */\n      tag_493\n        /* \"#utility.yul\":4872:4876   */\n      dup2\n        /* \"#utility.yul\":4863:4869   */\n      dup5\n        /* \"#utility.yul\":4799:4877   */\n      tag_396\n      jump\t// in\n    tag_493:\n        /* \"#utility.yul\":4791:4877   */\n      swap1\n      pop\n        /* \"#utility.yul\":4571:4884   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4890:5007   */\n    tag_397:\n        /* \"#utility.yul\":4999:5000   */\n      0x00\n        /* \"#utility.yul\":4996:4997   */\n      dup1\n        /* \"#utility.yul\":4989:5001   */\n      revert\n        /* \"#utility.yul\":5013:5193   */\n    tag_149:\n        /* \"#utility.yul\":5061:5138   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":5058:5059   */\n      0x00\n        /* \"#utility.yul\":5051:5139   */\n      mstore\n        /* \"#utility.yul\":5158:5162   */\n      0x41\n        /* \"#utility.yul\":5155:5156   */\n      0x04\n        /* \"#utility.yul\":5148:5163   */\n      mstore\n        /* \"#utility.yul\":5182:5186   */\n      0x24\n        /* \"#utility.yul\":5179:5180   */\n      0x00\n        /* \"#utility.yul\":5172:5187   */\n      revert\n        /* \"#utility.yul\":5199:5480   */\n    tag_398:\n        /* \"#utility.yul\":5282:5309   */\n      tag_497\n        /* \"#utility.yul\":5304:5308   */\n      dup3\n        /* \"#utility.yul\":5282:5309   */\n      tag_395\n      jump\t// in\n    tag_497:\n        /* \"#utility.yul\":5274:5280   */\n      dup2\n        /* \"#utility.yul\":5270:5310   */\n      add\n        /* \"#utility.yul\":5412:5418   */\n      dup2\n        /* \"#utility.yul\":5400:5410   */\n      dup2\n        /* \"#utility.yul\":5397:5419   */\n      lt\n        /* \"#utility.yul\":5376:5394   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":5364:5374   */\n      dup3\n        /* \"#utility.yul\":5361:5395   */\n      gt\n        /* \"#utility.yul\":5358:5420   */\n      or\n        /* \"#utility.yul\":5355:5443   */\n      iszero\n      tag_498\n      jumpi\n        /* \"#utility.yul\":5423:5441   */\n      tag_499\n      tag_149\n      jump\t// in\n    tag_499:\n        /* \"#utility.yul\":5355:5443   */\n    tag_498:\n        /* \"#utility.yul\":5463:5473   */\n      dup1\n        /* \"#utility.yul\":5459:5461   */\n      0x40\n        /* \"#utility.yul\":5452:5474   */\n      mstore\n        /* \"#utility.yul\":5242:5480   */\n      pop\n        /* \"#utility.yul\":5199:5480   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5486:5615   */\n    tag_399:\n        /* \"#utility.yul\":5520:5526   */\n      0x00\n        /* \"#utility.yul\":5547:5567   */\n      tag_501\n      tag_376\n      jump\t// in\n    tag_501:\n        /* \"#utility.yul\":5537:5567   */\n      swap1\n      pop\n        /* \"#utility.yul\":5576:5609   */\n      tag_502\n        /* \"#utility.yul\":5604:5608   */\n      dup3\n        /* \"#utility.yul\":5596:5602   */\n      dup3\n        /* \"#utility.yul\":5576:5609   */\n      tag_398\n      jump\t// in\n    tag_502:\n        /* \"#utility.yul\":5486:5615   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5621:5932   */\n    tag_400:\n        /* \"#utility.yul\":5698:5702   */\n      0x00\n        /* \"#utility.yul\":5788:5806   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":5780:5786   */\n      dup3\n        /* \"#utility.yul\":5777:5807   */\n      gt\n        /* \"#utility.yul\":5774:5830   */\n      iszero\n      tag_504\n      jumpi\n        /* \"#utility.yul\":5810:5828   */\n      tag_505\n      tag_149\n      jump\t// in\n    tag_505:\n        /* \"#utility.yul\":5774:5830   */\n    tag_504:\n        /* \"#utility.yul\":5860:5864   */\n      0x20\n        /* \"#utility.yul\":5852:5858   */\n      dup3\n        /* \"#utility.yul\":5848:5865   */\n      mul\n        /* \"#utility.yul\":5840:5865   */\n      swap1\n      pop\n        /* \"#utility.yul\":5920:5924   */\n      0x20\n        /* \"#utility.yul\":5914:5918   */\n      dup2\n        /* \"#utility.yul\":5910:5925   */\n      add\n        /* \"#utility.yul\":5902:5925   */\n      swap1\n      pop\n        /* \"#utility.yul\":5621:5932   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5938:6055   */\n    tag_401:\n        /* \"#utility.yul\":6047:6048   */\n      0x00\n        /* \"#utility.yul\":6044:6045   */\n      dup1\n        /* \"#utility.yul\":6037:6049   */\n      revert\n        /* \"#utility.yul\":6078:6788   */\n    tag_402:\n        /* \"#utility.yul\":6174:6179   */\n      0x00\n        /* \"#utility.yul\":6199:6280   */\n      tag_508\n        /* \"#utility.yul\":6215:6279   */\n      tag_509\n        /* \"#utility.yul\":6272:6278   */\n      dup5\n        /* \"#utility.yul\":6215:6279   */\n      tag_400\n      jump\t// in\n    tag_509:\n        /* \"#utility.yul\":6199:6280   */\n      tag_399\n      jump\t// in\n    tag_508:\n        /* \"#utility.yul\":6190:6280   */\n      swap1\n      pop\n        /* \"#utility.yul\":6300:6305   */\n      dup1\n        /* \"#utility.yul\":6329:6335   */\n      dup4\n        /* \"#utility.yul\":6322:6327   */\n      dup3\n        /* \"#utility.yul\":6315:6336   */\n      mstore\n        /* \"#utility.yul\":6363:6367   */\n      0x20\n        /* \"#utility.yul\":6356:6361   */\n      dup3\n        /* \"#utility.yul\":6352:6368   */\n      add\n        /* \"#utility.yul\":6345:6368   */\n      swap1\n      pop\n        /* \"#utility.yul\":6416:6420   */\n      0x20\n        /* \"#utility.yul\":6408:6414   */\n      dup5\n        /* \"#utility.yul\":6404:6421   */\n      mul\n        /* \"#utility.yul\":6396:6402   */\n      dup4\n        /* \"#utility.yul\":6392:6422   */\n      add\n        /* \"#utility.yul\":6445:6448   */\n      dup6\n        /* \"#utility.yul\":6437:6443   */\n      dup2\n        /* \"#utility.yul\":6434:6449   */\n      gt\n        /* \"#utility.yul\":6431:6553   */\n      iszero\n      tag_510\n      jumpi\n        /* \"#utility.yul\":6464:6543   */\n      tag_511\n      tag_401\n      jump\t// in\n    tag_511:\n        /* \"#utility.yul\":6431:6553   */\n    tag_510:\n        /* \"#utility.yul\":6579:6585   */\n      dup4\n        /* \"#utility.yul\":6562:6782   */\n    tag_512:\n        /* \"#utility.yul\":6596:6602   */\n      dup2\n        /* \"#utility.yul\":6591:6594   */\n      dup2\n        /* \"#utility.yul\":6588:6603   */\n      lt\n        /* \"#utility.yul\":6562:6782   */\n      iszero\n      tag_514\n      jumpi\n        /* \"#utility.yul\":6671:6674   */\n      dup1\n        /* \"#utility.yul\":6700:6737   */\n      tag_515\n        /* \"#utility.yul\":6733:6736   */\n      dup9\n        /* \"#utility.yul\":6721:6731   */\n      dup3\n        /* \"#utility.yul\":6700:6737   */\n      tag_385\n      jump\t// in\n    tag_515:\n        /* \"#utility.yul\":6695:6698   */\n      dup5\n        /* \"#utility.yul\":6688:6738   */\n      mstore\n        /* \"#utility.yul\":6767:6771   */\n      0x20\n        /* \"#utility.yul\":6762:6765   */\n      dup5\n        /* \"#utility.yul\":6758:6772   */\n      add\n        /* \"#utility.yul\":6751:6772   */\n      swap4\n      pop\n        /* \"#utility.yul\":6638:6782   */\n      pop\n        /* \"#utility.yul\":6622:6626   */\n      0x20\n        /* \"#utility.yul\":6617:6620   */\n      dup2\n        /* \"#utility.yul\":6613:6627   */\n      add\n        /* \"#utility.yul\":6606:6627   */\n      swap1\n      pop\n        /* \"#utility.yul\":6562:6782   */\n      jump(tag_512)\n    tag_514:\n        /* \"#utility.yul\":6566:6587   */\n      pop\n        /* \"#utility.yul\":6180:6788   */\n      pop\n      pop\n        /* \"#utility.yul\":6078:6788   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6811:7181   */\n    tag_403:\n        /* \"#utility.yul\":6882:6887   */\n      0x00\n        /* \"#utility.yul\":6931:6934   */\n      dup3\n        /* \"#utility.yul\":6924:6928   */\n      0x1f\n        /* \"#utility.yul\":6916:6922   */\n      dup4\n        /* \"#utility.yul\":6912:6929   */\n      add\n        /* \"#utility.yul\":6908:6935   */\n      slt\n        /* \"#utility.yul\":6898:7020   */\n      tag_517\n      jumpi\n        /* \"#utility.yul\":6939:7018   */\n      tag_518\n      tag_397\n      jump\t// in\n    tag_518:\n        /* \"#utility.yul\":6898:7020   */\n    tag_517:\n        /* \"#utility.yul\":7056:7062   */\n      dup2\n        /* \"#utility.yul\":7043:7063   */\n      calldataload\n        /* \"#utility.yul\":7081:7175   */\n      tag_519\n        /* \"#utility.yul\":7171:7174   */\n      dup5\n        /* \"#utility.yul\":7163:7169   */\n      dup3\n        /* \"#utility.yul\":7156:7160   */\n      0x20\n        /* \"#utility.yul\":7148:7154   */\n      dup7\n        /* \"#utility.yul\":7144:7161   */\n      add\n        /* \"#utility.yul\":7081:7175   */\n      tag_402\n      jump\t// in\n    tag_519:\n        /* \"#utility.yul\":7072:7175   */\n      swap2\n      pop\n        /* \"#utility.yul\":6888:7181   */\n      pop\n        /* \"#utility.yul\":6811:7181   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7187:7304   */\n    tag_404:\n        /* \"#utility.yul\":7296:7297   */\n      0x00\n        /* \"#utility.yul\":7293:7294   */\n      dup1\n        /* \"#utility.yul\":7286:7298   */\n      revert\n        /* \"#utility.yul\":7310:7617   */\n    tag_405:\n        /* \"#utility.yul\":7371:7375   */\n      0x00\n        /* \"#utility.yul\":7461:7479   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":7453:7459   */\n      dup3\n        /* \"#utility.yul\":7450:7480   */\n      gt\n        /* \"#utility.yul\":7447:7503   */\n      iszero\n      tag_522\n      jumpi\n        /* \"#utility.yul\":7483:7501   */\n      tag_523\n      tag_149\n      jump\t// in\n    tag_523:\n        /* \"#utility.yul\":7447:7503   */\n    tag_522:\n        /* \"#utility.yul\":7521:7550   */\n      tag_524\n        /* \"#utility.yul\":7543:7549   */\n      dup3\n        /* \"#utility.yul\":7521:7550   */\n      tag_395\n      jump\t// in\n    tag_524:\n        /* \"#utility.yul\":7513:7550   */\n      swap1\n      pop\n        /* \"#utility.yul\":7605:7609   */\n      0x20\n        /* \"#utility.yul\":7599:7603   */\n      dup2\n        /* \"#utility.yul\":7595:7610   */\n      add\n        /* \"#utility.yul\":7587:7610   */\n      swap1\n      pop\n        /* \"#utility.yul\":7310:7617   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7623:7769   */\n    tag_406:\n        /* \"#utility.yul\":7720:7726   */\n      dup3\n        /* \"#utility.yul\":7715:7718   */\n      dup2\n        /* \"#utility.yul\":7710:7713   */\n      dup4\n        /* \"#utility.yul\":7697:7727   */\n      calldatacopy\n        /* \"#utility.yul\":7761:7762   */\n      0x00\n        /* \"#utility.yul\":7752:7758   */\n      dup4\n        /* \"#utility.yul\":7747:7750   */\n      dup4\n        /* \"#utility.yul\":7743:7759   */\n      add\n        /* \"#utility.yul\":7736:7763   */\n      mstore\n        /* \"#utility.yul\":7623:7769   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7775:8198   */\n    tag_407:\n        /* \"#utility.yul\":7852:7857   */\n      0x00\n        /* \"#utility.yul\":7877:7942   */\n      tag_527\n        /* \"#utility.yul\":7893:7941   */\n      tag_528\n        /* \"#utility.yul\":7934:7940   */\n      dup5\n        /* \"#utility.yul\":7893:7941   */\n      tag_405\n      jump\t// in\n    tag_528:\n        /* \"#utility.yul\":7877:7942   */\n      tag_399\n      jump\t// in\n    tag_527:\n        /* \"#utility.yul\":7868:7942   */\n      swap1\n      pop\n        /* \"#utility.yul\":7965:7971   */\n      dup3\n        /* \"#utility.yul\":7958:7963   */\n      dup2\n        /* \"#utility.yul\":7951:7972   */\n      mstore\n        /* \"#utility.yul\":8003:8007   */\n      0x20\n        /* \"#utility.yul\":7996:8001   */\n      dup2\n        /* \"#utility.yul\":7992:8008   */\n      add\n        /* \"#utility.yul\":8041:8044   */\n      dup5\n        /* \"#utility.yul\":8032:8038   */\n      dup5\n        /* \"#utility.yul\":8027:8030   */\n      dup5\n        /* \"#utility.yul\":8023:8039   */\n      add\n        /* \"#utility.yul\":8020:8045   */\n      gt\n        /* \"#utility.yul\":8017:8129   */\n      iszero\n      tag_529\n      jumpi\n        /* \"#utility.yul\":8048:8127   */\n      tag_530\n      tag_404\n      jump\t// in\n    tag_530:\n        /* \"#utility.yul\":8017:8129   */\n    tag_529:\n        /* \"#utility.yul\":8138:8192   */\n      tag_531\n        /* \"#utility.yul\":8185:8191   */\n      dup5\n        /* \"#utility.yul\":8180:8183   */\n      dup3\n        /* \"#utility.yul\":8175:8178   */\n      dup6\n        /* \"#utility.yul\":8138:8192   */\n      tag_406\n      jump\t// in\n    tag_531:\n        /* \"#utility.yul\":7858:8198   */\n      pop\n        /* \"#utility.yul\":7775:8198   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8217:8555   */\n    tag_408:\n        /* \"#utility.yul\":8272:8277   */\n      0x00\n        /* \"#utility.yul\":8321:8324   */\n      dup3\n        /* \"#utility.yul\":8314:8318   */\n      0x1f\n        /* \"#utility.yul\":8306:8312   */\n      dup4\n        /* \"#utility.yul\":8302:8319   */\n      add\n        /* \"#utility.yul\":8298:8325   */\n      slt\n        /* \"#utility.yul\":8288:8410   */\n      tag_533\n      jumpi\n        /* \"#utility.yul\":8329:8408   */\n      tag_534\n      tag_397\n      jump\t// in\n    tag_534:\n        /* \"#utility.yul\":8288:8410   */\n    tag_533:\n        /* \"#utility.yul\":8446:8452   */\n      dup2\n        /* \"#utility.yul\":8433:8453   */\n      calldataload\n        /* \"#utility.yul\":8471:8549   */\n      tag_535\n        /* \"#utility.yul\":8545:8548   */\n      dup5\n        /* \"#utility.yul\":8537:8543   */\n      dup3\n        /* \"#utility.yul\":8530:8534   */\n      0x20\n        /* \"#utility.yul\":8522:8528   */\n      dup7\n        /* \"#utility.yul\":8518:8535   */\n      add\n        /* \"#utility.yul\":8471:8549   */\n      tag_407\n      jump\t// in\n    tag_535:\n        /* \"#utility.yul\":8462:8549   */\n      swap2\n      pop\n        /* \"#utility.yul\":8278:8555   */\n      pop\n        /* \"#utility.yul\":8217:8555   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8561:9924   */\n    tag_49:\n        /* \"#utility.yul\":8706:8712   */\n      0x00\n        /* \"#utility.yul\":8714:8720   */\n      dup1\n        /* \"#utility.yul\":8722:8728   */\n      0x00\n        /* \"#utility.yul\":8730:8736   */\n      dup1\n        /* \"#utility.yul\":8779:8782   */\n      0x80\n        /* \"#utility.yul\":8767:8776   */\n      dup6\n        /* \"#utility.yul\":8758:8765   */\n      dup8\n        /* \"#utility.yul\":8754:8777   */\n      sub\n        /* \"#utility.yul\":8750:8783   */\n      slt\n        /* \"#utility.yul\":8747:8867   */\n      iszero\n      tag_537\n      jumpi\n        /* \"#utility.yul\":8786:8865   */\n      tag_538\n      tag_377\n      jump\t// in\n    tag_538:\n        /* \"#utility.yul\":8747:8867   */\n    tag_537:\n        /* \"#utility.yul\":8906:8907   */\n      0x00\n        /* \"#utility.yul\":8931:8984   */\n      tag_539\n        /* \"#utility.yul\":8976:8983   */\n      dup8\n        /* \"#utility.yul\":8967:8973   */\n      dup3\n        /* \"#utility.yul\":8956:8965   */\n      dup9\n        /* \"#utility.yul\":8952:8974   */\n      add\n        /* \"#utility.yul\":8931:8984   */\n      tag_382\n      jump\t// in\n    tag_539:\n        /* \"#utility.yul\":8921:8984   */\n      swap5\n      pop\n        /* \"#utility.yul\":8877:8994   */\n      pop\n        /* \"#utility.yul\":9061:9063   */\n      0x20\n        /* \"#utility.yul\":9050:9059   */\n      dup6\n        /* \"#utility.yul\":9046:9064   */\n      add\n        /* \"#utility.yul\":9033:9065   */\n      calldataload\n        /* \"#utility.yul\":9092:9110   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":9084:9090   */\n      dup2\n        /* \"#utility.yul\":9081:9111   */\n      gt\n        /* \"#utility.yul\":9078:9195   */\n      iszero\n      tag_540\n      jumpi\n        /* \"#utility.yul\":9114:9193   */\n      tag_541\n      tag_378\n      jump\t// in\n    tag_541:\n        /* \"#utility.yul\":9078:9195   */\n    tag_540:\n        /* \"#utility.yul\":9219:9297   */\n      tag_542\n        /* \"#utility.yul\":9289:9296   */\n      dup8\n        /* \"#utility.yul\":9280:9286   */\n      dup3\n        /* \"#utility.yul\":9269:9278   */\n      dup9\n        /* \"#utility.yul\":9265:9287   */\n      add\n        /* \"#utility.yul\":9219:9297   */\n      tag_403\n      jump\t// in\n    tag_542:\n        /* \"#utility.yul\":9209:9297   */\n      swap4\n      pop\n        /* \"#utility.yul\":9004:9307   */\n      pop\n        /* \"#utility.yul\":9374:9376   */\n      0x40\n        /* \"#utility.yul\":9363:9372   */\n      dup6\n        /* \"#utility.yul\":9359:9377   */\n      add\n        /* \"#utility.yul\":9346:9378   */\n      calldataload\n        /* \"#utility.yul\":9405:9423   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":9397:9403   */\n      dup2\n        /* \"#utility.yul\":9394:9424   */\n      gt\n        /* \"#utility.yul\":9391:9508   */\n      iszero\n      tag_543\n      jumpi\n        /* \"#utility.yul\":9427:9506   */\n      tag_544\n      tag_378\n      jump\t// in\n    tag_544:\n        /* \"#utility.yul\":9391:9508   */\n    tag_543:\n        /* \"#utility.yul\":9532:9610   */\n      tag_545\n        /* \"#utility.yul\":9602:9609   */\n      dup8\n        /* \"#utility.yul\":9593:9599   */\n      dup3\n        /* \"#utility.yul\":9582:9591   */\n      dup9\n        /* \"#utility.yul\":9578:9600   */\n      add\n        /* \"#utility.yul\":9532:9610   */\n      tag_403\n      jump\t// in\n    tag_545:\n        /* \"#utility.yul\":9522:9610   */\n      swap3\n      pop\n        /* \"#utility.yul\":9317:9620   */\n      pop\n        /* \"#utility.yul\":9687:9689   */\n      0x60\n        /* \"#utility.yul\":9676:9685   */\n      dup6\n        /* \"#utility.yul\":9672:9690   */\n      add\n        /* \"#utility.yul\":9659:9691   */\n      calldataload\n        /* \"#utility.yul\":9718:9736   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":9710:9716   */\n      dup2\n        /* \"#utility.yul\":9707:9737   */\n      gt\n        /* \"#utility.yul\":9704:9821   */\n      iszero\n      tag_546\n      jumpi\n        /* \"#utility.yul\":9740:9819   */\n      tag_547\n      tag_378\n      jump\t// in\n    tag_547:\n        /* \"#utility.yul\":9704:9821   */\n    tag_546:\n        /* \"#utility.yul\":9845:9907   */\n      tag_548\n        /* \"#utility.yul\":9899:9906   */\n      dup8\n        /* \"#utility.yul\":9890:9896   */\n      dup3\n        /* \"#utility.yul\":9879:9888   */\n      dup9\n        /* \"#utility.yul\":9875:9897   */\n      add\n        /* \"#utility.yul\":9845:9907   */\n      tag_408\n      jump\t// in\n    tag_548:\n        /* \"#utility.yul\":9835:9907   */\n      swap2\n      pop\n        /* \"#utility.yul\":9630:9917   */\n      pop\n        /* \"#utility.yul\":8561:9924   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9930:11439   */\n    tag_53:\n        /* \"#utility.yul\":10084:10090   */\n      0x00\n        /* \"#utility.yul\":10092:10098   */\n      dup1\n        /* \"#utility.yul\":10100:10106   */\n      0x00\n        /* \"#utility.yul\":10108:10114   */\n      dup1\n        /* \"#utility.yul\":10116:10122   */\n      0x00\n        /* \"#utility.yul\":10165:10168   */\n      0xa0\n        /* \"#utility.yul\":10153:10162   */\n      dup7\n        /* \"#utility.yul\":10144:10151   */\n      dup9\n        /* \"#utility.yul\":10140:10163   */\n      sub\n        /* \"#utility.yul\":10136:10169   */\n      slt\n        /* \"#utility.yul\":10133:10253   */\n      iszero\n      tag_550\n      jumpi\n        /* \"#utility.yul\":10172:10251   */\n      tag_551\n      tag_377\n      jump\t// in\n    tag_551:\n        /* \"#utility.yul\":10133:10253   */\n    tag_550:\n        /* \"#utility.yul\":10292:10293   */\n      0x00\n        /* \"#utility.yul\":10317:10370   */\n      tag_552\n        /* \"#utility.yul\":10362:10369   */\n      dup9\n        /* \"#utility.yul\":10353:10359   */\n      dup3\n        /* \"#utility.yul\":10342:10351   */\n      dup10\n        /* \"#utility.yul\":10338:10360   */\n      add\n        /* \"#utility.yul\":10317:10370   */\n      tag_382\n      jump\t// in\n    tag_552:\n        /* \"#utility.yul\":10307:10370   */\n      swap6\n      pop\n        /* \"#utility.yul\":10263:10380   */\n      pop\n        /* \"#utility.yul\":10419:10421   */\n      0x20\n        /* \"#utility.yul\":10445:10498   */\n      tag_553\n        /* \"#utility.yul\":10490:10497   */\n      dup9\n        /* \"#utility.yul\":10481:10487   */\n      dup3\n        /* \"#utility.yul\":10470:10479   */\n      dup10\n        /* \"#utility.yul\":10466:10488   */\n      add\n        /* \"#utility.yul\":10445:10498   */\n      tag_382\n      jump\t// in\n    tag_553:\n        /* \"#utility.yul\":10435:10498   */\n      swap5\n      pop\n        /* \"#utility.yul\":10390:10508   */\n      pop\n        /* \"#utility.yul\":10575:10577   */\n      0x40\n        /* \"#utility.yul\":10564:10573   */\n      dup7\n        /* \"#utility.yul\":10560:10578   */\n      add\n        /* \"#utility.yul\":10547:10579   */\n      calldataload\n        /* \"#utility.yul\":10606:10624   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":10598:10604   */\n      dup2\n        /* \"#utility.yul\":10595:10625   */\n      gt\n        /* \"#utility.yul\":10592:10709   */\n      iszero\n      tag_554\n      jumpi\n        /* \"#utility.yul\":10628:10707   */\n      tag_555\n      tag_378\n      jump\t// in\n    tag_555:\n        /* \"#utility.yul\":10592:10709   */\n    tag_554:\n        /* \"#utility.yul\":10733:10811   */\n      tag_556\n        /* \"#utility.yul\":10803:10810   */\n      dup9\n        /* \"#utility.yul\":10794:10800   */\n      dup3\n        /* \"#utility.yul\":10783:10792   */\n      dup10\n        /* \"#utility.yul\":10779:10801   */\n      add\n        /* \"#utility.yul\":10733:10811   */\n      tag_403\n      jump\t// in\n    tag_556:\n        /* \"#utility.yul\":10723:10811   */\n      swap4\n      pop\n        /* \"#utility.yul\":10518:10821   */\n      pop\n        /* \"#utility.yul\":10888:10890   */\n      0x60\n        /* \"#utility.yul\":10877:10886   */\n      dup7\n        /* \"#utility.yul\":10873:10891   */\n      add\n        /* \"#utility.yul\":10860:10892   */\n      calldataload\n        /* \"#utility.yul\":10919:10937   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":10911:10917   */\n      dup2\n        /* \"#utility.yul\":10908:10938   */\n      gt\n        /* \"#utility.yul\":10905:11022   */\n      iszero\n      tag_557\n      jumpi\n        /* \"#utility.yul\":10941:11020   */\n      tag_558\n      tag_378\n      jump\t// in\n    tag_558:\n        /* \"#utility.yul\":10905:11022   */\n    tag_557:\n        /* \"#utility.yul\":11046:11124   */\n      tag_559\n        /* \"#utility.yul\":11116:11123   */\n      dup9\n        /* \"#utility.yul\":11107:11113   */\n      dup3\n        /* \"#utility.yul\":11096:11105   */\n      dup10\n        /* \"#utility.yul\":11092:11114   */\n      add\n        /* \"#utility.yul\":11046:11124   */\n      tag_403\n      jump\t// in\n    tag_559:\n        /* \"#utility.yul\":11036:11124   */\n      swap3\n      pop\n        /* \"#utility.yul\":10831:11134   */\n      pop\n        /* \"#utility.yul\":11201:11204   */\n      0x80\n        /* \"#utility.yul\":11190:11199   */\n      dup7\n        /* \"#utility.yul\":11186:11205   */\n      add\n        /* \"#utility.yul\":11173:11206   */\n      calldataload\n        /* \"#utility.yul\":11233:11251   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":11225:11231   */\n      dup2\n        /* \"#utility.yul\":11222:11252   */\n      gt\n        /* \"#utility.yul\":11219:11336   */\n      iszero\n      tag_560\n      jumpi\n        /* \"#utility.yul\":11255:11334   */\n      tag_561\n      tag_378\n      jump\t// in\n    tag_561:\n        /* \"#utility.yul\":11219:11336   */\n    tag_560:\n        /* \"#utility.yul\":11360:11422   */\n      tag_562\n        /* \"#utility.yul\":11414:11421   */\n      dup9\n        /* \"#utility.yul\":11405:11411   */\n      dup3\n        /* \"#utility.yul\":11394:11403   */\n      dup10\n        /* \"#utility.yul\":11390:11412   */\n      add\n        /* \"#utility.yul\":11360:11422   */\n      tag_408\n      jump\t// in\n    tag_562:\n        /* \"#utility.yul\":11350:11422   */\n      swap2\n      pop\n        /* \"#utility.yul\":11144:11432   */\n      pop\n        /* \"#utility.yul\":9930:11439   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      swap1\n      swap4\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11445:11756   */\n    tag_409:\n        /* \"#utility.yul\":11522:11526   */\n      0x00\n        /* \"#utility.yul\":11612:11630   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":11604:11610   */\n      dup3\n        /* \"#utility.yul\":11601:11631   */\n      gt\n        /* \"#utility.yul\":11598:11654   */\n      iszero\n      tag_564\n      jumpi\n        /* \"#utility.yul\":11634:11652   */\n      tag_565\n      tag_149\n      jump\t// in\n    tag_565:\n        /* \"#utility.yul\":11598:11654   */\n    tag_564:\n        /* \"#utility.yul\":11684:11688   */\n      0x20\n        /* \"#utility.yul\":11676:11682   */\n      dup3\n        /* \"#utility.yul\":11672:11689   */\n      mul\n        /* \"#utility.yul\":11664:11689   */\n      swap1\n      pop\n        /* \"#utility.yul\":11744:11748   */\n      0x20\n        /* \"#utility.yul\":11738:11742   */\n      dup2\n        /* \"#utility.yul\":11734:11749   */\n      add\n        /* \"#utility.yul\":11726:11749   */\n      swap1\n      pop\n        /* \"#utility.yul\":11445:11756   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11779:12489   */\n    tag_410:\n        /* \"#utility.yul\":11875:11880   */\n      0x00\n        /* \"#utility.yul\":11900:11981   */\n      tag_567\n        /* \"#utility.yul\":11916:11980   */\n      tag_568\n        /* \"#utility.yul\":11973:11979   */\n      dup5\n        /* \"#utility.yul\":11916:11980   */\n      tag_409\n      jump\t// in\n    tag_568:\n        /* \"#utility.yul\":11900:11981   */\n      tag_399\n      jump\t// in\n    tag_567:\n        /* \"#utility.yul\":11891:11981   */\n      swap1\n      pop\n        /* \"#utility.yul\":12001:12006   */\n      dup1\n        /* \"#utility.yul\":12030:12036   */\n      dup4\n        /* \"#utility.yul\":12023:12028   */\n      dup3\n        /* \"#utility.yul\":12016:12037   */\n      mstore\n        /* \"#utility.yul\":12064:12068   */\n      0x20\n        /* \"#utility.yul\":12057:12062   */\n      dup3\n        /* \"#utility.yul\":12053:12069   */\n      add\n        /* \"#utility.yul\":12046:12069   */\n      swap1\n      pop\n        /* \"#utility.yul\":12117:12121   */\n      0x20\n        /* \"#utility.yul\":12109:12115   */\n      dup5\n        /* \"#utility.yul\":12105:12122   */\n      mul\n        /* \"#utility.yul\":12097:12103   */\n      dup4\n        /* \"#utility.yul\":12093:12123   */\n      add\n        /* \"#utility.yul\":12146:12149   */\n      dup6\n        /* \"#utility.yul\":12138:12144   */\n      dup2\n        /* \"#utility.yul\":12135:12150   */\n      gt\n        /* \"#utility.yul\":12132:12254   */\n      iszero\n      tag_569\n      jumpi\n        /* \"#utility.yul\":12165:12244   */\n      tag_570\n      tag_401\n      jump\t// in\n    tag_570:\n        /* \"#utility.yul\":12132:12254   */\n    tag_569:\n        /* \"#utility.yul\":12280:12286   */\n      dup4\n        /* \"#utility.yul\":12263:12483   */\n    tag_571:\n        /* \"#utility.yul\":12297:12303   */\n      dup2\n        /* \"#utility.yul\":12292:12295   */\n      dup2\n        /* \"#utility.yul\":12289:12304   */\n      lt\n        /* \"#utility.yul\":12263:12483   */\n      iszero\n      tag_573\n      jumpi\n        /* \"#utility.yul\":12372:12375   */\n      dup1\n        /* \"#utility.yul\":12401:12438   */\n      tag_574\n        /* \"#utility.yul\":12434:12437   */\n      dup9\n        /* \"#utility.yul\":12422:12432   */\n      dup3\n        /* \"#utility.yul\":12401:12438   */\n      tag_382\n      jump\t// in\n    tag_574:\n        /* \"#utility.yul\":12396:12399   */\n      dup5\n        /* \"#utility.yul\":12389:12439   */\n      mstore\n        /* \"#utility.yul\":12468:12472   */\n      0x20\n        /* \"#utility.yul\":12463:12466   */\n      dup5\n        /* \"#utility.yul\":12459:12473   */\n      add\n        /* \"#utility.yul\":12452:12473   */\n      swap4\n      pop\n        /* \"#utility.yul\":12339:12483   */\n      pop\n        /* \"#utility.yul\":12323:12327   */\n      0x20\n        /* \"#utility.yul\":12318:12321   */\n      dup2\n        /* \"#utility.yul\":12314:12328   */\n      add\n        /* \"#utility.yul\":12307:12328   */\n      swap1\n      pop\n        /* \"#utility.yul\":12263:12483   */\n      jump(tag_571)\n    tag_573:\n        /* \"#utility.yul\":12267:12288   */\n      pop\n        /* \"#utility.yul\":11881:12489   */\n      pop\n      pop\n        /* \"#utility.yul\":11779:12489   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12512:12882   */\n    tag_411:\n        /* \"#utility.yul\":12583:12588   */\n      0x00\n        /* \"#utility.yul\":12632:12635   */\n      dup3\n        /* \"#utility.yul\":12625:12629   */\n      0x1f\n        /* \"#utility.yul\":12617:12623   */\n      dup4\n        /* \"#utility.yul\":12613:12630   */\n      add\n        /* \"#utility.yul\":12609:12636   */\n      slt\n        /* \"#utility.yul\":12599:12721   */\n      tag_576\n      jumpi\n        /* \"#utility.yul\":12640:12719   */\n      tag_577\n      tag_397\n      jump\t// in\n    tag_577:\n        /* \"#utility.yul\":12599:12721   */\n    tag_576:\n        /* \"#utility.yul\":12757:12763   */\n      dup2\n        /* \"#utility.yul\":12744:12764   */\n      calldataload\n        /* \"#utility.yul\":12782:12876   */\n      tag_578\n        /* \"#utility.yul\":12872:12875   */\n      dup5\n        /* \"#utility.yul\":12864:12870   */\n      dup3\n        /* \"#utility.yul\":12857:12861   */\n      0x20\n        /* \"#utility.yul\":12849:12855   */\n      dup7\n        /* \"#utility.yul\":12845:12862   */\n      add\n        /* \"#utility.yul\":12782:12876   */\n      tag_410\n      jump\t// in\n    tag_578:\n        /* \"#utility.yul\":12773:12876   */\n      swap2\n      pop\n        /* \"#utility.yul\":12589:12882   */\n      pop\n        /* \"#utility.yul\":12512:12882   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12888:13782   */\n    tag_57:\n        /* \"#utility.yul\":13006:13012   */\n      0x00\n        /* \"#utility.yul\":13014:13020   */\n      dup1\n        /* \"#utility.yul\":13063:13065   */\n      0x40\n        /* \"#utility.yul\":13051:13060   */\n      dup4\n        /* \"#utility.yul\":13042:13049   */\n      dup6\n        /* \"#utility.yul\":13038:13061   */\n      sub\n        /* \"#utility.yul\":13034:13066   */\n      slt\n        /* \"#utility.yul\":13031:13150   */\n      iszero\n      tag_580\n      jumpi\n        /* \"#utility.yul\":13069:13148   */\n      tag_581\n      tag_377\n      jump\t// in\n    tag_581:\n        /* \"#utility.yul\":13031:13150   */\n    tag_580:\n        /* \"#utility.yul\":13217:13218   */\n      0x00\n        /* \"#utility.yul\":13206:13215   */\n      dup4\n        /* \"#utility.yul\":13202:13219   */\n      add\n        /* \"#utility.yul\":13189:13220   */\n      calldataload\n        /* \"#utility.yul\":13247:13265   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":13239:13245   */\n      dup2\n        /* \"#utility.yul\":13236:13266   */\n      gt\n        /* \"#utility.yul\":13233:13350   */\n      iszero\n      tag_582\n      jumpi\n        /* \"#utility.yul\":13269:13348   */\n      tag_583\n      tag_378\n      jump\t// in\n    tag_583:\n        /* \"#utility.yul\":13233:13350   */\n    tag_582:\n        /* \"#utility.yul\":13374:13452   */\n      tag_584\n        /* \"#utility.yul\":13444:13451   */\n      dup6\n        /* \"#utility.yul\":13435:13441   */\n      dup3\n        /* \"#utility.yul\":13424:13433   */\n      dup7\n        /* \"#utility.yul\":13420:13442   */\n      add\n        /* \"#utility.yul\":13374:13452   */\n      tag_411\n      jump\t// in\n    tag_584:\n        /* \"#utility.yul\":13364:13452   */\n      swap3\n      pop\n        /* \"#utility.yul\":13160:13462   */\n      pop\n        /* \"#utility.yul\":13529:13531   */\n      0x20\n        /* \"#utility.yul\":13518:13527   */\n      dup4\n        /* \"#utility.yul\":13514:13532   */\n      add\n        /* \"#utility.yul\":13501:13533   */\n      calldataload\n        /* \"#utility.yul\":13560:13578   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":13552:13558   */\n      dup2\n        /* \"#utility.yul\":13549:13579   */\n      gt\n        /* \"#utility.yul\":13546:13663   */\n      iszero\n      tag_585\n      jumpi\n        /* \"#utility.yul\":13582:13661   */\n      tag_586\n      tag_378\n      jump\t// in\n    tag_586:\n        /* \"#utility.yul\":13546:13663   */\n    tag_585:\n        /* \"#utility.yul\":13687:13765   */\n      tag_587\n        /* \"#utility.yul\":13757:13764   */\n      dup6\n        /* \"#utility.yul\":13748:13754   */\n      dup3\n        /* \"#utility.yul\":13737:13746   */\n      dup7\n        /* \"#utility.yul\":13733:13755   */\n      add\n        /* \"#utility.yul\":13687:13765   */\n      tag_403\n      jump\t// in\n    tag_587:\n        /* \"#utility.yul\":13677:13765   */\n      swap2\n      pop\n        /* \"#utility.yul\":13472:13775   */\n      pop\n        /* \"#utility.yul\":12888:13782   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13788:13902   */\n    tag_412:\n        /* \"#utility.yul\":13855:13861   */\n      0x00\n        /* \"#utility.yul\":13889:13894   */\n      dup2\n        /* \"#utility.yul\":13883:13895   */\n      mload\n        /* \"#utility.yul\":13873:13895   */\n      swap1\n      pop\n        /* \"#utility.yul\":13788:13902   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13908:14092   */\n    tag_413:\n        /* \"#utility.yul\":14007:14018   */\n      0x00\n        /* \"#utility.yul\":14041:14047   */\n      dup3\n        /* \"#utility.yul\":14036:14039   */\n      dup3\n        /* \"#utility.yul\":14029:14048   */\n      mstore\n        /* \"#utility.yul\":14081:14085   */\n      0x20\n        /* \"#utility.yul\":14076:14079   */\n      dup3\n        /* \"#utility.yul\":14072:14086   */\n      add\n        /* \"#utility.yul\":14057:14086   */\n      swap1\n      pop\n        /* \"#utility.yul\":13908:14092   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14098:14230   */\n    tag_414:\n        /* \"#utility.yul\":14165:14169   */\n      0x00\n        /* \"#utility.yul\":14188:14191   */\n      dup2\n        /* \"#utility.yul\":14180:14191   */\n      swap1\n      pop\n        /* \"#utility.yul\":14218:14222   */\n      0x20\n        /* \"#utility.yul\":14213:14216   */\n      dup3\n        /* \"#utility.yul\":14209:14223   */\n      add\n        /* \"#utility.yul\":14201:14223   */\n      swap1\n      pop\n        /* \"#utility.yul\":14098:14230   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14236:14344   */\n    tag_415:\n        /* \"#utility.yul\":14313:14337   */\n      tag_592\n        /* \"#utility.yul\":14331:14336   */\n      dup2\n        /* \"#utility.yul\":14313:14337   */\n      tag_383\n      jump\t// in\n    tag_592:\n        /* \"#utility.yul\":14308:14311   */\n      dup3\n        /* \"#utility.yul\":14301:14338   */\n      mstore\n        /* \"#utility.yul\":14236:14344   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14350:14529   */\n    tag_416:\n        /* \"#utility.yul\":14419:14429   */\n      0x00\n        /* \"#utility.yul\":14440:14486   */\n      tag_594\n        /* \"#utility.yul\":14482:14485   */\n      dup4\n        /* \"#utility.yul\":14474:14480   */\n      dup4\n        /* \"#utility.yul\":14440:14486   */\n      tag_415\n      jump\t// in\n    tag_594:\n        /* \"#utility.yul\":14518:14522   */\n      0x20\n        /* \"#utility.yul\":14513:14516   */\n      dup4\n        /* \"#utility.yul\":14509:14523   */\n      add\n        /* \"#utility.yul\":14495:14523   */\n      swap1\n      pop\n        /* \"#utility.yul\":14350:14529   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14535:14648   */\n    tag_417:\n        /* \"#utility.yul\":14605:14609   */\n      0x00\n        /* \"#utility.yul\":14637:14641   */\n      0x20\n        /* \"#utility.yul\":14632:14635   */\n      dup3\n        /* \"#utility.yul\":14628:14642   */\n      add\n        /* \"#utility.yul\":14620:14642   */\n      swap1\n      pop\n        /* \"#utility.yul\":14535:14648   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14684:15416   */\n    tag_418:\n        /* \"#utility.yul\":14803:14806   */\n      0x00\n        /* \"#utility.yul\":14832:14886   */\n      tag_597\n        /* \"#utility.yul\":14880:14885   */\n      dup3\n        /* \"#utility.yul\":14832:14886   */\n      tag_412\n      jump\t// in\n    tag_597:\n        /* \"#utility.yul\":14902:14988   */\n      tag_598\n        /* \"#utility.yul\":14981:14987   */\n      dup2\n        /* \"#utility.yul\":14976:14979   */\n      dup6\n        /* \"#utility.yul\":14902:14988   */\n      tag_413\n      jump\t// in\n    tag_598:\n        /* \"#utility.yul\":14895:14988   */\n      swap4\n      pop\n        /* \"#utility.yul\":15012:15068   */\n      tag_599\n        /* \"#utility.yul\":15062:15067   */\n      dup4\n        /* \"#utility.yul\":15012:15068   */\n      tag_414\n      jump\t// in\n    tag_599:\n        /* \"#utility.yul\":15091:15098   */\n      dup1\n        /* \"#utility.yul\":15122:15123   */\n      0x00\n        /* \"#utility.yul\":15107:15391   */\n    tag_600:\n        /* \"#utility.yul\":15132:15138   */\n      dup4\n        /* \"#utility.yul\":15129:15130   */\n      dup2\n        /* \"#utility.yul\":15126:15139   */\n      lt\n        /* \"#utility.yul\":15107:15391   */\n      iszero\n      tag_602\n      jumpi\n        /* \"#utility.yul\":15208:15214   */\n      dup2\n        /* \"#utility.yul\":15202:15215   */\n      mload\n        /* \"#utility.yul\":15235:15298   */\n      tag_603\n        /* \"#utility.yul\":15294:15297   */\n      dup9\n        /* \"#utility.yul\":15279:15292   */\n      dup3\n        /* \"#utility.yul\":15235:15298   */\n      tag_416\n      jump\t// in\n    tag_603:\n        /* \"#utility.yul\":15228:15298   */\n      swap8\n      pop\n        /* \"#utility.yul\":15321:15381   */\n      tag_604\n        /* \"#utility.yul\":15374:15380   */\n      dup4\n        /* \"#utility.yul\":15321:15381   */\n      tag_417\n      jump\t// in\n    tag_604:\n        /* \"#utility.yul\":15311:15381   */\n      swap3\n      pop\n        /* \"#utility.yul\":15167:15391   */\n      pop\n        /* \"#utility.yul\":15154:15155   */\n      0x01\n        /* \"#utility.yul\":15151:15152   */\n      dup2\n        /* \"#utility.yul\":15147:15156   */\n      add\n        /* \"#utility.yul\":15142:15156   */\n      swap1\n      pop\n        /* \"#utility.yul\":15107:15391   */\n      jump(tag_600)\n    tag_602:\n        /* \"#utility.yul\":15111:15125   */\n      pop\n        /* \"#utility.yul\":15407:15410   */\n      dup6\n        /* \"#utility.yul\":15400:15410   */\n      swap4\n      pop\n        /* \"#utility.yul\":14808:15416   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":14684:15416   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15422:15795   */\n    tag_60:\n        /* \"#utility.yul\":15565:15569   */\n      0x00\n        /* \"#utility.yul\":15603:15605   */\n      0x20\n        /* \"#utility.yul\":15592:15601   */\n      dup3\n        /* \"#utility.yul\":15588:15606   */\n      add\n        /* \"#utility.yul\":15580:15606   */\n      swap1\n      pop\n        /* \"#utility.yul\":15652:15661   */\n      dup2\n        /* \"#utility.yul\":15646:15650   */\n      dup2\n        /* \"#utility.yul\":15642:15662   */\n      sub\n        /* \"#utility.yul\":15638:15639   */\n      0x00\n        /* \"#utility.yul\":15627:15636   */\n      dup4\n        /* \"#utility.yul\":15623:15640   */\n      add\n        /* \"#utility.yul\":15616:15663   */\n      mstore\n        /* \"#utility.yul\":15680:15788   */\n      tag_606\n        /* \"#utility.yul\":15783:15787   */\n      dup2\n        /* \"#utility.yul\":15774:15780   */\n      dup5\n        /* \"#utility.yul\":15680:15788   */\n      tag_418\n      jump\t// in\n    tag_606:\n        /* \"#utility.yul\":15672:15788   */\n      swap1\n      pop\n        /* \"#utility.yul\":15422:15795   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15801:16840   */\n    tag_67:\n        /* \"#utility.yul\":15928:15934   */\n      0x00\n        /* \"#utility.yul\":15936:15942   */\n      dup1\n        /* \"#utility.yul\":15944:15950   */\n      0x00\n        /* \"#utility.yul\":15993:15995   */\n      0x60\n        /* \"#utility.yul\":15981:15990   */\n      dup5\n        /* \"#utility.yul\":15972:15979   */\n      dup7\n        /* \"#utility.yul\":15968:15991   */\n      sub\n        /* \"#utility.yul\":15964:15996   */\n      slt\n        /* \"#utility.yul\":15961:16080   */\n      iszero\n      tag_608\n      jumpi\n        /* \"#utility.yul\":15999:16078   */\n      tag_609\n      tag_377\n      jump\t// in\n    tag_609:\n        /* \"#utility.yul\":15961:16080   */\n    tag_608:\n        /* \"#utility.yul\":16119:16120   */\n      0x00\n        /* \"#utility.yul\":16144:16197   */\n      tag_610\n        /* \"#utility.yul\":16189:16196   */\n      dup7\n        /* \"#utility.yul\":16180:16186   */\n      dup3\n        /* \"#utility.yul\":16169:16178   */\n      dup8\n        /* \"#utility.yul\":16165:16187   */\n      add\n        /* \"#utility.yul\":16144:16197   */\n      tag_382\n      jump\t// in\n    tag_610:\n        /* \"#utility.yul\":16134:16197   */\n      swap4\n      pop\n        /* \"#utility.yul\":16090:16207   */\n      pop\n        /* \"#utility.yul\":16274:16276   */\n      0x20\n        /* \"#utility.yul\":16263:16272   */\n      dup5\n        /* \"#utility.yul\":16259:16277   */\n      add\n        /* \"#utility.yul\":16246:16278   */\n      calldataload\n        /* \"#utility.yul\":16305:16323   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":16297:16303   */\n      dup2\n        /* \"#utility.yul\":16294:16324   */\n      gt\n        /* \"#utility.yul\":16291:16408   */\n      iszero\n      tag_611\n      jumpi\n        /* \"#utility.yul\":16327:16406   */\n      tag_612\n      tag_378\n      jump\t// in\n    tag_612:\n        /* \"#utility.yul\":16291:16408   */\n    tag_611:\n        /* \"#utility.yul\":16432:16510   */\n      tag_613\n        /* \"#utility.yul\":16502:16509   */\n      dup7\n        /* \"#utility.yul\":16493:16499   */\n      dup3\n        /* \"#utility.yul\":16482:16491   */\n      dup8\n        /* \"#utility.yul\":16478:16500   */\n      add\n        /* \"#utility.yul\":16432:16510   */\n      tag_403\n      jump\t// in\n    tag_613:\n        /* \"#utility.yul\":16422:16510   */\n      swap3\n      pop\n        /* \"#utility.yul\":16217:16520   */\n      pop\n        /* \"#utility.yul\":16587:16589   */\n      0x40\n        /* \"#utility.yul\":16576:16585   */\n      dup5\n        /* \"#utility.yul\":16572:16590   */\n      add\n        /* \"#utility.yul\":16559:16591   */\n      calldataload\n        /* \"#utility.yul\":16618:16636   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":16610:16616   */\n      dup2\n        /* \"#utility.yul\":16607:16637   */\n      gt\n        /* \"#utility.yul\":16604:16721   */\n      iszero\n      tag_614\n      jumpi\n        /* \"#utility.yul\":16640:16719   */\n      tag_615\n      tag_378\n      jump\t// in\n    tag_615:\n        /* \"#utility.yul\":16604:16721   */\n    tag_614:\n        /* \"#utility.yul\":16745:16823   */\n      tag_616\n        /* \"#utility.yul\":16815:16822   */\n      dup7\n        /* \"#utility.yul\":16806:16812   */\n      dup3\n        /* \"#utility.yul\":16795:16804   */\n      dup8\n        /* \"#utility.yul\":16791:16813   */\n      add\n        /* \"#utility.yul\":16745:16823   */\n      tag_403\n      jump\t// in\n    tag_616:\n        /* \"#utility.yul\":16735:16823   */\n      swap2\n      pop\n        /* \"#utility.yul\":16530:16833   */\n      pop\n        /* \"#utility.yul\":15801:16840   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":16846:17175   */\n    tag_71:\n        /* \"#utility.yul\":16905:16911   */\n      0x00\n        /* \"#utility.yul\":16954:16956   */\n      0x20\n        /* \"#utility.yul\":16942:16951   */\n      dup3\n        /* \"#utility.yul\":16933:16940   */\n      dup5\n        /* \"#utility.yul\":16929:16952   */\n      sub\n        /* \"#utility.yul\":16925:16957   */\n      slt\n        /* \"#utility.yul\":16922:17041   */\n      iszero\n      tag_618\n      jumpi\n        /* \"#utility.yul\":16960:17039   */\n      tag_619\n      tag_377\n      jump\t// in\n    tag_619:\n        /* \"#utility.yul\":16922:17041   */\n    tag_618:\n        /* \"#utility.yul\":17080:17081   */\n      0x00\n        /* \"#utility.yul\":17105:17158   */\n      tag_620\n        /* \"#utility.yul\":17150:17157   */\n      dup5\n        /* \"#utility.yul\":17141:17147   */\n      dup3\n        /* \"#utility.yul\":17130:17139   */\n      dup6\n        /* \"#utility.yul\":17126:17148   */\n      add\n        /* \"#utility.yul\":17105:17158   */\n      tag_382\n      jump\t// in\n    tag_620:\n        /* \"#utility.yul\":17095:17158   */\n      swap2\n      pop\n        /* \"#utility.yul\":17051:17168   */\n      pop\n        /* \"#utility.yul\":16846:17175   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17181:18124   */\n    tag_77:\n        /* \"#utility.yul\":17276:17282   */\n      0x00\n        /* \"#utility.yul\":17284:17290   */\n      dup1\n        /* \"#utility.yul\":17292:17298   */\n      0x00\n        /* \"#utility.yul\":17300:17306   */\n      dup1\n        /* \"#utility.yul\":17349:17352   */\n      0x80\n        /* \"#utility.yul\":17337:17346   */\n      dup6\n        /* \"#utility.yul\":17328:17335   */\n      dup8\n        /* \"#utility.yul\":17324:17347   */\n      sub\n        /* \"#utility.yul\":17320:17353   */\n      slt\n        /* \"#utility.yul\":17317:17437   */\n      iszero\n      tag_622\n      jumpi\n        /* \"#utility.yul\":17356:17435   */\n      tag_623\n      tag_377\n      jump\t// in\n    tag_623:\n        /* \"#utility.yul\":17317:17437   */\n    tag_622:\n        /* \"#utility.yul\":17476:17477   */\n      0x00\n        /* \"#utility.yul\":17501:17554   */\n      tag_624\n        /* \"#utility.yul\":17546:17553   */\n      dup8\n        /* \"#utility.yul\":17537:17543   */\n      dup3\n        /* \"#utility.yul\":17526:17535   */\n      dup9\n        /* \"#utility.yul\":17522:17544   */\n      add\n        /* \"#utility.yul\":17501:17554   */\n      tag_382\n      jump\t// in\n    tag_624:\n        /* \"#utility.yul\":17491:17554   */\n      swap5\n      pop\n        /* \"#utility.yul\":17447:17564   */\n      pop\n        /* \"#utility.yul\":17603:17605   */\n      0x20\n        /* \"#utility.yul\":17629:17682   */\n      tag_625\n        /* \"#utility.yul\":17674:17681   */\n      dup8\n        /* \"#utility.yul\":17665:17671   */\n      dup3\n        /* \"#utility.yul\":17654:17663   */\n      dup9\n        /* \"#utility.yul\":17650:17672   */\n      add\n        /* \"#utility.yul\":17629:17682   */\n      tag_385\n      jump\t// in\n    tag_625:\n        /* \"#utility.yul\":17619:17682   */\n      swap4\n      pop\n        /* \"#utility.yul\":17574:17692   */\n      pop\n        /* \"#utility.yul\":17731:17733   */\n      0x40\n        /* \"#utility.yul\":17757:17810   */\n      tag_626\n        /* \"#utility.yul\":17802:17809   */\n      dup8\n        /* \"#utility.yul\":17793:17799   */\n      dup3\n        /* \"#utility.yul\":17782:17791   */\n      dup9\n        /* \"#utility.yul\":17778:17800   */\n      add\n        /* \"#utility.yul\":17757:17810   */\n      tag_385\n      jump\t// in\n    tag_626:\n        /* \"#utility.yul\":17747:17810   */\n      swap3\n      pop\n        /* \"#utility.yul\":17702:17820   */\n      pop\n        /* \"#utility.yul\":17887:17889   */\n      0x60\n        /* \"#utility.yul\":17876:17885   */\n      dup6\n        /* \"#utility.yul\":17872:17890   */\n      add\n        /* \"#utility.yul\":17859:17891   */\n      calldataload\n        /* \"#utility.yul\":17918:17936   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":17910:17916   */\n      dup2\n        /* \"#utility.yul\":17907:17937   */\n      gt\n        /* \"#utility.yul\":17904:18021   */\n      iszero\n      tag_627\n      jumpi\n        /* \"#utility.yul\":17940:18019   */\n      tag_628\n      tag_378\n      jump\t// in\n    tag_628:\n        /* \"#utility.yul\":17904:18021   */\n    tag_627:\n        /* \"#utility.yul\":18045:18107   */\n      tag_629\n        /* \"#utility.yul\":18099:18106   */\n      dup8\n        /* \"#utility.yul\":18090:18096   */\n      dup3\n        /* \"#utility.yul\":18079:18088   */\n      dup9\n        /* \"#utility.yul\":18075:18097   */\n      add\n        /* \"#utility.yul\":18045:18107   */\n      tag_408\n      jump\t// in\n    tag_629:\n        /* \"#utility.yul\":18035:18107   */\n      swap2\n      pop\n        /* \"#utility.yul\":17830:18117   */\n      pop\n        /* \"#utility.yul\":17181:18124   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18130:18248   */\n    tag_419:\n        /* \"#utility.yul\":18217:18241   */\n      tag_631\n        /* \"#utility.yul\":18235:18240   */\n      dup2\n        /* \"#utility.yul\":18217:18241   */\n      tag_380\n      jump\t// in\n    tag_631:\n        /* \"#utility.yul\":18212:18215   */\n      dup3\n        /* \"#utility.yul\":18205:18242   */\n      mstore\n        /* \"#utility.yul\":18130:18248   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18254:18476   */\n    tag_82:\n        /* \"#utility.yul\":18347:18351   */\n      0x00\n        /* \"#utility.yul\":18385:18387   */\n      0x20\n        /* \"#utility.yul\":18374:18383   */\n      dup3\n        /* \"#utility.yul\":18370:18388   */\n      add\n        /* \"#utility.yul\":18362:18388   */\n      swap1\n      pop\n        /* \"#utility.yul\":18398:18469   */\n      tag_633\n        /* \"#utility.yul\":18466:18467   */\n      0x00\n        /* \"#utility.yul\":18455:18464   */\n      dup4\n        /* \"#utility.yul\":18451:18468   */\n      add\n        /* \"#utility.yul\":18442:18448   */\n      dup5\n        /* \"#utility.yul\":18398:18469   */\n      tag_419\n      jump\t// in\n    tag_633:\n        /* \"#utility.yul\":18254:18476   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18482:18598   */\n    tag_420:\n        /* \"#utility.yul\":18552:18573   */\n      tag_635\n        /* \"#utility.yul\":18567:18572   */\n      dup2\n        /* \"#utility.yul\":18552:18573   */\n      tag_390\n      jump\t// in\n    tag_635:\n        /* \"#utility.yul\":18545:18550   */\n      dup2\n        /* \"#utility.yul\":18542:18574   */\n      eq\n        /* \"#utility.yul\":18532:18592   */\n      tag_636\n      jumpi\n        /* \"#utility.yul\":18588:18589   */\n      0x00\n        /* \"#utility.yul\":18585:18586   */\n      dup1\n        /* \"#utility.yul\":18578:18590   */\n      revert\n        /* \"#utility.yul\":18532:18592   */\n    tag_636:\n        /* \"#utility.yul\":18482:18598   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18604:18737   */\n    tag_421:\n        /* \"#utility.yul\":18647:18652   */\n      0x00\n        /* \"#utility.yul\":18685:18691   */\n      dup2\n        /* \"#utility.yul\":18672:18692   */\n      calldataload\n        /* \"#utility.yul\":18663:18692   */\n      swap1\n      pop\n        /* \"#utility.yul\":18701:18731   */\n      tag_638\n        /* \"#utility.yul\":18725:18730   */\n      dup2\n        /* \"#utility.yul\":18701:18731   */\n      tag_420\n      jump\t// in\n    tag_638:\n        /* \"#utility.yul\":18604:18737   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18743:19211   */\n    tag_88:\n        /* \"#utility.yul\":18808:18814   */\n      0x00\n        /* \"#utility.yul\":18816:18822   */\n      dup1\n        /* \"#utility.yul\":18865:18867   */\n      0x40\n        /* \"#utility.yul\":18853:18862   */\n      dup4\n        /* \"#utility.yul\":18844:18851   */\n      dup6\n        /* \"#utility.yul\":18840:18863   */\n      sub\n        /* \"#utility.yul\":18836:18868   */\n      slt\n        /* \"#utility.yul\":18833:18952   */\n      iszero\n      tag_640\n      jumpi\n        /* \"#utility.yul\":18871:18950   */\n      tag_641\n      tag_377\n      jump\t// in\n    tag_641:\n        /* \"#utility.yul\":18833:18952   */\n    tag_640:\n        /* \"#utility.yul\":18991:18992   */\n      0x00\n        /* \"#utility.yul\":19016:19069   */\n      tag_642\n        /* \"#utility.yul\":19061:19068   */\n      dup6\n        /* \"#utility.yul\":19052:19058   */\n      dup3\n        /* \"#utility.yul\":19041:19050   */\n      dup7\n        /* \"#utility.yul\":19037:19059   */\n      add\n        /* \"#utility.yul\":19016:19069   */\n      tag_382\n      jump\t// in\n    tag_642:\n        /* \"#utility.yul\":19006:19069   */\n      swap3\n      pop\n        /* \"#utility.yul\":18962:19079   */\n      pop\n        /* \"#utility.yul\":19118:19120   */\n      0x20\n        /* \"#utility.yul\":19144:19194   */\n      tag_643\n        /* \"#utility.yul\":19186:19193   */\n      dup6\n        /* \"#utility.yul\":19177:19183   */\n      dup3\n        /* \"#utility.yul\":19166:19175   */\n      dup7\n        /* \"#utility.yul\":19162:19184   */\n      add\n        /* \"#utility.yul\":19144:19194   */\n      tag_421\n      jump\t// in\n    tag_643:\n        /* \"#utility.yul\":19134:19194   */\n      swap2\n      pop\n        /* \"#utility.yul\":19089:19204   */\n      pop\n        /* \"#utility.yul\":18743:19211   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19217:19691   */\n    tag_96:\n        /* \"#utility.yul\":19285:19291   */\n      0x00\n        /* \"#utility.yul\":19293:19299   */\n      dup1\n        /* \"#utility.yul\":19342:19344   */\n      0x40\n        /* \"#utility.yul\":19330:19339   */\n      dup4\n        /* \"#utility.yul\":19321:19328   */\n      dup6\n        /* \"#utility.yul\":19317:19340   */\n      sub\n        /* \"#utility.yul\":19313:19345   */\n      slt\n        /* \"#utility.yul\":19310:19429   */\n      iszero\n      tag_645\n      jumpi\n        /* \"#utility.yul\":19348:19427   */\n      tag_646\n      tag_377\n      jump\t// in\n    tag_646:\n        /* \"#utility.yul\":19310:19429   */\n    tag_645:\n        /* \"#utility.yul\":19468:19469   */\n      0x00\n        /* \"#utility.yul\":19493:19546   */\n      tag_647\n        /* \"#utility.yul\":19538:19545   */\n      dup6\n        /* \"#utility.yul\":19529:19535   */\n      dup3\n        /* \"#utility.yul\":19518:19527   */\n      dup7\n        /* \"#utility.yul\":19514:19536   */\n      add\n        /* \"#utility.yul\":19493:19546   */\n      tag_382\n      jump\t// in\n    tag_647:\n        /* \"#utility.yul\":19483:19546   */\n      swap3\n      pop\n        /* \"#utility.yul\":19439:19556   */\n      pop\n        /* \"#utility.yul\":19595:19597   */\n      0x20\n        /* \"#utility.yul\":19621:19674   */\n      tag_648\n        /* \"#utility.yul\":19666:19673   */\n      dup6\n        /* \"#utility.yul\":19657:19663   */\n      dup3\n        /* \"#utility.yul\":19646:19655   */\n      dup7\n        /* \"#utility.yul\":19642:19664   */\n      add\n        /* \"#utility.yul\":19621:19674   */\n      tag_382\n      jump\t// in\n    tag_648:\n        /* \"#utility.yul\":19611:19674   */\n      swap2\n      pop\n        /* \"#utility.yul\":19566:19684   */\n      pop\n        /* \"#utility.yul\":19217:19691   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19697:20786   */\n    tag_101:\n        /* \"#utility.yul\":19801:19807   */\n      0x00\n        /* \"#utility.yul\":19809:19815   */\n      dup1\n        /* \"#utility.yul\":19817:19823   */\n      0x00\n        /* \"#utility.yul\":19825:19831   */\n      dup1\n        /* \"#utility.yul\":19833:19839   */\n      0x00\n        /* \"#utility.yul\":19882:19885   */\n      0xa0\n        /* \"#utility.yul\":19870:19879   */\n      dup7\n        /* \"#utility.yul\":19861:19868   */\n      dup9\n        /* \"#utility.yul\":19857:19880   */\n      sub\n        /* \"#utility.yul\":19853:19886   */\n      slt\n        /* \"#utility.yul\":19850:19970   */\n      iszero\n      tag_650\n      jumpi\n        /* \"#utility.yul\":19889:19968   */\n      tag_651\n      tag_377\n      jump\t// in\n    tag_651:\n        /* \"#utility.yul\":19850:19970   */\n    tag_650:\n        /* \"#utility.yul\":20009:20010   */\n      0x00\n        /* \"#utility.yul\":20034:20087   */\n      tag_652\n        /* \"#utility.yul\":20079:20086   */\n      dup9\n        /* \"#utility.yul\":20070:20076   */\n      dup3\n        /* \"#utility.yul\":20059:20068   */\n      dup10\n        /* \"#utility.yul\":20055:20077   */\n      add\n        /* \"#utility.yul\":20034:20087   */\n      tag_382\n      jump\t// in\n    tag_652:\n        /* \"#utility.yul\":20024:20087   */\n      swap6\n      pop\n        /* \"#utility.yul\":19980:20097   */\n      pop\n        /* \"#utility.yul\":20136:20138   */\n      0x20\n        /* \"#utility.yul\":20162:20215   */\n      tag_653\n        /* \"#utility.yul\":20207:20214   */\n      dup9\n        /* \"#utility.yul\":20198:20204   */\n      dup3\n        /* \"#utility.yul\":20187:20196   */\n      dup10\n        /* \"#utility.yul\":20183:20205   */\n      add\n        /* \"#utility.yul\":20162:20215   */\n      tag_382\n      jump\t// in\n    tag_653:\n        /* \"#utility.yul\":20152:20215   */\n      swap5\n      pop\n        /* \"#utility.yul\":20107:20225   */\n      pop\n        /* \"#utility.yul\":20264:20266   */\n      0x40\n        /* \"#utility.yul\":20290:20343   */\n      tag_654\n        /* \"#utility.yul\":20335:20342   */\n      dup9\n        /* \"#utility.yul\":20326:20332   */\n      dup3\n        /* \"#utility.yul\":20315:20324   */\n      dup10\n        /* \"#utility.yul\":20311:20333   */\n      add\n        /* \"#utility.yul\":20290:20343   */\n      tag_385\n      jump\t// in\n    tag_654:\n        /* \"#utility.yul\":20280:20343   */\n      swap4\n      pop\n        /* \"#utility.yul\":20235:20353   */\n      pop\n        /* \"#utility.yul\":20392:20394   */\n      0x60\n        /* \"#utility.yul\":20418:20471   */\n      tag_655\n        /* \"#utility.yul\":20463:20470   */\n      dup9\n        /* \"#utility.yul\":20454:20460   */\n      dup3\n        /* \"#utility.yul\":20443:20452   */\n      dup10\n        /* \"#utility.yul\":20439:20461   */\n      add\n        /* \"#utility.yul\":20418:20471   */\n      tag_385\n      jump\t// in\n    tag_655:\n        /* \"#utility.yul\":20408:20471   */\n      swap3\n      pop\n        /* \"#utility.yul\":20363:20481   */\n      pop\n        /* \"#utility.yul\":20548:20551   */\n      0x80\n        /* \"#utility.yul\":20537:20546   */\n      dup7\n        /* \"#utility.yul\":20533:20552   */\n      add\n        /* \"#utility.yul\":20520:20553   */\n      calldataload\n        /* \"#utility.yul\":20580:20598   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":20572:20578   */\n      dup2\n        /* \"#utility.yul\":20569:20599   */\n      gt\n        /* \"#utility.yul\":20566:20683   */\n      iszero\n      tag_656\n      jumpi\n        /* \"#utility.yul\":20602:20681   */\n      tag_657\n      tag_378\n      jump\t// in\n    tag_657:\n        /* \"#utility.yul\":20566:20683   */\n    tag_656:\n        /* \"#utility.yul\":20707:20769   */\n      tag_658\n        /* \"#utility.yul\":20761:20768   */\n      dup9\n        /* \"#utility.yul\":20752:20758   */\n      dup3\n        /* \"#utility.yul\":20741:20750   */\n      dup10\n        /* \"#utility.yul\":20737:20759   */\n      add\n        /* \"#utility.yul\":20707:20769   */\n      tag_408\n      jump\t// in\n    tag_658:\n        /* \"#utility.yul\":20697:20769   */\n      swap2\n      pop\n        /* \"#utility.yul\":20491:20779   */\n      pop\n        /* \"#utility.yul\":19697:20786   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      swap1\n      swap4\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20792:21411   */\n    tag_108:\n        /* \"#utility.yul\":20869:20875   */\n      0x00\n        /* \"#utility.yul\":20877:20883   */\n      dup1\n        /* \"#utility.yul\":20885:20891   */\n      0x00\n        /* \"#utility.yul\":20934:20936   */\n      0x60\n        /* \"#utility.yul\":20922:20931   */\n      dup5\n        /* \"#utility.yul\":20913:20920   */\n      dup7\n        /* \"#utility.yul\":20909:20932   */\n      sub\n        /* \"#utility.yul\":20905:20937   */\n      slt\n        /* \"#utility.yul\":20902:21021   */\n      iszero\n      tag_660\n      jumpi\n        /* \"#utility.yul\":20940:21019   */\n      tag_661\n      tag_377\n      jump\t// in\n    tag_661:\n        /* \"#utility.yul\":20902:21021   */\n    tag_660:\n        /* \"#utility.yul\":21060:21061   */\n      0x00\n        /* \"#utility.yul\":21085:21138   */\n      tag_662\n        /* \"#utility.yul\":21130:21137   */\n      dup7\n        /* \"#utility.yul\":21121:21127   */\n      dup3\n        /* \"#utility.yul\":21110:21119   */\n      dup8\n        /* \"#utility.yul\":21106:21128   */\n      add\n        /* \"#utility.yul\":21085:21138   */\n      tag_382\n      jump\t// in\n    tag_662:\n        /* \"#utility.yul\":21075:21138   */\n      swap4\n      pop\n        /* \"#utility.yul\":21031:21148   */\n      pop\n        /* \"#utility.yul\":21187:21189   */\n      0x20\n        /* \"#utility.yul\":21213:21266   */\n      tag_663\n        /* \"#utility.yul\":21258:21265   */\n      dup7\n        /* \"#utility.yul\":21249:21255   */\n      dup3\n        /* \"#utility.yul\":21238:21247   */\n      dup8\n        /* \"#utility.yul\":21234:21256   */\n      add\n        /* \"#utility.yul\":21213:21266   */\n      tag_385\n      jump\t// in\n    tag_663:\n        /* \"#utility.yul\":21203:21266   */\n      swap3\n      pop\n        /* \"#utility.yul\":21158:21276   */\n      pop\n        /* \"#utility.yul\":21315:21317   */\n      0x40\n        /* \"#utility.yul\":21341:21394   */\n      tag_664\n        /* \"#utility.yul\":21386:21393   */\n      dup7\n        /* \"#utility.yul\":21377:21383   */\n      dup3\n        /* \"#utility.yul\":21366:21375   */\n      dup8\n        /* \"#utility.yul\":21362:21384   */\n      add\n        /* \"#utility.yul\":21341:21394   */\n      tag_385\n      jump\t// in\n    tag_664:\n        /* \"#utility.yul\":21331:21394   */\n      swap2\n      pop\n        /* \"#utility.yul\":21286:21404   */\n      pop\n        /* \"#utility.yul\":20792:21411   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":21417:21597   */\n    tag_422:\n        /* \"#utility.yul\":21465:21542   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":21462:21463   */\n      0x00\n        /* \"#utility.yul\":21455:21543   */\n      mstore\n        /* \"#utility.yul\":21562:21566   */\n      0x22\n        /* \"#utility.yul\":21559:21560   */\n      0x04\n        /* \"#utility.yul\":21552:21567   */\n      mstore\n        /* \"#utility.yul\":21586:21590   */\n      0x24\n        /* \"#utility.yul\":21583:21584   */\n      0x00\n        /* \"#utility.yul\":21576:21591   */\n      revert\n        /* \"#utility.yul\":21603:21923   */\n    tag_118:\n        /* \"#utility.yul\":21647:21653   */\n      0x00\n        /* \"#utility.yul\":21684:21685   */\n      0x02\n        /* \"#utility.yul\":21678:21682   */\n      dup3\n        /* \"#utility.yul\":21674:21686   */\n      div\n        /* \"#utility.yul\":21664:21686   */\n      swap1\n      pop\n        /* \"#utility.yul\":21731:21732   */\n      0x01\n        /* \"#utility.yul\":21725:21729   */\n      dup3\n        /* \"#utility.yul\":21721:21733   */\n      and\n        /* \"#utility.yul\":21752:21770   */\n      dup1\n        /* \"#utility.yul\":21742:21823   */\n      tag_667\n      jumpi\n        /* \"#utility.yul\":21808:21812   */\n      0x7f\n        /* \"#utility.yul\":21800:21806   */\n      dup3\n        /* \"#utility.yul\":21796:21813   */\n      and\n        /* \"#utility.yul\":21786:21813   */\n      swap2\n      pop\n        /* \"#utility.yul\":21742:21823   */\n    tag_667:\n        /* \"#utility.yul\":21870:21872   */\n      0x20\n        /* \"#utility.yul\":21862:21868   */\n      dup3\n        /* \"#utility.yul\":21859:21873   */\n      lt\n        /* \"#utility.yul\":21839:21857   */\n      dup2\n        /* \"#utility.yul\":21836:21874   */\n      sub\n        /* \"#utility.yul\":21833:21917   */\n      tag_668\n      jumpi\n        /* \"#utility.yul\":21889:21907   */\n      tag_669\n      tag_422\n      jump\t// in\n    tag_669:\n        /* \"#utility.yul\":21833:21917   */\n    tag_668:\n        /* \"#utility.yul\":21654:21923   */\n      pop\n        /* \"#utility.yul\":21603:21923   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21929:22100   */\n    tag_423:\n        /* \"#utility.yul\":22069:22092   */\n      0x47616d652061646472657373206e6f74207365742e0000000000000000000000\n        /* \"#utility.yul\":22065:22066   */\n      0x00\n        /* \"#utility.yul\":22057:22063   */\n      dup3\n        /* \"#utility.yul\":22053:22067   */\n      add\n        /* \"#utility.yul\":22046:22093   */\n      mstore\n        /* \"#utility.yul\":21929:22100   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22106:22472   */\n    tag_424:\n        /* \"#utility.yul\":22248:22251   */\n      0x00\n        /* \"#utility.yul\":22269:22336   */\n      tag_672\n        /* \"#utility.yul\":22333:22335   */\n      0x15\n        /* \"#utility.yul\":22328:22331   */\n      dup4\n        /* \"#utility.yul\":22269:22336   */\n      tag_393\n      jump\t// in\n    tag_672:\n        /* \"#utility.yul\":22262:22336   */\n      swap2\n      pop\n        /* \"#utility.yul\":22345:22438   */\n      tag_673\n        /* \"#utility.yul\":22434:22437   */\n      dup3\n        /* \"#utility.yul\":22345:22438   */\n      tag_423\n      jump\t// in\n    tag_673:\n        /* \"#utility.yul\":22463:22465   */\n      0x20\n        /* \"#utility.yul\":22458:22461   */\n      dup3\n        /* \"#utility.yul\":22454:22466   */\n      add\n        /* \"#utility.yul\":22447:22466   */\n      swap1\n      pop\n        /* \"#utility.yul\":22106:22472   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22478:22897   */\n    tag_127:\n        /* \"#utility.yul\":22644:22648   */\n      0x00\n        /* \"#utility.yul\":22682:22684   */\n      0x20\n        /* \"#utility.yul\":22671:22680   */\n      dup3\n        /* \"#utility.yul\":22667:22685   */\n      add\n        /* \"#utility.yul\":22659:22685   */\n      swap1\n      pop\n        /* \"#utility.yul\":22731:22740   */\n      dup2\n        /* \"#utility.yul\":22725:22729   */\n      dup2\n        /* \"#utility.yul\":22721:22741   */\n      sub\n        /* \"#utility.yul\":22717:22718   */\n      0x00\n        /* \"#utility.yul\":22706:22715   */\n      dup4\n        /* \"#utility.yul\":22702:22719   */\n      add\n        /* \"#utility.yul\":22695:22742   */\n      mstore\n        /* \"#utility.yul\":22759:22890   */\n      tag_675\n        /* \"#utility.yul\":22885:22889   */\n      dup2\n        /* \"#utility.yul\":22759:22890   */\n      tag_424\n      jump\t// in\n    tag_675:\n        /* \"#utility.yul\":22751:22890   */\n      swap1\n      pop\n        /* \"#utility.yul\":22478:22897   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22903:23081   */\n    tag_425:\n        /* \"#utility.yul\":23043:23073   */\n      0x4f6e6c792067616d6520636f6e74726163742063616e206d696e742e00000000\n        /* \"#utility.yul\":23039:23040   */\n      0x00\n        /* \"#utility.yul\":23031:23037   */\n      dup3\n        /* \"#utility.yul\":23027:23041   */\n      add\n        /* \"#utility.yul\":23020:23074   */\n      mstore\n        /* \"#utility.yul\":22903:23081   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23087:23453   */\n    tag_426:\n        /* \"#utility.yul\":23229:23232   */\n      0x00\n        /* \"#utility.yul\":23250:23317   */\n      tag_678\n        /* \"#utility.yul\":23314:23316   */\n      0x1c\n        /* \"#utility.yul\":23309:23312   */\n      dup4\n        /* \"#utility.yul\":23250:23317   */\n      tag_393\n      jump\t// in\n    tag_678:\n        /* \"#utility.yul\":23243:23317   */\n      swap2\n      pop\n        /* \"#utility.yul\":23326:23419   */\n      tag_679\n        /* \"#utility.yul\":23415:23418   */\n      dup3\n        /* \"#utility.yul\":23326:23419   */\n      tag_425\n      jump\t// in\n    tag_679:\n        /* \"#utility.yul\":23444:23446   */\n      0x20\n        /* \"#utility.yul\":23439:23442   */\n      dup3\n        /* \"#utility.yul\":23435:23447   */\n      add\n        /* \"#utility.yul\":23428:23447   */\n      swap1\n      pop\n        /* \"#utility.yul\":23087:23453   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23459:23878   */\n    tag_130:\n        /* \"#utility.yul\":23625:23629   */\n      0x00\n        /* \"#utility.yul\":23663:23665   */\n      0x20\n        /* \"#utility.yul\":23652:23661   */\n      dup3\n        /* \"#utility.yul\":23648:23666   */\n      add\n        /* \"#utility.yul\":23640:23666   */\n      swap1\n      pop\n        /* \"#utility.yul\":23712:23721   */\n      dup2\n        /* \"#utility.yul\":23706:23710   */\n      dup2\n        /* \"#utility.yul\":23702:23722   */\n      sub\n        /* \"#utility.yul\":23698:23699   */\n      0x00\n        /* \"#utility.yul\":23687:23696   */\n      dup4\n        /* \"#utility.yul\":23683:23700   */\n      add\n        /* \"#utility.yul\":23676:23723   */\n      mstore\n        /* \"#utility.yul\":23740:23871   */\n      tag_681\n        /* \"#utility.yul\":23866:23870   */\n      dup2\n        /* \"#utility.yul\":23740:23871   */\n      tag_426\n      jump\t// in\n    tag_681:\n        /* \"#utility.yul\":23732:23871   */\n      swap1\n      pop\n        /* \"#utility.yul\":23459:23878   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23884:24216   */\n    tag_140:\n        /* \"#utility.yul\":24005:24009   */\n      0x00\n        /* \"#utility.yul\":24043:24045   */\n      0x40\n        /* \"#utility.yul\":24032:24041   */\n      dup3\n        /* \"#utility.yul\":24028:24046   */\n      add\n        /* \"#utility.yul\":24020:24046   */\n      swap1\n      pop\n        /* \"#utility.yul\":24056:24127   */\n      tag_683\n        /* \"#utility.yul\":24124:24125   */\n      0x00\n        /* \"#utility.yul\":24113:24122   */\n      dup4\n        /* \"#utility.yul\":24109:24126   */\n      add\n        /* \"#utility.yul\":24100:24106   */\n      dup6\n        /* \"#utility.yul\":24056:24127   */\n      tag_419\n      jump\t// in\n    tag_683:\n        /* \"#utility.yul\":24137:24209   */\n      tag_684\n        /* \"#utility.yul\":24205:24207   */\n      0x20\n        /* \"#utility.yul\":24194:24203   */\n      dup4\n        /* \"#utility.yul\":24190:24208   */\n      add\n        /* \"#utility.yul\":24181:24187   */\n      dup5\n        /* \"#utility.yul\":24137:24209   */\n      tag_419\n      jump\t// in\n    tag_684:\n        /* \"#utility.yul\":23884:24216   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24222:24554   */\n    tag_146:\n        /* \"#utility.yul\":24343:24347   */\n      0x00\n        /* \"#utility.yul\":24381:24383   */\n      0x40\n        /* \"#utility.yul\":24370:24379   */\n      dup3\n        /* \"#utility.yul\":24366:24384   */\n      add\n        /* \"#utility.yul\":24358:24384   */\n      swap1\n      pop\n        /* \"#utility.yul\":24394:24465   */\n      tag_686\n        /* \"#utility.yul\":24462:24463   */\n      0x00\n        /* \"#utility.yul\":24451:24460   */\n      dup4\n        /* \"#utility.yul\":24447:24464   */\n      add\n        /* \"#utility.yul\":24438:24444   */\n      dup6\n        /* \"#utility.yul\":24394:24465   */\n      tag_386\n      jump\t// in\n    tag_686:\n        /* \"#utility.yul\":24475:24547   */\n      tag_687\n        /* \"#utility.yul\":24543:24545   */\n      0x20\n        /* \"#utility.yul\":24532:24541   */\n      dup4\n        /* \"#utility.yul\":24528:24546   */\n      add\n        /* \"#utility.yul\":24519:24525   */\n      dup5\n        /* \"#utility.yul\":24475:24547   */\n      tag_386\n      jump\t// in\n    tag_687:\n        /* \"#utility.yul\":24222:24554   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24560:24740   */\n    tag_161:\n        /* \"#utility.yul\":24608:24685   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":24605:24606   */\n      0x00\n        /* \"#utility.yul\":24598:24686   */\n      mstore\n        /* \"#utility.yul\":24705:24709   */\n      0x32\n        /* \"#utility.yul\":24702:24703   */\n      0x04\n        /* \"#utility.yul\":24695:24710   */\n      mstore\n        /* \"#utility.yul\":24729:24733   */\n      0x24\n        /* \"#utility.yul\":24726:24727   */\n      0x00\n        /* \"#utility.yul\":24719:24734   */\n      revert\n        /* \"#utility.yul\":24746:24926   */\n    tag_427:\n        /* \"#utility.yul\":24794:24871   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":24791:24792   */\n      0x00\n        /* \"#utility.yul\":24784:24872   */\n      mstore\n        /* \"#utility.yul\":24891:24895   */\n      0x11\n        /* \"#utility.yul\":24888:24889   */\n      0x04\n        /* \"#utility.yul\":24881:24896   */\n      mstore\n        /* \"#utility.yul\":24915:24919   */\n      0x24\n        /* \"#utility.yul\":24912:24913   */\n      0x00\n        /* \"#utility.yul\":24905:24920   */\n      revert\n        /* \"#utility.yul\":24932:25165   */\n    tag_163:\n        /* \"#utility.yul\":24971:24974   */\n      0x00\n        /* \"#utility.yul\":24994:25018   */\n      tag_691\n        /* \"#utility.yul\":25012:25017   */\n      dup3\n        /* \"#utility.yul\":24994:25018   */\n      tag_383\n      jump\t// in\n    tag_691:\n        /* \"#utility.yul\":24985:25018   */\n      swap2\n      pop\n        /* \"#utility.yul\":25040:25106   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":25033:25038   */\n      dup3\n        /* \"#utility.yul\":25030:25107   */\n      sub\n        /* \"#utility.yul\":25027:25130   */\n      tag_692\n      jumpi\n        /* \"#utility.yul\":25110:25128   */\n      tag_693\n      tag_427\n      jump\t// in\n    tag_693:\n        /* \"#utility.yul\":25027:25130   */\n    tag_692:\n        /* \"#utility.yul\":25157:25158   */\n      0x01\n        /* \"#utility.yul\":25150:25155   */\n      dup3\n        /* \"#utility.yul\":25146:25159   */\n      add\n        /* \"#utility.yul\":25139:25159   */\n      swap1\n      pop\n        /* \"#utility.yul\":24932:25165   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25171:25349   */\n    tag_428:\n        /* \"#utility.yul\":25311:25341   */\n      0x47616d65206164647265737320697320616c7265616479207365742e00000000\n        /* \"#utility.yul\":25307:25308   */\n      0x00\n        /* \"#utility.yul\":25299:25305   */\n      dup3\n        /* \"#utility.yul\":25295:25309   */\n      add\n        /* \"#utility.yul\":25288:25342   */\n      mstore\n        /* \"#utility.yul\":25171:25349   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25355:25721   */\n    tag_429:\n        /* \"#utility.yul\":25497:25500   */\n      0x00\n        /* \"#utility.yul\":25518:25585   */\n      tag_696\n        /* \"#utility.yul\":25582:25584   */\n      0x1c\n        /* \"#utility.yul\":25577:25580   */\n      dup4\n        /* \"#utility.yul\":25518:25585   */\n      tag_393\n      jump\t// in\n    tag_696:\n        /* \"#utility.yul\":25511:25585   */\n      swap2\n      pop\n        /* \"#utility.yul\":25594:25687   */\n      tag_697\n        /* \"#utility.yul\":25683:25686   */\n      dup3\n        /* \"#utility.yul\":25594:25687   */\n      tag_428\n      jump\t// in\n    tag_697:\n        /* \"#utility.yul\":25712:25714   */\n      0x20\n        /* \"#utility.yul\":25707:25710   */\n      dup3\n        /* \"#utility.yul\":25703:25715   */\n      add\n        /* \"#utility.yul\":25696:25715   */\n      swap1\n      pop\n        /* \"#utility.yul\":25355:25721   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25727:26146   */\n    tag_182:\n        /* \"#utility.yul\":25893:25897   */\n      0x00\n        /* \"#utility.yul\":25931:25933   */\n      0x20\n        /* \"#utility.yul\":25920:25929   */\n      dup3\n        /* \"#utility.yul\":25916:25934   */\n      add\n        /* \"#utility.yul\":25908:25934   */\n      swap1\n      pop\n        /* \"#utility.yul\":25980:25989   */\n      dup2\n        /* \"#utility.yul\":25974:25978   */\n      dup2\n        /* \"#utility.yul\":25970:25990   */\n      sub\n        /* \"#utility.yul\":25966:25967   */\n      0x00\n        /* \"#utility.yul\":25955:25964   */\n      dup4\n        /* \"#utility.yul\":25951:25968   */\n      add\n        /* \"#utility.yul\":25944:25991   */\n      mstore\n        /* \"#utility.yul\":26008:26139   */\n      tag_699\n        /* \"#utility.yul\":26134:26138   */\n      dup2\n        /* \"#utility.yul\":26008:26139   */\n      tag_429\n      jump\t// in\n    tag_699:\n        /* \"#utility.yul\":26000:26139   */\n      swap1\n      pop\n        /* \"#utility.yul\":25727:26146   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26152:26250   */\n    tag_430:\n        /* \"#utility.yul\":26203:26209   */\n      0x00\n        /* \"#utility.yul\":26237:26242   */\n      dup2\n        /* \"#utility.yul\":26231:26243   */\n      mload\n        /* \"#utility.yul\":26221:26243   */\n      swap1\n      pop\n        /* \"#utility.yul\":26152:26250   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26256:26424   */\n    tag_431:\n        /* \"#utility.yul\":26339:26350   */\n      0x00\n        /* \"#utility.yul\":26373:26379   */\n      dup3\n        /* \"#utility.yul\":26368:26371   */\n      dup3\n        /* \"#utility.yul\":26361:26380   */\n      mstore\n        /* \"#utility.yul\":26413:26417   */\n      0x20\n        /* \"#utility.yul\":26408:26411   */\n      dup3\n        /* \"#utility.yul\":26404:26418   */\n      add\n        /* \"#utility.yul\":26389:26418   */\n      swap1\n      pop\n        /* \"#utility.yul\":26256:26424   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26430:26803   */\n    tag_432:\n        /* \"#utility.yul\":26516:26519   */\n      0x00\n        /* \"#utility.yul\":26544:26582   */\n      tag_703\n        /* \"#utility.yul\":26576:26581   */\n      dup3\n        /* \"#utility.yul\":26544:26582   */\n      tag_430\n      jump\t// in\n    tag_703:\n        /* \"#utility.yul\":26598:26668   */\n      tag_704\n        /* \"#utility.yul\":26661:26667   */\n      dup2\n        /* \"#utility.yul\":26656:26659   */\n      dup6\n        /* \"#utility.yul\":26598:26668   */\n      tag_431\n      jump\t// in\n    tag_704:\n        /* \"#utility.yul\":26591:26668   */\n      swap4\n      pop\n        /* \"#utility.yul\":26677:26742   */\n      tag_705\n        /* \"#utility.yul\":26735:26741   */\n      dup2\n        /* \"#utility.yul\":26730:26733   */\n      dup6\n        /* \"#utility.yul\":26723:26727   */\n      0x20\n        /* \"#utility.yul\":26716:26721   */\n      dup7\n        /* \"#utility.yul\":26712:26728   */\n      add\n        /* \"#utility.yul\":26677:26742   */\n      tag_394\n      jump\t// in\n    tag_705:\n        /* \"#utility.yul\":26767:26796   */\n      tag_706\n        /* \"#utility.yul\":26789:26795   */\n      dup2\n        /* \"#utility.yul\":26767:26796   */\n      tag_395\n      jump\t// in\n    tag_706:\n        /* \"#utility.yul\":26762:26765   */\n      dup5\n        /* \"#utility.yul\":26758:26797   */\n      add\n        /* \"#utility.yul\":26751:26797   */\n      swap2\n      pop\n        /* \"#utility.yul\":26520:26803   */\n      pop\n        /* \"#utility.yul\":26430:26803   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26809:27560   */\n    tag_294:\n        /* \"#utility.yul\":27032:27036   */\n      0x00\n        /* \"#utility.yul\":27070:27073   */\n      0xa0\n        /* \"#utility.yul\":27059:27068   */\n      dup3\n        /* \"#utility.yul\":27055:27074   */\n      add\n        /* \"#utility.yul\":27047:27074   */\n      swap1\n      pop\n        /* \"#utility.yul\":27084:27155   */\n      tag_708\n        /* \"#utility.yul\":27152:27153   */\n      0x00\n        /* \"#utility.yul\":27141:27150   */\n      dup4\n        /* \"#utility.yul\":27137:27154   */\n      add\n        /* \"#utility.yul\":27128:27134   */\n      dup9\n        /* \"#utility.yul\":27084:27155   */\n      tag_419\n      jump\t// in\n    tag_708:\n        /* \"#utility.yul\":27165:27237   */\n      tag_709\n        /* \"#utility.yul\":27233:27235   */\n      0x20\n        /* \"#utility.yul\":27222:27231   */\n      dup4\n        /* \"#utility.yul\":27218:27236   */\n      add\n        /* \"#utility.yul\":27209:27215   */\n      dup8\n        /* \"#utility.yul\":27165:27237   */\n      tag_419\n      jump\t// in\n    tag_709:\n        /* \"#utility.yul\":27247:27319   */\n      tag_710\n        /* \"#utility.yul\":27315:27317   */\n      0x40\n        /* \"#utility.yul\":27304:27313   */\n      dup4\n        /* \"#utility.yul\":27300:27318   */\n      add\n        /* \"#utility.yul\":27291:27297   */\n      dup7\n        /* \"#utility.yul\":27247:27319   */\n      tag_386\n      jump\t// in\n    tag_710:\n        /* \"#utility.yul\":27329:27401   */\n      tag_711\n        /* \"#utility.yul\":27397:27399   */\n      0x60\n        /* \"#utility.yul\":27386:27395   */\n      dup4\n        /* \"#utility.yul\":27382:27400   */\n      add\n        /* \"#utility.yul\":27373:27379   */\n      dup6\n        /* \"#utility.yul\":27329:27401   */\n      tag_386\n      jump\t// in\n    tag_711:\n        /* \"#utility.yul\":27449:27458   */\n      dup2\n        /* \"#utility.yul\":27443:27447   */\n      dup2\n        /* \"#utility.yul\":27439:27459   */\n      sub\n        /* \"#utility.yul\":27433:27436   */\n      0x80\n        /* \"#utility.yul\":27422:27431   */\n      dup4\n        /* \"#utility.yul\":27418:27437   */\n      add\n        /* \"#utility.yul\":27411:27460   */\n      mstore\n        /* \"#utility.yul\":27477:27553   */\n      tag_712\n        /* \"#utility.yul\":27548:27552   */\n      dup2\n        /* \"#utility.yul\":27539:27545   */\n      dup5\n        /* \"#utility.yul\":27477:27553   */\n      tag_432\n      jump\t// in\n    tag_712:\n        /* \"#utility.yul\":27469:27553   */\n      swap1\n      pop\n        /* \"#utility.yul\":26809:27560   */\n      swap7\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":27566:27707   */\n    tag_433:\n        /* \"#utility.yul\":27622:27627   */\n      0x00\n        /* \"#utility.yul\":27653:27659   */\n      dup2\n        /* \"#utility.yul\":27647:27660   */\n      mload\n        /* \"#utility.yul\":27638:27660   */\n      swap1\n      pop\n        /* \"#utility.yul\":27669:27701   */\n      tag_714\n        /* \"#utility.yul\":27695:27700   */\n      dup2\n        /* \"#utility.yul\":27669:27701   */\n      tag_388\n      jump\t// in\n    tag_714:\n        /* \"#utility.yul\":27566:27707   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":27713:28062   */\n    tag_297:\n        /* \"#utility.yul\":27782:27788   */\n      0x00\n        /* \"#utility.yul\":27831:27833   */\n      0x20\n        /* \"#utility.yul\":27819:27828   */\n      dup3\n        /* \"#utility.yul\":27810:27817   */\n      dup5\n        /* \"#utility.yul\":27806:27829   */\n      sub\n        /* \"#utility.yul\":27802:27834   */\n      slt\n        /* \"#utility.yul\":27799:27918   */\n      iszero\n      tag_716\n      jumpi\n        /* \"#utility.yul\":27837:27916   */\n      tag_717\n      tag_377\n      jump\t// in\n    tag_717:\n        /* \"#utility.yul\":27799:27918   */\n    tag_716:\n        /* \"#utility.yul\":27957:27958   */\n      0x00\n        /* \"#utility.yul\":27982:28045   */\n      tag_718\n        /* \"#utility.yul\":28037:28044   */\n      dup5\n        /* \"#utility.yul\":28028:28034   */\n      dup3\n        /* \"#utility.yul\":28017:28026   */\n      dup6\n        /* \"#utility.yul\":28013:28035   */\n      add\n        /* \"#utility.yul\":27982:28045   */\n      tag_433\n      jump\t// in\n    tag_718:\n        /* \"#utility.yul\":27972:28045   */\n      swap2\n      pop\n        /* \"#utility.yul\":27928:28055   */\n      pop\n        /* \"#utility.yul\":27713:28062   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":28068:29121   */\n    tag_313:\n        /* \"#utility.yul\":28391:28395   */\n      0x00\n        /* \"#utility.yul\":28429:28432   */\n      0xa0\n        /* \"#utility.yul\":28418:28427   */\n      dup3\n        /* \"#utility.yul\":28414:28433   */\n      add\n        /* \"#utility.yul\":28406:28433   */\n      swap1\n      pop\n        /* \"#utility.yul\":28443:28514   */\n      tag_720\n        /* \"#utility.yul\":28511:28512   */\n      0x00\n        /* \"#utility.yul\":28500:28509   */\n      dup4\n        /* \"#utility.yul\":28496:28513   */\n      add\n        /* \"#utility.yul\":28487:28493   */\n      dup9\n        /* \"#utility.yul\":28443:28514   */\n      tag_419\n      jump\t// in\n    tag_720:\n        /* \"#utility.yul\":28524:28596   */\n      tag_721\n        /* \"#utility.yul\":28592:28594   */\n      0x20\n        /* \"#utility.yul\":28581:28590   */\n      dup4\n        /* \"#utility.yul\":28577:28595   */\n      add\n        /* \"#utility.yul\":28568:28574   */\n      dup8\n        /* \"#utility.yul\":28524:28596   */\n      tag_419\n      jump\t// in\n    tag_721:\n        /* \"#utility.yul\":28643:28652   */\n      dup2\n        /* \"#utility.yul\":28637:28641   */\n      dup2\n        /* \"#utility.yul\":28633:28653   */\n      sub\n        /* \"#utility.yul\":28628:28630   */\n      0x40\n        /* \"#utility.yul\":28617:28626   */\n      dup4\n        /* \"#utility.yul\":28613:28631   */\n      add\n        /* \"#utility.yul\":28606:28654   */\n      mstore\n        /* \"#utility.yul\":28671:28779   */\n      tag_722\n        /* \"#utility.yul\":28774:28778   */\n      dup2\n        /* \"#utility.yul\":28765:28771   */\n      dup7\n        /* \"#utility.yul\":28671:28779   */\n      tag_418\n      jump\t// in\n    tag_722:\n        /* \"#utility.yul\":28663:28779   */\n      swap1\n      pop\n        /* \"#utility.yul\":28826:28835   */\n      dup2\n        /* \"#utility.yul\":28820:28824   */\n      dup2\n        /* \"#utility.yul\":28816:28836   */\n      sub\n        /* \"#utility.yul\":28811:28813   */\n      0x60\n        /* \"#utility.yul\":28800:28809   */\n      dup4\n        /* \"#utility.yul\":28796:28814   */\n      add\n        /* \"#utility.yul\":28789:28837   */\n      mstore\n        /* \"#utility.yul\":28854:28962   */\n      tag_723\n        /* \"#utility.yul\":28957:28961   */\n      dup2\n        /* \"#utility.yul\":28948:28954   */\n      dup6\n        /* \"#utility.yul\":28854:28962   */\n      tag_418\n      jump\t// in\n    tag_723:\n        /* \"#utility.yul\":28846:28962   */\n      swap1\n      pop\n        /* \"#utility.yul\":29010:29019   */\n      dup2\n        /* \"#utility.yul\":29004:29008   */\n      dup2\n        /* \"#utility.yul\":29000:29020   */\n      sub\n        /* \"#utility.yul\":28994:28997   */\n      0x80\n        /* \"#utility.yul\":28983:28992   */\n      dup4\n        /* \"#utility.yul\":28979:28998   */\n      add\n        /* \"#utility.yul\":28972:29021   */\n      mstore\n        /* \"#utility.yul\":29038:29114   */\n      tag_724\n        /* \"#utility.yul\":29109:29113   */\n      dup2\n        /* \"#utility.yul\":29100:29106   */\n      dup5\n        /* \"#utility.yul\":29038:29114   */\n      tag_432\n      jump\t// in\n    tag_724:\n        /* \"#utility.yul\":29030:29114   */\n      swap1\n      pop\n        /* \"#utility.yul\":28068:29121   */\n      swap7\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":29127:29318   */\n    tag_340:\n        /* \"#utility.yul\":29167:29170   */\n      0x00\n        /* \"#utility.yul\":29186:29206   */\n      tag_726\n        /* \"#utility.yul\":29204:29205   */\n      dup3\n        /* \"#utility.yul\":29186:29206   */\n      tag_383\n      jump\t// in\n    tag_726:\n        /* \"#utility.yul\":29181:29206   */\n      swap2\n      pop\n        /* \"#utility.yul\":29220:29240   */\n      tag_727\n        /* \"#utility.yul\":29238:29239   */\n      dup4\n        /* \"#utility.yul\":29220:29240   */\n      tag_383\n      jump\t// in\n    tag_727:\n        /* \"#utility.yul\":29215:29240   */\n      swap3\n      pop\n        /* \"#utility.yul\":29263:29264   */\n      dup3\n        /* \"#utility.yul\":29260:29261   */\n      dup3\n        /* \"#utility.yul\":29256:29265   */\n      add\n        /* \"#utility.yul\":29249:29265   */\n      swap1\n      pop\n        /* \"#utility.yul\":29284:29287   */\n      dup1\n        /* \"#utility.yul\":29281:29282   */\n      dup3\n        /* \"#utility.yul\":29278:29288   */\n      gt\n        /* \"#utility.yul\":29275:29311   */\n      iszero\n      tag_728\n      jumpi\n        /* \"#utility.yul\":29291:29309   */\n      tag_729\n      tag_427\n      jump\t// in\n    tag_729:\n        /* \"#utility.yul\":29275:29311   */\n    tag_728:\n        /* \"#utility.yul\":29127:29318   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":29324:29877   */\n    tag_365:\n        /* \"#utility.yul\":29501:29505   */\n      0x00\n        /* \"#utility.yul\":29539:29542   */\n      0x80\n        /* \"#utility.yul\":29528:29537   */\n      dup3\n        /* \"#utility.yul\":29524:29543   */\n      add\n        /* \"#utility.yul\":29516:29543   */\n      swap1\n      pop\n        /* \"#utility.yul\":29553:29624   */\n      tag_731\n        /* \"#utility.yul\":29621:29622   */\n      0x00\n        /* \"#utility.yul\":29610:29619   */\n      dup4\n        /* \"#utility.yul\":29606:29623   */\n      add\n        /* \"#utility.yul\":29597:29603   */\n      dup8\n        /* \"#utility.yul\":29553:29624   */\n      tag_419\n      jump\t// in\n    tag_731:\n        /* \"#utility.yul\":29634:29706   */\n      tag_732\n        /* \"#utility.yul\":29702:29704   */\n      0x20\n        /* \"#utility.yul\":29691:29700   */\n      dup4\n        /* \"#utility.yul\":29687:29705   */\n      add\n        /* \"#utility.yul\":29678:29684   */\n      dup7\n        /* \"#utility.yul\":29634:29706   */\n      tag_386\n      jump\t// in\n    tag_732:\n        /* \"#utility.yul\":29716:29788   */\n      tag_733\n        /* \"#utility.yul\":29784:29786   */\n      0x40\n        /* \"#utility.yul\":29773:29782   */\n      dup4\n        /* \"#utility.yul\":29769:29787   */\n      add\n        /* \"#utility.yul\":29760:29766   */\n      dup6\n        /* \"#utility.yul\":29716:29788   */\n      tag_386\n      jump\t// in\n    tag_733:\n        /* \"#utility.yul\":29798:29870   */\n      tag_734\n        /* \"#utility.yul\":29866:29868   */\n      0x60\n        /* \"#utility.yul\":29855:29864   */\n      dup4\n        /* \"#utility.yul\":29851:29869   */\n      add\n        /* \"#utility.yul\":29842:29848   */\n      dup5\n        /* \"#utility.yul\":29798:29870   */\n      tag_386\n      jump\t// in\n    tag_734:\n        /* \"#utility.yul\":29324:29877   */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":29883:30517   */\n    tag_375:\n        /* \"#utility.yul\":30104:30108   */\n      0x00\n        /* \"#utility.yul\":30142:30144   */\n      0x40\n        /* \"#utility.yul\":30131:30140   */\n      dup3\n        /* \"#utility.yul\":30127:30145   */\n      add\n        /* \"#utility.yul\":30119:30145   */\n      swap1\n      pop\n        /* \"#utility.yul\":30191:30200   */\n      dup2\n        /* \"#utility.yul\":30185:30189   */\n      dup2\n        /* \"#utility.yul\":30181:30201   */\n      sub\n        /* \"#utility.yul\":30177:30178   */\n      0x00\n        /* \"#utility.yul\":30166:30175   */\n      dup4\n        /* \"#utility.yul\":30162:30179   */\n      add\n        /* \"#utility.yul\":30155:30202   */\n      mstore\n        /* \"#utility.yul\":30219:30327   */\n      tag_736\n        /* \"#utility.yul\":30322:30326   */\n      dup2\n        /* \"#utility.yul\":30313:30319   */\n      dup6\n        /* \"#utility.yul\":30219:30327   */\n      tag_418\n      jump\t// in\n    tag_736:\n        /* \"#utility.yul\":30211:30327   */\n      swap1\n      pop\n        /* \"#utility.yul\":30374:30383   */\n      dup2\n        /* \"#utility.yul\":30368:30372   */\n      dup2\n        /* \"#utility.yul\":30364:30384   */\n      sub\n        /* \"#utility.yul\":30359:30361   */\n      0x20\n        /* \"#utility.yul\":30348:30357   */\n      dup4\n        /* \"#utility.yul\":30344:30362   */\n      add\n        /* \"#utility.yul\":30337:30385   */\n      mstore\n        /* \"#utility.yul\":30402:30510   */\n      tag_737\n        /* \"#utility.yul\":30505:30509   */\n      dup2\n        /* \"#utility.yul\":30496:30502   */\n      dup5\n        /* \"#utility.yul\":30402:30510   */\n      tag_418\n      jump\t// in\n    tag_737:\n        /* \"#utility.yul\":30394:30510   */\n      swap1\n      pop\n        /* \"#utility.yul\":29883:30517   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212206e981728272f3c0e563a277c4d69e97f45313db7a6195cf9a7dc51045513422c64736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_3202": {
									"entryPoint": null,
									"id": 3202,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_345": {
									"entryPoint": null,
									"id": 345,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_setURI_958": {
									"entryPoint": 267,
									"id": 958,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 288,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 562,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 584,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 632,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 649,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 828,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 676,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 1137,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 518,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 487,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 958,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 1099,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 976,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 1288,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 846,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 776,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 1259,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 967,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 1229,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x22": {
									"entryPoint": 731,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 686,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 1015,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 483,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"shift_left_dynamic": {
									"entryPoint": 861,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 1217,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 1071,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 873,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 1024,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 537,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 1067,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:6778:15",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:15",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:15",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:15"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:15"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:15",
														"type": ""
													}
												],
												"src": "7:75:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:15",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:15"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:15",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:15"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:81:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:65:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "411:42:15",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "400:54:15"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:15"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:15",
														"type": ""
													}
												],
												"src": "334:126:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "511:51:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "521:35:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:15"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "532:24:15"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:15"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "493:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "503:7:15",
														"type": ""
													}
												],
												"src": "466:96:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "611:79:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "668:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "677:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "680:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:15"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:15"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:15"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "624:43:15"
															},
															"nodeType": "YulIf",
															"src": "621:63:15"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "604:5:15",
														"type": ""
													}
												],
												"src": "568:122:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "759:80:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "769:22:15",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:15"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "778:13:15"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:15"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "800:33:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "800:33:15"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "737:6:15",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "745:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "753:5:15",
														"type": ""
													}
												],
												"src": "696:143:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "922:274:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "968:83:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "970:77:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "970:79:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "970:79:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "943:7:15"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "952:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "939:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "939:23:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "964:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "935:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "935:32:15"
															},
															"nodeType": "YulIf",
															"src": "932:119:15"
														},
														{
															"nodeType": "YulBlock",
															"src": "1061:128:15",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1076:15:15",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1090:1:15",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1080:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1105:74:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1151:9:15"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1162:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1147:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1147:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1171:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1115:31:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1115:64:15"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1105:6:15"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "892:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "903:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "915:6:15",
														"type": ""
													}
												],
												"src": "845:351:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1267:53:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1284:3:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1307:5:15"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1289:17:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1289:24:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1277:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "1277:37:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1277:37:15"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1255:5:15",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1262:3:15",
														"type": ""
													}
												],
												"src": "1202:118:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1424:124:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1434:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1446:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1457:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1442:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "1442:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1434:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1514:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1527:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1538:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1523:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1523:17:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1470:43:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "1470:71:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1470:71:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1396:9:15",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1408:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1419:4:15",
														"type": ""
													}
												],
												"src": "1326:222:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1613:40:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1624:22:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1640:5:15"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1634:5:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "1634:12:15"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "1624:6:15"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1596:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1606:6:15",
														"type": ""
													}
												],
												"src": "1554:99:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1687:152:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1704:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1707:77:15",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1697:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "1697:88:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1697:88:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1801:1:15",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1804:4:15",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1794:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "1794:15:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1794:15:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1825:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1828:4:15",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1818:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "1818:15:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1818:15:15"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "1659:180:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1873:152:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1890:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1893:77:15",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1883:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "1883:88:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1883:88:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1987:1:15",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1990:4:15",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1980:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "1980:15:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1980:15:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2011:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2014:4:15",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2004:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "2004:15:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2004:15:15"
														}
													]
												},
												"name": "panic_error_0x22",
												"nodeType": "YulFunctionDefinition",
												"src": "1845:180:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2082:269:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2092:22:15",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "2106:4:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2112:1:15",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "2102:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "2102:12:15"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "2092:6:15"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2123:38:15",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "2153:4:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2159:1:15",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2149:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "2149:12:15"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "2127:18:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2200:51:15",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "2214:27:15",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "2228:6:15"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2236:4:15",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "2224:3:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2224:17:15"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2214:6:15"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "2180:18:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2173:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "2173:26:15"
															},
															"nodeType": "YulIf",
															"src": "2170:81:15"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2303:42:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nodeType": "YulIdentifier",
																				"src": "2317:16:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2317:18:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2317:18:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "2267:18:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2290:6:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2298:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "2287:2:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2287:14:15"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "2264:2:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "2264:38:15"
															},
															"nodeType": "YulIf",
															"src": "2261:84:15"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "2066:4:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2075:6:15",
														"type": ""
													}
												],
												"src": "2031:320:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2411:87:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2421:11:15",
															"value": {
																"name": "ptr",
																"nodeType": "YulIdentifier",
																"src": "2429:3:15"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "2421:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2449:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "2452:3:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2442:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "2442:14:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2442:14:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2465:26:15",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2483:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2486:4:15",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nodeType": "YulIdentifier",
																	"src": "2473:9:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "2473:18:15"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "2465:4:15"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "2398:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "2406:4:15",
														"type": ""
													}
												],
												"src": "2357:141:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2548:49:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2558:33:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2576:5:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2583:2:15",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2572:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2572:14:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2588:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "2568:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "2568:23:15"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "2558:6:15"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2531:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "2541:6:15",
														"type": ""
													}
												],
												"src": "2504:93:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2656:54:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2666:37:15",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nodeType": "YulIdentifier",
																		"src": "2691:4:15"
																	},
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2697:5:15"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nodeType": "YulIdentifier",
																	"src": "2687:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "2687:16:15"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nodeType": "YulIdentifier",
																	"src": "2666:8:15"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nodeType": "YulTypedName",
														"src": "2631:4:15",
														"type": ""
													},
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2637:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nodeType": "YulTypedName",
														"src": "2647:8:15",
														"type": ""
													}
												],
												"src": "2603:107:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2792:317:15",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2802:35:15",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nodeType": "YulIdentifier",
																		"src": "2823:10:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2835:1:15",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "2819:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "2819:18:15"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nodeType": "YulTypedName",
																	"src": "2806:9:15",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2846:109:15",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nodeType": "YulIdentifier",
																		"src": "2877:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2888:66:15",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nodeType": "YulIdentifier",
																	"src": "2858:18:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "2858:97:15"
															},
															"variables": [
																{
																	"name": "mask",
																	"nodeType": "YulTypedName",
																	"src": "2850:4:15",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2964:51:15",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nodeType": "YulIdentifier",
																		"src": "2995:9:15"
																	},
																	{
																		"name": "toInsert",
																		"nodeType": "YulIdentifier",
																		"src": "3006:8:15"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nodeType": "YulIdentifier",
																	"src": "2976:18:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "2976:39:15"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nodeType": "YulIdentifier",
																	"src": "2964:8:15"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3024:30:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3037:5:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nodeType": "YulIdentifier",
																				"src": "3048:4:15"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "3044:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3044:9:15"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "3033:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "3033:21:15"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "3024:5:15"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3063:40:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3076:5:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nodeType": "YulIdentifier",
																				"src": "3087:8:15"
																			},
																			{
																				"name": "mask",
																				"nodeType": "YulIdentifier",
																				"src": "3097:4:15"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "3083:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3083:19:15"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "3073:2:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "3073:30:15"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "3063:6:15"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2753:5:15",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nodeType": "YulTypedName",
														"src": "2760:10:15",
														"type": ""
													},
													{
														"name": "toInsert",
														"nodeType": "YulTypedName",
														"src": "2772:8:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "2785:6:15",
														"type": ""
													}
												],
												"src": "2716:393:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3160:32:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3170:16:15",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "3181:5:15"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "3170:7:15"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3142:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "3152:7:15",
														"type": ""
													}
												],
												"src": "3115:77:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3230:28:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3240:12:15",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "3247:5:15"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "3240:3:15"
																}
															]
														}
													]
												},
												"name": "identity",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3216:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "3226:3:15",
														"type": ""
													}
												],
												"src": "3198:60:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3324:82:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3334:66:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "3392:5:15"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "3374:17:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3374:24:15"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nodeType": "YulIdentifier",
																			"src": "3365:8:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3365:34:15"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "3347:17:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "3347:53:15"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "3334:9:15"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3304:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "3314:9:15",
														"type": ""
													}
												],
												"src": "3264:142:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3459:28:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3469:12:15",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "3476:5:15"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "3469:3:15"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3445:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "3455:3:15",
														"type": ""
													}
												],
												"src": "3412:75:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3569:193:15",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3579:63:15",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nodeType": "YulIdentifier",
																		"src": "3634:7:15"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "3603:30:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "3603:39:15"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nodeType": "YulTypedName",
																	"src": "3583:16:15",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "3658:4:15"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nodeType": "YulIdentifier",
																						"src": "3698:4:15"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nodeType": "YulIdentifier",
																					"src": "3692:5:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3692:11:15"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "3705:6:15"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nodeType": "YulIdentifier",
																						"src": "3737:16:15"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "3713:23:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3713:41:15"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nodeType": "YulIdentifier",
																			"src": "3664:27:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3664:91:15"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nodeType": "YulIdentifier",
																	"src": "3651:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "3651:105:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3651:105:15"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "3546:4:15",
														"type": ""
													},
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "3552:6:15",
														"type": ""
													},
													{
														"name": "value_0",
														"nodeType": "YulTypedName",
														"src": "3560:7:15",
														"type": ""
													}
												],
												"src": "3493:269:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3817:24:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3827:8:15",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3834:1:15",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "3827:3:15"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "3813:3:15",
														"type": ""
													}
												],
												"src": "3768:73:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3900:136:15",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3910:46:15",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "3924:30:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "3924:32:15"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nodeType": "YulTypedName",
																	"src": "3914:6:15",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "4009:4:15"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "4015:6:15"
																	},
																	{
																		"name": "zero_0",
																		"nodeType": "YulIdentifier",
																		"src": "4023:6:15"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "3965:43:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "3965:65:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3965:65:15"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "3886:4:15",
														"type": ""
													},
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "3892:6:15",
														"type": ""
													}
												],
												"src": "3847:189:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4092:136:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4159:63:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nodeType": "YulIdentifier",
																					"src": "4203:5:15"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4210:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nodeType": "YulIdentifier",
																				"src": "4173:29:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4173:39:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4173:39:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nodeType": "YulIdentifier",
																		"src": "4112:5:15"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "4119:3:15"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "4109:2:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "4109:14:15"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "4124:26:15",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "4126:22:15",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nodeType": "YulIdentifier",
																					"src": "4139:5:15"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4146:1:15",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "4135:3:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4135:13:15"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nodeType": "YulIdentifier",
																				"src": "4126:5:15"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "4106:2:15",
																"statements": []
															},
															"src": "4102:120:15"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nodeType": "YulTypedName",
														"src": "4080:5:15",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4087:3:15",
														"type": ""
													}
												],
												"src": "4042:186:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4313:464:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4339:431:15",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "4353:54:15",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "4401:5:15"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nodeType": "YulIdentifier",
																				"src": "4369:31:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4369:38:15"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nodeType": "YulTypedName",
																				"src": "4357:8:15",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "4420:63:15",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nodeType": "YulIdentifier",
																					"src": "4443:8:15"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nodeType": "YulIdentifier",
																							"src": "4471:10:15"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nodeType": "YulIdentifier",
																						"src": "4453:17:15"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4453:29:15"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "4439:3:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4439:44:15"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nodeType": "YulTypedName",
																				"src": "4424:11:15",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "4640:27:15",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "4642:23:15",
																					"value": {
																						"name": "dataArea",
																						"nodeType": "YulIdentifier",
																						"src": "4657:8:15"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nodeType": "YulIdentifier",
																							"src": "4642:11:15"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nodeType": "YulIdentifier",
																					"src": "4624:10:15"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4636:2:15",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nodeType": "YulIdentifier",
																				"src": "4621:2:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4621:18:15"
																		},
																		"nodeType": "YulIf",
																		"src": "4618:49:15"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nodeType": "YulIdentifier",
																					"src": "4709:11:15"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nodeType": "YulIdentifier",
																							"src": "4726:8:15"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nodeType": "YulIdentifier",
																									"src": "4754:3:15"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nodeType": "YulIdentifier",
																								"src": "4736:17:15"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "4736:22:15"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "4722:3:15"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4722:37:15"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nodeType": "YulIdentifier",
																				"src": "4680:28:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4680:80:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4680:80:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "4330:3:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4335:2:15",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4327:2:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "4327:11:15"
															},
															"nodeType": "YulIf",
															"src": "4324:446:15"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "4289:5:15",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "4296:3:15",
														"type": ""
													},
													{
														"name": "startIndex",
														"nodeType": "YulTypedName",
														"src": "4301:10:15",
														"type": ""
													}
												],
												"src": "4234:543:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4846:54:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4856:37:15",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nodeType": "YulIdentifier",
																		"src": "4881:4:15"
																	},
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4887:5:15"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "4877:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "4877:16:15"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nodeType": "YulIdentifier",
																	"src": "4856:8:15"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nodeType": "YulTypedName",
														"src": "4821:4:15",
														"type": ""
													},
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4827:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nodeType": "YulTypedName",
														"src": "4837:8:15",
														"type": ""
													}
												],
												"src": "4783:117:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4957:118:15",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4967:68:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5016:1:15",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nodeType": "YulIdentifier",
																						"src": "5019:5:15"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nodeType": "YulIdentifier",
																					"src": "5012:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5012:13:15"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5031:1:15",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "5027:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5027:6:15"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nodeType": "YulIdentifier",
																			"src": "4983:28:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4983:51:15"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "4979:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "4979:56:15"
															},
															"variables": [
																{
																	"name": "mask",
																	"nodeType": "YulTypedName",
																	"src": "4971:4:15",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5044:25:15",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "5058:4:15"
																	},
																	{
																		"name": "mask",
																		"nodeType": "YulIdentifier",
																		"src": "5064:4:15"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "5054:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "5054:15:15"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "5044:6:15"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "4934:4:15",
														"type": ""
													},
													{
														"name": "bytes",
														"nodeType": "YulTypedName",
														"src": "4940:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "4950:6:15",
														"type": ""
													}
												],
												"src": "4906:169:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5161:214:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5294:37:15",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "5321:4:15"
																	},
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "5327:3:15"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nodeType": "YulIdentifier",
																	"src": "5302:18:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "5302:29:15"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "5294:4:15"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5340:29:15",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "5351:4:15"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5361:1:15",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nodeType": "YulIdentifier",
																				"src": "5364:3:15"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "5357:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5357:11:15"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "5348:2:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "5348:21:15"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nodeType": "YulIdentifier",
																	"src": "5340:4:15"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "5142:4:15",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "5148:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nodeType": "YulTypedName",
														"src": "5156:4:15",
														"type": ""
													}
												],
												"src": "5080:295:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5472:1303:15",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5483:51:15",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "5530:3:15"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "5497:32:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "5497:37:15"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nodeType": "YulTypedName",
																	"src": "5487:6:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5619:22:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "5621:16:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5621:18:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5621:18:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "5591:6:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5599:18:15",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5588:2:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "5588:30:15"
															},
															"nodeType": "YulIf",
															"src": "5585:56:15"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5651:52:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nodeType": "YulIdentifier",
																				"src": "5697:4:15"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nodeType": "YulIdentifier",
																			"src": "5691:5:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5691:11:15"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nodeType": "YulIdentifier",
																	"src": "5665:25:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "5665:38:15"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nodeType": "YulTypedName",
																	"src": "5655:6:15",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "5796:4:15"
																	},
																	{
																		"name": "oldLen",
																		"nodeType": "YulIdentifier",
																		"src": "5802:6:15"
																	},
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "5810:6:15"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nodeType": "YulIdentifier",
																	"src": "5750:45:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "5750:67:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5750:67:15"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5827:18:15",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "5844:1:15",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulTypedName",
																	"src": "5831:9:15",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5855:17:15",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "5868:4:15",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulIdentifier",
																	"src": "5855:9:15"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "5919:611:15",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "5933:37:15",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "5952:6:15"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "5964:4:15",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nodeType": "YulIdentifier",
																								"src": "5960:3:15"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "5960:9:15"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nodeType": "YulIdentifier",
																						"src": "5948:3:15"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5948:22:15"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nodeType": "YulTypedName",
																						"src": "5937:7:15",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "5984:51:15",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "6030:4:15"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nodeType": "YulIdentifier",
																						"src": "5998:31:15"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5998:37:15"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nodeType": "YulTypedName",
																						"src": "5988:6:15",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "6048:10:15",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6057:1:15",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nodeType": "YulTypedName",
																						"src": "6052:1:15",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "6116:163:15",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "6141:6:15"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nodeType": "YulIdentifier",
																														"src": "6159:3:15"
																													},
																													{
																														"name": "srcOffset",
																														"nodeType": "YulIdentifier",
																														"src": "6164:9:15"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nodeType": "YulIdentifier",
																													"src": "6155:3:15"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "6155:19:15"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nodeType": "YulIdentifier",
																											"src": "6149:5:15"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "6149:26:15"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "6134:6:15"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "6134:42:15"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "6134:42:15"
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "6193:24:15",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "6207:6:15"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "6215:1:15",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "6203:3:15"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "6203:14:15"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nodeType": "YulIdentifier",
																									"src": "6193:6:15"
																								}
																							]
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "6234:31:15",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nodeType": "YulIdentifier",
																										"src": "6251:9:15"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "6262:2:15",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "6247:3:15"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "6247:18:15"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nodeType": "YulIdentifier",
																									"src": "6234:9:15"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "6082:1:15"
																						},
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "6085:7:15"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "6079:2:15"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6079:14:15"
																				},
																				"nodeType": "YulForLoop",
																				"post": {
																					"nodeType": "YulBlock",
																					"src": "6094:21:15",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "6096:17:15",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nodeType": "YulIdentifier",
																										"src": "6105:1:15"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "6108:4:15",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "6101:3:15"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "6101:12:15"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "6096:1:15"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nodeType": "YulBlock",
																					"src": "6075:3:15",
																					"statements": []
																				},
																				"src": "6071:208:15"
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "6315:156:15",
																					"statements": [
																						{
																							"nodeType": "YulVariableDeclaration",
																							"src": "6333:43:15",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "6360:3:15"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "6365:9:15"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "6356:3:15"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "6356:19:15"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "6350:5:15"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "6350:26:15"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nodeType": "YulTypedName",
																									"src": "6337:9:15",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "6400:6:15"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nodeType": "YulIdentifier",
																												"src": "6427:9:15"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nodeType": "YulIdentifier",
																														"src": "6442:6:15"
																													},
																													{
																														"kind": "number",
																														"nodeType": "YulLiteral",
																														"src": "6450:4:15",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nodeType": "YulIdentifier",
																													"src": "6438:3:15"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "6438:17:15"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nodeType": "YulIdentifier",
																											"src": "6408:18:15"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "6408:48:15"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "6393:6:15"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "6393:64:15"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "6393:64:15"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "6298:7:15"
																						},
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "6307:6:15"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "6295:2:15"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6295:19:15"
																				},
																				"nodeType": "YulIf",
																				"src": "6292:179:15"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "6491:4:15"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nodeType": "YulIdentifier",
																											"src": "6505:6:15"
																										},
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "6513:1:15",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nodeType": "YulIdentifier",
																										"src": "6501:3:15"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "6501:14:15"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "6517:1:15",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "6497:3:15"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "6497:22:15"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "6484:6:15"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6484:36:15"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "6484:36:15"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "5912:618:15",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5917:1:15",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "6547:222:15",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "6561:14:15",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6574:1:15",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nodeType": "YulTypedName",
																						"src": "6565:5:15",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "6598:67:15",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "6616:35:15",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "6635:3:15"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "6640:9:15"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "6631:3:15"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "6631:19:15"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "6625:5:15"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "6625:26:15"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "6616:5:15"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nodeType": "YulIdentifier",
																					"src": "6591:6:15"
																				},
																				"nodeType": "YulIf",
																				"src": "6588:77:15"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "6685:4:15"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "6744:5:15"
																								},
																								{
																									"name": "newLen",
																									"nodeType": "YulIdentifier",
																									"src": "6751:6:15"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nodeType": "YulIdentifier",
																								"src": "6691:52:15"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "6691:67:15"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "6678:6:15"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6678:81:15"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "6678:81:15"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "6539:230:15",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "5892:6:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5900:2:15",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5889:2:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "5889:14:15"
															},
															"nodeType": "YulSwitch",
															"src": "5882:887:15"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "5461:4:15",
														"type": ""
													},
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "5467:3:15",
														"type": ""
													}
												],
												"src": "5380:1395:15"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n}\n",
									"id": 15,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801562000010575f80fd5b506040516200350638038062003506833981810160405281019062000036919062000248565b806040518060400160405280602081526020017f68747470733a2f2f736f6d2e657465726e697461732e67616d65732f6a736f6e8152506200007e816200010b60201b60201c565b505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603620000f2575f6040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401620000e9919062000289565b60405180910390fd5b62000103816200012060201b60201c565b5050620005ec565b80600290816200011c919062000508565b5050565b5f60035f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160035f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6200021282620001e7565b9050919050565b620002248162000206565b81146200022f575f80fd5b50565b5f81519050620002428162000219565b92915050565b5f6020828403121562000260576200025f620001e3565b5b5f6200026f8482850162000232565b91505092915050565b620002838162000206565b82525050565b5f6020820190506200029e5f83018462000278565b92915050565b5f81519050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806200032057607f821691505b602082108103620003365762000335620002db565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f600883026200039a7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826200035d565b620003a686836200035d565b95508019841693508086168417925050509392505050565b5f819050919050565b5f819050919050565b5f620003f0620003ea620003e484620003be565b620003c7565b620003be565b9050919050565b5f819050919050565b6200040b83620003d0565b620004236200041a82620003f7565b84845462000369565b825550505050565b5f90565b620004396200042b565b6200044681848462000400565b505050565b5b818110156200046d57620004615f826200042f565b6001810190506200044c565b5050565b601f821115620004bc5762000486816200033c565b62000491846200034e565b81016020851015620004a1578190505b620004b9620004b0856200034e565b8301826200044b565b50505b505050565b5f82821c905092915050565b5f620004de5f1984600802620004c1565b1980831691505092915050565b5f620004f88383620004cd565b9150826002028217905092915050565b6200051382620002a4565b67ffffffffffffffff8111156200052f576200052e620002ae565b5b6200053b825462000308565b6200054882828562000471565b5f60209050601f8311600181146200057e575f841562000569578287015190505b620005758582620004eb565b865550620005e4565b601f1984166200058e866200033c565b5f5b82811015620005b75784890151825560018201915060208501945060208101905062000590565b86831015620005d75784890151620005d3601f891682620004cd565b8355505b6001600288020188555050505b505050505050565b612f0c80620005fa5f395ff3fe608060405234801561000f575f80fd5b5060043610610129575f3560e01c8063715018a6116100ab578063bd85b0391161006f578063bd85b03914610329578063e985e9c514610359578063f242432a14610389578063f2fde38b146103a5578063f5298aca146103c157610129565b8063715018a6146102ab578063731133e9146102b55780638da5cb5b146102d1578063a168d873146102ef578063a22cb4651461030d57610129565b80632eb2c2d6116100f25780632eb2c2d6146101f75780634e1273f4146102135780634f558e79146102435780636b20c45414610273578063711953ef1461028f57610129565b8062fdd58e1461012d57806301ffc9a71461015d5780630e89341c1461018d57806318160ddd146101bd5780631f7fdffa146101db575b5f80fd5b61014760048036038101906101429190612006565b6103dd565b6040516101549190612053565b60405180910390f35b610177600480360381019061017291906120c1565b610432565b6040516101849190612106565b60405180910390f35b6101a760048036038101906101a2919061211f565b610513565b6040516101b491906121d4565b60405180910390f35b6101c56105a5565b6040516101d29190612053565b60405180910390f35b6101f560048036038101906101f091906123e4565b6105ae565b005b610211600480360381019061020c919061249c565b6106de565b005b61022d60048036038101906102289190612627565b610785565b60405161023a9190612754565b60405180910390f35b61025d6004803603810190610258919061211f565b610892565b60405161026a9190612106565b60405180910390f35b61028d60048036038101906102889190612774565b6108a5565b005b6102a960048036038101906102a491906127fc565b610951565b005b6102b3610a2b565b005b6102cf60048036038101906102ca9190612827565b610a3e565b005b6102d9610b6e565b6040516102e691906128b6565b60405180910390f35b6102f7610b96565b60405161030491906128b6565b60405180910390f35b610327600480360381019061032291906128f9565b610bbb565b005b610343600480360381019061033e919061211f565b610bd1565b6040516103509190612053565b60405180910390f35b610373600480360381019061036e9190612937565b610beb565b6040516103809190612106565b60405180910390f35b6103a3600480360381019061039e9190612975565b610c79565b005b6103bf60048036038101906103ba91906127fc565b610d20565b005b6103db60048036038101906103d69190612a08565b610da4565b005b5f805f8381526020019081526020015f205f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b5f7fd9b67a26000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806104fc57507f0e89341c000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b8061050c575061050b82610e50565b5b9050919050565b60606002805461052290612a85565b80601f016020809104026020016040519081016040528092919081815260200182805461054e90612a85565b80156105995780601f1061057057610100808354040283529160200191610599565b820191905f5260205f20905b81548152906001019060200180831161057c57829003601f168201915b50505050509050919050565b5f600554905090565b5f73ffffffffffffffffffffffffffffffffffffffff1660065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff160361063d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161063490612aff565b60405180910390fd5b60065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146106cc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106c390612b67565b60405180910390fd5b6106d884848484610eb9565b50505050565b5f6106e7610f3c565b90508073ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff161415801561072c575061072a8682610beb565b155b156107705780866040517fe237d922000000000000000000000000000000000000000000000000000000008152600401610767929190612b85565b60405180910390fd5b61077d8686868686610f43565b505050505050565b606081518351146107d157815183516040517f5b0599910000000000000000000000000000000000000000000000000000000081526004016107c8929190612bac565b60405180910390fd5b5f835167ffffffffffffffff8111156107ed576107ec6121f8565b5b60405190808252806020026020018201604052801561081b5781602001602082028036833780820191505090505b5090505f5b84518110156108875761085761083f828761103790919063ffffffff16565b610852838761104a90919063ffffffff16565b6103dd565b82828151811061086a57610869612bd3565b5b6020026020010181815250508061088090612c2d565b9050610820565b508091505092915050565b5f8061089d83610bd1565b119050919050565b6108ad610f3c565b73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141580156108f657506108f4836108ef610f3c565b610beb565b155b1561094157610903610f3c565b836040517fe237d922000000000000000000000000000000000000000000000000000000008152600401610938929190612b85565b60405180910390fd5b61094c83838361105d565b505050565b6109596110ed565b5f73ffffffffffffffffffffffffffffffffffffffff1660065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146109e8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109df90612cbe565b60405180910390fd5b8060065f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b610a336110ed565b610a3c5f611174565b565b5f73ffffffffffffffffffffffffffffffffffffffff1660065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603610acd576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ac490612aff565b60405180910390fd5b60065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610b5c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b5390612b67565b60405180910390fd5b610b6884848484611237565b50505050565b5f60035f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610bcd610bc6610f3c565b83836112cc565b5050565b5f60045f8381526020019081526020015f20549050919050565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16905092915050565b5f610c82610f3c565b90508073ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff1614158015610cc75750610cc58682610beb565b155b15610d0b5780866040517fe237d922000000000000000000000000000000000000000000000000000000008152600401610d02929190612b85565b60405180910390fd5b610d188686868686611435565b505050505050565b610d286110ed565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610d98575f6040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401610d8f91906128b6565b60405180910390fd5b610da181611174565b50565b610dac610f3c565b73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614158015610df55750610df383610dee610f3c565b610beb565b155b15610e4057610e02610f3c565b836040517fe237d922000000000000000000000000000000000000000000000000000000008152600401610e37929190612b85565b60405180910390fd5b610e4b83838361153b565b505050565b5f7f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610f29575f6040517f57f447ce000000000000000000000000000000000000000000000000000000008152600401610f2091906128b6565b60405180910390fd5b610f365f858585856115dd565b50505050565b5f33905090565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610fb3575f6040517f57f447ce000000000000000000000000000000000000000000000000000000008152600401610faa91906128b6565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1603611023575f6040517f01a8351400000000000000000000000000000000000000000000000000000000815260040161101a91906128b6565b60405180910390fd5b61103085858585856115dd565b5050505050565b5f60208202602084010151905092915050565b5f60208202602084010151905092915050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036110cd575f6040517f01a835140000000000000000000000000000000000000000000000000000000081526004016110c491906128b6565b60405180910390fd5b6110e8835f848460405180602001604052805f8152506115dd565b505050565b6110f5610f3c565b73ffffffffffffffffffffffffffffffffffffffff16611113610b6e565b73ffffffffffffffffffffffffffffffffffffffff161461117257611136610f3c565b6040517f118cdaa700000000000000000000000000000000000000000000000000000000815260040161116991906128b6565b60405180910390fd5b565b5f60035f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160035f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16036112a7575f6040517f57f447ce00000000000000000000000000000000000000000000000000000000815260040161129e91906128b6565b60405180910390fd5b5f806112b38585611689565b915091506112c45f878484876115dd565b505050505050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361133c575f6040517fced3e10000000000000000000000000000000000000000000000000000000000815260040161133391906128b6565b60405180910390fd5b8060015f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31836040516114289190612106565b60405180910390a3505050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16036114a5575f6040517f57f447ce00000000000000000000000000000000000000000000000000000000815260040161149c91906128b6565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1603611515575f6040517f01a8351400000000000000000000000000000000000000000000000000000000815260040161150c91906128b6565b60405180910390fd5b5f806115218585611689565b9150915061153287878484876115dd565b50505050505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036115ab575f6040517f01a835140000000000000000000000000000000000000000000000000000000081526004016115a291906128b6565b60405180910390fd5b5f806115b78484611689565b915091506115d6855f848460405180602001604052805f8152506115dd565b5050505050565b6115e9858585856116b9565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614611682575f611625610f3c565b90506001845103611671575f6116445f8661104a90919063ffffffff16565b90505f61165a5f8661104a90919063ffffffff16565b905061166a8389898585896116cb565b5050611680565b61167f81878787878761187a565b5b505b5050505050565b60608060405191506001825283602083015260408201905060018152826020820152604081016040529250929050565b6116c584848484611a29565b50505050565b5f8473ffffffffffffffffffffffffffffffffffffffff163b1115611872578373ffffffffffffffffffffffffffffffffffffffff1663f23a6e6187878686866040518663ffffffff1660e01b815260040161172b959493929190612d2e565b6020604051808303815f875af192505050801561176657506040513d601f19601f820116820180604052508101906117639190612d9a565b60015b6117e7573d805f8114611794576040519150601f19603f3d011682016040523d82523d5f602084013e611799565b606091505b505f8151036117df57846040517f57f447ce0000000000000000000000000000000000000000000000000000000081526004016117d691906128b6565b60405180910390fd5b805181602001fd5b63f23a6e6160e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161461187057846040517f57f447ce00000000000000000000000000000000000000000000000000000000815260040161186791906128b6565b60405180910390fd5b505b505050505050565b5f8473ffffffffffffffffffffffffffffffffffffffff163b1115611a21578373ffffffffffffffffffffffffffffffffffffffff1663bc197c8187878686866040518663ffffffff1660e01b81526004016118da959493929190612dc5565b6020604051808303815f875af192505050801561191557506040513d601f19601f820116820180604052508101906119129190612d9a565b60015b611996573d805f8114611943576040519150601f19603f3d011682016040523d82523d5f602084013e611948565b606091505b505f81510361198e57846040517f57f447ce00000000000000000000000000000000000000000000000000000000815260040161198591906128b6565b60405180910390fd5b805181602001fd5b63bc197c8160e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614611a1f57846040517f57f447ce000000000000000000000000000000000000000000000000000000008152600401611a1691906128b6565b60405180910390fd5b505b505050505050565b611a3584848484611bd2565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603611b0e575f805b8351811015611af3575f838281518110611a8857611a87612bd3565b5b602002602001015190508060045f878581518110611aa957611aa8612bd3565b5b602002602001015181526020019081526020015f205f828254611acc9190612e2b565b925050819055508083611adf9190612e2b565b92505080611aec90612c2d565b9050611a6b565b508060055f828254611b059190612e2b565b92505081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611bcc575f805b8351811015611bba575f838281518110611b6157611b60612bd3565b5b602002602001015190508060045f878581518110611b8257611b81612bd3565b5b602002602001015181526020019081526020015f205f828254039250508190555080830192505080611bb390612c2d565b9050611b44565b508060055f8282540392505081905550505b50505050565b8051825114611c1c57815181516040517f5b059991000000000000000000000000000000000000000000000000000000008152600401611c13929190612bac565b60405180910390fd5b5f611c25610f3c565b90505f5b8351811015611e27575f611c46828661104a90919063ffffffff16565b90505f611c5c838661104a90919063ffffffff16565b90505f73ffffffffffffffffffffffffffffffffffffffff168873ffffffffffffffffffffffffffffffffffffffff1614611d7f575f805f8481526020019081526020015f205f8a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015611d2b57888183856040517f03dee4c5000000000000000000000000000000000000000000000000000000008152600401611d229493929190612e5e565b60405180910390fd5b8181035f808581526020019081526020015f205f8b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff1614611e1457805f808481526020019081526020015f205f8973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f828254611e0c9190612e2b565b925050819055505b505080611e2090612c2d565b9050611c29565b506001835103611ee2575f611e455f8561104a90919063ffffffff16565b90505f611e5b5f8561104a90919063ffffffff16565b90508573ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f628585604051611ed3929190612bac565b60405180910390a45050611f61565b8373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8686604051611f58929190612ea1565b60405180910390a45b5050505050565b5f604051905090565b5f80fd5b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f611fa282611f79565b9050919050565b611fb281611f98565b8114611fbc575f80fd5b50565b5f81359050611fcd81611fa9565b92915050565b5f819050919050565b611fe581611fd3565b8114611fef575f80fd5b50565b5f8135905061200081611fdc565b92915050565b5f806040838503121561201c5761201b611f71565b5b5f61202985828601611fbf565b925050602061203a85828601611ff2565b9150509250929050565b61204d81611fd3565b82525050565b5f6020820190506120665f830184612044565b92915050565b5f7fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6120a08161206c565b81146120aa575f80fd5b50565b5f813590506120bb81612097565b92915050565b5f602082840312156120d6576120d5611f71565b5b5f6120e3848285016120ad565b91505092915050565b5f8115159050919050565b612100816120ec565b82525050565b5f6020820190506121195f8301846120f7565b92915050565b5f6020828403121561213457612133611f71565b5b5f61214184828501611ff2565b91505092915050565b5f81519050919050565b5f82825260208201905092915050565b5f5b83811015612181578082015181840152602081019050612166565b5f8484015250505050565b5f601f19601f8301169050919050565b5f6121a68261214a565b6121b08185612154565b93506121c0818560208601612164565b6121c98161218c565b840191505092915050565b5f6020820190508181035f8301526121ec818461219c565b905092915050565b5f80fd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b61222e8261218c565b810181811067ffffffffffffffff8211171561224d5761224c6121f8565b5b80604052505050565b5f61225f611f68565b905061226b8282612225565b919050565b5f67ffffffffffffffff82111561228a576122896121f8565b5b602082029050602081019050919050565b5f80fd5b5f6122b16122ac84612270565b612256565b905080838252602082019050602084028301858111156122d4576122d361229b565b5b835b818110156122fd57806122e98882611ff2565b8452602084019350506020810190506122d6565b5050509392505050565b5f82601f83011261231b5761231a6121f4565b5b813561232b84826020860161229f565b91505092915050565b5f80fd5b5f67ffffffffffffffff821115612352576123516121f8565b5b61235b8261218c565b9050602081019050919050565b828183375f83830152505050565b5f61238861238384612338565b612256565b9050828152602081018484840111156123a4576123a3612334565b5b6123af848285612368565b509392505050565b5f82601f8301126123cb576123ca6121f4565b5b81356123db848260208601612376565b91505092915050565b5f805f80608085870312156123fc576123fb611f71565b5b5f61240987828801611fbf565b945050602085013567ffffffffffffffff81111561242a57612429611f75565b5b61243687828801612307565b935050604085013567ffffffffffffffff81111561245757612456611f75565b5b61246387828801612307565b925050606085013567ffffffffffffffff81111561248457612483611f75565b5b612490878288016123b7565b91505092959194509250565b5f805f805f60a086880312156124b5576124b4611f71565b5b5f6124c288828901611fbf565b95505060206124d388828901611fbf565b945050604086013567ffffffffffffffff8111156124f4576124f3611f75565b5b61250088828901612307565b935050606086013567ffffffffffffffff81111561252157612520611f75565b5b61252d88828901612307565b925050608086013567ffffffffffffffff81111561254e5761254d611f75565b5b61255a888289016123b7565b9150509295509295909350565b5f67ffffffffffffffff821115612581576125806121f8565b5b602082029050602081019050919050565b5f6125a461259f84612567565b612256565b905080838252602082019050602084028301858111156125c7576125c661229b565b5b835b818110156125f057806125dc8882611fbf565b8452602084019350506020810190506125c9565b5050509392505050565b5f82601f83011261260e5761260d6121f4565b5b813561261e848260208601612592565b91505092915050565b5f806040838503121561263d5761263c611f71565b5b5f83013567ffffffffffffffff81111561265a57612659611f75565b5b612666858286016125fa565b925050602083013567ffffffffffffffff81111561268757612686611f75565b5b61269385828601612307565b9150509250929050565b5f81519050919050565b5f82825260208201905092915050565b5f819050602082019050919050565b6126cf81611fd3565b82525050565b5f6126e083836126c6565b60208301905092915050565b5f602082019050919050565b5f6127028261269d565b61270c81856126a7565b9350612717836126b7565b805f5b8381101561274757815161272e88826126d5565b9750612739836126ec565b92505060018101905061271a565b5085935050505092915050565b5f6020820190508181035f83015261276c81846126f8565b905092915050565b5f805f6060848603121561278b5761278a611f71565b5b5f61279886828701611fbf565b935050602084013567ffffffffffffffff8111156127b9576127b8611f75565b5b6127c586828701612307565b925050604084013567ffffffffffffffff8111156127e6576127e5611f75565b5b6127f286828701612307565b9150509250925092565b5f6020828403121561281157612810611f71565b5b5f61281e84828501611fbf565b91505092915050565b5f805f806080858703121561283f5761283e611f71565b5b5f61284c87828801611fbf565b945050602061285d87828801611ff2565b935050604061286e87828801611ff2565b925050606085013567ffffffffffffffff81111561288f5761288e611f75565b5b61289b878288016123b7565b91505092959194509250565b6128b081611f98565b82525050565b5f6020820190506128c95f8301846128a7565b92915050565b6128d8816120ec565b81146128e2575f80fd5b50565b5f813590506128f3816128cf565b92915050565b5f806040838503121561290f5761290e611f71565b5b5f61291c85828601611fbf565b925050602061292d858286016128e5565b9150509250929050565b5f806040838503121561294d5761294c611f71565b5b5f61295a85828601611fbf565b925050602061296b85828601611fbf565b9150509250929050565b5f805f805f60a0868803121561298e5761298d611f71565b5b5f61299b88828901611fbf565b95505060206129ac88828901611fbf565b94505060406129bd88828901611ff2565b93505060606129ce88828901611ff2565b925050608086013567ffffffffffffffff8111156129ef576129ee611f75565b5b6129fb888289016123b7565b9150509295509295909350565b5f805f60608486031215612a1f57612a1e611f71565b5b5f612a2c86828701611fbf565b9350506020612a3d86828701611ff2565b9250506040612a4e86828701611ff2565b9150509250925092565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f6002820490506001821680612a9c57607f821691505b602082108103612aaf57612aae612a58565b5b50919050565b7f47616d652061646472657373206e6f74207365742e00000000000000000000005f82015250565b5f612ae9601583612154565b9150612af482612ab5565b602082019050919050565b5f6020820190508181035f830152612b1681612add565b9050919050565b7f4f6e6c792067616d6520636f6e74726163742063616e206d696e742e000000005f82015250565b5f612b51601c83612154565b9150612b5c82612b1d565b602082019050919050565b5f6020820190508181035f830152612b7e81612b45565b9050919050565b5f604082019050612b985f8301856128a7565b612ba560208301846128a7565b9392505050565b5f604082019050612bbf5f830185612044565b612bcc6020830184612044565b9392505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f612c3782611fd3565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203612c6957612c68612c00565b5b600182019050919050565b7f47616d65206164647265737320697320616c7265616479207365742e000000005f82015250565b5f612ca8601c83612154565b9150612cb382612c74565b602082019050919050565b5f6020820190508181035f830152612cd581612c9c565b9050919050565b5f81519050919050565b5f82825260208201905092915050565b5f612d0082612cdc565b612d0a8185612ce6565b9350612d1a818560208601612164565b612d238161218c565b840191505092915050565b5f60a082019050612d415f8301886128a7565b612d4e60208301876128a7565b612d5b6040830186612044565b612d686060830185612044565b8181036080830152612d7a8184612cf6565b90509695505050505050565b5f81519050612d9481612097565b92915050565b5f60208284031215612daf57612dae611f71565b5b5f612dbc84828501612d86565b91505092915050565b5f60a082019050612dd85f8301886128a7565b612de560208301876128a7565b8181036040830152612df781866126f8565b90508181036060830152612e0b81856126f8565b90508181036080830152612e1f8184612cf6565b90509695505050505050565b5f612e3582611fd3565b9150612e4083611fd3565b9250828201905080821115612e5857612e57612c00565b5b92915050565b5f608082019050612e715f8301876128a7565b612e7e6020830186612044565b612e8b6040830185612044565b612e986060830184612044565b95945050505050565b5f6040820190508181035f830152612eb981856126f8565b90508181036020830152612ecd81846126f8565b9050939250505056fea26469706673582212206e981728272f3c0e563a277c4d69e97f45313db7a6195cf9a7dc51045513422c64736f6c63430008140033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x10 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x3506 CODESIZE SUB DUP1 PUSH3 0x3506 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x36 SWAP2 SWAP1 PUSH3 0x248 JUMP JUMPDEST DUP1 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x68747470733A2F2F736F6D2E657465726E697461732E67616D65732F6A736F6E DUP2 MSTORE POP PUSH3 0x7E DUP2 PUSH3 0x10B PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0xF2 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0xE9 SWAP2 SWAP1 PUSH3 0x289 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x103 DUP2 PUSH3 0x120 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP PUSH3 0x5EC JUMP JUMPDEST DUP1 PUSH1 0x2 SWAP1 DUP2 PUSH3 0x11C SWAP2 SWAP1 PUSH3 0x508 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0x3 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x3 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0x212 DUP3 PUSH3 0x1E7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x224 DUP2 PUSH3 0x206 JUMP JUMPDEST DUP2 EQ PUSH3 0x22F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH3 0x242 DUP2 PUSH3 0x219 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x260 JUMPI PUSH3 0x25F PUSH3 0x1E3 JUMP JUMPDEST JUMPDEST PUSH0 PUSH3 0x26F DUP5 DUP3 DUP6 ADD PUSH3 0x232 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x283 DUP2 PUSH3 0x206 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x29E PUSH0 DUP4 ADD DUP5 PUSH3 0x278 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x320 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x336 JUMPI PUSH3 0x335 PUSH3 0x2DB JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH3 0x39A PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH3 0x35D JUMP JUMPDEST PUSH3 0x3A6 DUP7 DUP4 PUSH3 0x35D JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0x3F0 PUSH3 0x3EA PUSH3 0x3E4 DUP5 PUSH3 0x3BE JUMP JUMPDEST PUSH3 0x3C7 JUMP JUMPDEST PUSH3 0x3BE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x40B DUP4 PUSH3 0x3D0 JUMP JUMPDEST PUSH3 0x423 PUSH3 0x41A DUP3 PUSH3 0x3F7 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH3 0x369 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH3 0x439 PUSH3 0x42B JUMP JUMPDEST PUSH3 0x446 DUP2 DUP5 DUP5 PUSH3 0x400 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x46D JUMPI PUSH3 0x461 PUSH0 DUP3 PUSH3 0x42F JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0x44C JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x4BC JUMPI PUSH3 0x486 DUP2 PUSH3 0x33C JUMP JUMPDEST PUSH3 0x491 DUP5 PUSH3 0x34E JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0x4A1 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH3 0x4B9 PUSH3 0x4B0 DUP6 PUSH3 0x34E JUMP JUMPDEST DUP4 ADD DUP3 PUSH3 0x44B JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH3 0x4DE PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH3 0x4C1 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH3 0x4F8 DUP4 DUP4 PUSH3 0x4CD JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x513 DUP3 PUSH3 0x2A4 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x52F JUMPI PUSH3 0x52E PUSH3 0x2AE JUMP JUMPDEST JUMPDEST PUSH3 0x53B DUP3 SLOAD PUSH3 0x308 JUMP JUMPDEST PUSH3 0x548 DUP3 DUP3 DUP6 PUSH3 0x471 JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x57E JUMPI PUSH0 DUP5 ISZERO PUSH3 0x569 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH3 0x575 DUP6 DUP3 PUSH3 0x4EB JUMP JUMPDEST DUP7 SSTORE POP PUSH3 0x5E4 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH3 0x58E DUP7 PUSH3 0x33C JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x5B7 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x590 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH3 0x5D7 JUMPI DUP5 DUP10 ADD MLOAD PUSH3 0x5D3 PUSH1 0x1F DUP10 AND DUP3 PUSH3 0x4CD JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x2F0C DUP1 PUSH3 0x5FA PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x129 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0xAB JUMPI DUP1 PUSH4 0xBD85B039 GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xBD85B039 EQ PUSH2 0x329 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x359 JUMPI DUP1 PUSH4 0xF242432A EQ PUSH2 0x389 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x3A5 JUMPI DUP1 PUSH4 0xF5298ACA EQ PUSH2 0x3C1 JUMPI PUSH2 0x129 JUMP JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x2AB JUMPI DUP1 PUSH4 0x731133E9 EQ PUSH2 0x2B5 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x2D1 JUMPI DUP1 PUSH4 0xA168D873 EQ PUSH2 0x2EF JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x30D JUMPI PUSH2 0x129 JUMP JUMPDEST DUP1 PUSH4 0x2EB2C2D6 GT PUSH2 0xF2 JUMPI DUP1 PUSH4 0x2EB2C2D6 EQ PUSH2 0x1F7 JUMPI DUP1 PUSH4 0x4E1273F4 EQ PUSH2 0x213 JUMPI DUP1 PUSH4 0x4F558E79 EQ PUSH2 0x243 JUMPI DUP1 PUSH4 0x6B20C454 EQ PUSH2 0x273 JUMPI DUP1 PUSH4 0x711953EF EQ PUSH2 0x28F JUMPI PUSH2 0x129 JUMP JUMPDEST DUP1 PUSH3 0xFDD58E EQ PUSH2 0x12D JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x15D JUMPI DUP1 PUSH4 0xE89341C EQ PUSH2 0x18D JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1BD JUMPI DUP1 PUSH4 0x1F7FDFFA EQ PUSH2 0x1DB JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x147 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x142 SWAP2 SWAP1 PUSH2 0x2006 JUMP JUMPDEST PUSH2 0x3DD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x154 SWAP2 SWAP1 PUSH2 0x2053 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x177 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x172 SWAP2 SWAP1 PUSH2 0x20C1 JUMP JUMPDEST PUSH2 0x432 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x184 SWAP2 SWAP1 PUSH2 0x2106 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A2 SWAP2 SWAP1 PUSH2 0x211F JUMP JUMPDEST PUSH2 0x513 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B4 SWAP2 SWAP1 PUSH2 0x21D4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C5 PUSH2 0x5A5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D2 SWAP2 SWAP1 PUSH2 0x2053 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1F0 SWAP2 SWAP1 PUSH2 0x23E4 JUMP JUMPDEST PUSH2 0x5AE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x211 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x20C SWAP2 SWAP1 PUSH2 0x249C JUMP JUMPDEST PUSH2 0x6DE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x22D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x228 SWAP2 SWAP1 PUSH2 0x2627 JUMP JUMPDEST PUSH2 0x785 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23A SWAP2 SWAP1 PUSH2 0x2754 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x25D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x258 SWAP2 SWAP1 PUSH2 0x211F JUMP JUMPDEST PUSH2 0x892 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26A SWAP2 SWAP1 PUSH2 0x2106 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x28D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x288 SWAP2 SWAP1 PUSH2 0x2774 JUMP JUMPDEST PUSH2 0x8A5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2A9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A4 SWAP2 SWAP1 PUSH2 0x27FC JUMP JUMPDEST PUSH2 0x951 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2B3 PUSH2 0xA2B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2CF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2CA SWAP2 SWAP1 PUSH2 0x2827 JUMP JUMPDEST PUSH2 0xA3E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2D9 PUSH2 0xB6E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2E6 SWAP2 SWAP1 PUSH2 0x28B6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2F7 PUSH2 0xB96 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x304 SWAP2 SWAP1 PUSH2 0x28B6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x327 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x322 SWAP2 SWAP1 PUSH2 0x28F9 JUMP JUMPDEST PUSH2 0xBBB JUMP JUMPDEST STOP JUMPDEST PUSH2 0x343 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x33E SWAP2 SWAP1 PUSH2 0x211F JUMP JUMPDEST PUSH2 0xBD1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x350 SWAP2 SWAP1 PUSH2 0x2053 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x373 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x36E SWAP2 SWAP1 PUSH2 0x2937 JUMP JUMPDEST PUSH2 0xBEB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x380 SWAP2 SWAP1 PUSH2 0x2106 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3A3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x39E SWAP2 SWAP1 PUSH2 0x2975 JUMP JUMPDEST PUSH2 0xC79 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3BF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3BA SWAP2 SWAP1 PUSH2 0x27FC JUMP JUMPDEST PUSH2 0xD20 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3DB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3D6 SWAP2 SWAP1 PUSH2 0x2A08 JUMP JUMPDEST PUSH2 0xDA4 JUMP JUMPDEST STOP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH32 0xD9B67A2600000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x4FC JUMPI POP PUSH32 0xE89341C00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x50C JUMPI POP PUSH2 0x50B DUP3 PUSH2 0xE50 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0x522 SWAP1 PUSH2 0x2A85 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x54E SWAP1 PUSH2 0x2A85 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x599 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x570 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x599 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x57C JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x5 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x63D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x634 SWAP1 PUSH2 0x2AFF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x6CC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6C3 SWAP1 PUSH2 0x2B67 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x6D8 DUP5 DUP5 DUP5 DUP5 PUSH2 0xEB9 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x6E7 PUSH2 0xF3C JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x72C JUMPI POP PUSH2 0x72A DUP7 DUP3 PUSH2 0xBEB JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x770 JUMPI DUP1 DUP7 PUSH1 0x40 MLOAD PUSH32 0xE237D92200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x767 SWAP3 SWAP2 SWAP1 PUSH2 0x2B85 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x77D DUP7 DUP7 DUP7 DUP7 DUP7 PUSH2 0xF43 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x7D1 JUMPI DUP2 MLOAD DUP4 MLOAD PUSH1 0x40 MLOAD PUSH32 0x5B05999100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7C8 SWAP3 SWAP2 SWAP1 PUSH2 0x2BAC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP4 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x7ED JUMPI PUSH2 0x7EC PUSH2 0x21F8 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x81B JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x887 JUMPI PUSH2 0x857 PUSH2 0x83F DUP3 DUP8 PUSH2 0x1037 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x852 DUP4 DUP8 PUSH2 0x104A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x3DD JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x86A JUMPI PUSH2 0x869 PUSH2 0x2BD3 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP1 PUSH2 0x880 SWAP1 PUSH2 0x2C2D JUMP JUMPDEST SWAP1 POP PUSH2 0x820 JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x89D DUP4 PUSH2 0xBD1 JUMP JUMPDEST GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x8AD PUSH2 0xF3C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x8F6 JUMPI POP PUSH2 0x8F4 DUP4 PUSH2 0x8EF PUSH2 0xF3C JUMP JUMPDEST PUSH2 0xBEB JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x941 JUMPI PUSH2 0x903 PUSH2 0xF3C JUMP JUMPDEST DUP4 PUSH1 0x40 MLOAD PUSH32 0xE237D92200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x938 SWAP3 SWAP2 SWAP1 PUSH2 0x2B85 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x94C DUP4 DUP4 DUP4 PUSH2 0x105D JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x959 PUSH2 0x10ED JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x9E8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9DF SWAP1 PUSH2 0x2CBE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x6 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0xA33 PUSH2 0x10ED JUMP JUMPDEST PUSH2 0xA3C PUSH0 PUSH2 0x1174 JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xACD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAC4 SWAP1 PUSH2 0x2AFF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xB5C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB53 SWAP1 PUSH2 0x2B67 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB68 DUP5 DUP5 DUP5 DUP5 PUSH2 0x1237 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x3 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0xBCD PUSH2 0xBC6 PUSH2 0xF3C JUMP JUMPDEST DUP4 DUP4 PUSH2 0x12CC JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0x4 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xC82 PUSH2 0xF3C JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0xCC7 JUMPI POP PUSH2 0xCC5 DUP7 DUP3 PUSH2 0xBEB JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0xD0B JUMPI DUP1 DUP7 PUSH1 0x40 MLOAD PUSH32 0xE237D92200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD02 SWAP3 SWAP2 SWAP1 PUSH2 0x2B85 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xD18 DUP7 DUP7 DUP7 DUP7 DUP7 PUSH2 0x1435 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xD28 PUSH2 0x10ED JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xD98 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD8F SWAP2 SWAP1 PUSH2 0x28B6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xDA1 DUP2 PUSH2 0x1174 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0xDAC PUSH2 0xF3C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0xDF5 JUMPI POP PUSH2 0xDF3 DUP4 PUSH2 0xDEE PUSH2 0xF3C JUMP JUMPDEST PUSH2 0xBEB JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0xE40 JUMPI PUSH2 0xE02 PUSH2 0xF3C JUMP JUMPDEST DUP4 PUSH1 0x40 MLOAD PUSH32 0xE237D92200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE37 SWAP3 SWAP2 SWAP1 PUSH2 0x2B85 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xE4B DUP4 DUP4 DUP4 PUSH2 0x153B JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xF29 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF20 SWAP2 SWAP1 PUSH2 0x28B6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xF36 PUSH0 DUP6 DUP6 DUP6 DUP6 PUSH2 0x15DD JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xFB3 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFAA SWAP2 SWAP1 PUSH2 0x28B6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1023 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1A8351400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x101A SWAP2 SWAP1 PUSH2 0x28B6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1030 DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0x15DD JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 MUL PUSH1 0x20 DUP5 ADD ADD MLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 MUL PUSH1 0x20 DUP5 ADD ADD MLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x10CD JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1A8351400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10C4 SWAP2 SWAP1 PUSH2 0x28B6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x10E8 DUP4 PUSH0 DUP5 DUP5 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0x15DD JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x10F5 PUSH2 0xF3C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1113 PUSH2 0xB6E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1172 JUMPI PUSH2 0x1136 PUSH2 0xF3C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1169 SWAP2 SWAP1 PUSH2 0x28B6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH1 0x3 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x3 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x12A7 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x129E SWAP2 SWAP1 PUSH2 0x28B6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 PUSH2 0x12B3 DUP6 DUP6 PUSH2 0x1689 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0x12C4 PUSH0 DUP8 DUP5 DUP5 DUP8 PUSH2 0x15DD JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x133C JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xCED3E10000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1333 SWAP2 SWAP1 PUSH2 0x28B6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0x1428 SWAP2 SWAP1 PUSH2 0x2106 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x14A5 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x149C SWAP2 SWAP1 PUSH2 0x28B6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1515 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1A8351400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x150C SWAP2 SWAP1 PUSH2 0x28B6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 PUSH2 0x1521 DUP6 DUP6 PUSH2 0x1689 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0x1532 DUP8 DUP8 DUP5 DUP5 DUP8 PUSH2 0x15DD JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x15AB JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1A8351400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15A2 SWAP2 SWAP1 PUSH2 0x28B6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 PUSH2 0x15B7 DUP5 DUP5 PUSH2 0x1689 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0x15D6 DUP6 PUSH0 DUP5 DUP5 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0x15DD JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH2 0x15E9 DUP6 DUP6 DUP6 DUP6 PUSH2 0x16B9 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1682 JUMPI PUSH0 PUSH2 0x1625 PUSH2 0xF3C JUMP JUMPDEST SWAP1 POP PUSH1 0x1 DUP5 MLOAD SUB PUSH2 0x1671 JUMPI PUSH0 PUSH2 0x1644 PUSH0 DUP7 PUSH2 0x104A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x165A PUSH0 DUP7 PUSH2 0x104A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x166A DUP4 DUP10 DUP10 DUP6 DUP6 DUP10 PUSH2 0x16CB JUMP JUMPDEST POP POP PUSH2 0x1680 JUMP JUMPDEST PUSH2 0x167F DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0x187A JUMP JUMPDEST JUMPDEST POP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP1 PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1 DUP3 MSTORE DUP4 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH1 0x1 DUP2 MSTORE DUP3 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD PUSH1 0x40 MSTORE SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x16C5 DUP5 DUP5 DUP5 DUP5 PUSH2 0x1A29 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT ISZERO PUSH2 0x1872 JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xF23A6E61 DUP8 DUP8 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x172B SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2D2E JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1766 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1763 SWAP2 SWAP1 PUSH2 0x2D9A JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x17E7 JUMPI RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x1794 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1799 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH0 DUP2 MLOAD SUB PUSH2 0x17DF JUMPI DUP5 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x17D6 SWAP2 SWAP1 PUSH2 0x28B6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0xF23A6E61 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x1870 JUMPI DUP5 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1867 SWAP2 SWAP1 PUSH2 0x28B6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT ISZERO PUSH2 0x1A21 JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xBC197C81 DUP8 DUP8 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x18DA SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2DC5 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1915 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1912 SWAP2 SWAP1 PUSH2 0x2D9A JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1996 JUMPI RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x1943 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1948 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH0 DUP2 MLOAD SUB PUSH2 0x198E JUMPI DUP5 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1985 SWAP2 SWAP1 PUSH2 0x28B6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0xBC197C81 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x1A1F JUMPI DUP5 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A16 SWAP2 SWAP1 PUSH2 0x28B6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1A35 DUP5 DUP5 DUP5 DUP5 PUSH2 0x1BD2 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1B0E JUMPI PUSH0 DUP1 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x1AF3 JUMPI PUSH0 DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1A88 JUMPI PUSH2 0x1A87 PUSH2 0x2BD3 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP DUP1 PUSH1 0x4 PUSH0 DUP8 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x1AA9 JUMPI PUSH2 0x1AA8 PUSH2 0x2BD3 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1ACC SWAP2 SWAP1 PUSH2 0x2E2B JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 DUP4 PUSH2 0x1ADF SWAP2 SWAP1 PUSH2 0x2E2B JUMP JUMPDEST SWAP3 POP POP DUP1 PUSH2 0x1AEC SWAP1 PUSH2 0x2C2D JUMP JUMPDEST SWAP1 POP PUSH2 0x1A6B JUMP JUMPDEST POP DUP1 PUSH1 0x5 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1B05 SWAP2 SWAP1 PUSH2 0x2E2B JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1BCC JUMPI PUSH0 DUP1 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x1BBA JUMPI PUSH0 DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1B61 JUMPI PUSH2 0x1B60 PUSH2 0x2BD3 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP DUP1 PUSH1 0x4 PUSH0 DUP8 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x1B82 JUMPI PUSH2 0x1B81 PUSH2 0x2BD3 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 DUP4 ADD SWAP3 POP POP DUP1 PUSH2 0x1BB3 SWAP1 PUSH2 0x2C2D JUMP JUMPDEST SWAP1 POP PUSH2 0x1B44 JUMP JUMPDEST POP DUP1 PUSH1 0x5 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP JUMPDEST POP POP POP POP JUMP JUMPDEST DUP1 MLOAD DUP3 MLOAD EQ PUSH2 0x1C1C JUMPI DUP2 MLOAD DUP2 MLOAD PUSH1 0x40 MLOAD PUSH32 0x5B05999100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1C13 SWAP3 SWAP2 SWAP1 PUSH2 0x2BAC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x1C25 PUSH2 0xF3C JUMP JUMPDEST SWAP1 POP PUSH0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x1E27 JUMPI PUSH0 PUSH2 0x1C46 DUP3 DUP7 PUSH2 0x104A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x1C5C DUP4 DUP7 PUSH2 0x104A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1D7F JUMPI PUSH0 DUP1 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x1D2B JUMPI DUP9 DUP2 DUP4 DUP6 PUSH1 0x40 MLOAD PUSH32 0x3DEE4C500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D22 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2E5E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1E14 JUMPI DUP1 PUSH0 DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1E0C SWAP2 SWAP1 PUSH2 0x2E2B JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST POP POP DUP1 PUSH2 0x1E20 SWAP1 PUSH2 0x2C2D JUMP JUMPDEST SWAP1 POP PUSH2 0x1C29 JUMP JUMPDEST POP PUSH1 0x1 DUP4 MLOAD SUB PUSH2 0x1EE2 JUMPI PUSH0 PUSH2 0x1E45 PUSH0 DUP6 PUSH2 0x104A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x1E5B PUSH0 DUP6 PUSH2 0x104A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH2 0x1ED3 SWAP3 SWAP2 SWAP1 PUSH2 0x2BAC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP PUSH2 0x1F61 JUMP JUMPDEST DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB DUP7 DUP7 PUSH1 0x40 MLOAD PUSH2 0x1F58 SWAP3 SWAP2 SWAP1 PUSH2 0x2EA1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1FA2 DUP3 PUSH2 0x1F79 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1FB2 DUP2 PUSH2 0x1F98 JUMP JUMPDEST DUP2 EQ PUSH2 0x1FBC JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1FCD DUP2 PUSH2 0x1FA9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1FE5 DUP2 PUSH2 0x1FD3 JUMP JUMPDEST DUP2 EQ PUSH2 0x1FEF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2000 DUP2 PUSH2 0x1FDC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x201C JUMPI PUSH2 0x201B PUSH2 0x1F71 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2029 DUP6 DUP3 DUP7 ADD PUSH2 0x1FBF JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x203A DUP6 DUP3 DUP7 ADD PUSH2 0x1FF2 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x204D DUP2 PUSH2 0x1FD3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2066 PUSH0 DUP4 ADD DUP5 PUSH2 0x2044 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x20A0 DUP2 PUSH2 0x206C JUMP JUMPDEST DUP2 EQ PUSH2 0x20AA JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x20BB DUP2 PUSH2 0x2097 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x20D6 JUMPI PUSH2 0x20D5 PUSH2 0x1F71 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x20E3 DUP5 DUP3 DUP6 ADD PUSH2 0x20AD JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2100 DUP2 PUSH2 0x20EC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2119 PUSH0 DUP4 ADD DUP5 PUSH2 0x20F7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2134 JUMPI PUSH2 0x2133 PUSH2 0x1F71 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2141 DUP5 DUP3 DUP6 ADD PUSH2 0x1FF2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2181 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2166 JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x21A6 DUP3 PUSH2 0x214A JUMP JUMPDEST PUSH2 0x21B0 DUP2 DUP6 PUSH2 0x2154 JUMP JUMPDEST SWAP4 POP PUSH2 0x21C0 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2164 JUMP JUMPDEST PUSH2 0x21C9 DUP2 PUSH2 0x218C JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x21EC DUP2 DUP5 PUSH2 0x219C JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x222E DUP3 PUSH2 0x218C JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x224D JUMPI PUSH2 0x224C PUSH2 0x21F8 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x225F PUSH2 0x1F68 JUMP JUMPDEST SWAP1 POP PUSH2 0x226B DUP3 DUP3 PUSH2 0x2225 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x228A JUMPI PUSH2 0x2289 PUSH2 0x21F8 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH2 0x22B1 PUSH2 0x22AC DUP5 PUSH2 0x2270 JUMP JUMPDEST PUSH2 0x2256 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x22D4 JUMPI PUSH2 0x22D3 PUSH2 0x229B JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x22FD JUMPI DUP1 PUSH2 0x22E9 DUP9 DUP3 PUSH2 0x1FF2 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x22D6 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x231B JUMPI PUSH2 0x231A PUSH2 0x21F4 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x232B DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x229F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2352 JUMPI PUSH2 0x2351 PUSH2 0x21F8 JUMP JUMPDEST JUMPDEST PUSH2 0x235B DUP3 PUSH2 0x218C JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2388 PUSH2 0x2383 DUP5 PUSH2 0x2338 JUMP JUMPDEST PUSH2 0x2256 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x23A4 JUMPI PUSH2 0x23A3 PUSH2 0x2334 JUMP JUMPDEST JUMPDEST PUSH2 0x23AF DUP5 DUP3 DUP6 PUSH2 0x2368 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x23CB JUMPI PUSH2 0x23CA PUSH2 0x21F4 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x23DB DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x2376 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x23FC JUMPI PUSH2 0x23FB PUSH2 0x1F71 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2409 DUP8 DUP3 DUP9 ADD PUSH2 0x1FBF JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x242A JUMPI PUSH2 0x2429 PUSH2 0x1F75 JUMP JUMPDEST JUMPDEST PUSH2 0x2436 DUP8 DUP3 DUP9 ADD PUSH2 0x2307 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2457 JUMPI PUSH2 0x2456 PUSH2 0x1F75 JUMP JUMPDEST JUMPDEST PUSH2 0x2463 DUP8 DUP3 DUP9 ADD PUSH2 0x2307 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2484 JUMPI PUSH2 0x2483 PUSH2 0x1F75 JUMP JUMPDEST JUMPDEST PUSH2 0x2490 DUP8 DUP3 DUP9 ADD PUSH2 0x23B7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x24B5 JUMPI PUSH2 0x24B4 PUSH2 0x1F71 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x24C2 DUP9 DUP3 DUP10 ADD PUSH2 0x1FBF JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x24D3 DUP9 DUP3 DUP10 ADD PUSH2 0x1FBF JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x24F4 JUMPI PUSH2 0x24F3 PUSH2 0x1F75 JUMP JUMPDEST JUMPDEST PUSH2 0x2500 DUP9 DUP3 DUP10 ADD PUSH2 0x2307 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2521 JUMPI PUSH2 0x2520 PUSH2 0x1F75 JUMP JUMPDEST JUMPDEST PUSH2 0x252D DUP9 DUP3 DUP10 ADD PUSH2 0x2307 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x254E JUMPI PUSH2 0x254D PUSH2 0x1F75 JUMP JUMPDEST JUMPDEST PUSH2 0x255A DUP9 DUP3 DUP10 ADD PUSH2 0x23B7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2581 JUMPI PUSH2 0x2580 PUSH2 0x21F8 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x25A4 PUSH2 0x259F DUP5 PUSH2 0x2567 JUMP JUMPDEST PUSH2 0x2256 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x25C7 JUMPI PUSH2 0x25C6 PUSH2 0x229B JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x25F0 JUMPI DUP1 PUSH2 0x25DC DUP9 DUP3 PUSH2 0x1FBF JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x25C9 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x260E JUMPI PUSH2 0x260D PUSH2 0x21F4 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x261E DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x2592 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x263D JUMPI PUSH2 0x263C PUSH2 0x1F71 JUMP JUMPDEST JUMPDEST PUSH0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x265A JUMPI PUSH2 0x2659 PUSH2 0x1F75 JUMP JUMPDEST JUMPDEST PUSH2 0x2666 DUP6 DUP3 DUP7 ADD PUSH2 0x25FA JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2687 JUMPI PUSH2 0x2686 PUSH2 0x1F75 JUMP JUMPDEST JUMPDEST PUSH2 0x2693 DUP6 DUP3 DUP7 ADD PUSH2 0x2307 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x26CF DUP2 PUSH2 0x1FD3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH2 0x26E0 DUP4 DUP4 PUSH2 0x26C6 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2702 DUP3 PUSH2 0x269D JUMP JUMPDEST PUSH2 0x270C DUP2 DUP6 PUSH2 0x26A7 JUMP JUMPDEST SWAP4 POP PUSH2 0x2717 DUP4 PUSH2 0x26B7 JUMP JUMPDEST DUP1 PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2747 JUMPI DUP2 MLOAD PUSH2 0x272E DUP9 DUP3 PUSH2 0x26D5 JUMP JUMPDEST SWAP8 POP PUSH2 0x2739 DUP4 PUSH2 0x26EC JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x271A JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x276C DUP2 DUP5 PUSH2 0x26F8 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x278B JUMPI PUSH2 0x278A PUSH2 0x1F71 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2798 DUP7 DUP3 DUP8 ADD PUSH2 0x1FBF JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x27B9 JUMPI PUSH2 0x27B8 PUSH2 0x1F75 JUMP JUMPDEST JUMPDEST PUSH2 0x27C5 DUP7 DUP3 DUP8 ADD PUSH2 0x2307 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x27E6 JUMPI PUSH2 0x27E5 PUSH2 0x1F75 JUMP JUMPDEST JUMPDEST PUSH2 0x27F2 DUP7 DUP3 DUP8 ADD PUSH2 0x2307 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2811 JUMPI PUSH2 0x2810 PUSH2 0x1F71 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x281E DUP5 DUP3 DUP6 ADD PUSH2 0x1FBF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x283F JUMPI PUSH2 0x283E PUSH2 0x1F71 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x284C DUP8 DUP3 DUP9 ADD PUSH2 0x1FBF JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x285D DUP8 DUP3 DUP9 ADD PUSH2 0x1FF2 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x286E DUP8 DUP3 DUP9 ADD PUSH2 0x1FF2 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x288F JUMPI PUSH2 0x288E PUSH2 0x1F75 JUMP JUMPDEST JUMPDEST PUSH2 0x289B DUP8 DUP3 DUP9 ADD PUSH2 0x23B7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH2 0x28B0 DUP2 PUSH2 0x1F98 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x28C9 PUSH0 DUP4 ADD DUP5 PUSH2 0x28A7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x28D8 DUP2 PUSH2 0x20EC JUMP JUMPDEST DUP2 EQ PUSH2 0x28E2 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x28F3 DUP2 PUSH2 0x28CF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x290F JUMPI PUSH2 0x290E PUSH2 0x1F71 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x291C DUP6 DUP3 DUP7 ADD PUSH2 0x1FBF JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x292D DUP6 DUP3 DUP7 ADD PUSH2 0x28E5 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x294D JUMPI PUSH2 0x294C PUSH2 0x1F71 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x295A DUP6 DUP3 DUP7 ADD PUSH2 0x1FBF JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x296B DUP6 DUP3 DUP7 ADD PUSH2 0x1FBF JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x298E JUMPI PUSH2 0x298D PUSH2 0x1F71 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x299B DUP9 DUP3 DUP10 ADD PUSH2 0x1FBF JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x29AC DUP9 DUP3 DUP10 ADD PUSH2 0x1FBF JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x29BD DUP9 DUP3 DUP10 ADD PUSH2 0x1FF2 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x29CE DUP9 DUP3 DUP10 ADD PUSH2 0x1FF2 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x29EF JUMPI PUSH2 0x29EE PUSH2 0x1F75 JUMP JUMPDEST JUMPDEST PUSH2 0x29FB DUP9 DUP3 DUP10 ADD PUSH2 0x23B7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2A1F JUMPI PUSH2 0x2A1E PUSH2 0x1F71 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2A2C DUP7 DUP3 DUP8 ADD PUSH2 0x1FBF JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x2A3D DUP7 DUP3 DUP8 ADD PUSH2 0x1FF2 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x2A4E DUP7 DUP3 DUP8 ADD PUSH2 0x1FF2 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x2A9C JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x2AAF JUMPI PUSH2 0x2AAE PUSH2 0x2A58 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x47616D652061646472657373206E6F74207365742E0000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2AE9 PUSH1 0x15 DUP4 PUSH2 0x2154 JUMP JUMPDEST SWAP2 POP PUSH2 0x2AF4 DUP3 PUSH2 0x2AB5 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2B16 DUP2 PUSH2 0x2ADD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F6E6C792067616D6520636F6E74726163742063616E206D696E742E00000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2B51 PUSH1 0x1C DUP4 PUSH2 0x2154 JUMP JUMPDEST SWAP2 POP PUSH2 0x2B5C DUP3 PUSH2 0x2B1D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2B7E DUP2 PUSH2 0x2B45 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2B98 PUSH0 DUP4 ADD DUP6 PUSH2 0x28A7 JUMP JUMPDEST PUSH2 0x2BA5 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x28A7 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2BBF PUSH0 DUP4 ADD DUP6 PUSH2 0x2044 JUMP JUMPDEST PUSH2 0x2BCC PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2044 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x2C37 DUP3 PUSH2 0x1FD3 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x2C69 JUMPI PUSH2 0x2C68 PUSH2 0x2C00 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x47616D65206164647265737320697320616C7265616479207365742E00000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2CA8 PUSH1 0x1C DUP4 PUSH2 0x2154 JUMP JUMPDEST SWAP2 POP PUSH2 0x2CB3 DUP3 PUSH2 0x2C74 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2CD5 DUP2 PUSH2 0x2C9C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2D00 DUP3 PUSH2 0x2CDC JUMP JUMPDEST PUSH2 0x2D0A DUP2 DUP6 PUSH2 0x2CE6 JUMP JUMPDEST SWAP4 POP PUSH2 0x2D1A DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2164 JUMP JUMPDEST PUSH2 0x2D23 DUP2 PUSH2 0x218C JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x2D41 PUSH0 DUP4 ADD DUP9 PUSH2 0x28A7 JUMP JUMPDEST PUSH2 0x2D4E PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x28A7 JUMP JUMPDEST PUSH2 0x2D5B PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x2044 JUMP JUMPDEST PUSH2 0x2D68 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x2044 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x2D7A DUP2 DUP5 PUSH2 0x2CF6 JUMP JUMPDEST SWAP1 POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x2D94 DUP2 PUSH2 0x2097 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2DAF JUMPI PUSH2 0x2DAE PUSH2 0x1F71 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2DBC DUP5 DUP3 DUP6 ADD PUSH2 0x2D86 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x2DD8 PUSH0 DUP4 ADD DUP9 PUSH2 0x28A7 JUMP JUMPDEST PUSH2 0x2DE5 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x28A7 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x2DF7 DUP2 DUP7 PUSH2 0x26F8 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x2E0B DUP2 DUP6 PUSH2 0x26F8 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x2E1F DUP2 DUP5 PUSH2 0x2CF6 JUMP JUMPDEST SWAP1 POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2E35 DUP3 PUSH2 0x1FD3 JUMP JUMPDEST SWAP2 POP PUSH2 0x2E40 DUP4 PUSH2 0x1FD3 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x2E58 JUMPI PUSH2 0x2E57 PUSH2 0x2C00 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x2E71 PUSH0 DUP4 ADD DUP8 PUSH2 0x28A7 JUMP JUMPDEST PUSH2 0x2E7E PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x2044 JUMP JUMPDEST PUSH2 0x2E8B PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x2044 JUMP JUMPDEST PUSH2 0x2E98 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x2044 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2EB9 DUP2 DUP6 PUSH2 0x26F8 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x2ECD DUP2 DUP5 PUSH2 0x26F8 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH15 0x981728272F3C0E563A277C4D69E97F GASLIMIT BALANCE RETURNDATASIZE 0xB7 0xA6 NOT 0x5C 0xF9 0xA7 0xDC MLOAD DIV SSTORE SGT TIMESTAMP 0x2C PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ",
							"sourceMap": "376:1899:14:-:0;;;482:110;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;576:12;1251:62:2;;;;;;;;;;;;;;;;;1293:13;1301:4;1293:7;;;:13;;:::i;:::-;1251:62;1297:1:0;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;482:110:14;376:1899;;10282:86:2;10355:6;10348:4;:13;;;;;;:::i;:::-;;10282:86;:::o;2912:187:0:-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;88:117:15:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:351::-;915:6;964:2;952:9;943:7;939:23;935:32;932:119;;;970:79;;:::i;:::-;932:119;1090:1;1115:64;1171:7;1162:6;1151:9;1147:22;1115:64;:::i;:::-;1105:74;;1061:128;845:351;;;;:::o;1202:118::-;1289:24;1307:5;1289:24;:::i;:::-;1284:3;1277:37;1202:118;;:::o;1326:222::-;1419:4;1457:2;1446:9;1442:18;1434:26;;1470:71;1538:1;1527:9;1523:17;1514:6;1470:71;:::i;:::-;1326:222;;;;:::o;1554:99::-;1606:6;1640:5;1634:12;1624:22;;1554:99;;;:::o;1659:180::-;1707:77;1704:1;1697:88;1804:4;1801:1;1794:15;1828:4;1825:1;1818:15;1845:180;1893:77;1890:1;1883:88;1990:4;1987:1;1980:15;2014:4;2011:1;2004:15;2031:320;2075:6;2112:1;2106:4;2102:12;2092:22;;2159:1;2153:4;2149:12;2180:18;2170:81;;2236:4;2228:6;2224:17;2214:27;;2170:81;2298:2;2290:6;2287:14;2267:18;2264:38;2261:84;;2317:18;;:::i;:::-;2261:84;2082:269;2031:320;;;:::o;2357:141::-;2406:4;2429:3;2421:11;;2452:3;2449:1;2442:14;2486:4;2483:1;2473:18;2465:26;;2357:141;;;:::o;2504:93::-;2541:6;2588:2;2583;2576:5;2572:14;2568:23;2558:33;;2504:93;;;:::o;2603:107::-;2647:8;2697:5;2691:4;2687:16;2666:37;;2603:107;;;;:::o;2716:393::-;2785:6;2835:1;2823:10;2819:18;2858:97;2888:66;2877:9;2858:97;:::i;:::-;2976:39;3006:8;2995:9;2976:39;:::i;:::-;2964:51;;3048:4;3044:9;3037:5;3033:21;3024:30;;3097:4;3087:8;3083:19;3076:5;3073:30;3063:40;;2792:317;;2716:393;;;;;:::o;3115:77::-;3152:7;3181:5;3170:16;;3115:77;;;:::o;3198:60::-;3226:3;3247:5;3240:12;;3198:60;;;:::o;3264:142::-;3314:9;3347:53;3365:34;3374:24;3392:5;3374:24;:::i;:::-;3365:34;:::i;:::-;3347:53;:::i;:::-;3334:66;;3264:142;;;:::o;3412:75::-;3455:3;3476:5;3469:12;;3412:75;;;:::o;3493:269::-;3603:39;3634:7;3603:39;:::i;:::-;3664:91;3713:41;3737:16;3713:41;:::i;:::-;3705:6;3698:4;3692:11;3664:91;:::i;:::-;3658:4;3651:105;3569:193;3493:269;;;:::o;3768:73::-;3813:3;3768:73;:::o;3847:189::-;3924:32;;:::i;:::-;3965:65;4023:6;4015;4009:4;3965:65;:::i;:::-;3900:136;3847:189;;:::o;4042:186::-;4102:120;4119:3;4112:5;4109:14;4102:120;;;4173:39;4210:1;4203:5;4173:39;:::i;:::-;4146:1;4139:5;4135:13;4126:22;;4102:120;;;4042:186;;:::o;4234:543::-;4335:2;4330:3;4327:11;4324:446;;;4369:38;4401:5;4369:38;:::i;:::-;4453:29;4471:10;4453:29;:::i;:::-;4443:8;4439:44;4636:2;4624:10;4621:18;4618:49;;;4657:8;4642:23;;4618:49;4680:80;4736:22;4754:3;4736:22;:::i;:::-;4726:8;4722:37;4709:11;4680:80;:::i;:::-;4339:431;;4324:446;4234:543;;;:::o;4783:117::-;4837:8;4887:5;4881:4;4877:16;4856:37;;4783:117;;;;:::o;4906:169::-;4950:6;4983:51;5031:1;5027:6;5019:5;5016:1;5012:13;4983:51;:::i;:::-;4979:56;5064:4;5058;5054:15;5044:25;;4957:118;4906:169;;;;:::o;5080:295::-;5156:4;5302:29;5327:3;5321:4;5302:29;:::i;:::-;5294:37;;5364:3;5361:1;5357:11;5351:4;5348:21;5340:29;;5080:295;;;;:::o;5380:1395::-;5497:37;5530:3;5497:37;:::i;:::-;5599:18;5591:6;5588:30;5585:56;;;5621:18;;:::i;:::-;5585:56;5665:38;5697:4;5691:11;5665:38;:::i;:::-;5750:67;5810:6;5802;5796:4;5750:67;:::i;:::-;5844:1;5868:4;5855:17;;5900:2;5892:6;5889:14;5917:1;5912:618;;;;6574:1;6591:6;6588:77;;;6640:9;6635:3;6631:19;6625:26;6616:35;;6588:77;6691:67;6751:6;6744:5;6691:67;:::i;:::-;6685:4;6678:81;6547:222;5882:887;;5912:618;5964:4;5960:9;5952:6;5948:22;5998:37;6030:4;5998:37;:::i;:::-;6057:1;6071:208;6085:7;6082:1;6079:14;6071:208;;;6164:9;6159:3;6155:19;6149:26;6141:6;6134:42;6215:1;6207:6;6203:14;6193:24;;6262:2;6251:9;6247:18;6234:31;;6108:4;6105:1;6101:12;6096:17;;6071:208;;;6307:6;6298:7;6295:19;6292:179;;;6365:9;6360:3;6356:19;6350:26;6408:48;6450:4;6442:6;6438:17;6427:9;6408:48;:::i;:::-;6400:6;6393:64;6315:156;6292:179;6517:1;6513;6505:6;6501:14;6497:22;6491:4;6484:36;5919:611;;;5882:887;;5472:1303;;;5380:1395;;:::o;376:1899:14:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_asSingletonArrays_1334": {
									"entryPoint": 5769,
									"id": 1334,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"@_burnBatch_1140": {
									"entryPoint": 4189,
									"id": 1140,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_burn_1101": {
									"entryPoint": 5435,
									"id": 1101,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_checkOwner_84": {
									"entryPoint": 4333,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_doSafeBatchTransferAcceptanceCheck_1318": {
									"entryPoint": 6266,
									"id": 1318,
									"parameterSlots": 6,
									"returnSlots": 0
								},
								"@_doSafeTransferAcceptanceCheck_1248": {
									"entryPoint": 5835,
									"id": 1248,
									"parameterSlots": 6,
									"returnSlots": 0
								},
								"@_mintBatch_1051": {
									"entryPoint": 3769,
									"id": 1051,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_mint_1010": {
									"entryPoint": 4663,
									"id": 1010,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_msgSender_1963": {
									"entryPoint": 3900,
									"id": 1963,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_safeBatchTransferFrom_947": {
									"entryPoint": 3907,
									"id": 947,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@_safeTransferFrom_892": {
									"entryPoint": 5173,
									"id": 892,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@_setApprovalForAll_1180": {
									"entryPoint": 4812,
									"id": 1180,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 4468,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_updateWithAcceptanceCheck_826": {
									"entryPoint": 5597,
									"id": 826,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@_update_1751": {
									"entryPoint": 6697,
									"id": 1751,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_update_3326": {
									"entryPoint": 5817,
									"id": 3326,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_update_750": {
									"entryPoint": 7122,
									"id": 750,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@balanceOfBatch_474": {
									"entryPoint": 1925,
									"id": 474,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_404": {
									"entryPoint": 989,
									"id": 404,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@burnBatch_1579": {
									"entryPoint": 2213,
									"id": 1579,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@burn_1542": {
									"entryPoint": 3492,
									"id": 1542,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@exists_1630": {
									"entryPoint": 2194,
									"id": 1630,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@gameAddress_3190": {
									"entryPoint": 2966,
									"id": 3190,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@isApprovedForAll_507": {
									"entryPoint": 3051,
									"id": 507,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@mintBatch_3278": {
									"entryPoint": 1454,
									"id": 3278,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@mint_3239": {
									"entryPoint": 2622,
									"id": 3239,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@owner_67": {
									"entryPoint": 2926,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_98": {
									"entryPoint": 2603,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@safeBatchTransferFrom_597": {
									"entryPoint": 1758,
									"id": 597,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@safeTransferFrom_551": {
									"entryPoint": 3193,
									"id": 551,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@setApprovalForAll_490": {
									"entryPoint": 3003,
									"id": 490,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@setGameAddress_3300": {
									"entryPoint": 2385,
									"id": 3300,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@supportsInterface_2106": {
									"entryPoint": 3664,
									"id": 2106,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_376": {
									"entryPoint": 1074,
									"id": 376,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@totalSupply_1606": {
									"entryPoint": 3025,
									"id": 1606,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@totalSupply_1615": {
									"entryPoint": 1445,
									"id": 1615,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferOwnership_126": {
									"entryPoint": 3360,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@unsafeMemoryAccess_1937": {
									"entryPoint": 4170,
									"id": 1937,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@unsafeMemoryAccess_1950": {
									"entryPoint": 4151,
									"id": 1950,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@uri_387": {
									"entryPoint": 1299,
									"id": 387,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr": {
									"entryPoint": 9618,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 8863,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_bytes_memory_ptr": {
									"entryPoint": 9078,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 8127,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_array$_t_address_$dyn_memory_ptr": {
									"entryPoint": 9722,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 8967,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool": {
									"entryPoint": 10469,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4": {
									"entryPoint": 8365,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4_fromMemory": {
									"entryPoint": 11654,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes_memory_ptr": {
									"entryPoint": 9143,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 8178,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 10236,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 10551,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr": {
									"entryPoint": 9372,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr": {
									"entryPoint": 10613,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_decode_tuple_t_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 10100,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr": {
									"entryPoint": 9188,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_addresst_bool": {
									"entryPoint": 10489,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 8198,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256t_uint256": {
									"entryPoint": 10760,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256t_uint256t_bytes_memory_ptr": {
									"entryPoint": 10279,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 9767,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 8385,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes4_fromMemory": {
									"entryPoint": 11674,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 8479,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encodeUpdatedPos_t_uint256_to_t_uint256": {
									"entryPoint": 9941,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 10407,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack": {
									"entryPoint": 9976,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 8439,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 11510,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8604,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_732fb107256944bc8e16b4baa2a1ee32d437565fb724a962aaca04c4544c866c_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 11420,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_af594d337044a8f569b563e5e50dceadb0c730709838c18fb2ed04a3ebd09d4c_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10973,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_c65de3f23241930bb68890104d2a62495b3bdd480b7c2f8cdc49ef74d02acb25_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 11077,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256": {
									"entryPoint": 9926,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 8260,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 10422,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed": {
									"entryPoint": 11141,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 11717,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 11566,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 11870,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 10068,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 11937,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 8454,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8660,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_732fb107256944bc8e16b4baa2a1ee32d437565fb724a962aaca04c4544c866c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 11454,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_af594d337044a8f569b563e5e50dceadb0c730709838c18fb2ed04a3ebd09d4c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 11007,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c65de3f23241930bb68890104d2a62495b3bdd480b7c2f8cdc49ef74d02acb25__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 11111,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 8275,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 11180,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 8790,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 8040,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_array$_t_address_$dyn_memory_ptr": {
									"entryPoint": 9575,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 8816,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_allocation_size_t_bytes_memory_ptr": {
									"entryPoint": 9016,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 9911,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 9885,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 11484,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 8522,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 9964,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack": {
									"entryPoint": 9895,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 11494,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 8532,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 11819,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 8088,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 8428,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes4": {
									"entryPoint": 8300,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 8057,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 8147,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_calldata_to_memory_with_cleanup": {
									"entryPoint": 9064,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 8548,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 10885,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 8741,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"increment_t_uint256": {
									"entryPoint": 11309,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 11264,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 10840,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 11219,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 8696,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 8692,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef": {
									"entryPoint": 8859,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 9012,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 8053,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 8049,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 8588,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_732fb107256944bc8e16b4baa2a1ee32d437565fb724a962aaca04c4544c866c": {
									"entryPoint": 11380,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_af594d337044a8f569b563e5e50dceadb0c730709838c18fb2ed04a3ebd09d4c": {
									"entryPoint": 10933,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_c65de3f23241930bb68890104d2a62495b3bdd480b7c2f8cdc49ef74d02acb25": {
									"entryPoint": 11037,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 8105,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 10447,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes4": {
									"entryPoint": 8343,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 8156,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:30520:15",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:15",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:15",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:15"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:15"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:15",
														"type": ""
													}
												],
												"src": "7:75:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:15",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:15"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:15",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:15"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:81:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:65:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "411:42:15",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "400:54:15"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:15"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:15",
														"type": ""
													}
												],
												"src": "334:126:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "511:51:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "521:35:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:15"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "532:24:15"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:15"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "493:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "503:7:15",
														"type": ""
													}
												],
												"src": "466:96:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "611:79:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "668:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "677:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "680:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:15"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:15"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:15"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "624:43:15"
															},
															"nodeType": "YulIf",
															"src": "621:63:15"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "604:5:15",
														"type": ""
													}
												],
												"src": "568:122:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "748:87:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "758:29:15",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "780:6:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "767:12:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "767:20:15"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "758:5:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "823:5:15"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "796:26:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "796:33:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "796:33:15"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "726:6:15",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "734:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "742:5:15",
														"type": ""
													}
												],
												"src": "696:139:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "886:32:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "896:16:15",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "907:5:15"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "896:7:15"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "868:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "878:7:15",
														"type": ""
													}
												],
												"src": "841:77:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "967:79:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1024:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1033:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1036:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1026:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1026:12:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1026:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "990:5:15"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1015:5:15"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "997:17:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "997:24:15"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "987:2:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "987:35:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "980:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "980:43:15"
															},
															"nodeType": "YulIf",
															"src": "977:63:15"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "960:5:15",
														"type": ""
													}
												],
												"src": "924:122:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1104:87:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1114:29:15",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1136:6:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1123:12:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "1123:20:15"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1114:5:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1179:5:15"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1152:26:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "1152:33:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1152:33:15"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1082:6:15",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1090:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1098:5:15",
														"type": ""
													}
												],
												"src": "1052:139:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1280:391:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1326:83:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1328:77:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1328:79:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1328:79:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1301:7:15"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1310:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1297:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1297:23:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1322:2:15",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1293:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "1293:32:15"
															},
															"nodeType": "YulIf",
															"src": "1290:119:15"
														},
														{
															"nodeType": "YulBlock",
															"src": "1419:117:15",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1434:15:15",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1448:1:15",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1438:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1463:63:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1498:9:15"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1509:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1494:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1494:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1518:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1473:20:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1473:53:15"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1463:6:15"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1546:118:15",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1561:16:15",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1575:2:15",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1565:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1591:63:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1626:9:15"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1637:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1622:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1622:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1646:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1601:20:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1601:53:15"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "1591:6:15"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1242:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1253:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1265:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1273:6:15",
														"type": ""
													}
												],
												"src": "1197:474:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1742:53:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1759:3:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1782:5:15"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1764:17:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1764:24:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1752:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "1752:37:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1752:37:15"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1730:5:15",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1737:3:15",
														"type": ""
													}
												],
												"src": "1677:118:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1899:124:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1909:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1921:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1932:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1917:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "1917:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1909:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1989:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2002:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2013:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1998:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1998:17:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1945:43:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "1945:71:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1945:71:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1871:9:15",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1883:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1894:4:15",
														"type": ""
													}
												],
												"src": "1801:222:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2073:105:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2083:89:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2098:5:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2105:66:15",
																		"type": "",
																		"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2094:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "2094:78:15"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2083:7:15"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2055:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2065:7:15",
														"type": ""
													}
												],
												"src": "2029:149:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2226:78:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2282:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2291:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2294:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2284:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2284:12:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2284:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2249:5:15"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2273:5:15"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes4",
																					"nodeType": "YulIdentifier",
																					"src": "2256:16:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2256:23:15"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2246:2:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2246:34:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2239:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "2239:42:15"
															},
															"nodeType": "YulIf",
															"src": "2236:62:15"
														}
													]
												},
												"name": "validator_revert_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2219:5:15",
														"type": ""
													}
												],
												"src": "2184:120:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2361:86:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2371:29:15",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2393:6:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2380:12:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "2380:20:15"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2371:5:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2435:5:15"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "2409:25:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "2409:32:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2409:32:15"
														}
													]
												},
												"name": "abi_decode_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2339:6:15",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2347:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2355:5:15",
														"type": ""
													}
												],
												"src": "2310:137:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2518:262:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2564:83:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2566:77:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2566:79:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2566:79:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2539:7:15"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2548:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2535:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2535:23:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2560:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2531:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "2531:32:15"
															},
															"nodeType": "YulIf",
															"src": "2528:119:15"
														},
														{
															"nodeType": "YulBlock",
															"src": "2657:116:15",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2672:15:15",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2686:1:15",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2676:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2701:62:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2735:9:15"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2746:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2731:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2731:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2755:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4",
																			"nodeType": "YulIdentifier",
																			"src": "2711:19:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2711:52:15"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2701:6:15"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2488:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2499:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2511:6:15",
														"type": ""
													}
												],
												"src": "2453:327:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2828:48:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2838:32:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2863:5:15"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "2856:6:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2856:13:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2849:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "2849:21:15"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2838:7:15"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2810:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2820:7:15",
														"type": ""
													}
												],
												"src": "2786:90:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2941:50:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2958:3:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2978:5:15"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "2963:14:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2963:21:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2951:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "2951:34:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2951:34:15"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2929:5:15",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2936:3:15",
														"type": ""
													}
												],
												"src": "2882:109:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3089:118:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3099:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3111:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3122:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3107:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "3107:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3099:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3173:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3186:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3197:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3182:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3182:17:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3135:37:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "3135:65:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3135:65:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3061:9:15",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3073:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3084:4:15",
														"type": ""
													}
												],
												"src": "2997:210:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3279:263:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3325:83:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "3327:77:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3327:79:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3327:79:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3300:7:15"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3309:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3296:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3296:23:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3321:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3292:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "3292:32:15"
															},
															"nodeType": "YulIf",
															"src": "3289:119:15"
														},
														{
															"nodeType": "YulBlock",
															"src": "3418:117:15",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3433:15:15",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3447:1:15",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3437:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3462:63:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3497:9:15"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3508:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3493:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3493:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3517:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "3472:20:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3472:53:15"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3462:6:15"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3249:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3260:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3272:6:15",
														"type": ""
													}
												],
												"src": "3213:329:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3607:40:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3618:22:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3634:5:15"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3628:5:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "3628:12:15"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "3618:6:15"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3590:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "3600:6:15",
														"type": ""
													}
												],
												"src": "3548:99:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3749:73:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3766:3:15"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3771:6:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3759:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "3759:19:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3759:19:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3787:29:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3806:3:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3811:4:15",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3802:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "3802:14:15"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "3787:11:15"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3721:3:15",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "3726:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "3737:11:15",
														"type": ""
													}
												],
												"src": "3653:169:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3890:184:15",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3900:10:15",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3909:1:15",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "3904:1:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3969:63:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "3994:3:15"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "3999:1:15"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "3990:3:15"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3990:11:15"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "4013:3:15"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "4018:1:15"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "4009:3:15"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "4009:11:15"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "4003:5:15"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4003:18:15"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "3983:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3983:39:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3983:39:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "3930:1:15"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3933:6:15"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "3927:2:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "3927:13:15"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "3941:19:15",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "3943:15:15",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "3952:1:15"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3955:2:15",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "3948:3:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3948:10:15"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "3943:1:15"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "3923:3:15",
																"statements": []
															},
															"src": "3919:113:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "4052:3:15"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "4057:6:15"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4048:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4048:16:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4066:1:15",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4041:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "4041:27:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4041:27:15"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "3872:3:15",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "3877:3:15",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "3882:6:15",
														"type": ""
													}
												],
												"src": "3828:246:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4128:54:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4138:38:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4156:5:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4163:2:15",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4152:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4152:14:15"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4172:2:15",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "4168:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4168:7:15"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "4148:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "4148:28:15"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "4138:6:15"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4111:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "4121:6:15",
														"type": ""
													}
												],
												"src": "4080:102:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4280:285:15",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4290:53:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4337:5:15"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "4304:32:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "4304:39:15"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "4294:6:15",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4352:78:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4418:3:15"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4423:6:15"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4359:58:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "4359:71:15"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "4352:3:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4478:5:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4485:4:15",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4474:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4474:16:15"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4492:3:15"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4497:6:15"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "4439:34:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "4439:65:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4439:65:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4513:46:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4524:3:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "4551:6:15"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "4529:21:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4529:29:15"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4520:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "4520:39:15"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "4513:3:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4261:5:15",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4268:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4276:3:15",
														"type": ""
													}
												],
												"src": "4188:377:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4689:195:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4699:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4711:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4722:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4707:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "4707:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4699:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4746:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4757:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4742:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4742:17:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "4765:4:15"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4771:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4761:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4761:20:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4735:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "4735:47:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4735:47:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4791:86:15",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4863:6:15"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "4872:4:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4799:63:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "4799:78:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4791:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4661:9:15",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4673:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4684:4:15",
														"type": ""
													}
												],
												"src": "4571:313:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4979:28:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4996:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4999:1:15",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "4989:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "4989:12:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4989:12:15"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nodeType": "YulFunctionDefinition",
												"src": "4890:117:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5041:152:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5058:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5061:77:15",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5051:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "5051:88:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5051:88:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5155:1:15",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5158:4:15",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5148:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "5148:15:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5148:15:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5179:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5182:4:15",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "5172:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "5172:15:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5172:15:15"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "5013:180:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5242:238:15",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5252:58:15",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "5274:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nodeType": "YulIdentifier",
																				"src": "5304:4:15"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "5282:21:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5282:27:15"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5270:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "5270:40:15"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "5256:10:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5421:22:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "5423:16:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5423:18:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5423:18:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "5364:10:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5376:18:15",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "5361:2:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5361:34:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "5400:10:15"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "5412:6:15"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "5397:2:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5397:22:15"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "5358:2:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "5358:62:15"
															},
															"nodeType": "YulIf",
															"src": "5355:88:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5459:2:15",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "5463:10:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5452:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "5452:22:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5452:22:15"
														}
													]
												},
												"name": "finalize_allocation",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "5228:6:15",
														"type": ""
													},
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "5236:4:15",
														"type": ""
													}
												],
												"src": "5199:281:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5527:88:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5537:30:15",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nodeType": "YulIdentifier",
																	"src": "5547:18:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "5547:20:15"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "5537:6:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "5596:6:15"
																	},
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "5604:4:15"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "5576:19:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "5576:33:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5576:33:15"
														}
													]
												},
												"name": "allocate_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "5511:4:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "5520:6:15",
														"type": ""
													}
												],
												"src": "5486:129:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5703:229:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5808:22:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "5810:16:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5810:18:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5810:18:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "5780:6:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5788:18:15",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5777:2:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "5777:30:15"
															},
															"nodeType": "YulIf",
															"src": "5774:56:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5840:25:15",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "5852:6:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5860:4:15",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "5848:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "5848:17:15"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "5840:4:15"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5902:23:15",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "5914:4:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5920:4:15",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5910:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "5910:15:15"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "5902:4:15"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "5687:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "5698:4:15",
														"type": ""
													}
												],
												"src": "5621:311:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6027:28:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6044:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6047:1:15",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "6037:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "6037:12:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6037:12:15"
														}
													]
												},
												"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
												"nodeType": "YulFunctionDefinition",
												"src": "5938:117:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6180:608:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6190:90:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "6272:6:15"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "6215:56:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6215:64:15"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "6199:15:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "6199:81:15"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "6190:5:15"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6289:16:15",
															"value": {
																"name": "array",
																"nodeType": "YulIdentifier",
																"src": "6300:5:15"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "6293:3:15",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "6322:5:15"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6329:6:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6315:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "6315:21:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6315:21:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6345:23:15",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "6356:5:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6363:4:15",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6352:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "6352:16:15"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nodeType": "YulIdentifier",
																	"src": "6345:3:15"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6378:44:15",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "6396:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "6408:6:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6416:4:15",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "6404:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6404:17:15"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6392:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "6392:30:15"
															},
															"variables": [
																{
																	"name": "srcEnd",
																	"nodeType": "YulTypedName",
																	"src": "6382:6:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6450:103:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
																				"nodeType": "YulIdentifier",
																				"src": "6464:77:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6464:79:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6464:79:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "6437:6:15"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "6445:3:15"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "6434:2:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "6434:15:15"
															},
															"nodeType": "YulIf",
															"src": "6431:122:15"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6638:144:15",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "6653:21:15",
																		"value": {
																			"name": "src",
																			"nodeType": "YulIdentifier",
																			"src": "6671:3:15"
																		},
																		"variables": [
																			{
																				"name": "elementPos",
																				"nodeType": "YulTypedName",
																				"src": "6657:10:15",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "6695:3:15"
																				},
																				{
																					"arguments": [
																						{
																							"name": "elementPos",
																							"nodeType": "YulIdentifier",
																							"src": "6721:10:15"
																						},
																						{
																							"name": "end",
																							"nodeType": "YulIdentifier",
																							"src": "6733:3:15"
																						}
																					],
																					"functionName": {
																						"name": "abi_decode_t_uint256",
																						"nodeType": "YulIdentifier",
																						"src": "6700:20:15"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6700:37:15"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "6688:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6688:50:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6688:50:15"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "6751:21:15",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "6762:3:15"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6767:4:15",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "6758:3:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6758:14:15"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "6751:3:15"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "6591:3:15"
																	},
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "6596:6:15"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "6588:2:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "6588:15:15"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "6604:25:15",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "6606:21:15",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "6617:3:15"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6622:4:15",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "6613:3:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6613:14:15"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "6606:3:15"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "6566:21:15",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "6568:17:15",
																		"value": {
																			"name": "offset",
																			"nodeType": "YulIdentifier",
																			"src": "6579:6:15"
																		},
																		"variables": [
																			{
																				"name": "src",
																				"nodeType": "YulTypedName",
																				"src": "6572:3:15",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "6562:220:15"
														}
													]
												},
												"name": "abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "6150:6:15",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "6158:6:15",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6166:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "6174:5:15",
														"type": ""
													}
												],
												"src": "6078:710:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6888:293:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6937:83:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "6939:77:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6939:79:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6939:79:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6916:6:15"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6924:4:15",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6912:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6912:17:15"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "6931:3:15"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "6908:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6908:27:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "6901:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "6901:35:15"
															},
															"nodeType": "YulIf",
															"src": "6898:122:15"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7029:34:15",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "7056:6:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "7043:12:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "7043:20:15"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "7033:6:15",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7072:103:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "7148:6:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7156:4:15",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7144:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7144:17:15"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7163:6:15"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "7171:3:15"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "7081:62:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "7081:94:15"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "7072:5:15"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "6866:6:15",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6874:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "6882:5:15",
														"type": ""
													}
												],
												"src": "6811:370:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7276:28:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7293:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7296:1:15",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "7286:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "7286:12:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7286:12:15"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nodeType": "YulFunctionDefinition",
												"src": "7187:117:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7376:241:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7481:22:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "7483:16:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7483:18:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7483:18:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7453:6:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7461:18:15",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "7450:2:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "7450:30:15"
															},
															"nodeType": "YulIf",
															"src": "7447:56:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7513:37:15",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7543:6:15"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nodeType": "YulIdentifier",
																	"src": "7521:21:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "7521:29:15"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "7513:4:15"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7587:23:15",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "7599:4:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7605:4:15",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7595:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "7595:15:15"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "7587:4:15"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "7360:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "7371:4:15",
														"type": ""
													}
												],
												"src": "7310:307:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7687:82:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "7710:3:15"
																	},
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "7715:3:15"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7720:6:15"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "7697:12:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "7697:30:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7697:30:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "7747:3:15"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "7752:6:15"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7743:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7743:16:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7761:1:15",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7736:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "7736:27:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7736:27:15"
														}
													]
												},
												"name": "copy_calldata_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "7669:3:15",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "7674:3:15",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "7679:6:15",
														"type": ""
													}
												],
												"src": "7623:146:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7858:340:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7868:74:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "7934:6:15"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_bytes_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "7893:40:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7893:48:15"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "7877:15:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "7877:65:15"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "7868:5:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "7958:5:15"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7965:6:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7951:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "7951:21:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7951:21:15"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7981:27:15",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "7996:5:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8003:4:15",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7992:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "7992:16:15"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "7985:3:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8046:83:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nodeType": "YulIdentifier",
																				"src": "8048:77:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8048:79:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8048:79:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "8027:3:15"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "8032:6:15"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8023:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8023:16:15"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "8041:3:15"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "8020:2:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "8020:25:15"
															},
															"nodeType": "YulIf",
															"src": "8017:112:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "8175:3:15"
																	},
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "8180:3:15"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "8185:6:15"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "8138:36:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "8138:54:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8138:54:15"
														}
													]
												},
												"name": "abi_decode_available_length_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "7831:3:15",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "7836:6:15",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "7844:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "7852:5:15",
														"type": ""
													}
												],
												"src": "7775:423:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8278:277:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8327:83:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "8329:77:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8329:79:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8329:79:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "8306:6:15"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "8314:4:15",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "8302:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8302:17:15"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "8321:3:15"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "8298:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8298:27:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "8291:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "8291:35:15"
															},
															"nodeType": "YulIf",
															"src": "8288:122:15"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8419:34:15",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "8446:6:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "8433:12:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "8433:20:15"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "8423:6:15",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8462:87:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "8522:6:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8530:4:15",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8518:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8518:17:15"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "8537:6:15"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "8545:3:15"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_bytes_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "8471:46:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "8471:78:15"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "8462:5:15"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "8256:6:15",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "8264:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "8272:5:15",
														"type": ""
													}
												],
												"src": "8217:338:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8737:1187:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8784:83:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "8786:77:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8786:79:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8786:79:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "8758:7:15"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8767:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8754:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8754:23:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8779:3:15",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "8750:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "8750:33:15"
															},
															"nodeType": "YulIf",
															"src": "8747:120:15"
														},
														{
															"nodeType": "YulBlock",
															"src": "8877:117:15",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "8892:15:15",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8906:1:15",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "8896:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "8921:63:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "8956:9:15"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "8967:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "8952:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8952:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "8976:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "8931:20:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8931:53:15"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "8921:6:15"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "9004:303:15",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "9019:46:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9050:9:15"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "9061:2:15",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9046:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9046:18:15"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "9033:12:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9033:32:15"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "9023:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "9112:83:15",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "9114:77:15"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "9114:79:15"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "9114:79:15"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "9084:6:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9092:18:15",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "9081:2:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9081:30:15"
																	},
																	"nodeType": "YulIf",
																	"src": "9078:117:15"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "9209:88:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9269:9:15"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "9280:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9265:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9265:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9289:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "9219:45:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9219:78:15"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "9209:6:15"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "9317:303:15",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "9332:46:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9363:9:15"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "9374:2:15",
																						"type": "",
																						"value": "64"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9359:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9359:18:15"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "9346:12:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9346:32:15"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "9336:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "9425:83:15",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "9427:77:15"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "9427:79:15"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "9427:79:15"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "9397:6:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9405:18:15",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "9394:2:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9394:30:15"
																	},
																	"nodeType": "YulIf",
																	"src": "9391:117:15"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "9522:88:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9582:9:15"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "9593:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9578:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9578:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9602:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "9532:45:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9532:78:15"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "9522:6:15"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "9630:287:15",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "9645:46:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9676:9:15"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "9687:2:15",
																						"type": "",
																						"value": "96"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9672:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9672:18:15"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "9659:12:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9659:32:15"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "9649:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "9738:83:15",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "9740:77:15"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "9740:79:15"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "9740:79:15"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "9710:6:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9718:18:15",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "9707:2:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9707:30:15"
																	},
																	"nodeType": "YulIf",
																	"src": "9704:117:15"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "9835:72:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9879:9:15"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "9890:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9875:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9875:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9899:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "9845:29:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9845:62:15"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nodeType": "YulIdentifier",
																			"src": "9835:6:15"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8683:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "8694:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8706:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "8714:6:15",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "8722:6:15",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "8730:6:15",
														"type": ""
													}
												],
												"src": "8561:1363:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10123:1316:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10170:83:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "10172:77:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10172:79:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10172:79:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "10144:7:15"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10153:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "10140:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10140:23:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10165:3:15",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "10136:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "10136:33:15"
															},
															"nodeType": "YulIf",
															"src": "10133:120:15"
														},
														{
															"nodeType": "YulBlock",
															"src": "10263:117:15",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "10278:15:15",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10292:1:15",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "10282:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "10307:63:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "10342:9:15"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "10353:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "10338:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10338:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "10362:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "10317:20:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10317:53:15"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "10307:6:15"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "10390:118:15",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "10405:16:15",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10419:2:15",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "10409:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "10435:63:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "10470:9:15"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "10481:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "10466:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10466:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "10490:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "10445:20:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10445:53:15"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "10435:6:15"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "10518:303:15",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "10533:46:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "10564:9:15"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "10575:2:15",
																						"type": "",
																						"value": "64"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "10560:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10560:18:15"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "10547:12:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10547:32:15"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "10537:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "10626:83:15",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "10628:77:15"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "10628:79:15"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "10628:79:15"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "10598:6:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10606:18:15",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "10595:2:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10595:30:15"
																	},
																	"nodeType": "YulIf",
																	"src": "10592:117:15"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "10723:88:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "10783:9:15"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "10794:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "10779:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10779:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "10803:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "10733:45:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10733:78:15"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "10723:6:15"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "10831:303:15",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "10846:46:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "10877:9:15"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "10888:2:15",
																						"type": "",
																						"value": "96"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "10873:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10873:18:15"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "10860:12:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10860:32:15"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "10850:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "10939:83:15",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "10941:77:15"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "10941:79:15"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "10941:79:15"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "10911:6:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10919:18:15",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "10908:2:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10908:30:15"
																	},
																	"nodeType": "YulIf",
																	"src": "10905:117:15"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "11036:88:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "11096:9:15"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "11107:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "11092:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11092:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "11116:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "11046:45:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11046:78:15"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nodeType": "YulIdentifier",
																			"src": "11036:6:15"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "11144:288:15",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "11159:47:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "11190:9:15"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "11201:3:15",
																						"type": "",
																						"value": "128"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "11186:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11186:19:15"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "11173:12:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11173:33:15"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "11163:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "11253:83:15",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "11255:77:15"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "11255:79:15"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "11255:79:15"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "11225:6:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11233:18:15",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "11222:2:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11222:30:15"
																	},
																	"nodeType": "YulIf",
																	"src": "11219:117:15"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "11350:72:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "11394:9:15"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "11405:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "11390:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11390:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "11414:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "11360:29:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11360:62:15"
																	},
																	"variableNames": [
																		{
																			"name": "value4",
																			"nodeType": "YulIdentifier",
																			"src": "11350:6:15"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10061:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "10072:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "10084:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "10092:6:15",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "10100:6:15",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "10108:6:15",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "10116:6:15",
														"type": ""
													}
												],
												"src": "9930:1509:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11527:229:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11632:22:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "11634:16:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11634:18:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11634:18:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "11604:6:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11612:18:15",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "11601:2:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "11601:30:15"
															},
															"nodeType": "YulIf",
															"src": "11598:56:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11664:25:15",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "11676:6:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11684:4:15",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "11672:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "11672:17:15"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "11664:4:15"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "11726:23:15",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "11738:4:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11744:4:15",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11734:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "11734:15:15"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "11726:4:15"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_array$_t_address_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "11511:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "11522:4:15",
														"type": ""
													}
												],
												"src": "11445:311:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11881:608:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11891:90:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "11973:6:15"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_array$_t_address_$dyn_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "11916:56:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11916:64:15"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "11900:15:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "11900:81:15"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "11891:5:15"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11990:16:15",
															"value": {
																"name": "array",
																"nodeType": "YulIdentifier",
																"src": "12001:5:15"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "11994:3:15",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "12023:5:15"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "12030:6:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12016:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "12016:21:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12016:21:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12046:23:15",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "12057:5:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12064:4:15",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12053:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "12053:16:15"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nodeType": "YulIdentifier",
																	"src": "12046:3:15"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "12079:44:15",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "12097:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "12109:6:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12117:4:15",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "12105:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12105:17:15"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12093:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "12093:30:15"
															},
															"variables": [
																{
																	"name": "srcEnd",
																	"nodeType": "YulTypedName",
																	"src": "12083:6:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12151:103:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
																				"nodeType": "YulIdentifier",
																				"src": "12165:77:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12165:79:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12165:79:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "12138:6:15"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "12146:3:15"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "12135:2:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "12135:15:15"
															},
															"nodeType": "YulIf",
															"src": "12132:122:15"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12339:144:15",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "12354:21:15",
																		"value": {
																			"name": "src",
																			"nodeType": "YulIdentifier",
																			"src": "12372:3:15"
																		},
																		"variables": [
																			{
																				"name": "elementPos",
																				"nodeType": "YulTypedName",
																				"src": "12358:10:15",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "12396:3:15"
																				},
																				{
																					"arguments": [
																						{
																							"name": "elementPos",
																							"nodeType": "YulIdentifier",
																							"src": "12422:10:15"
																						},
																						{
																							"name": "end",
																							"nodeType": "YulIdentifier",
																							"src": "12434:3:15"
																						}
																					],
																					"functionName": {
																						"name": "abi_decode_t_address",
																						"nodeType": "YulIdentifier",
																						"src": "12401:20:15"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "12401:37:15"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "12389:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12389:50:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12389:50:15"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "12452:21:15",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "12463:3:15"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "12468:4:15",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "12459:3:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12459:14:15"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "12452:3:15"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "12292:3:15"
																	},
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "12297:6:15"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "12289:2:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "12289:15:15"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "12305:25:15",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "12307:21:15",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "12318:3:15"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "12323:4:15",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "12314:3:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12314:14:15"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "12307:3:15"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "12267:21:15",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "12269:17:15",
																		"value": {
																			"name": "offset",
																			"nodeType": "YulIdentifier",
																			"src": "12280:6:15"
																		},
																		"variables": [
																			{
																				"name": "src",
																				"nodeType": "YulTypedName",
																				"src": "12273:3:15",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "12263:220:15"
														}
													]
												},
												"name": "abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "11851:6:15",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "11859:6:15",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "11867:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "11875:5:15",
														"type": ""
													}
												],
												"src": "11779:710:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12589:293:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12638:83:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "12640:77:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12640:79:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12640:79:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "12617:6:15"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "12625:4:15",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "12613:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "12613:17:15"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "12632:3:15"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "12609:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12609:27:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "12602:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "12602:35:15"
															},
															"nodeType": "YulIf",
															"src": "12599:122:15"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "12730:34:15",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "12757:6:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "12744:12:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "12744:20:15"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "12734:6:15",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "12773:103:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "12849:6:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12857:4:15",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12845:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12845:17:15"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "12864:6:15"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "12872:3:15"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "12782:62:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "12782:94:15"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "12773:5:15"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_array$_t_address_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "12567:6:15",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "12575:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "12583:5:15",
														"type": ""
													}
												],
												"src": "12512:370:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13021:761:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13067:83:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "13069:77:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13069:79:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13069:79:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "13042:7:15"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13051:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "13038:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13038:23:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13063:2:15",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "13034:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "13034:32:15"
															},
															"nodeType": "YulIf",
															"src": "13031:119:15"
														},
														{
															"nodeType": "YulBlock",
															"src": "13160:302:15",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "13175:45:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "13206:9:15"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "13217:1:15",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "13202:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "13202:17:15"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "13189:12:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13189:31:15"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "13179:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "13267:83:15",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "13269:77:15"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "13269:79:15"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "13269:79:15"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "13239:6:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13247:18:15",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "13236:2:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13236:30:15"
																	},
																	"nodeType": "YulIf",
																	"src": "13233:117:15"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "13364:88:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "13424:9:15"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "13435:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "13420:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "13420:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "13444:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_address_$dyn_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "13374:45:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13374:78:15"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "13364:6:15"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "13472:303:15",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "13487:46:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "13518:9:15"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "13529:2:15",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "13514:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "13514:18:15"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "13501:12:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13501:32:15"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "13491:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "13580:83:15",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "13582:77:15"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "13582:79:15"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "13582:79:15"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "13552:6:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13560:18:15",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "13549:2:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13549:30:15"
																	},
																	"nodeType": "YulIf",
																	"src": "13546:117:15"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "13677:88:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "13737:9:15"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "13748:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "13733:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "13733:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "13757:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "13687:45:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13687:78:15"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "13677:6:15"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12983:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "12994:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "13006:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "13014:6:15",
														"type": ""
													}
												],
												"src": "12888:894:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13862:40:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13873:22:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "13889:5:15"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "13883:5:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "13883:12:15"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "13873:6:15"
																}
															]
														}
													]
												},
												"name": "array_length_t_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "13845:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "13855:6:15",
														"type": ""
													}
												],
												"src": "13788:114:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14019:73:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14036:3:15"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "14041:6:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14029:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "14029:19:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14029:19:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14057:29:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14076:3:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14081:4:15",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14072:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "14072:14:15"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "14057:11:15"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "13991:3:15",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "13996:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "14007:11:15",
														"type": ""
													}
												],
												"src": "13908:184:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14170:60:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14180:11:15",
															"value": {
																"name": "ptr",
																"nodeType": "YulIdentifier",
																"src": "14188:3:15"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "14180:4:15"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "14201:22:15",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "14213:3:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14218:4:15",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14209:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "14209:14:15"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "14201:4:15"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "14157:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "14165:4:15",
														"type": ""
													}
												],
												"src": "14098:132:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14291:53:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14308:3:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "14331:5:15"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "14313:17:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14313:24:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14301:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "14301:37:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14301:37:15"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "14279:5:15",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "14286:3:15",
														"type": ""
													}
												],
												"src": "14236:108:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14430:99:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "14474:6:15"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14482:3:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "14440:33:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "14440:46:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14440:46:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14495:28:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14513:3:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14518:4:15",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14509:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "14509:14:15"
															},
															"variableNames": [
																{
																	"name": "updatedPos",
																	"nodeType": "YulIdentifier",
																	"src": "14495:10:15"
																}
															]
														}
													]
												},
												"name": "abi_encodeUpdatedPos_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "14403:6:15",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "14411:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updatedPos",
														"nodeType": "YulTypedName",
														"src": "14419:10:15",
														"type": ""
													}
												],
												"src": "14350:179:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14610:38:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14620:22:15",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "14632:3:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14637:4:15",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14628:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "14628:14:15"
															},
															"variableNames": [
																{
																	"name": "next",
																	"nodeType": "YulIdentifier",
																	"src": "14620:4:15"
																}
															]
														}
													]
												},
												"name": "array_nextElement_t_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "14597:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "next",
														"nodeType": "YulTypedName",
														"src": "14605:4:15",
														"type": ""
													}
												],
												"src": "14535:113:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14808:608:15",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "14818:68:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "14880:5:15"
																	}
																],
																"functionName": {
																	"name": "array_length_t_array$_t_uint256_$dyn_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "14832:47:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "14832:54:15"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "14822:6:15",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "14895:93:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14976:3:15"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "14981:6:15"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14902:73:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "14902:86:15"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "14895:3:15"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "14997:71:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "15062:5:15"
																	}
																],
																"functionName": {
																	"name": "array_dataslot_t_array$_t_uint256_$dyn_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "15012:49:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "15012:56:15"
															},
															"variables": [
																{
																	"name": "baseRef",
																	"nodeType": "YulTypedName",
																	"src": "15001:7:15",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "15077:21:15",
															"value": {
																"name": "baseRef",
																"nodeType": "YulIdentifier",
																"src": "15091:7:15"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nodeType": "YulTypedName",
																	"src": "15081:6:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "15167:224:15",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "15181:34:15",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "15208:6:15"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "15202:5:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15202:13:15"
																		},
																		"variables": [
																			{
																				"name": "elementValue0",
																				"nodeType": "YulTypedName",
																				"src": "15185:13:15",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "15228:70:15",
																		"value": {
																			"arguments": [
																				{
																					"name": "elementValue0",
																					"nodeType": "YulIdentifier",
																					"src": "15279:13:15"
																				},
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "15294:3:15"
																				}
																			],
																			"functionName": {
																				"name": "abi_encodeUpdatedPos_t_uint256_to_t_uint256",
																				"nodeType": "YulIdentifier",
																				"src": "15235:43:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15235:63:15"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "15228:3:15"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "15311:70:15",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "15374:6:15"
																				}
																			],
																			"functionName": {
																				"name": "array_nextElement_t_array$_t_uint256_$dyn_memory_ptr",
																				"nodeType": "YulIdentifier",
																				"src": "15321:52:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15321:60:15"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nodeType": "YulIdentifier",
																				"src": "15311:6:15"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "15129:1:15"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "15132:6:15"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "15126:2:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "15126:13:15"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "15140:18:15",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "15142:14:15",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "15151:1:15"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "15154:1:15",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "15147:3:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15147:9:15"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "15142:1:15"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "15111:14:15",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "15113:10:15",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "15122:1:15",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "i",
																				"nodeType": "YulTypedName",
																				"src": "15117:1:15",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "15107:284:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15400:10:15",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "15407:3:15"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "15400:3:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "14787:5:15",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "14794:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "14803:3:15",
														"type": ""
													}
												],
												"src": "14684:732:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15570:225:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15580:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15592:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15603:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15588:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "15588:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15580:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15627:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15638:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15623:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15623:17:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "15646:4:15"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15652:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "15642:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15642:20:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15616:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "15616:47:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15616:47:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15672:116:15",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "15774:6:15"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "15783:4:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15680:93:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "15680:108:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15672:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15542:9:15",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "15554:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "15565:4:15",
														"type": ""
													}
												],
												"src": "15422:373:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15951:889:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "15997:83:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "15999:77:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15999:79:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "15999:79:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "15972:7:15"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15981:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "15968:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15968:23:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15993:2:15",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "15964:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "15964:32:15"
															},
															"nodeType": "YulIf",
															"src": "15961:119:15"
														},
														{
															"nodeType": "YulBlock",
															"src": "16090:117:15",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "16105:15:15",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16119:1:15",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "16109:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "16134:63:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "16169:9:15"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "16180:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "16165:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "16165:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "16189:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "16144:20:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16144:53:15"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "16134:6:15"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "16217:303:15",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "16232:46:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "16263:9:15"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "16274:2:15",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "16259:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "16259:18:15"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "16246:12:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16246:32:15"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "16236:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "16325:83:15",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "16327:77:15"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "16327:79:15"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "16327:79:15"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "16297:6:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16305:18:15",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "16294:2:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16294:30:15"
																	},
																	"nodeType": "YulIf",
																	"src": "16291:117:15"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "16422:88:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "16482:9:15"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "16493:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "16478:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "16478:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "16502:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "16432:45:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16432:78:15"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "16422:6:15"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "16530:303:15",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "16545:46:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "16576:9:15"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "16587:2:15",
																						"type": "",
																						"value": "64"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "16572:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "16572:18:15"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "16559:12:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16559:32:15"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "16549:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "16638:83:15",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "16640:77:15"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "16640:79:15"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "16640:79:15"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "16610:6:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16618:18:15",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "16607:2:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16607:30:15"
																	},
																	"nodeType": "YulIf",
																	"src": "16604:117:15"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "16735:88:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "16795:9:15"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "16806:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "16791:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "16791:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "16815:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "16745:45:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16745:78:15"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "16735:6:15"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15905:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "15916:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "15928:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "15936:6:15",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "15944:6:15",
														"type": ""
													}
												],
												"src": "15801:1039:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16912:263:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "16958:83:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "16960:77:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "16960:79:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "16960:79:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "16933:7:15"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16942:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "16929:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16929:23:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16954:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "16925:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "16925:32:15"
															},
															"nodeType": "YulIf",
															"src": "16922:119:15"
														},
														{
															"nodeType": "YulBlock",
															"src": "17051:117:15",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "17066:15:15",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17080:1:15",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "17070:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "17095:63:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "17130:9:15"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "17141:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "17126:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "17126:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "17150:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "17105:20:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17105:53:15"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "17095:6:15"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "16882:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "16893:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "16905:6:15",
														"type": ""
													}
												],
												"src": "16846:329:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17307:817:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "17354:83:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "17356:77:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "17356:79:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "17356:79:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "17328:7:15"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17337:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "17324:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17324:23:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17349:3:15",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "17320:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "17320:33:15"
															},
															"nodeType": "YulIf",
															"src": "17317:120:15"
														},
														{
															"nodeType": "YulBlock",
															"src": "17447:117:15",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "17462:15:15",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17476:1:15",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "17466:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "17491:63:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "17526:9:15"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "17537:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "17522:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "17522:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "17546:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "17501:20:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17501:53:15"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "17491:6:15"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "17574:118:15",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "17589:16:15",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17603:2:15",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "17593:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "17619:63:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "17654:9:15"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "17665:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "17650:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "17650:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "17674:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "17629:20:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17629:53:15"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "17619:6:15"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "17702:118:15",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "17717:16:15",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17731:2:15",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "17721:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "17747:63:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "17782:9:15"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "17793:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "17778:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "17778:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "17802:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "17757:20:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17757:53:15"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "17747:6:15"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "17830:287:15",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "17845:46:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "17876:9:15"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "17887:2:15",
																						"type": "",
																						"value": "96"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "17872:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "17872:18:15"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "17859:12:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17859:32:15"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "17849:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "17938:83:15",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "17940:77:15"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "17940:79:15"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "17940:79:15"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "17910:6:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17918:18:15",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "17907:2:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17907:30:15"
																	},
																	"nodeType": "YulIf",
																	"src": "17904:117:15"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "18035:72:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "18079:9:15"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "18090:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "18075:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "18075:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "18099:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "18045:29:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18045:62:15"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nodeType": "YulIdentifier",
																			"src": "18035:6:15"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256t_uint256t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "17253:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "17264:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "17276:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "17284:6:15",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "17292:6:15",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "17300:6:15",
														"type": ""
													}
												],
												"src": "17181:943:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18195:53:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "18212:3:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "18235:5:15"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "18217:17:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18217:24:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18205:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "18205:37:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18205:37:15"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "18183:5:15",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "18190:3:15",
														"type": ""
													}
												],
												"src": "18130:118:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18352:124:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18362:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "18374:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18385:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "18370:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "18370:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "18362:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "18442:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18455:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18466:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18451:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18451:17:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "18398:43:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "18398:71:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18398:71:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "18324:9:15",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "18336:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "18347:4:15",
														"type": ""
													}
												],
												"src": "18254:222:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18522:76:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "18576:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "18585:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "18588:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "18578:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "18578:12:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "18578:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "18545:5:15"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "18567:5:15"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "18552:14:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "18552:21:15"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "18542:2:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18542:32:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "18535:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "18535:40:15"
															},
															"nodeType": "YulIf",
															"src": "18532:60:15"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "18515:5:15",
														"type": ""
													}
												],
												"src": "18482:116:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18653:84:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18663:29:15",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "18685:6:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "18672:12:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "18672:20:15"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "18663:5:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "18725:5:15"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "18701:23:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "18701:30:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18701:30:15"
														}
													]
												},
												"name": "abi_decode_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "18631:6:15",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "18639:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "18647:5:15",
														"type": ""
													}
												],
												"src": "18604:133:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18823:388:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "18869:83:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "18871:77:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "18871:79:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "18871:79:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "18844:7:15"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18853:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "18840:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18840:23:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18865:2:15",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "18836:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "18836:32:15"
															},
															"nodeType": "YulIf",
															"src": "18833:119:15"
														},
														{
															"nodeType": "YulBlock",
															"src": "18962:117:15",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "18977:15:15",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18991:1:15",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "18981:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "19006:63:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "19041:9:15"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "19052:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "19037:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "19037:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "19061:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "19016:20:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19016:53:15"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "19006:6:15"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "19089:115:15",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "19104:16:15",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19118:2:15",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "19108:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "19134:60:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "19166:9:15"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "19177:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "19162:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "19162:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "19186:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "19144:17:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19144:50:15"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "19134:6:15"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "18785:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "18796:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "18808:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "18816:6:15",
														"type": ""
													}
												],
												"src": "18743:468:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19300:391:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "19346:83:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "19348:77:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "19348:79:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "19348:79:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "19321:7:15"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19330:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "19317:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19317:23:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19342:2:15",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "19313:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "19313:32:15"
															},
															"nodeType": "YulIf",
															"src": "19310:119:15"
														},
														{
															"nodeType": "YulBlock",
															"src": "19439:117:15",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "19454:15:15",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19468:1:15",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "19458:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "19483:63:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "19518:9:15"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "19529:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "19514:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "19514:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "19538:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "19493:20:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19493:53:15"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "19483:6:15"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "19566:118:15",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "19581:16:15",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19595:2:15",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "19585:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "19611:63:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "19646:9:15"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "19657:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "19642:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "19642:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "19666:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "19621:20:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19621:53:15"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "19611:6:15"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "19262:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "19273:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "19285:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "19293:6:15",
														"type": ""
													}
												],
												"src": "19217:474:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19840:946:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "19887:83:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "19889:77:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "19889:79:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "19889:79:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "19861:7:15"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19870:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "19857:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19857:23:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19882:3:15",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "19853:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "19853:33:15"
															},
															"nodeType": "YulIf",
															"src": "19850:120:15"
														},
														{
															"nodeType": "YulBlock",
															"src": "19980:117:15",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "19995:15:15",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20009:1:15",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "19999:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "20024:63:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "20059:9:15"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "20070:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "20055:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "20055:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "20079:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "20034:20:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20034:53:15"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "20024:6:15"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "20107:118:15",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "20122:16:15",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20136:2:15",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "20126:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "20152:63:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "20187:9:15"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "20198:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "20183:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "20183:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "20207:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "20162:20:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20162:53:15"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "20152:6:15"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "20235:118:15",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "20250:16:15",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20264:2:15",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "20254:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "20280:63:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "20315:9:15"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "20326:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "20311:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "20311:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "20335:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "20290:20:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20290:53:15"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "20280:6:15"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "20363:118:15",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "20378:16:15",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20392:2:15",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "20382:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "20408:63:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "20443:9:15"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "20454:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "20439:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "20439:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "20463:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "20418:20:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20418:53:15"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nodeType": "YulIdentifier",
																			"src": "20408:6:15"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "20491:288:15",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "20506:47:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "20537:9:15"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "20548:3:15",
																						"type": "",
																						"value": "128"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "20533:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "20533:19:15"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "20520:12:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20520:33:15"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "20510:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "20600:83:15",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "20602:77:15"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "20602:79:15"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "20602:79:15"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "20572:6:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20580:18:15",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "20569:2:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20569:30:15"
																	},
																	"nodeType": "YulIf",
																	"src": "20566:117:15"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "20697:72:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "20741:9:15"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "20752:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "20737:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "20737:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "20761:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "20707:29:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20707:62:15"
																	},
																	"variableNames": [
																		{
																			"name": "value4",
																			"nodeType": "YulIdentifier",
																			"src": "20697:6:15"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "19778:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "19789:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "19801:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "19809:6:15",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "19817:6:15",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "19825:6:15",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "19833:6:15",
														"type": ""
													}
												],
												"src": "19697:1089:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20892:519:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "20938:83:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "20940:77:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "20940:79:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "20940:79:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "20913:7:15"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20922:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "20909:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20909:23:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20934:2:15",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "20905:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "20905:32:15"
															},
															"nodeType": "YulIf",
															"src": "20902:119:15"
														},
														{
															"nodeType": "YulBlock",
															"src": "21031:117:15",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "21046:15:15",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21060:1:15",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "21050:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "21075:63:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "21110:9:15"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "21121:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "21106:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "21106:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "21130:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "21085:20:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21085:53:15"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "21075:6:15"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "21158:118:15",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "21173:16:15",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21187:2:15",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "21177:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "21203:63:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "21238:9:15"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "21249:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "21234:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "21234:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "21258:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "21213:20:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21213:53:15"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "21203:6:15"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "21286:118:15",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "21301:16:15",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21315:2:15",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "21305:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "21331:63:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "21366:9:15"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "21377:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "21362:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "21362:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "21386:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "21341:20:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21341:53:15"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "21331:6:15"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "20846:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "20857:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "20869:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "20877:6:15",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "20885:6:15",
														"type": ""
													}
												],
												"src": "20792:619:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21445:152:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21462:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21465:77:15",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21455:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "21455:88:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21455:88:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21559:1:15",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21562:4:15",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21552:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "21552:15:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21552:15:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21583:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21586:4:15",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "21576:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "21576:15:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21576:15:15"
														}
													]
												},
												"name": "panic_error_0x22",
												"nodeType": "YulFunctionDefinition",
												"src": "21417:180:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21654:269:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "21664:22:15",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "21678:4:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21684:1:15",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "21674:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "21674:12:15"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "21664:6:15"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "21695:38:15",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "21725:4:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21731:1:15",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "21721:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "21721:12:15"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "21699:18:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "21772:51:15",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "21786:27:15",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "21800:6:15"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "21808:4:15",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "21796:3:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "21796:17:15"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "21786:6:15"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "21752:18:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "21745:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "21745:26:15"
															},
															"nodeType": "YulIf",
															"src": "21742:81:15"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "21875:42:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nodeType": "YulIdentifier",
																				"src": "21889:16:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "21889:18:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "21889:18:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "21839:18:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "21862:6:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21870:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "21859:2:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21859:14:15"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "21836:2:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "21836:38:15"
															},
															"nodeType": "YulIf",
															"src": "21833:84:15"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "21638:4:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "21647:6:15",
														"type": ""
													}
												],
												"src": "21603:320:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22035:65:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "22057:6:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22065:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "22053:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22053:14:15"
																	},
																	{
																		"hexValue": "47616d652061646472657373206e6f74207365742e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "22069:23:15",
																		"type": "",
																		"value": "Game address not set."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "22046:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "22046:47:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22046:47:15"
														}
													]
												},
												"name": "store_literal_in_memory_af594d337044a8f569b563e5e50dceadb0c730709838c18fb2ed04a3ebd09d4c",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "22027:6:15",
														"type": ""
													}
												],
												"src": "21929:171:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22252:220:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "22262:74:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "22328:3:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22333:2:15",
																		"type": "",
																		"value": "21"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "22269:58:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "22269:67:15"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "22262:3:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "22434:3:15"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_af594d337044a8f569b563e5e50dceadb0c730709838c18fb2ed04a3ebd09d4c",
																	"nodeType": "YulIdentifier",
																	"src": "22345:88:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "22345:93:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22345:93:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "22447:19:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "22458:3:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22463:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "22454:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "22454:12:15"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "22447:3:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_af594d337044a8f569b563e5e50dceadb0c730709838c18fb2ed04a3ebd09d4c_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "22240:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "22248:3:15",
														"type": ""
													}
												],
												"src": "22106:366:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22649:248:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "22659:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "22671:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22682:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "22667:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "22667:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "22659:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "22706:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22717:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "22702:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22702:17:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "22725:4:15"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "22731:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "22721:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22721:20:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "22695:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "22695:47:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22695:47:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "22751:139:15",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "22885:4:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_af594d337044a8f569b563e5e50dceadb0c730709838c18fb2ed04a3ebd09d4c_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "22759:124:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "22759:131:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "22751:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_af594d337044a8f569b563e5e50dceadb0c730709838c18fb2ed04a3ebd09d4c__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "22629:9:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "22644:4:15",
														"type": ""
													}
												],
												"src": "22478:419:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23009:72:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "23031:6:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "23039:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "23027:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23027:14:15"
																	},
																	{
																		"hexValue": "4f6e6c792067616d6520636f6e74726163742063616e206d696e742e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "23043:30:15",
																		"type": "",
																		"value": "Only game contract can mint."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "23020:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "23020:54:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23020:54:15"
														}
													]
												},
												"name": "store_literal_in_memory_c65de3f23241930bb68890104d2a62495b3bdd480b7c2f8cdc49ef74d02acb25",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "23001:6:15",
														"type": ""
													}
												],
												"src": "22903:178:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23233:220:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "23243:74:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "23309:3:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23314:2:15",
																		"type": "",
																		"value": "28"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "23250:58:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "23250:67:15"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "23243:3:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "23415:3:15"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_c65de3f23241930bb68890104d2a62495b3bdd480b7c2f8cdc49ef74d02acb25",
																	"nodeType": "YulIdentifier",
																	"src": "23326:88:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "23326:93:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23326:93:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "23428:19:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "23439:3:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23444:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "23435:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "23435:12:15"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "23428:3:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_c65de3f23241930bb68890104d2a62495b3bdd480b7c2f8cdc49ef74d02acb25_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "23221:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "23229:3:15",
														"type": ""
													}
												],
												"src": "23087:366:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23630:248:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "23640:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "23652:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23663:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "23648:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "23648:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "23640:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "23687:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "23698:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "23683:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23683:17:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "23706:4:15"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "23712:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "23702:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23702:20:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "23676:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "23676:47:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23676:47:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "23732:139:15",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "23866:4:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_c65de3f23241930bb68890104d2a62495b3bdd480b7c2f8cdc49ef74d02acb25_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "23740:124:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "23740:131:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "23732:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c65de3f23241930bb68890104d2a62495b3bdd480b7c2f8cdc49ef74d02acb25__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "23610:9:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "23625:4:15",
														"type": ""
													}
												],
												"src": "23459:419:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "24010:206:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "24020:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "24032:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "24043:2:15",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "24028:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "24028:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "24020:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "24100:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "24113:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "24124:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "24109:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24109:17:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "24056:43:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "24056:71:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "24056:71:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "24181:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "24194:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "24205:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "24190:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24190:18:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "24137:43:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "24137:72:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "24137:72:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "23974:9:15",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "23986:6:15",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "23994:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "24005:4:15",
														"type": ""
													}
												],
												"src": "23884:332:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "24348:206:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "24358:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "24370:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "24381:2:15",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "24366:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "24366:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "24358:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "24438:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "24451:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "24462:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "24447:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24447:17:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "24394:43:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "24394:71:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "24394:71:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "24519:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "24532:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "24543:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "24528:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24528:18:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "24475:43:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "24475:72:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "24475:72:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "24312:9:15",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "24324:6:15",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "24332:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "24343:4:15",
														"type": ""
													}
												],
												"src": "24222:332:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "24588:152:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "24605:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "24608:77:15",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "24598:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "24598:88:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "24598:88:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "24702:1:15",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "24705:4:15",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "24695:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "24695:15:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "24695:15:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "24726:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "24729:4:15",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "24719:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "24719:15:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "24719:15:15"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "24560:180:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "24774:152:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "24791:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "24794:77:15",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "24784:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "24784:88:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "24784:88:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "24888:1:15",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "24891:4:15",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "24881:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "24881:15:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "24881:15:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "24912:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "24915:4:15",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "24905:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "24905:15:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "24905:15:15"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "24746:180:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "24975:190:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "24985:33:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "25012:5:15"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "24994:17:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "24994:24:15"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "24985:5:15"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "25108:22:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "25110:16:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "25110:18:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "25110:18:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "25033:5:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "25040:66:15",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "25030:2:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "25030:77:15"
															},
															"nodeType": "YulIf",
															"src": "25027:103:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "25139:20:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "25150:5:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "25157:1:15",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "25146:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "25146:13:15"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "25139:3:15"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "24961:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "24971:3:15",
														"type": ""
													}
												],
												"src": "24932:233:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "25277:72:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "25299:6:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "25307:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "25295:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "25295:14:15"
																	},
																	{
																		"hexValue": "47616d65206164647265737320697320616c7265616479207365742e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "25311:30:15",
																		"type": "",
																		"value": "Game address is already set."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "25288:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "25288:54:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "25288:54:15"
														}
													]
												},
												"name": "store_literal_in_memory_732fb107256944bc8e16b4baa2a1ee32d437565fb724a962aaca04c4544c866c",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "25269:6:15",
														"type": ""
													}
												],
												"src": "25171:178:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "25501:220:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "25511:74:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "25577:3:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "25582:2:15",
																		"type": "",
																		"value": "28"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "25518:58:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "25518:67:15"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "25511:3:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "25683:3:15"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_732fb107256944bc8e16b4baa2a1ee32d437565fb724a962aaca04c4544c866c",
																	"nodeType": "YulIdentifier",
																	"src": "25594:88:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "25594:93:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "25594:93:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "25696:19:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "25707:3:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "25712:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "25703:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "25703:12:15"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "25696:3:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_732fb107256944bc8e16b4baa2a1ee32d437565fb724a962aaca04c4544c866c_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "25489:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "25497:3:15",
														"type": ""
													}
												],
												"src": "25355:366:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "25898:248:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "25908:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "25920:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "25931:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "25916:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "25916:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "25908:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "25955:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "25966:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "25951:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "25951:17:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "25974:4:15"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "25980:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "25970:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "25970:20:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "25944:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "25944:47:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "25944:47:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "26000:139:15",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "26134:4:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_732fb107256944bc8e16b4baa2a1ee32d437565fb724a962aaca04c4544c866c_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "26008:124:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "26008:131:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "26000:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_732fb107256944bc8e16b4baa2a1ee32d437565fb724a962aaca04c4544c866c__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "25878:9:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "25893:4:15",
														"type": ""
													}
												],
												"src": "25727:419:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "26210:40:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "26221:22:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "26237:5:15"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "26231:5:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "26231:12:15"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "26221:6:15"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "26193:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "26203:6:15",
														"type": ""
													}
												],
												"src": "26152:98:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "26351:73:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "26368:3:15"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "26373:6:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "26361:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "26361:19:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "26361:19:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "26389:29:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "26408:3:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "26413:4:15",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "26404:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "26404:14:15"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "26389:11:15"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "26323:3:15",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "26328:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "26339:11:15",
														"type": ""
													}
												],
												"src": "26256:168:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "26520:283:15",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "26530:52:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "26576:5:15"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "26544:31:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "26544:38:15"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "26534:6:15",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "26591:77:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "26656:3:15"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "26661:6:15"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "26598:57:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "26598:70:15"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "26591:3:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "26716:5:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "26723:4:15",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "26712:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "26712:16:15"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "26730:3:15"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "26735:6:15"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "26677:34:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "26677:65:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "26677:65:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "26751:46:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "26762:3:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "26789:6:15"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "26767:21:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "26767:29:15"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "26758:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "26758:39:15"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "26751:3:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "26501:5:15",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "26508:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "26516:3:15",
														"type": ""
													}
												],
												"src": "26430:373:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "27037:523:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "27047:27:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "27059:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "27070:3:15",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "27055:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "27055:19:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "27047:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "27128:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "27141:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "27152:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "27137:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "27137:17:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "27084:43:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "27084:71:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "27084:71:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "27209:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "27222:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "27233:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "27218:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "27218:18:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "27165:43:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "27165:72:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "27165:72:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "27291:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "27304:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "27315:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "27300:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "27300:18:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "27247:43:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "27247:72:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "27247:72:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "27373:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "27386:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "27397:2:15",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "27382:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "27382:18:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "27329:43:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "27329:72:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "27329:72:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "27422:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "27433:3:15",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "27418:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "27418:19:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "27443:4:15"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "27449:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "27439:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "27439:20:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "27411:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "27411:49:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "27411:49:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "27469:84:15",
															"value": {
																"arguments": [
																	{
																		"name": "value4",
																		"nodeType": "YulIdentifier",
																		"src": "27539:6:15"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "27548:4:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "27477:61:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "27477:76:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "27469:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "26977:9:15",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "26989:6:15",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "26997:6:15",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "27005:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "27013:6:15",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "27021:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "27032:4:15",
														"type": ""
													}
												],
												"src": "26809:751:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "27628:79:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "27638:22:15",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "27653:6:15"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "27647:5:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "27647:13:15"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "27638:5:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "27695:5:15"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "27669:25:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "27669:32:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "27669:32:15"
														}
													]
												},
												"name": "abi_decode_t_bytes4_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "27606:6:15",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "27614:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "27622:5:15",
														"type": ""
													}
												],
												"src": "27566:141:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "27789:273:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "27835:83:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "27837:77:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "27837:79:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "27837:79:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "27810:7:15"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "27819:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "27806:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "27806:23:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "27831:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "27802:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "27802:32:15"
															},
															"nodeType": "YulIf",
															"src": "27799:119:15"
														},
														{
															"nodeType": "YulBlock",
															"src": "27928:127:15",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "27943:15:15",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "27957:1:15",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "27947:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "27972:73:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "28017:9:15"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "28028:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "28013:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "28013:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "28037:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "27982:30:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "27982:63:15"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "27972:6:15"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "27759:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "27770:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "27782:6:15",
														"type": ""
													}
												],
												"src": "27713:349:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "28396:725:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "28406:27:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "28418:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "28429:3:15",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "28414:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "28414:19:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "28406:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "28487:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "28500:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "28511:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "28496:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "28496:17:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "28443:43:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "28443:71:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "28443:71:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "28568:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "28581:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "28592:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "28577:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "28577:18:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "28524:43:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "28524:72:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "28524:72:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "28617:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "28628:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "28613:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "28613:18:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "28637:4:15"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "28643:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "28633:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "28633:20:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "28606:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "28606:48:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "28606:48:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "28663:116:15",
															"value": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "28765:6:15"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "28774:4:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "28671:93:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "28671:108:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "28663:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "28800:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "28811:2:15",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "28796:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "28796:18:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "28820:4:15"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "28826:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "28816:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "28816:20:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "28789:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "28789:48:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "28789:48:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "28846:116:15",
															"value": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "28948:6:15"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "28957:4:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "28854:93:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "28854:108:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "28846:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "28983:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "28994:3:15",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "28979:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "28979:19:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "29004:4:15"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "29010:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "29000:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "29000:20:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "28972:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "28972:49:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "28972:49:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "29030:84:15",
															"value": {
																"arguments": [
																	{
																		"name": "value4",
																		"nodeType": "YulIdentifier",
																		"src": "29100:6:15"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "29109:4:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "29038:61:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "29038:76:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "29030:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "28336:9:15",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "28348:6:15",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "28356:6:15",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "28364:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "28372:6:15",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "28380:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "28391:4:15",
														"type": ""
													}
												],
												"src": "28068:1053:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "29171:147:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "29181:25:15",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "29204:1:15"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "29186:17:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "29186:20:15"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "29181:1:15"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "29215:25:15",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "29238:1:15"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "29220:17:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "29220:20:15"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "29215:1:15"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "29249:16:15",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "29260:1:15"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "29263:1:15"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "29256:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "29256:9:15"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "29249:3:15"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "29289:22:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "29291:16:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "29291:18:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "29291:18:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "29281:1:15"
																	},
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "29284:3:15"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "29278:2:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "29278:10:15"
															},
															"nodeType": "YulIf",
															"src": "29275:36:15"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "29158:1:15",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "29161:1:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "29167:3:15",
														"type": ""
													}
												],
												"src": "29127:191:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "29506:371:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "29516:27:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "29528:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "29539:3:15",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "29524:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "29524:19:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "29516:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "29597:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "29610:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "29621:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "29606:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "29606:17:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "29553:43:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "29553:71:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "29553:71:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "29678:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "29691:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "29702:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "29687:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "29687:18:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "29634:43:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "29634:72:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "29634:72:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "29760:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "29773:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "29784:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "29769:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "29769:18:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "29716:43:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "29716:72:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "29716:72:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "29842:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "29855:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "29866:2:15",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "29851:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "29851:18:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "29798:43:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "29798:72:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "29798:72:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "29454:9:15",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "29466:6:15",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "29474:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "29482:6:15",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "29490:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "29501:4:15",
														"type": ""
													}
												],
												"src": "29324:553:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "30109:408:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "30119:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "30131:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "30142:2:15",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "30127:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "30127:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "30119:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "30166:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "30177:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "30162:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "30162:17:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "30185:4:15"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "30191:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "30181:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "30181:20:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "30155:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "30155:47:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "30155:47:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "30211:116:15",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "30313:6:15"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "30322:4:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "30219:93:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "30219:108:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "30211:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "30348:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "30359:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "30344:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "30344:18:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "30368:4:15"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "30374:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "30364:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "30364:20:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "30337:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "30337:48:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "30337:48:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "30394:116:15",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "30496:6:15"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "30505:4:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "30402:93:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "30402:108:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "30394:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "30073:9:15",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "30085:6:15",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "30093:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "30104:4:15",
														"type": ""
													}
												],
												"src": "29883:634:15"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    // uint256[]\n    function abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let srcEnd := add(offset, mul(length, 0x20))\n        if gt(srcEnd, end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let src := offset } lt(src, srcEnd) { src := add(src, 0x20) }\n        {\n\n            let elementPos := src\n\n            mstore(dst, abi_decode_t_uint256(elementPos, end))\n            dst := add(dst, 0x20)\n        }\n    }\n\n    // uint256[]\n    function abi_decode_t_array$_t_uint256_$dyn_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_array$_t_uint256_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2 := abi_decode_t_array$_t_uint256_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2 := abi_decode_t_array$_t_uint256_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_array$_t_uint256_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 128))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value4 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_allocation_size_t_array$_t_address_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    // address[]\n    function abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_address_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let srcEnd := add(offset, mul(length, 0x20))\n        if gt(srcEnd, end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let src := offset } lt(src, srcEnd) { src := add(src, 0x20) }\n        {\n\n            let elementPos := src\n\n            mstore(dst, abi_decode_t_address(elementPos, end))\n            dst := add(dst, 0x20)\n        }\n    }\n\n    // address[]\n    function abi_decode_t_array$_t_address_$dyn_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_array$_t_address_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_array$_t_uint256_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_array$_t_uint256_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encodeUpdatedPos_t_uint256_to_t_uint256(value0, pos) -> updatedPos {\n        abi_encode_t_uint256_to_t_uint256(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // uint256[] -> uint256[]\n    function abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_uint256_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_uint256_to_t_uint256(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_decode_tuple_t_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_array$_t_uint256_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2 := abi_decode_t_array$_t_uint256_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256t_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 128))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value4 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function store_literal_in_memory_af594d337044a8f569b563e5e50dceadb0c730709838c18fb2ed04a3ebd09d4c(memPtr) {\n\n        mstore(add(memPtr, 0), \"Game address not set.\")\n\n    }\n\n    function abi_encode_t_stringliteral_af594d337044a8f569b563e5e50dceadb0c730709838c18fb2ed04a3ebd09d4c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 21)\n        store_literal_in_memory_af594d337044a8f569b563e5e50dceadb0c730709838c18fb2ed04a3ebd09d4c(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_af594d337044a8f569b563e5e50dceadb0c730709838c18fb2ed04a3ebd09d4c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_af594d337044a8f569b563e5e50dceadb0c730709838c18fb2ed04a3ebd09d4c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_c65de3f23241930bb68890104d2a62495b3bdd480b7c2f8cdc49ef74d02acb25(memPtr) {\n\n        mstore(add(memPtr, 0), \"Only game contract can mint.\")\n\n    }\n\n    function abi_encode_t_stringliteral_c65de3f23241930bb68890104d2a62495b3bdd480b7c2f8cdc49ef74d02acb25_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 28)\n        store_literal_in_memory_c65de3f23241930bb68890104d2a62495b3bdd480b7c2f8cdc49ef74d02acb25(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_c65de3f23241930bb68890104d2a62495b3bdd480b7c2f8cdc49ef74d02acb25__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c65de3f23241930bb68890104d2a62495b3bdd480b7c2f8cdc49ef74d02acb25_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function store_literal_in_memory_732fb107256944bc8e16b4baa2a1ee32d437565fb724a962aaca04c4544c866c(memPtr) {\n\n        mstore(add(memPtr, 0), \"Game address is already set.\")\n\n    }\n\n    function abi_encode_t_stringliteral_732fb107256944bc8e16b4baa2a1ee32d437565fb724a962aaca04c4544c866c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 28)\n        store_literal_in_memory_732fb107256944bc8e16b4baa2a1ee32d437565fb724a962aaca04c4544c866c(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_732fb107256944bc8e16b4baa2a1ee32d437565fb724a962aaca04c4544c866c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_732fb107256944bc8e16b4baa2a1ee32d437565fb724a962aaca04c4544c866c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        mstore(add(headStart, 128), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value4,  tail)\n\n    }\n\n    function abi_decode_t_bytes4_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        mstore(add(headStart, 64), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value2,  tail)\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value3,  tail)\n\n        mstore(add(headStart, 128), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value4,  tail)\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value0,  tail)\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value1,  tail)\n\n    }\n\n}\n",
									"id": 15,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b5060043610610129575f3560e01c8063715018a6116100ab578063bd85b0391161006f578063bd85b03914610329578063e985e9c514610359578063f242432a14610389578063f2fde38b146103a5578063f5298aca146103c157610129565b8063715018a6146102ab578063731133e9146102b55780638da5cb5b146102d1578063a168d873146102ef578063a22cb4651461030d57610129565b80632eb2c2d6116100f25780632eb2c2d6146101f75780634e1273f4146102135780634f558e79146102435780636b20c45414610273578063711953ef1461028f57610129565b8062fdd58e1461012d57806301ffc9a71461015d5780630e89341c1461018d57806318160ddd146101bd5780631f7fdffa146101db575b5f80fd5b61014760048036038101906101429190612006565b6103dd565b6040516101549190612053565b60405180910390f35b610177600480360381019061017291906120c1565b610432565b6040516101849190612106565b60405180910390f35b6101a760048036038101906101a2919061211f565b610513565b6040516101b491906121d4565b60405180910390f35b6101c56105a5565b6040516101d29190612053565b60405180910390f35b6101f560048036038101906101f091906123e4565b6105ae565b005b610211600480360381019061020c919061249c565b6106de565b005b61022d60048036038101906102289190612627565b610785565b60405161023a9190612754565b60405180910390f35b61025d6004803603810190610258919061211f565b610892565b60405161026a9190612106565b60405180910390f35b61028d60048036038101906102889190612774565b6108a5565b005b6102a960048036038101906102a491906127fc565b610951565b005b6102b3610a2b565b005b6102cf60048036038101906102ca9190612827565b610a3e565b005b6102d9610b6e565b6040516102e691906128b6565b60405180910390f35b6102f7610b96565b60405161030491906128b6565b60405180910390f35b610327600480360381019061032291906128f9565b610bbb565b005b610343600480360381019061033e919061211f565b610bd1565b6040516103509190612053565b60405180910390f35b610373600480360381019061036e9190612937565b610beb565b6040516103809190612106565b60405180910390f35b6103a3600480360381019061039e9190612975565b610c79565b005b6103bf60048036038101906103ba91906127fc565b610d20565b005b6103db60048036038101906103d69190612a08565b610da4565b005b5f805f8381526020019081526020015f205f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b5f7fd9b67a26000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806104fc57507f0e89341c000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b8061050c575061050b82610e50565b5b9050919050565b60606002805461052290612a85565b80601f016020809104026020016040519081016040528092919081815260200182805461054e90612a85565b80156105995780601f1061057057610100808354040283529160200191610599565b820191905f5260205f20905b81548152906001019060200180831161057c57829003601f168201915b50505050509050919050565b5f600554905090565b5f73ffffffffffffffffffffffffffffffffffffffff1660065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff160361063d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161063490612aff565b60405180910390fd5b60065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146106cc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106c390612b67565b60405180910390fd5b6106d884848484610eb9565b50505050565b5f6106e7610f3c565b90508073ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff161415801561072c575061072a8682610beb565b155b156107705780866040517fe237d922000000000000000000000000000000000000000000000000000000008152600401610767929190612b85565b60405180910390fd5b61077d8686868686610f43565b505050505050565b606081518351146107d157815183516040517f5b0599910000000000000000000000000000000000000000000000000000000081526004016107c8929190612bac565b60405180910390fd5b5f835167ffffffffffffffff8111156107ed576107ec6121f8565b5b60405190808252806020026020018201604052801561081b5781602001602082028036833780820191505090505b5090505f5b84518110156108875761085761083f828761103790919063ffffffff16565b610852838761104a90919063ffffffff16565b6103dd565b82828151811061086a57610869612bd3565b5b6020026020010181815250508061088090612c2d565b9050610820565b508091505092915050565b5f8061089d83610bd1565b119050919050565b6108ad610f3c565b73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141580156108f657506108f4836108ef610f3c565b610beb565b155b1561094157610903610f3c565b836040517fe237d922000000000000000000000000000000000000000000000000000000008152600401610938929190612b85565b60405180910390fd5b61094c83838361105d565b505050565b6109596110ed565b5f73ffffffffffffffffffffffffffffffffffffffff1660065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146109e8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109df90612cbe565b60405180910390fd5b8060065f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b610a336110ed565b610a3c5f611174565b565b5f73ffffffffffffffffffffffffffffffffffffffff1660065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603610acd576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ac490612aff565b60405180910390fd5b60065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610b5c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b5390612b67565b60405180910390fd5b610b6884848484611237565b50505050565b5f60035f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610bcd610bc6610f3c565b83836112cc565b5050565b5f60045f8381526020019081526020015f20549050919050565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16905092915050565b5f610c82610f3c565b90508073ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff1614158015610cc75750610cc58682610beb565b155b15610d0b5780866040517fe237d922000000000000000000000000000000000000000000000000000000008152600401610d02929190612b85565b60405180910390fd5b610d188686868686611435565b505050505050565b610d286110ed565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610d98575f6040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401610d8f91906128b6565b60405180910390fd5b610da181611174565b50565b610dac610f3c565b73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614158015610df55750610df383610dee610f3c565b610beb565b155b15610e4057610e02610f3c565b836040517fe237d922000000000000000000000000000000000000000000000000000000008152600401610e37929190612b85565b60405180910390fd5b610e4b83838361153b565b505050565b5f7f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610f29575f6040517f57f447ce000000000000000000000000000000000000000000000000000000008152600401610f2091906128b6565b60405180910390fd5b610f365f858585856115dd565b50505050565b5f33905090565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610fb3575f6040517f57f447ce000000000000000000000000000000000000000000000000000000008152600401610faa91906128b6565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1603611023575f6040517f01a8351400000000000000000000000000000000000000000000000000000000815260040161101a91906128b6565b60405180910390fd5b61103085858585856115dd565b5050505050565b5f60208202602084010151905092915050565b5f60208202602084010151905092915050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036110cd575f6040517f01a835140000000000000000000000000000000000000000000000000000000081526004016110c491906128b6565b60405180910390fd5b6110e8835f848460405180602001604052805f8152506115dd565b505050565b6110f5610f3c565b73ffffffffffffffffffffffffffffffffffffffff16611113610b6e565b73ffffffffffffffffffffffffffffffffffffffff161461117257611136610f3c565b6040517f118cdaa700000000000000000000000000000000000000000000000000000000815260040161116991906128b6565b60405180910390fd5b565b5f60035f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160035f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16036112a7575f6040517f57f447ce00000000000000000000000000000000000000000000000000000000815260040161129e91906128b6565b60405180910390fd5b5f806112b38585611689565b915091506112c45f878484876115dd565b505050505050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361133c575f6040517fced3e10000000000000000000000000000000000000000000000000000000000815260040161133391906128b6565b60405180910390fd5b8060015f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31836040516114289190612106565b60405180910390a3505050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16036114a5575f6040517f57f447ce00000000000000000000000000000000000000000000000000000000815260040161149c91906128b6565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1603611515575f6040517f01a8351400000000000000000000000000000000000000000000000000000000815260040161150c91906128b6565b60405180910390fd5b5f806115218585611689565b9150915061153287878484876115dd565b50505050505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036115ab575f6040517f01a835140000000000000000000000000000000000000000000000000000000081526004016115a291906128b6565b60405180910390fd5b5f806115b78484611689565b915091506115d6855f848460405180602001604052805f8152506115dd565b5050505050565b6115e9858585856116b9565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614611682575f611625610f3c565b90506001845103611671575f6116445f8661104a90919063ffffffff16565b90505f61165a5f8661104a90919063ffffffff16565b905061166a8389898585896116cb565b5050611680565b61167f81878787878761187a565b5b505b5050505050565b60608060405191506001825283602083015260408201905060018152826020820152604081016040529250929050565b6116c584848484611a29565b50505050565b5f8473ffffffffffffffffffffffffffffffffffffffff163b1115611872578373ffffffffffffffffffffffffffffffffffffffff1663f23a6e6187878686866040518663ffffffff1660e01b815260040161172b959493929190612d2e565b6020604051808303815f875af192505050801561176657506040513d601f19601f820116820180604052508101906117639190612d9a565b60015b6117e7573d805f8114611794576040519150601f19603f3d011682016040523d82523d5f602084013e611799565b606091505b505f8151036117df57846040517f57f447ce0000000000000000000000000000000000000000000000000000000081526004016117d691906128b6565b60405180910390fd5b805181602001fd5b63f23a6e6160e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161461187057846040517f57f447ce00000000000000000000000000000000000000000000000000000000815260040161186791906128b6565b60405180910390fd5b505b505050505050565b5f8473ffffffffffffffffffffffffffffffffffffffff163b1115611a21578373ffffffffffffffffffffffffffffffffffffffff1663bc197c8187878686866040518663ffffffff1660e01b81526004016118da959493929190612dc5565b6020604051808303815f875af192505050801561191557506040513d601f19601f820116820180604052508101906119129190612d9a565b60015b611996573d805f8114611943576040519150601f19603f3d011682016040523d82523d5f602084013e611948565b606091505b505f81510361198e57846040517f57f447ce00000000000000000000000000000000000000000000000000000000815260040161198591906128b6565b60405180910390fd5b805181602001fd5b63bc197c8160e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614611a1f57846040517f57f447ce000000000000000000000000000000000000000000000000000000008152600401611a1691906128b6565b60405180910390fd5b505b505050505050565b611a3584848484611bd2565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603611b0e575f805b8351811015611af3575f838281518110611a8857611a87612bd3565b5b602002602001015190508060045f878581518110611aa957611aa8612bd3565b5b602002602001015181526020019081526020015f205f828254611acc9190612e2b565b925050819055508083611adf9190612e2b565b92505080611aec90612c2d565b9050611a6b565b508060055f828254611b059190612e2b565b92505081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611bcc575f805b8351811015611bba575f838281518110611b6157611b60612bd3565b5b602002602001015190508060045f878581518110611b8257611b81612bd3565b5b602002602001015181526020019081526020015f205f828254039250508190555080830192505080611bb390612c2d565b9050611b44565b508060055f8282540392505081905550505b50505050565b8051825114611c1c57815181516040517f5b059991000000000000000000000000000000000000000000000000000000008152600401611c13929190612bac565b60405180910390fd5b5f611c25610f3c565b90505f5b8351811015611e27575f611c46828661104a90919063ffffffff16565b90505f611c5c838661104a90919063ffffffff16565b90505f73ffffffffffffffffffffffffffffffffffffffff168873ffffffffffffffffffffffffffffffffffffffff1614611d7f575f805f8481526020019081526020015f205f8a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015611d2b57888183856040517f03dee4c5000000000000000000000000000000000000000000000000000000008152600401611d229493929190612e5e565b60405180910390fd5b8181035f808581526020019081526020015f205f8b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff1614611e1457805f808481526020019081526020015f205f8973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f828254611e0c9190612e2b565b925050819055505b505080611e2090612c2d565b9050611c29565b506001835103611ee2575f611e455f8561104a90919063ffffffff16565b90505f611e5b5f8561104a90919063ffffffff16565b90508573ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f628585604051611ed3929190612bac565b60405180910390a45050611f61565b8373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8686604051611f58929190612ea1565b60405180910390a45b5050505050565b5f604051905090565b5f80fd5b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f611fa282611f79565b9050919050565b611fb281611f98565b8114611fbc575f80fd5b50565b5f81359050611fcd81611fa9565b92915050565b5f819050919050565b611fe581611fd3565b8114611fef575f80fd5b50565b5f8135905061200081611fdc565b92915050565b5f806040838503121561201c5761201b611f71565b5b5f61202985828601611fbf565b925050602061203a85828601611ff2565b9150509250929050565b61204d81611fd3565b82525050565b5f6020820190506120665f830184612044565b92915050565b5f7fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6120a08161206c565b81146120aa575f80fd5b50565b5f813590506120bb81612097565b92915050565b5f602082840312156120d6576120d5611f71565b5b5f6120e3848285016120ad565b91505092915050565b5f8115159050919050565b612100816120ec565b82525050565b5f6020820190506121195f8301846120f7565b92915050565b5f6020828403121561213457612133611f71565b5b5f61214184828501611ff2565b91505092915050565b5f81519050919050565b5f82825260208201905092915050565b5f5b83811015612181578082015181840152602081019050612166565b5f8484015250505050565b5f601f19601f8301169050919050565b5f6121a68261214a565b6121b08185612154565b93506121c0818560208601612164565b6121c98161218c565b840191505092915050565b5f6020820190508181035f8301526121ec818461219c565b905092915050565b5f80fd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b61222e8261218c565b810181811067ffffffffffffffff8211171561224d5761224c6121f8565b5b80604052505050565b5f61225f611f68565b905061226b8282612225565b919050565b5f67ffffffffffffffff82111561228a576122896121f8565b5b602082029050602081019050919050565b5f80fd5b5f6122b16122ac84612270565b612256565b905080838252602082019050602084028301858111156122d4576122d361229b565b5b835b818110156122fd57806122e98882611ff2565b8452602084019350506020810190506122d6565b5050509392505050565b5f82601f83011261231b5761231a6121f4565b5b813561232b84826020860161229f565b91505092915050565b5f80fd5b5f67ffffffffffffffff821115612352576123516121f8565b5b61235b8261218c565b9050602081019050919050565b828183375f83830152505050565b5f61238861238384612338565b612256565b9050828152602081018484840111156123a4576123a3612334565b5b6123af848285612368565b509392505050565b5f82601f8301126123cb576123ca6121f4565b5b81356123db848260208601612376565b91505092915050565b5f805f80608085870312156123fc576123fb611f71565b5b5f61240987828801611fbf565b945050602085013567ffffffffffffffff81111561242a57612429611f75565b5b61243687828801612307565b935050604085013567ffffffffffffffff81111561245757612456611f75565b5b61246387828801612307565b925050606085013567ffffffffffffffff81111561248457612483611f75565b5b612490878288016123b7565b91505092959194509250565b5f805f805f60a086880312156124b5576124b4611f71565b5b5f6124c288828901611fbf565b95505060206124d388828901611fbf565b945050604086013567ffffffffffffffff8111156124f4576124f3611f75565b5b61250088828901612307565b935050606086013567ffffffffffffffff81111561252157612520611f75565b5b61252d88828901612307565b925050608086013567ffffffffffffffff81111561254e5761254d611f75565b5b61255a888289016123b7565b9150509295509295909350565b5f67ffffffffffffffff821115612581576125806121f8565b5b602082029050602081019050919050565b5f6125a461259f84612567565b612256565b905080838252602082019050602084028301858111156125c7576125c661229b565b5b835b818110156125f057806125dc8882611fbf565b8452602084019350506020810190506125c9565b5050509392505050565b5f82601f83011261260e5761260d6121f4565b5b813561261e848260208601612592565b91505092915050565b5f806040838503121561263d5761263c611f71565b5b5f83013567ffffffffffffffff81111561265a57612659611f75565b5b612666858286016125fa565b925050602083013567ffffffffffffffff81111561268757612686611f75565b5b61269385828601612307565b9150509250929050565b5f81519050919050565b5f82825260208201905092915050565b5f819050602082019050919050565b6126cf81611fd3565b82525050565b5f6126e083836126c6565b60208301905092915050565b5f602082019050919050565b5f6127028261269d565b61270c81856126a7565b9350612717836126b7565b805f5b8381101561274757815161272e88826126d5565b9750612739836126ec565b92505060018101905061271a565b5085935050505092915050565b5f6020820190508181035f83015261276c81846126f8565b905092915050565b5f805f6060848603121561278b5761278a611f71565b5b5f61279886828701611fbf565b935050602084013567ffffffffffffffff8111156127b9576127b8611f75565b5b6127c586828701612307565b925050604084013567ffffffffffffffff8111156127e6576127e5611f75565b5b6127f286828701612307565b9150509250925092565b5f6020828403121561281157612810611f71565b5b5f61281e84828501611fbf565b91505092915050565b5f805f806080858703121561283f5761283e611f71565b5b5f61284c87828801611fbf565b945050602061285d87828801611ff2565b935050604061286e87828801611ff2565b925050606085013567ffffffffffffffff81111561288f5761288e611f75565b5b61289b878288016123b7565b91505092959194509250565b6128b081611f98565b82525050565b5f6020820190506128c95f8301846128a7565b92915050565b6128d8816120ec565b81146128e2575f80fd5b50565b5f813590506128f3816128cf565b92915050565b5f806040838503121561290f5761290e611f71565b5b5f61291c85828601611fbf565b925050602061292d858286016128e5565b9150509250929050565b5f806040838503121561294d5761294c611f71565b5b5f61295a85828601611fbf565b925050602061296b85828601611fbf565b9150509250929050565b5f805f805f60a0868803121561298e5761298d611f71565b5b5f61299b88828901611fbf565b95505060206129ac88828901611fbf565b94505060406129bd88828901611ff2565b93505060606129ce88828901611ff2565b925050608086013567ffffffffffffffff8111156129ef576129ee611f75565b5b6129fb888289016123b7565b9150509295509295909350565b5f805f60608486031215612a1f57612a1e611f71565b5b5f612a2c86828701611fbf565b9350506020612a3d86828701611ff2565b9250506040612a4e86828701611ff2565b9150509250925092565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f6002820490506001821680612a9c57607f821691505b602082108103612aaf57612aae612a58565b5b50919050565b7f47616d652061646472657373206e6f74207365742e00000000000000000000005f82015250565b5f612ae9601583612154565b9150612af482612ab5565b602082019050919050565b5f6020820190508181035f830152612b1681612add565b9050919050565b7f4f6e6c792067616d6520636f6e74726163742063616e206d696e742e000000005f82015250565b5f612b51601c83612154565b9150612b5c82612b1d565b602082019050919050565b5f6020820190508181035f830152612b7e81612b45565b9050919050565b5f604082019050612b985f8301856128a7565b612ba560208301846128a7565b9392505050565b5f604082019050612bbf5f830185612044565b612bcc6020830184612044565b9392505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f612c3782611fd3565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203612c6957612c68612c00565b5b600182019050919050565b7f47616d65206164647265737320697320616c7265616479207365742e000000005f82015250565b5f612ca8601c83612154565b9150612cb382612c74565b602082019050919050565b5f6020820190508181035f830152612cd581612c9c565b9050919050565b5f81519050919050565b5f82825260208201905092915050565b5f612d0082612cdc565b612d0a8185612ce6565b9350612d1a818560208601612164565b612d238161218c565b840191505092915050565b5f60a082019050612d415f8301886128a7565b612d4e60208301876128a7565b612d5b6040830186612044565b612d686060830185612044565b8181036080830152612d7a8184612cf6565b90509695505050505050565b5f81519050612d9481612097565b92915050565b5f60208284031215612daf57612dae611f71565b5b5f612dbc84828501612d86565b91505092915050565b5f60a082019050612dd85f8301886128a7565b612de560208301876128a7565b8181036040830152612df781866126f8565b90508181036060830152612e0b81856126f8565b90508181036080830152612e1f8184612cf6565b90509695505050505050565b5f612e3582611fd3565b9150612e4083611fd3565b9250828201905080821115612e5857612e57612c00565b5b92915050565b5f608082019050612e715f8301876128a7565b612e7e6020830186612044565b612e8b6040830185612044565b612e986060830184612044565b95945050505050565b5f6040820190508181035f830152612eb981856126f8565b90508181036020830152612ecd81846126f8565b9050939250505056fea26469706673582212206e981728272f3c0e563a277c4d69e97f45313db7a6195cf9a7dc51045513422c64736f6c63430008140033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x129 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0xAB JUMPI DUP1 PUSH4 0xBD85B039 GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xBD85B039 EQ PUSH2 0x329 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x359 JUMPI DUP1 PUSH4 0xF242432A EQ PUSH2 0x389 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x3A5 JUMPI DUP1 PUSH4 0xF5298ACA EQ PUSH2 0x3C1 JUMPI PUSH2 0x129 JUMP JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x2AB JUMPI DUP1 PUSH4 0x731133E9 EQ PUSH2 0x2B5 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x2D1 JUMPI DUP1 PUSH4 0xA168D873 EQ PUSH2 0x2EF JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x30D JUMPI PUSH2 0x129 JUMP JUMPDEST DUP1 PUSH4 0x2EB2C2D6 GT PUSH2 0xF2 JUMPI DUP1 PUSH4 0x2EB2C2D6 EQ PUSH2 0x1F7 JUMPI DUP1 PUSH4 0x4E1273F4 EQ PUSH2 0x213 JUMPI DUP1 PUSH4 0x4F558E79 EQ PUSH2 0x243 JUMPI DUP1 PUSH4 0x6B20C454 EQ PUSH2 0x273 JUMPI DUP1 PUSH4 0x711953EF EQ PUSH2 0x28F JUMPI PUSH2 0x129 JUMP JUMPDEST DUP1 PUSH3 0xFDD58E EQ PUSH2 0x12D JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x15D JUMPI DUP1 PUSH4 0xE89341C EQ PUSH2 0x18D JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1BD JUMPI DUP1 PUSH4 0x1F7FDFFA EQ PUSH2 0x1DB JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x147 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x142 SWAP2 SWAP1 PUSH2 0x2006 JUMP JUMPDEST PUSH2 0x3DD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x154 SWAP2 SWAP1 PUSH2 0x2053 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x177 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x172 SWAP2 SWAP1 PUSH2 0x20C1 JUMP JUMPDEST PUSH2 0x432 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x184 SWAP2 SWAP1 PUSH2 0x2106 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A2 SWAP2 SWAP1 PUSH2 0x211F JUMP JUMPDEST PUSH2 0x513 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B4 SWAP2 SWAP1 PUSH2 0x21D4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C5 PUSH2 0x5A5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D2 SWAP2 SWAP1 PUSH2 0x2053 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1F0 SWAP2 SWAP1 PUSH2 0x23E4 JUMP JUMPDEST PUSH2 0x5AE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x211 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x20C SWAP2 SWAP1 PUSH2 0x249C JUMP JUMPDEST PUSH2 0x6DE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x22D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x228 SWAP2 SWAP1 PUSH2 0x2627 JUMP JUMPDEST PUSH2 0x785 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23A SWAP2 SWAP1 PUSH2 0x2754 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x25D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x258 SWAP2 SWAP1 PUSH2 0x211F JUMP JUMPDEST PUSH2 0x892 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26A SWAP2 SWAP1 PUSH2 0x2106 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x28D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x288 SWAP2 SWAP1 PUSH2 0x2774 JUMP JUMPDEST PUSH2 0x8A5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2A9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A4 SWAP2 SWAP1 PUSH2 0x27FC JUMP JUMPDEST PUSH2 0x951 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2B3 PUSH2 0xA2B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2CF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2CA SWAP2 SWAP1 PUSH2 0x2827 JUMP JUMPDEST PUSH2 0xA3E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2D9 PUSH2 0xB6E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2E6 SWAP2 SWAP1 PUSH2 0x28B6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2F7 PUSH2 0xB96 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x304 SWAP2 SWAP1 PUSH2 0x28B6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x327 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x322 SWAP2 SWAP1 PUSH2 0x28F9 JUMP JUMPDEST PUSH2 0xBBB JUMP JUMPDEST STOP JUMPDEST PUSH2 0x343 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x33E SWAP2 SWAP1 PUSH2 0x211F JUMP JUMPDEST PUSH2 0xBD1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x350 SWAP2 SWAP1 PUSH2 0x2053 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x373 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x36E SWAP2 SWAP1 PUSH2 0x2937 JUMP JUMPDEST PUSH2 0xBEB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x380 SWAP2 SWAP1 PUSH2 0x2106 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3A3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x39E SWAP2 SWAP1 PUSH2 0x2975 JUMP JUMPDEST PUSH2 0xC79 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3BF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3BA SWAP2 SWAP1 PUSH2 0x27FC JUMP JUMPDEST PUSH2 0xD20 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3DB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3D6 SWAP2 SWAP1 PUSH2 0x2A08 JUMP JUMPDEST PUSH2 0xDA4 JUMP JUMPDEST STOP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH32 0xD9B67A2600000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x4FC JUMPI POP PUSH32 0xE89341C00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x50C JUMPI POP PUSH2 0x50B DUP3 PUSH2 0xE50 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0x522 SWAP1 PUSH2 0x2A85 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x54E SWAP1 PUSH2 0x2A85 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x599 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x570 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x599 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x57C JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x5 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x63D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x634 SWAP1 PUSH2 0x2AFF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x6CC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6C3 SWAP1 PUSH2 0x2B67 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x6D8 DUP5 DUP5 DUP5 DUP5 PUSH2 0xEB9 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x6E7 PUSH2 0xF3C JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x72C JUMPI POP PUSH2 0x72A DUP7 DUP3 PUSH2 0xBEB JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x770 JUMPI DUP1 DUP7 PUSH1 0x40 MLOAD PUSH32 0xE237D92200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x767 SWAP3 SWAP2 SWAP1 PUSH2 0x2B85 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x77D DUP7 DUP7 DUP7 DUP7 DUP7 PUSH2 0xF43 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x7D1 JUMPI DUP2 MLOAD DUP4 MLOAD PUSH1 0x40 MLOAD PUSH32 0x5B05999100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7C8 SWAP3 SWAP2 SWAP1 PUSH2 0x2BAC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP4 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x7ED JUMPI PUSH2 0x7EC PUSH2 0x21F8 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x81B JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x887 JUMPI PUSH2 0x857 PUSH2 0x83F DUP3 DUP8 PUSH2 0x1037 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x852 DUP4 DUP8 PUSH2 0x104A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x3DD JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x86A JUMPI PUSH2 0x869 PUSH2 0x2BD3 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP1 PUSH2 0x880 SWAP1 PUSH2 0x2C2D JUMP JUMPDEST SWAP1 POP PUSH2 0x820 JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x89D DUP4 PUSH2 0xBD1 JUMP JUMPDEST GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x8AD PUSH2 0xF3C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x8F6 JUMPI POP PUSH2 0x8F4 DUP4 PUSH2 0x8EF PUSH2 0xF3C JUMP JUMPDEST PUSH2 0xBEB JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x941 JUMPI PUSH2 0x903 PUSH2 0xF3C JUMP JUMPDEST DUP4 PUSH1 0x40 MLOAD PUSH32 0xE237D92200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x938 SWAP3 SWAP2 SWAP1 PUSH2 0x2B85 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x94C DUP4 DUP4 DUP4 PUSH2 0x105D JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x959 PUSH2 0x10ED JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x9E8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9DF SWAP1 PUSH2 0x2CBE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x6 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0xA33 PUSH2 0x10ED JUMP JUMPDEST PUSH2 0xA3C PUSH0 PUSH2 0x1174 JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xACD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAC4 SWAP1 PUSH2 0x2AFF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xB5C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB53 SWAP1 PUSH2 0x2B67 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB68 DUP5 DUP5 DUP5 DUP5 PUSH2 0x1237 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x3 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0xBCD PUSH2 0xBC6 PUSH2 0xF3C JUMP JUMPDEST DUP4 DUP4 PUSH2 0x12CC JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0x4 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xC82 PUSH2 0xF3C JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0xCC7 JUMPI POP PUSH2 0xCC5 DUP7 DUP3 PUSH2 0xBEB JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0xD0B JUMPI DUP1 DUP7 PUSH1 0x40 MLOAD PUSH32 0xE237D92200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD02 SWAP3 SWAP2 SWAP1 PUSH2 0x2B85 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xD18 DUP7 DUP7 DUP7 DUP7 DUP7 PUSH2 0x1435 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xD28 PUSH2 0x10ED JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xD98 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD8F SWAP2 SWAP1 PUSH2 0x28B6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xDA1 DUP2 PUSH2 0x1174 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0xDAC PUSH2 0xF3C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0xDF5 JUMPI POP PUSH2 0xDF3 DUP4 PUSH2 0xDEE PUSH2 0xF3C JUMP JUMPDEST PUSH2 0xBEB JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0xE40 JUMPI PUSH2 0xE02 PUSH2 0xF3C JUMP JUMPDEST DUP4 PUSH1 0x40 MLOAD PUSH32 0xE237D92200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE37 SWAP3 SWAP2 SWAP1 PUSH2 0x2B85 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xE4B DUP4 DUP4 DUP4 PUSH2 0x153B JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xF29 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF20 SWAP2 SWAP1 PUSH2 0x28B6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xF36 PUSH0 DUP6 DUP6 DUP6 DUP6 PUSH2 0x15DD JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xFB3 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFAA SWAP2 SWAP1 PUSH2 0x28B6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1023 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1A8351400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x101A SWAP2 SWAP1 PUSH2 0x28B6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1030 DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0x15DD JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 MUL PUSH1 0x20 DUP5 ADD ADD MLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 MUL PUSH1 0x20 DUP5 ADD ADD MLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x10CD JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1A8351400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10C4 SWAP2 SWAP1 PUSH2 0x28B6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x10E8 DUP4 PUSH0 DUP5 DUP5 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0x15DD JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x10F5 PUSH2 0xF3C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1113 PUSH2 0xB6E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1172 JUMPI PUSH2 0x1136 PUSH2 0xF3C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1169 SWAP2 SWAP1 PUSH2 0x28B6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH1 0x3 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x3 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x12A7 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x129E SWAP2 SWAP1 PUSH2 0x28B6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 PUSH2 0x12B3 DUP6 DUP6 PUSH2 0x1689 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0x12C4 PUSH0 DUP8 DUP5 DUP5 DUP8 PUSH2 0x15DD JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x133C JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xCED3E10000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1333 SWAP2 SWAP1 PUSH2 0x28B6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0x1428 SWAP2 SWAP1 PUSH2 0x2106 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x14A5 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x149C SWAP2 SWAP1 PUSH2 0x28B6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1515 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1A8351400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x150C SWAP2 SWAP1 PUSH2 0x28B6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 PUSH2 0x1521 DUP6 DUP6 PUSH2 0x1689 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0x1532 DUP8 DUP8 DUP5 DUP5 DUP8 PUSH2 0x15DD JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x15AB JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1A8351400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15A2 SWAP2 SWAP1 PUSH2 0x28B6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 PUSH2 0x15B7 DUP5 DUP5 PUSH2 0x1689 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0x15D6 DUP6 PUSH0 DUP5 DUP5 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0x15DD JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH2 0x15E9 DUP6 DUP6 DUP6 DUP6 PUSH2 0x16B9 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1682 JUMPI PUSH0 PUSH2 0x1625 PUSH2 0xF3C JUMP JUMPDEST SWAP1 POP PUSH1 0x1 DUP5 MLOAD SUB PUSH2 0x1671 JUMPI PUSH0 PUSH2 0x1644 PUSH0 DUP7 PUSH2 0x104A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x165A PUSH0 DUP7 PUSH2 0x104A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x166A DUP4 DUP10 DUP10 DUP6 DUP6 DUP10 PUSH2 0x16CB JUMP JUMPDEST POP POP PUSH2 0x1680 JUMP JUMPDEST PUSH2 0x167F DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0x187A JUMP JUMPDEST JUMPDEST POP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP1 PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1 DUP3 MSTORE DUP4 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH1 0x1 DUP2 MSTORE DUP3 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD PUSH1 0x40 MSTORE SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x16C5 DUP5 DUP5 DUP5 DUP5 PUSH2 0x1A29 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT ISZERO PUSH2 0x1872 JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xF23A6E61 DUP8 DUP8 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x172B SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2D2E JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1766 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1763 SWAP2 SWAP1 PUSH2 0x2D9A JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x17E7 JUMPI RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x1794 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1799 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH0 DUP2 MLOAD SUB PUSH2 0x17DF JUMPI DUP5 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x17D6 SWAP2 SWAP1 PUSH2 0x28B6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0xF23A6E61 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x1870 JUMPI DUP5 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1867 SWAP2 SWAP1 PUSH2 0x28B6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT ISZERO PUSH2 0x1A21 JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xBC197C81 DUP8 DUP8 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x18DA SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2DC5 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1915 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1912 SWAP2 SWAP1 PUSH2 0x2D9A JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1996 JUMPI RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x1943 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1948 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH0 DUP2 MLOAD SUB PUSH2 0x198E JUMPI DUP5 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1985 SWAP2 SWAP1 PUSH2 0x28B6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0xBC197C81 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x1A1F JUMPI DUP5 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A16 SWAP2 SWAP1 PUSH2 0x28B6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1A35 DUP5 DUP5 DUP5 DUP5 PUSH2 0x1BD2 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1B0E JUMPI PUSH0 DUP1 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x1AF3 JUMPI PUSH0 DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1A88 JUMPI PUSH2 0x1A87 PUSH2 0x2BD3 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP DUP1 PUSH1 0x4 PUSH0 DUP8 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x1AA9 JUMPI PUSH2 0x1AA8 PUSH2 0x2BD3 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1ACC SWAP2 SWAP1 PUSH2 0x2E2B JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 DUP4 PUSH2 0x1ADF SWAP2 SWAP1 PUSH2 0x2E2B JUMP JUMPDEST SWAP3 POP POP DUP1 PUSH2 0x1AEC SWAP1 PUSH2 0x2C2D JUMP JUMPDEST SWAP1 POP PUSH2 0x1A6B JUMP JUMPDEST POP DUP1 PUSH1 0x5 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1B05 SWAP2 SWAP1 PUSH2 0x2E2B JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1BCC JUMPI PUSH0 DUP1 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x1BBA JUMPI PUSH0 DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1B61 JUMPI PUSH2 0x1B60 PUSH2 0x2BD3 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP DUP1 PUSH1 0x4 PUSH0 DUP8 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x1B82 JUMPI PUSH2 0x1B81 PUSH2 0x2BD3 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 DUP4 ADD SWAP3 POP POP DUP1 PUSH2 0x1BB3 SWAP1 PUSH2 0x2C2D JUMP JUMPDEST SWAP1 POP PUSH2 0x1B44 JUMP JUMPDEST POP DUP1 PUSH1 0x5 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP JUMPDEST POP POP POP POP JUMP JUMPDEST DUP1 MLOAD DUP3 MLOAD EQ PUSH2 0x1C1C JUMPI DUP2 MLOAD DUP2 MLOAD PUSH1 0x40 MLOAD PUSH32 0x5B05999100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1C13 SWAP3 SWAP2 SWAP1 PUSH2 0x2BAC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x1C25 PUSH2 0xF3C JUMP JUMPDEST SWAP1 POP PUSH0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x1E27 JUMPI PUSH0 PUSH2 0x1C46 DUP3 DUP7 PUSH2 0x104A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x1C5C DUP4 DUP7 PUSH2 0x104A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1D7F JUMPI PUSH0 DUP1 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x1D2B JUMPI DUP9 DUP2 DUP4 DUP6 PUSH1 0x40 MLOAD PUSH32 0x3DEE4C500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D22 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2E5E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1E14 JUMPI DUP1 PUSH0 DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1E0C SWAP2 SWAP1 PUSH2 0x2E2B JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST POP POP DUP1 PUSH2 0x1E20 SWAP1 PUSH2 0x2C2D JUMP JUMPDEST SWAP1 POP PUSH2 0x1C29 JUMP JUMPDEST POP PUSH1 0x1 DUP4 MLOAD SUB PUSH2 0x1EE2 JUMPI PUSH0 PUSH2 0x1E45 PUSH0 DUP6 PUSH2 0x104A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x1E5B PUSH0 DUP6 PUSH2 0x104A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH2 0x1ED3 SWAP3 SWAP2 SWAP1 PUSH2 0x2BAC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP PUSH2 0x1F61 JUMP JUMPDEST DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB DUP7 DUP7 PUSH1 0x40 MLOAD PUSH2 0x1F58 SWAP3 SWAP2 SWAP1 PUSH2 0x2EA1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1FA2 DUP3 PUSH2 0x1F79 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1FB2 DUP2 PUSH2 0x1F98 JUMP JUMPDEST DUP2 EQ PUSH2 0x1FBC JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1FCD DUP2 PUSH2 0x1FA9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1FE5 DUP2 PUSH2 0x1FD3 JUMP JUMPDEST DUP2 EQ PUSH2 0x1FEF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2000 DUP2 PUSH2 0x1FDC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x201C JUMPI PUSH2 0x201B PUSH2 0x1F71 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2029 DUP6 DUP3 DUP7 ADD PUSH2 0x1FBF JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x203A DUP6 DUP3 DUP7 ADD PUSH2 0x1FF2 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x204D DUP2 PUSH2 0x1FD3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2066 PUSH0 DUP4 ADD DUP5 PUSH2 0x2044 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x20A0 DUP2 PUSH2 0x206C JUMP JUMPDEST DUP2 EQ PUSH2 0x20AA JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x20BB DUP2 PUSH2 0x2097 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x20D6 JUMPI PUSH2 0x20D5 PUSH2 0x1F71 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x20E3 DUP5 DUP3 DUP6 ADD PUSH2 0x20AD JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2100 DUP2 PUSH2 0x20EC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2119 PUSH0 DUP4 ADD DUP5 PUSH2 0x20F7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2134 JUMPI PUSH2 0x2133 PUSH2 0x1F71 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2141 DUP5 DUP3 DUP6 ADD PUSH2 0x1FF2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2181 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2166 JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x21A6 DUP3 PUSH2 0x214A JUMP JUMPDEST PUSH2 0x21B0 DUP2 DUP6 PUSH2 0x2154 JUMP JUMPDEST SWAP4 POP PUSH2 0x21C0 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2164 JUMP JUMPDEST PUSH2 0x21C9 DUP2 PUSH2 0x218C JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x21EC DUP2 DUP5 PUSH2 0x219C JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x222E DUP3 PUSH2 0x218C JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x224D JUMPI PUSH2 0x224C PUSH2 0x21F8 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x225F PUSH2 0x1F68 JUMP JUMPDEST SWAP1 POP PUSH2 0x226B DUP3 DUP3 PUSH2 0x2225 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x228A JUMPI PUSH2 0x2289 PUSH2 0x21F8 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH2 0x22B1 PUSH2 0x22AC DUP5 PUSH2 0x2270 JUMP JUMPDEST PUSH2 0x2256 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x22D4 JUMPI PUSH2 0x22D3 PUSH2 0x229B JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x22FD JUMPI DUP1 PUSH2 0x22E9 DUP9 DUP3 PUSH2 0x1FF2 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x22D6 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x231B JUMPI PUSH2 0x231A PUSH2 0x21F4 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x232B DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x229F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2352 JUMPI PUSH2 0x2351 PUSH2 0x21F8 JUMP JUMPDEST JUMPDEST PUSH2 0x235B DUP3 PUSH2 0x218C JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2388 PUSH2 0x2383 DUP5 PUSH2 0x2338 JUMP JUMPDEST PUSH2 0x2256 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x23A4 JUMPI PUSH2 0x23A3 PUSH2 0x2334 JUMP JUMPDEST JUMPDEST PUSH2 0x23AF DUP5 DUP3 DUP6 PUSH2 0x2368 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x23CB JUMPI PUSH2 0x23CA PUSH2 0x21F4 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x23DB DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x2376 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x23FC JUMPI PUSH2 0x23FB PUSH2 0x1F71 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2409 DUP8 DUP3 DUP9 ADD PUSH2 0x1FBF JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x242A JUMPI PUSH2 0x2429 PUSH2 0x1F75 JUMP JUMPDEST JUMPDEST PUSH2 0x2436 DUP8 DUP3 DUP9 ADD PUSH2 0x2307 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2457 JUMPI PUSH2 0x2456 PUSH2 0x1F75 JUMP JUMPDEST JUMPDEST PUSH2 0x2463 DUP8 DUP3 DUP9 ADD PUSH2 0x2307 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2484 JUMPI PUSH2 0x2483 PUSH2 0x1F75 JUMP JUMPDEST JUMPDEST PUSH2 0x2490 DUP8 DUP3 DUP9 ADD PUSH2 0x23B7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x24B5 JUMPI PUSH2 0x24B4 PUSH2 0x1F71 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x24C2 DUP9 DUP3 DUP10 ADD PUSH2 0x1FBF JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x24D3 DUP9 DUP3 DUP10 ADD PUSH2 0x1FBF JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x24F4 JUMPI PUSH2 0x24F3 PUSH2 0x1F75 JUMP JUMPDEST JUMPDEST PUSH2 0x2500 DUP9 DUP3 DUP10 ADD PUSH2 0x2307 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2521 JUMPI PUSH2 0x2520 PUSH2 0x1F75 JUMP JUMPDEST JUMPDEST PUSH2 0x252D DUP9 DUP3 DUP10 ADD PUSH2 0x2307 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x254E JUMPI PUSH2 0x254D PUSH2 0x1F75 JUMP JUMPDEST JUMPDEST PUSH2 0x255A DUP9 DUP3 DUP10 ADD PUSH2 0x23B7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2581 JUMPI PUSH2 0x2580 PUSH2 0x21F8 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x25A4 PUSH2 0x259F DUP5 PUSH2 0x2567 JUMP JUMPDEST PUSH2 0x2256 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x25C7 JUMPI PUSH2 0x25C6 PUSH2 0x229B JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x25F0 JUMPI DUP1 PUSH2 0x25DC DUP9 DUP3 PUSH2 0x1FBF JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x25C9 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x260E JUMPI PUSH2 0x260D PUSH2 0x21F4 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x261E DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x2592 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x263D JUMPI PUSH2 0x263C PUSH2 0x1F71 JUMP JUMPDEST JUMPDEST PUSH0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x265A JUMPI PUSH2 0x2659 PUSH2 0x1F75 JUMP JUMPDEST JUMPDEST PUSH2 0x2666 DUP6 DUP3 DUP7 ADD PUSH2 0x25FA JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2687 JUMPI PUSH2 0x2686 PUSH2 0x1F75 JUMP JUMPDEST JUMPDEST PUSH2 0x2693 DUP6 DUP3 DUP7 ADD PUSH2 0x2307 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x26CF DUP2 PUSH2 0x1FD3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH2 0x26E0 DUP4 DUP4 PUSH2 0x26C6 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2702 DUP3 PUSH2 0x269D JUMP JUMPDEST PUSH2 0x270C DUP2 DUP6 PUSH2 0x26A7 JUMP JUMPDEST SWAP4 POP PUSH2 0x2717 DUP4 PUSH2 0x26B7 JUMP JUMPDEST DUP1 PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2747 JUMPI DUP2 MLOAD PUSH2 0x272E DUP9 DUP3 PUSH2 0x26D5 JUMP JUMPDEST SWAP8 POP PUSH2 0x2739 DUP4 PUSH2 0x26EC JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x271A JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x276C DUP2 DUP5 PUSH2 0x26F8 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x278B JUMPI PUSH2 0x278A PUSH2 0x1F71 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2798 DUP7 DUP3 DUP8 ADD PUSH2 0x1FBF JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x27B9 JUMPI PUSH2 0x27B8 PUSH2 0x1F75 JUMP JUMPDEST JUMPDEST PUSH2 0x27C5 DUP7 DUP3 DUP8 ADD PUSH2 0x2307 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x27E6 JUMPI PUSH2 0x27E5 PUSH2 0x1F75 JUMP JUMPDEST JUMPDEST PUSH2 0x27F2 DUP7 DUP3 DUP8 ADD PUSH2 0x2307 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2811 JUMPI PUSH2 0x2810 PUSH2 0x1F71 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x281E DUP5 DUP3 DUP6 ADD PUSH2 0x1FBF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x283F JUMPI PUSH2 0x283E PUSH2 0x1F71 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x284C DUP8 DUP3 DUP9 ADD PUSH2 0x1FBF JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x285D DUP8 DUP3 DUP9 ADD PUSH2 0x1FF2 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x286E DUP8 DUP3 DUP9 ADD PUSH2 0x1FF2 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x288F JUMPI PUSH2 0x288E PUSH2 0x1F75 JUMP JUMPDEST JUMPDEST PUSH2 0x289B DUP8 DUP3 DUP9 ADD PUSH2 0x23B7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH2 0x28B0 DUP2 PUSH2 0x1F98 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x28C9 PUSH0 DUP4 ADD DUP5 PUSH2 0x28A7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x28D8 DUP2 PUSH2 0x20EC JUMP JUMPDEST DUP2 EQ PUSH2 0x28E2 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x28F3 DUP2 PUSH2 0x28CF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x290F JUMPI PUSH2 0x290E PUSH2 0x1F71 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x291C DUP6 DUP3 DUP7 ADD PUSH2 0x1FBF JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x292D DUP6 DUP3 DUP7 ADD PUSH2 0x28E5 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x294D JUMPI PUSH2 0x294C PUSH2 0x1F71 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x295A DUP6 DUP3 DUP7 ADD PUSH2 0x1FBF JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x296B DUP6 DUP3 DUP7 ADD PUSH2 0x1FBF JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x298E JUMPI PUSH2 0x298D PUSH2 0x1F71 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x299B DUP9 DUP3 DUP10 ADD PUSH2 0x1FBF JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x29AC DUP9 DUP3 DUP10 ADD PUSH2 0x1FBF JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x29BD DUP9 DUP3 DUP10 ADD PUSH2 0x1FF2 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x29CE DUP9 DUP3 DUP10 ADD PUSH2 0x1FF2 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x29EF JUMPI PUSH2 0x29EE PUSH2 0x1F75 JUMP JUMPDEST JUMPDEST PUSH2 0x29FB DUP9 DUP3 DUP10 ADD PUSH2 0x23B7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2A1F JUMPI PUSH2 0x2A1E PUSH2 0x1F71 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2A2C DUP7 DUP3 DUP8 ADD PUSH2 0x1FBF JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x2A3D DUP7 DUP3 DUP8 ADD PUSH2 0x1FF2 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x2A4E DUP7 DUP3 DUP8 ADD PUSH2 0x1FF2 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x2A9C JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x2AAF JUMPI PUSH2 0x2AAE PUSH2 0x2A58 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x47616D652061646472657373206E6F74207365742E0000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2AE9 PUSH1 0x15 DUP4 PUSH2 0x2154 JUMP JUMPDEST SWAP2 POP PUSH2 0x2AF4 DUP3 PUSH2 0x2AB5 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2B16 DUP2 PUSH2 0x2ADD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F6E6C792067616D6520636F6E74726163742063616E206D696E742E00000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2B51 PUSH1 0x1C DUP4 PUSH2 0x2154 JUMP JUMPDEST SWAP2 POP PUSH2 0x2B5C DUP3 PUSH2 0x2B1D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2B7E DUP2 PUSH2 0x2B45 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2B98 PUSH0 DUP4 ADD DUP6 PUSH2 0x28A7 JUMP JUMPDEST PUSH2 0x2BA5 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x28A7 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2BBF PUSH0 DUP4 ADD DUP6 PUSH2 0x2044 JUMP JUMPDEST PUSH2 0x2BCC PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2044 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x2C37 DUP3 PUSH2 0x1FD3 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x2C69 JUMPI PUSH2 0x2C68 PUSH2 0x2C00 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x47616D65206164647265737320697320616C7265616479207365742E00000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2CA8 PUSH1 0x1C DUP4 PUSH2 0x2154 JUMP JUMPDEST SWAP2 POP PUSH2 0x2CB3 DUP3 PUSH2 0x2C74 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2CD5 DUP2 PUSH2 0x2C9C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2D00 DUP3 PUSH2 0x2CDC JUMP JUMPDEST PUSH2 0x2D0A DUP2 DUP6 PUSH2 0x2CE6 JUMP JUMPDEST SWAP4 POP PUSH2 0x2D1A DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2164 JUMP JUMPDEST PUSH2 0x2D23 DUP2 PUSH2 0x218C JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x2D41 PUSH0 DUP4 ADD DUP9 PUSH2 0x28A7 JUMP JUMPDEST PUSH2 0x2D4E PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x28A7 JUMP JUMPDEST PUSH2 0x2D5B PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x2044 JUMP JUMPDEST PUSH2 0x2D68 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x2044 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x2D7A DUP2 DUP5 PUSH2 0x2CF6 JUMP JUMPDEST SWAP1 POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x2D94 DUP2 PUSH2 0x2097 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2DAF JUMPI PUSH2 0x2DAE PUSH2 0x1F71 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2DBC DUP5 DUP3 DUP6 ADD PUSH2 0x2D86 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x2DD8 PUSH0 DUP4 ADD DUP9 PUSH2 0x28A7 JUMP JUMPDEST PUSH2 0x2DE5 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x28A7 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x2DF7 DUP2 DUP7 PUSH2 0x26F8 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x2E0B DUP2 DUP6 PUSH2 0x26F8 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x2E1F DUP2 DUP5 PUSH2 0x2CF6 JUMP JUMPDEST SWAP1 POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2E35 DUP3 PUSH2 0x1FD3 JUMP JUMPDEST SWAP2 POP PUSH2 0x2E40 DUP4 PUSH2 0x1FD3 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x2E58 JUMPI PUSH2 0x2E57 PUSH2 0x2C00 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x2E71 PUSH0 DUP4 ADD DUP8 PUSH2 0x28A7 JUMP JUMPDEST PUSH2 0x2E7E PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x2044 JUMP JUMPDEST PUSH2 0x2E8B PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x2044 JUMP JUMPDEST PUSH2 0x2E98 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x2044 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2EB9 DUP2 DUP6 PUSH2 0x26F8 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x2ECD DUP2 DUP5 PUSH2 0x26F8 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH15 0x981728272F3C0E563A277C4D69E97F GASLIMIT BALANCE RETURNDATASIZE 0xB7 0xA6 NOT 0x5C 0xF9 0xA7 0xDC MLOAD DIV SSTORE SGT TIMESTAMP 0x2C PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ",
							"sourceMap": "376:1899:14:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2247:132:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1380:305;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2084:103;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1127:100:6;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;886:308:14;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4014:429:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2536:552;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1320:106:6;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;681:313:5;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1906:163:14;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2293:101:0;;;:::i;:::-;;596:286:14;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1638:85:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;451:26:14;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3156:144:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;959:111:6;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3367:157:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3591:351;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2543:215:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;394:281:5;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2247:132:2;2324:7;2350:9;:13;2360:2;2350:13;;;;;;;;;;;:22;2364:7;2350:22;;;;;;;;;;;;;;;;2343:29;;2247:132;;;;:::o;1380:305::-;1482:4;1532:26;1517:41;;;:11;:41;;;;:109;;;;1589:37;1574:52;;;:11;:52;;;;1517:109;:161;;;;1642:36;1666:11;1642:23;:36::i;:::-;1517:161;1498:180;;1380:305;;;:::o;2084:103::-;2144:13;2176:4;2169:11;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2084:103;;;:::o;1127:100:6:-;1179:7;1205:15;;1198:22;;1127:100;:::o;886:308:14:-;1049:1;1026:25;;:11;;;;;;;;;;;:25;;;1018:59;;;;;;;;;;;;:::i;:::-;;;;;;;;;1105:11;;;;;;;;;;;1091:25;;:10;:25;;;1083:66;;;;;;;;;;;;:::i;:::-;;;;;;;;;1155:34;1166:2;1170:3;1175:7;1184:4;1155:10;:34::i;:::-;886:308;;;;:::o;4014:429:2:-;4208:14;4225:12;:10;:12::i;:::-;4208:29;;4259:6;4251:14;;:4;:14;;;;:49;;;;;4270:30;4287:4;4293:6;4270:16;:30::i;:::-;4269:31;4251:49;4247:129;;;4352:6;4360:4;4323:42;;;;;;;;;;;;:::i;:::-;;;;;;;;4247:129;4385:51;4408:4;4414:2;4418:3;4423:6;4431:4;4385:22;:51::i;:::-;4198:245;4014:429;;;;;:::o;2536:552::-;2660:16;2711:3;:10;2692:8;:15;:29;2688:121;;2770:3;:10;2782:8;:15;2744:54;;;;;;;;;;;;:::i;:::-;;;;;;;;2688:121;2819:30;2866:8;:15;2852:30;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2819:63;;2898:9;2893:158;2917:8;:15;2913:1;:19;2893:158;;;2972:68;2982:30;3010:1;2982:8;:27;;:30;;;;:::i;:::-;3014:25;3037:1;3014:3;:22;;:25;;;;:::i;:::-;2972:9;:68::i;:::-;2953:13;2967:1;2953:16;;;;;;;;:::i;:::-;;;;;;;:87;;;;;2934:3;;;;:::i;:::-;;;2893:158;;;;3068:13;3061:20;;;2536:552;;;;:::o;1320:106:6:-;1377:4;1418:1;1400:15;1412:2;1400:11;:15::i;:::-;:19;1393:26;;1320:106;;;:::o;681:313:5:-;804:12;:10;:12::i;:::-;793:23;;:7;:23;;;;:67;;;;;821:39;838:7;847:12;:10;:12::i;:::-;821:16;:39::i;:::-;820:40;793:67;789:156;;;912:12;:10;:12::i;:::-;926:7;883:51;;;;;;;;;;;;:::i;:::-;;;;;;;;789:156;955:32;966:7;975:3;980:6;955:10;:32::i;:::-;681:313;;;:::o;1906:163:14:-;1531:13:0;:11;:13::i;:::-;2002:1:14::1;1979:25;;:11;;;;;;;;;;;:25;;;1971:66;;;;;;;;;;;;:::i;:::-;;;;;;;;;2057:7;2043:11;;:21;;;;;;;;;;;;;;;;;;1906:163:::0;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;596:286:14:-;739:1;716:25;;:11;;;;;;;;;;;:25;;;708:59;;;;;;;;;;;;:::i;:::-;;;;;;;;;795:11;;;;;;;;;;;781:25;;:10;:25;;;773:66;;;;;;;;;;;;:::i;:::-;;;;;;;;;845:32;851:7;860:2;864:6;872:4;845:5;:32::i;:::-;596:286;;;;:::o;1638:85:0:-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;451:26:14:-;;;;;;;;;;;;;:::o;3156:144:2:-;3241:52;3260:12;:10;:12::i;:::-;3274:8;3284;3241:18;:52::i;:::-;3156:144;;:::o;959:111:6:-;1021:7;1047:12;:16;1060:2;1047:16;;;;;;;;;;;;1040:23;;959:111;;;:::o;3367:157:2:-;3457:4;3480:18;:27;3499:7;3480:27;;;;;;;;;;;;;;;:37;3508:8;3480:37;;;;;;;;;;;;;;;;;;;;;;;;;3473:44;;3367:157;;;;:::o;3591:351::-;3714:14;3731:12;:10;:12::i;:::-;3714:29;;3765:6;3757:14;;:4;:14;;;;:49;;;;;3776:30;3793:4;3799:6;3776:16;:30::i;:::-;3775:31;3757:49;3753:129;;;3858:6;3866:4;3829:42;;;;;;;;;;;;:::i;:::-;;;;;;;;3753:129;3891:44;3909:4;3915:2;3919;3923:5;3930:4;3891:17;:44::i;:::-;3704:238;3591:351;;;;;:::o;2543:215:0:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;394:281:5:-;492:12;:10;:12::i;:::-;481:23;;:7;:23;;;;:67;;;;;509:39;526:7;535:12;:10;:12::i;:::-;509:16;:39::i;:::-;508:40;481:67;477:156;;;600:12;:10;:12::i;:::-;614:7;571:51;;;;;;;;;;;;:::i;:::-;;;;;;;;477:156;643:25;649:7;658:2;662:5;643;:25::i;:::-;394:281;;;:::o;762:146:11:-;838:4;876:25;861:40;;;:11;:40;;;;854:47;;762:146;;;:::o;11523:282:2:-;11658:1;11644:16;;:2;:16;;;11640:88;;11714:1;11683:34;;;;;;;;;;;:::i;:::-;;;;;;;;11640:88;11737:61;11772:1;11776:2;11780:3;11785:6;11793:4;11737:26;:61::i;:::-;11523:282;;;;:::o;656:96:9:-;709:7;735:10;728:17;;656:96;:::o;9015:445:2:-;9222:1;9208:16;;:2;:16;;;9204:88;;9278:1;9247:34;;;;;;;;;;;:::i;:::-;;;;;;;;9204:88;9321:1;9305:18;;:4;:18;;;9301:88;;9375:1;9346:32;;;;;;;;;;;:::i;:::-;;;;;;;;9301:88;9398:55;9425:4;9431:2;9435:3;9440:6;9448:4;9398:26;:55::i;:::-;9015:445;;;;;:::o;4603:197:8:-;4689:11;4777:4;4772:3;4768:14;4761:4;4756:3;4752:14;4748:35;4742:42;4735:49;;4603:197;;;;:::o;4204:::-;4290:11;4378:4;4373:3;4369:14;4362:4;4357:3;4353:14;4349:35;4343:42;4336:49;;4204:197;;;;:::o;12784:265:2:-;12904:1;12888:18;;:4;:18;;;12884:88;;12958:1;12929:32;;;;;;;;;;;:::i;:::-;;;;;;;;12884:88;12981:61;13008:4;13022:1;13026:3;13031:6;12981:61;;;;;;;;;;;;:26;:61::i;:::-;12784:265;;;:::o;1796:162:0:-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;2912:187::-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;10746:346:2:-;10856:1;10842:16;;:2;:16;;;10838:88;;10912:1;10881:34;;;;;;;;;;;:::i;:::-;;;;;;;;10838:88;10936:20;10958:23;10985:29;11004:2;11008:5;10985:18;:29::i;:::-;10935:79;;;;11024:61;11059:1;11063:2;11067:3;11072:6;11080:4;11024:26;:61::i;:::-;10828:264;;10746:346;;;;:::o;13268:315::-;13395:1;13375:22;;:8;:22;;;13371:94;;13451:1;13420:34;;;;;;;;;;;:::i;:::-;;;;;;;;13371:94;13512:8;13474:18;:25;13493:5;13474:25;;;;;;;;;;;;;;;:35;13500:8;13474:35;;;;;;;;;;;;;;;;:46;;;;;;;;;;;;;;;;;;13557:8;13535:41;;13550:5;13535:41;;;13567:8;13535:41;;;;;;:::i;:::-;;;;;;;;13268:315;;;:::o;8151:463::-;8287:1;8273:16;;:2;:16;;;8269:88;;8343:1;8312:34;;;;;;;;;;;:::i;:::-;;;;;;;;8269:88;8386:1;8370:18;;:4;:18;;;8366:88;;8440:1;8411:32;;;;;;;;;;;:::i;:::-;;;;;;;;8366:88;8464:20;8486:23;8513:29;8532:2;8536:5;8513:18;:29::i;:::-;8463:79;;;;8552:55;8579:4;8585:2;8589:3;8594:6;8602:4;8552:26;:55::i;:::-;8259:355;;8151:463;;;;;:::o;12099:329::-;12194:1;12178:18;;:4;:18;;;12174:88;;12248:1;12219:32;;;;;;;;;;;:::i;:::-;;;;;;;;12174:88;12272:20;12294:23;12321:29;12340:2;12344:5;12321:18;:29::i;:::-;12271:79;;;;12360:61;12387:4;12401:1;12405:3;12410:6;12360:61;;;;;;;;;;;;:26;:61::i;:::-;12164:264;;12099:329;;;:::o;7004:690::-;7205:30;7213:4;7219:2;7223:3;7228:6;7205:7;:30::i;:::-;7263:1;7249:16;;:2;:16;;;7245:443;;7281:16;7300:12;:10;:12::i;:::-;7281:31;;7344:1;7330:3;:10;:15;7326:352;;7365:10;7378:25;7401:1;7378:3;:22;;:25;;;;:::i;:::-;7365:38;;7421:13;7437:28;7463:1;7437:6;:25;;:28;;;;:::i;:::-;7421:44;;7483:67;7514:8;7524:4;7530:2;7534;7538:5;7545:4;7483:30;:67::i;:::-;7347:218;;7326:352;;;7589:74;7625:8;7635:4;7641:2;7645:3;7650:6;7658:4;7589:35;:74::i;:::-;7326:352;7267:421;7245:443;7004:690;;;;;:::o;16080:849::-;16188:23;16213;16374:4;16368:11;16358:21;;16444:1;16436:6;16429:17;16582:8;16575:4;16567:6;16563:17;16556:35;16704:4;16696:6;16692:17;16682:27;;16737:1;16729:6;16722:17;16778:8;16771:4;16763:6;16759:17;16752:35;16907:4;16899:6;16895:17;16889:4;16882:31;16080:849;;;;;:::o;2073:200:14:-;2232:36;2246:4;2252:2;2256:3;2261:6;2232:13;:36::i;:::-;2073:200;;;;:::o;13761:974:2:-;13984:1;13967:2;:14;;;:18;13963:766;;;14022:2;14005:38;;;14044:8;14054:4;14060:2;14064:5;14071:4;14005:71;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;14001:718;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14377:1;14360:6;:13;:18;14356:349;;14487:2;14464:26;;;;;;;;;;;:::i;:::-;;;;;;;;14356:349;14657:6;14651:13;14642:6;14638:2;14634:15;14627:38;14001:718;14137:43;;;14125:55;;;:8;:55;;;;14121:174;;14273:2;14250:26;;;;;;;;;;;:::i;:::-;;;;;;;;14121:174;14077:232;13963:766;13761:974;;;;;;:::o;14923:1041::-;15171:1;15154:2;:14;;;:18;15150:808;;;15209:2;15192:43;;;15236:8;15246:4;15252:3;15257:6;15265:4;15192:78;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;15188:760;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15606:1;15589:6;:13;:18;15585:349;;15716:2;15693:26;;;;;;;;;;;:::i;:::-;;;;;;;;15585:349;15886:6;15880:13;15871:6;15867:2;15863:15;15856:38;15188:760;15361:48;;;15349:60;;;:8;:60;;;;15345:179;;15502:2;15479:26;;;;;;;;;;;:::i;:::-;;;;;;;;15345:179;15271:267;15150:808;14923:1041;;;;;;:::o;1483:1518:6:-;1647:36;1661:4;1667:2;1671:3;1676:6;1647:13;:36::i;:::-;1714:1;1698:18;;:4;:18;;;1694:533;;1732:22;1777:9;1772:293;1796:3;:10;1792:1;:14;1772:293;;;1831:13;1847:6;1854:1;1847:9;;;;;;;;:::i;:::-;;;;;;;;1831:25;;2004:5;1980:12;:20;1993:3;1997:1;1993:6;;;;;;;;:::i;:::-;;;;;;;;1980:20;;;;;;;;;;;;:29;;;;;;;:::i;:::-;;;;;;;;2045:5;2027:23;;;;;:::i;:::-;;;1813:252;1808:3;;;;:::i;:::-;;;1772:293;;;;2202:14;2183:15;;:33;;;;;;;:::i;:::-;;;;;;;;1718:509;1694:533;2255:1;2241:16;;:2;:16;;;2237:758;;2273:22;2318:9;2313:459;2337:3;:10;2333:1;:14;2313:459;;;2372:13;2388:6;2395:1;2388:9;;;;;;;;:::i;:::-;;;;;;;;2372:25;;2578:5;2554:12;:20;2567:3;2571:1;2567:6;;;;;;;;:::i;:::-;;;;;;;;2554:20;;;;;;;;;;;;:29;;;;;;;;;;;2734:5;2716:23;;;;2354:418;2349:3;;;;:::i;:::-;;;2313:459;;;;2956:14;2937:15;;:33;;;;;;;;;;;2259:736;2237:758;1483:1518;;;;:::o;5144:1281:2:-;5279:6;:13;5265:3;:10;:27;5261:117;;5341:3;:10;5353:6;:13;5315:52;;;;;;;;;;;;:::i;:::-;;;;;;;;5261:117;5388:16;5407:12;:10;:12::i;:::-;5388:31;;5435:9;5430:691;5454:3;:10;5450:1;:14;5430:691;;;5485:10;5498:25;5521:1;5498:3;:22;;:25;;;;:::i;:::-;5485:38;;5537:13;5553:28;5579:1;5553:6;:25;;:28;;;;:::i;:::-;5537:44;;5616:1;5600:18;;:4;:18;;;5596:420;;5638:19;5660:9;:13;5670:2;5660:13;;;;;;;;;;;:19;5674:4;5660:19;;;;;;;;;;;;;;;;5638:41;;5715:5;5701:11;:19;5697:129;;;5778:4;5784:11;5797:5;5804:2;5751:56;;;;;;;;;;;;;;:::i;:::-;;;;;;;;5697:129;5978:5;5964:11;:19;5942:9;:13;5952:2;5942:13;;;;;;;;;;;:19;5956:4;5942:19;;;;;;;;;;;;;;;:41;;;;5620:396;5596:420;6048:1;6034:16;;:2;:16;;;6030:81;;6091:5;6070:9;:13;6080:2;6070:13;;;;;;;;;;;:17;6084:2;6070:17;;;;;;;;;;;;;;;;:26;;;;;;;:::i;:::-;;;;;;;;6030:81;5471:650;;5466:3;;;;:::i;:::-;;;5430:691;;;;6149:1;6135:3;:10;:15;6131:288;;6166:10;6179:25;6202:1;6179:3;:22;;:25;;;;:::i;:::-;6166:38;;6218:13;6234:28;6260:1;6234:6;:25;;:28;;;;:::i;:::-;6218:44;;6312:2;6281:45;;6306:4;6281:45;;6296:8;6281:45;;;6316:2;6320:5;6281:45;;;;;;;:::i;:::-;;;;;;;;6152:185;;6131:288;;;6392:2;6362:46;;6386:4;6362:46;;6376:8;6362:46;;;6396:3;6401:6;6362:46;;;;;;;:::i;:::-;;;;;;;;6131:288;5251:1174;5144:1281;;;;:::o;7:75:15:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:77::-;878:7;907:5;896:16;;841:77;;;:::o;924:122::-;997:24;1015:5;997:24;:::i;:::-;990:5;987:35;977:63;;1036:1;1033;1026:12;977:63;924:122;:::o;1052:139::-;1098:5;1136:6;1123:20;1114:29;;1152:33;1179:5;1152:33;:::i;:::-;1052:139;;;;:::o;1197:474::-;1265:6;1273;1322:2;1310:9;1301:7;1297:23;1293:32;1290:119;;;1328:79;;:::i;:::-;1290:119;1448:1;1473:53;1518:7;1509:6;1498:9;1494:22;1473:53;:::i;:::-;1463:63;;1419:117;1575:2;1601:53;1646:7;1637:6;1626:9;1622:22;1601:53;:::i;:::-;1591:63;;1546:118;1197:474;;;;;:::o;1677:118::-;1764:24;1782:5;1764:24;:::i;:::-;1759:3;1752:37;1677:118;;:::o;1801:222::-;1894:4;1932:2;1921:9;1917:18;1909:26;;1945:71;2013:1;2002:9;1998:17;1989:6;1945:71;:::i;:::-;1801:222;;;;:::o;2029:149::-;2065:7;2105:66;2098:5;2094:78;2083:89;;2029:149;;;:::o;2184:120::-;2256:23;2273:5;2256:23;:::i;:::-;2249:5;2246:34;2236:62;;2294:1;2291;2284:12;2236:62;2184:120;:::o;2310:137::-;2355:5;2393:6;2380:20;2371:29;;2409:32;2435:5;2409:32;:::i;:::-;2310:137;;;;:::o;2453:327::-;2511:6;2560:2;2548:9;2539:7;2535:23;2531:32;2528:119;;;2566:79;;:::i;:::-;2528:119;2686:1;2711:52;2755:7;2746:6;2735:9;2731:22;2711:52;:::i;:::-;2701:62;;2657:116;2453:327;;;;:::o;2786:90::-;2820:7;2863:5;2856:13;2849:21;2838:32;;2786:90;;;:::o;2882:109::-;2963:21;2978:5;2963:21;:::i;:::-;2958:3;2951:34;2882:109;;:::o;2997:210::-;3084:4;3122:2;3111:9;3107:18;3099:26;;3135:65;3197:1;3186:9;3182:17;3173:6;3135:65;:::i;:::-;2997:210;;;;:::o;3213:329::-;3272:6;3321:2;3309:9;3300:7;3296:23;3292:32;3289:119;;;3327:79;;:::i;:::-;3289:119;3447:1;3472:53;3517:7;3508:6;3497:9;3493:22;3472:53;:::i;:::-;3462:63;;3418:117;3213:329;;;;:::o;3548:99::-;3600:6;3634:5;3628:12;3618:22;;3548:99;;;:::o;3653:169::-;3737:11;3771:6;3766:3;3759:19;3811:4;3806:3;3802:14;3787:29;;3653:169;;;;:::o;3828:246::-;3909:1;3919:113;3933:6;3930:1;3927:13;3919:113;;;4018:1;4013:3;4009:11;4003:18;3999:1;3994:3;3990:11;3983:39;3955:2;3952:1;3948:10;3943:15;;3919:113;;;4066:1;4057:6;4052:3;4048:16;4041:27;3890:184;3828:246;;;:::o;4080:102::-;4121:6;4172:2;4168:7;4163:2;4156:5;4152:14;4148:28;4138:38;;4080:102;;;:::o;4188:377::-;4276:3;4304:39;4337:5;4304:39;:::i;:::-;4359:71;4423:6;4418:3;4359:71;:::i;:::-;4352:78;;4439:65;4497:6;4492:3;4485:4;4478:5;4474:16;4439:65;:::i;:::-;4529:29;4551:6;4529:29;:::i;:::-;4524:3;4520:39;4513:46;;4280:285;4188:377;;;;:::o;4571:313::-;4684:4;4722:2;4711:9;4707:18;4699:26;;4771:9;4765:4;4761:20;4757:1;4746:9;4742:17;4735:47;4799:78;4872:4;4863:6;4799:78;:::i;:::-;4791:86;;4571:313;;;;:::o;4890:117::-;4999:1;4996;4989:12;5013:180;5061:77;5058:1;5051:88;5158:4;5155:1;5148:15;5182:4;5179:1;5172:15;5199:281;5282:27;5304:4;5282:27;:::i;:::-;5274:6;5270:40;5412:6;5400:10;5397:22;5376:18;5364:10;5361:34;5358:62;5355:88;;;5423:18;;:::i;:::-;5355:88;5463:10;5459:2;5452:22;5242:238;5199:281;;:::o;5486:129::-;5520:6;5547:20;;:::i;:::-;5537:30;;5576:33;5604:4;5596:6;5576:33;:::i;:::-;5486:129;;;:::o;5621:311::-;5698:4;5788:18;5780:6;5777:30;5774:56;;;5810:18;;:::i;:::-;5774:56;5860:4;5852:6;5848:17;5840:25;;5920:4;5914;5910:15;5902:23;;5621:311;;;:::o;5938:117::-;6047:1;6044;6037:12;6078:710;6174:5;6199:81;6215:64;6272:6;6215:64;:::i;:::-;6199:81;:::i;:::-;6190:90;;6300:5;6329:6;6322:5;6315:21;6363:4;6356:5;6352:16;6345:23;;6416:4;6408:6;6404:17;6396:6;6392:30;6445:3;6437:6;6434:15;6431:122;;;6464:79;;:::i;:::-;6431:122;6579:6;6562:220;6596:6;6591:3;6588:15;6562:220;;;6671:3;6700:37;6733:3;6721:10;6700:37;:::i;:::-;6695:3;6688:50;6767:4;6762:3;6758:14;6751:21;;6638:144;6622:4;6617:3;6613:14;6606:21;;6562:220;;;6566:21;6180:608;;6078:710;;;;;:::o;6811:370::-;6882:5;6931:3;6924:4;6916:6;6912:17;6908:27;6898:122;;6939:79;;:::i;:::-;6898:122;7056:6;7043:20;7081:94;7171:3;7163:6;7156:4;7148:6;7144:17;7081:94;:::i;:::-;7072:103;;6888:293;6811:370;;;;:::o;7187:117::-;7296:1;7293;7286:12;7310:307;7371:4;7461:18;7453:6;7450:30;7447:56;;;7483:18;;:::i;:::-;7447:56;7521:29;7543:6;7521:29;:::i;:::-;7513:37;;7605:4;7599;7595:15;7587:23;;7310:307;;;:::o;7623:146::-;7720:6;7715:3;7710;7697:30;7761:1;7752:6;7747:3;7743:16;7736:27;7623:146;;;:::o;7775:423::-;7852:5;7877:65;7893:48;7934:6;7893:48;:::i;:::-;7877:65;:::i;:::-;7868:74;;7965:6;7958:5;7951:21;8003:4;7996:5;7992:16;8041:3;8032:6;8027:3;8023:16;8020:25;8017:112;;;8048:79;;:::i;:::-;8017:112;8138:54;8185:6;8180:3;8175;8138:54;:::i;:::-;7858:340;7775:423;;;;;:::o;8217:338::-;8272:5;8321:3;8314:4;8306:6;8302:17;8298:27;8288:122;;8329:79;;:::i;:::-;8288:122;8446:6;8433:20;8471:78;8545:3;8537:6;8530:4;8522:6;8518:17;8471:78;:::i;:::-;8462:87;;8278:277;8217:338;;;;:::o;8561:1363::-;8706:6;8714;8722;8730;8779:3;8767:9;8758:7;8754:23;8750:33;8747:120;;;8786:79;;:::i;:::-;8747:120;8906:1;8931:53;8976:7;8967:6;8956:9;8952:22;8931:53;:::i;:::-;8921:63;;8877:117;9061:2;9050:9;9046:18;9033:32;9092:18;9084:6;9081:30;9078:117;;;9114:79;;:::i;:::-;9078:117;9219:78;9289:7;9280:6;9269:9;9265:22;9219:78;:::i;:::-;9209:88;;9004:303;9374:2;9363:9;9359:18;9346:32;9405:18;9397:6;9394:30;9391:117;;;9427:79;;:::i;:::-;9391:117;9532:78;9602:7;9593:6;9582:9;9578:22;9532:78;:::i;:::-;9522:88;;9317:303;9687:2;9676:9;9672:18;9659:32;9718:18;9710:6;9707:30;9704:117;;;9740:79;;:::i;:::-;9704:117;9845:62;9899:7;9890:6;9879:9;9875:22;9845:62;:::i;:::-;9835:72;;9630:287;8561:1363;;;;;;;:::o;9930:1509::-;10084:6;10092;10100;10108;10116;10165:3;10153:9;10144:7;10140:23;10136:33;10133:120;;;10172:79;;:::i;:::-;10133:120;10292:1;10317:53;10362:7;10353:6;10342:9;10338:22;10317:53;:::i;:::-;10307:63;;10263:117;10419:2;10445:53;10490:7;10481:6;10470:9;10466:22;10445:53;:::i;:::-;10435:63;;10390:118;10575:2;10564:9;10560:18;10547:32;10606:18;10598:6;10595:30;10592:117;;;10628:79;;:::i;:::-;10592:117;10733:78;10803:7;10794:6;10783:9;10779:22;10733:78;:::i;:::-;10723:88;;10518:303;10888:2;10877:9;10873:18;10860:32;10919:18;10911:6;10908:30;10905:117;;;10941:79;;:::i;:::-;10905:117;11046:78;11116:7;11107:6;11096:9;11092:22;11046:78;:::i;:::-;11036:88;;10831:303;11201:3;11190:9;11186:19;11173:33;11233:18;11225:6;11222:30;11219:117;;;11255:79;;:::i;:::-;11219:117;11360:62;11414:7;11405:6;11394:9;11390:22;11360:62;:::i;:::-;11350:72;;11144:288;9930:1509;;;;;;;;:::o;11445:311::-;11522:4;11612:18;11604:6;11601:30;11598:56;;;11634:18;;:::i;:::-;11598:56;11684:4;11676:6;11672:17;11664:25;;11744:4;11738;11734:15;11726:23;;11445:311;;;:::o;11779:710::-;11875:5;11900:81;11916:64;11973:6;11916:64;:::i;:::-;11900:81;:::i;:::-;11891:90;;12001:5;12030:6;12023:5;12016:21;12064:4;12057:5;12053:16;12046:23;;12117:4;12109:6;12105:17;12097:6;12093:30;12146:3;12138:6;12135:15;12132:122;;;12165:79;;:::i;:::-;12132:122;12280:6;12263:220;12297:6;12292:3;12289:15;12263:220;;;12372:3;12401:37;12434:3;12422:10;12401:37;:::i;:::-;12396:3;12389:50;12468:4;12463:3;12459:14;12452:21;;12339:144;12323:4;12318:3;12314:14;12307:21;;12263:220;;;12267:21;11881:608;;11779:710;;;;;:::o;12512:370::-;12583:5;12632:3;12625:4;12617:6;12613:17;12609:27;12599:122;;12640:79;;:::i;:::-;12599:122;12757:6;12744:20;12782:94;12872:3;12864:6;12857:4;12849:6;12845:17;12782:94;:::i;:::-;12773:103;;12589:293;12512:370;;;;:::o;12888:894::-;13006:6;13014;13063:2;13051:9;13042:7;13038:23;13034:32;13031:119;;;13069:79;;:::i;:::-;13031:119;13217:1;13206:9;13202:17;13189:31;13247:18;13239:6;13236:30;13233:117;;;13269:79;;:::i;:::-;13233:117;13374:78;13444:7;13435:6;13424:9;13420:22;13374:78;:::i;:::-;13364:88;;13160:302;13529:2;13518:9;13514:18;13501:32;13560:18;13552:6;13549:30;13546:117;;;13582:79;;:::i;:::-;13546:117;13687:78;13757:7;13748:6;13737:9;13733:22;13687:78;:::i;:::-;13677:88;;13472:303;12888:894;;;;;:::o;13788:114::-;13855:6;13889:5;13883:12;13873:22;;13788:114;;;:::o;13908:184::-;14007:11;14041:6;14036:3;14029:19;14081:4;14076:3;14072:14;14057:29;;13908:184;;;;:::o;14098:132::-;14165:4;14188:3;14180:11;;14218:4;14213:3;14209:14;14201:22;;14098:132;;;:::o;14236:108::-;14313:24;14331:5;14313:24;:::i;:::-;14308:3;14301:37;14236:108;;:::o;14350:179::-;14419:10;14440:46;14482:3;14474:6;14440:46;:::i;:::-;14518:4;14513:3;14509:14;14495:28;;14350:179;;;;:::o;14535:113::-;14605:4;14637;14632:3;14628:14;14620:22;;14535:113;;;:::o;14684:732::-;14803:3;14832:54;14880:5;14832:54;:::i;:::-;14902:86;14981:6;14976:3;14902:86;:::i;:::-;14895:93;;15012:56;15062:5;15012:56;:::i;:::-;15091:7;15122:1;15107:284;15132:6;15129:1;15126:13;15107:284;;;15208:6;15202:13;15235:63;15294:3;15279:13;15235:63;:::i;:::-;15228:70;;15321:60;15374:6;15321:60;:::i;:::-;15311:70;;15167:224;15154:1;15151;15147:9;15142:14;;15107:284;;;15111:14;15407:3;15400:10;;14808:608;;;14684:732;;;;:::o;15422:373::-;15565:4;15603:2;15592:9;15588:18;15580:26;;15652:9;15646:4;15642:20;15638:1;15627:9;15623:17;15616:47;15680:108;15783:4;15774:6;15680:108;:::i;:::-;15672:116;;15422:373;;;;:::o;15801:1039::-;15928:6;15936;15944;15993:2;15981:9;15972:7;15968:23;15964:32;15961:119;;;15999:79;;:::i;:::-;15961:119;16119:1;16144:53;16189:7;16180:6;16169:9;16165:22;16144:53;:::i;:::-;16134:63;;16090:117;16274:2;16263:9;16259:18;16246:32;16305:18;16297:6;16294:30;16291:117;;;16327:79;;:::i;:::-;16291:117;16432:78;16502:7;16493:6;16482:9;16478:22;16432:78;:::i;:::-;16422:88;;16217:303;16587:2;16576:9;16572:18;16559:32;16618:18;16610:6;16607:30;16604:117;;;16640:79;;:::i;:::-;16604:117;16745:78;16815:7;16806:6;16795:9;16791:22;16745:78;:::i;:::-;16735:88;;16530:303;15801:1039;;;;;:::o;16846:329::-;16905:6;16954:2;16942:9;16933:7;16929:23;16925:32;16922:119;;;16960:79;;:::i;:::-;16922:119;17080:1;17105:53;17150:7;17141:6;17130:9;17126:22;17105:53;:::i;:::-;17095:63;;17051:117;16846:329;;;;:::o;17181:943::-;17276:6;17284;17292;17300;17349:3;17337:9;17328:7;17324:23;17320:33;17317:120;;;17356:79;;:::i;:::-;17317:120;17476:1;17501:53;17546:7;17537:6;17526:9;17522:22;17501:53;:::i;:::-;17491:63;;17447:117;17603:2;17629:53;17674:7;17665:6;17654:9;17650:22;17629:53;:::i;:::-;17619:63;;17574:118;17731:2;17757:53;17802:7;17793:6;17782:9;17778:22;17757:53;:::i;:::-;17747:63;;17702:118;17887:2;17876:9;17872:18;17859:32;17918:18;17910:6;17907:30;17904:117;;;17940:79;;:::i;:::-;17904:117;18045:62;18099:7;18090:6;18079:9;18075:22;18045:62;:::i;:::-;18035:72;;17830:287;17181:943;;;;;;;:::o;18130:118::-;18217:24;18235:5;18217:24;:::i;:::-;18212:3;18205:37;18130:118;;:::o;18254:222::-;18347:4;18385:2;18374:9;18370:18;18362:26;;18398:71;18466:1;18455:9;18451:17;18442:6;18398:71;:::i;:::-;18254:222;;;;:::o;18482:116::-;18552:21;18567:5;18552:21;:::i;:::-;18545:5;18542:32;18532:60;;18588:1;18585;18578:12;18532:60;18482:116;:::o;18604:133::-;18647:5;18685:6;18672:20;18663:29;;18701:30;18725:5;18701:30;:::i;:::-;18604:133;;;;:::o;18743:468::-;18808:6;18816;18865:2;18853:9;18844:7;18840:23;18836:32;18833:119;;;18871:79;;:::i;:::-;18833:119;18991:1;19016:53;19061:7;19052:6;19041:9;19037:22;19016:53;:::i;:::-;19006:63;;18962:117;19118:2;19144:50;19186:7;19177:6;19166:9;19162:22;19144:50;:::i;:::-;19134:60;;19089:115;18743:468;;;;;:::o;19217:474::-;19285:6;19293;19342:2;19330:9;19321:7;19317:23;19313:32;19310:119;;;19348:79;;:::i;:::-;19310:119;19468:1;19493:53;19538:7;19529:6;19518:9;19514:22;19493:53;:::i;:::-;19483:63;;19439:117;19595:2;19621:53;19666:7;19657:6;19646:9;19642:22;19621:53;:::i;:::-;19611:63;;19566:118;19217:474;;;;;:::o;19697:1089::-;19801:6;19809;19817;19825;19833;19882:3;19870:9;19861:7;19857:23;19853:33;19850:120;;;19889:79;;:::i;:::-;19850:120;20009:1;20034:53;20079:7;20070:6;20059:9;20055:22;20034:53;:::i;:::-;20024:63;;19980:117;20136:2;20162:53;20207:7;20198:6;20187:9;20183:22;20162:53;:::i;:::-;20152:63;;20107:118;20264:2;20290:53;20335:7;20326:6;20315:9;20311:22;20290:53;:::i;:::-;20280:63;;20235:118;20392:2;20418:53;20463:7;20454:6;20443:9;20439:22;20418:53;:::i;:::-;20408:63;;20363:118;20548:3;20537:9;20533:19;20520:33;20580:18;20572:6;20569:30;20566:117;;;20602:79;;:::i;:::-;20566:117;20707:62;20761:7;20752:6;20741:9;20737:22;20707:62;:::i;:::-;20697:72;;20491:288;19697:1089;;;;;;;;:::o;20792:619::-;20869:6;20877;20885;20934:2;20922:9;20913:7;20909:23;20905:32;20902:119;;;20940:79;;:::i;:::-;20902:119;21060:1;21085:53;21130:7;21121:6;21110:9;21106:22;21085:53;:::i;:::-;21075:63;;21031:117;21187:2;21213:53;21258:7;21249:6;21238:9;21234:22;21213:53;:::i;:::-;21203:63;;21158:118;21315:2;21341:53;21386:7;21377:6;21366:9;21362:22;21341:53;:::i;:::-;21331:63;;21286:118;20792:619;;;;;:::o;21417:180::-;21465:77;21462:1;21455:88;21562:4;21559:1;21552:15;21586:4;21583:1;21576:15;21603:320;21647:6;21684:1;21678:4;21674:12;21664:22;;21731:1;21725:4;21721:12;21752:18;21742:81;;21808:4;21800:6;21796:17;21786:27;;21742:81;21870:2;21862:6;21859:14;21839:18;21836:38;21833:84;;21889:18;;:::i;:::-;21833:84;21654:269;21603:320;;;:::o;21929:171::-;22069:23;22065:1;22057:6;22053:14;22046:47;21929:171;:::o;22106:366::-;22248:3;22269:67;22333:2;22328:3;22269:67;:::i;:::-;22262:74;;22345:93;22434:3;22345:93;:::i;:::-;22463:2;22458:3;22454:12;22447:19;;22106:366;;;:::o;22478:419::-;22644:4;22682:2;22671:9;22667:18;22659:26;;22731:9;22725:4;22721:20;22717:1;22706:9;22702:17;22695:47;22759:131;22885:4;22759:131;:::i;:::-;22751:139;;22478:419;;;:::o;22903:178::-;23043:30;23039:1;23031:6;23027:14;23020:54;22903:178;:::o;23087:366::-;23229:3;23250:67;23314:2;23309:3;23250:67;:::i;:::-;23243:74;;23326:93;23415:3;23326:93;:::i;:::-;23444:2;23439:3;23435:12;23428:19;;23087:366;;;:::o;23459:419::-;23625:4;23663:2;23652:9;23648:18;23640:26;;23712:9;23706:4;23702:20;23698:1;23687:9;23683:17;23676:47;23740:131;23866:4;23740:131;:::i;:::-;23732:139;;23459:419;;;:::o;23884:332::-;24005:4;24043:2;24032:9;24028:18;24020:26;;24056:71;24124:1;24113:9;24109:17;24100:6;24056:71;:::i;:::-;24137:72;24205:2;24194:9;24190:18;24181:6;24137:72;:::i;:::-;23884:332;;;;;:::o;24222:::-;24343:4;24381:2;24370:9;24366:18;24358:26;;24394:71;24462:1;24451:9;24447:17;24438:6;24394:71;:::i;:::-;24475:72;24543:2;24532:9;24528:18;24519:6;24475:72;:::i;:::-;24222:332;;;;;:::o;24560:180::-;24608:77;24605:1;24598:88;24705:4;24702:1;24695:15;24729:4;24726:1;24719:15;24746:180;24794:77;24791:1;24784:88;24891:4;24888:1;24881:15;24915:4;24912:1;24905:15;24932:233;24971:3;24994:24;25012:5;24994:24;:::i;:::-;24985:33;;25040:66;25033:5;25030:77;25027:103;;25110:18;;:::i;:::-;25027:103;25157:1;25150:5;25146:13;25139:20;;24932:233;;;:::o;25171:178::-;25311:30;25307:1;25299:6;25295:14;25288:54;25171:178;:::o;25355:366::-;25497:3;25518:67;25582:2;25577:3;25518:67;:::i;:::-;25511:74;;25594:93;25683:3;25594:93;:::i;:::-;25712:2;25707:3;25703:12;25696:19;;25355:366;;;:::o;25727:419::-;25893:4;25931:2;25920:9;25916:18;25908:26;;25980:9;25974:4;25970:20;25966:1;25955:9;25951:17;25944:47;26008:131;26134:4;26008:131;:::i;:::-;26000:139;;25727:419;;;:::o;26152:98::-;26203:6;26237:5;26231:12;26221:22;;26152:98;;;:::o;26256:168::-;26339:11;26373:6;26368:3;26361:19;26413:4;26408:3;26404:14;26389:29;;26256:168;;;;:::o;26430:373::-;26516:3;26544:38;26576:5;26544:38;:::i;:::-;26598:70;26661:6;26656:3;26598:70;:::i;:::-;26591:77;;26677:65;26735:6;26730:3;26723:4;26716:5;26712:16;26677:65;:::i;:::-;26767:29;26789:6;26767:29;:::i;:::-;26762:3;26758:39;26751:46;;26520:283;26430:373;;;;:::o;26809:751::-;27032:4;27070:3;27059:9;27055:19;27047:27;;27084:71;27152:1;27141:9;27137:17;27128:6;27084:71;:::i;:::-;27165:72;27233:2;27222:9;27218:18;27209:6;27165:72;:::i;:::-;27247;27315:2;27304:9;27300:18;27291:6;27247:72;:::i;:::-;27329;27397:2;27386:9;27382:18;27373:6;27329:72;:::i;:::-;27449:9;27443:4;27439:20;27433:3;27422:9;27418:19;27411:49;27477:76;27548:4;27539:6;27477:76;:::i;:::-;27469:84;;26809:751;;;;;;;;:::o;27566:141::-;27622:5;27653:6;27647:13;27638:22;;27669:32;27695:5;27669:32;:::i;:::-;27566:141;;;;:::o;27713:349::-;27782:6;27831:2;27819:9;27810:7;27806:23;27802:32;27799:119;;;27837:79;;:::i;:::-;27799:119;27957:1;27982:63;28037:7;28028:6;28017:9;28013:22;27982:63;:::i;:::-;27972:73;;27928:127;27713:349;;;;:::o;28068:1053::-;28391:4;28429:3;28418:9;28414:19;28406:27;;28443:71;28511:1;28500:9;28496:17;28487:6;28443:71;:::i;:::-;28524:72;28592:2;28581:9;28577:18;28568:6;28524:72;:::i;:::-;28643:9;28637:4;28633:20;28628:2;28617:9;28613:18;28606:48;28671:108;28774:4;28765:6;28671:108;:::i;:::-;28663:116;;28826:9;28820:4;28816:20;28811:2;28800:9;28796:18;28789:48;28854:108;28957:4;28948:6;28854:108;:::i;:::-;28846:116;;29010:9;29004:4;29000:20;28994:3;28983:9;28979:19;28972:49;29038:76;29109:4;29100:6;29038:76;:::i;:::-;29030:84;;28068:1053;;;;;;;;:::o;29127:191::-;29167:3;29186:20;29204:1;29186:20;:::i;:::-;29181:25;;29220:20;29238:1;29220:20;:::i;:::-;29215:25;;29263:1;29260;29256:9;29249:16;;29284:3;29281:1;29278:10;29275:36;;;29291:18;;:::i;:::-;29275:36;29127:191;;;;:::o;29324:553::-;29501:4;29539:3;29528:9;29524:19;29516:27;;29553:71;29621:1;29610:9;29606:17;29597:6;29553:71;:::i;:::-;29634:72;29702:2;29691:9;29687:18;29678:6;29634:72;:::i;:::-;29716;29784:2;29773:9;29769:18;29760:6;29716:72;:::i;:::-;29798;29866:2;29855:9;29851:18;29842:6;29798:72;:::i;:::-;29324:553;;;;;;;:::o;29883:634::-;30104:4;30142:2;30131:9;30127:18;30119:26;;30191:9;30185:4;30181:20;30177:1;30166:9;30162:17;30155:47;30219:108;30322:4;30313:6;30219:108;:::i;:::-;30211:116;;30374:9;30368:4;30364:20;30359:2;30348:9;30344:18;30337:48;30402:108;30505:4;30496:6;30402:108;:::i;:::-;30394:116;;29883:634;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "2408800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"balanceOf(address,uint256)": "infinite",
								"balanceOfBatch(address[],uint256[])": "infinite",
								"burn(address,uint256,uint256)": "infinite",
								"burnBatch(address,uint256[],uint256[])": "infinite",
								"exists(uint256)": "2890",
								"gameAddress()": "2597",
								"isApprovedForAll(address,address)": "infinite",
								"mint(address,uint256,uint256,bytes)": "infinite",
								"mintBatch(address,uint256[],uint256[],bytes)": "infinite",
								"owner()": "2582",
								"renounceOwnership()": "infinite",
								"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "infinite",
								"safeTransferFrom(address,address,uint256,uint256,bytes)": "infinite",
								"setApprovalForAll(address,bool)": "infinite",
								"setGameAddress(address)": "infinite",
								"supportsInterface(bytes4)": "809",
								"totalSupply()": "2522",
								"totalSupply(uint256)": "infinite",
								"transferOwnership(address)": "infinite",
								"uri(uint256)": "infinite"
							},
							"internal": {
								"_update(address,address,uint256[] memory,uint256[] memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 376,
									"end": 2275,
									"name": "PUSH",
									"source": 14,
									"value": "80"
								},
								{
									"begin": 376,
									"end": 2275,
									"name": "PUSH",
									"source": 14,
									"value": "40"
								},
								{
									"begin": 376,
									"end": 2275,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 482,
									"end": 592,
									"name": "CALLVALUE",
									"source": 14
								},
								{
									"begin": 482,
									"end": 592,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 482,
									"end": 592,
									"name": "ISZERO",
									"source": 14
								},
								{
									"begin": 482,
									"end": 592,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "1"
								},
								{
									"begin": 482,
									"end": 592,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 482,
									"end": 592,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 592,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 482,
									"end": 592,
									"name": "REVERT",
									"source": 14
								},
								{
									"begin": 482,
									"end": 592,
									"name": "tag",
									"source": 14,
									"value": "1"
								},
								{
									"begin": 482,
									"end": 592,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 482,
									"end": 592,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 482,
									"end": 592,
									"name": "PUSH",
									"source": 14,
									"value": "40"
								},
								{
									"begin": 482,
									"end": 592,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": 482,
									"end": 592,
									"name": "PUSHSIZE",
									"source": 14
								},
								{
									"begin": 482,
									"end": 592,
									"name": "CODESIZE",
									"source": 14
								},
								{
									"begin": 482,
									"end": 592,
									"name": "SUB",
									"source": 14
								},
								{
									"begin": 482,
									"end": 592,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 482,
									"end": 592,
									"name": "PUSHSIZE",
									"source": 14
								},
								{
									"begin": 482,
									"end": 592,
									"name": "DUP4",
									"source": 14
								},
								{
									"begin": 482,
									"end": 592,
									"name": "CODECOPY",
									"source": 14
								},
								{
									"begin": 482,
									"end": 592,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 482,
									"end": 592,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 482,
									"end": 592,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 482,
									"end": 592,
									"name": "PUSH",
									"source": 14,
									"value": "40"
								},
								{
									"begin": 482,
									"end": 592,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 482,
									"end": 592,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 482,
									"end": 592,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 482,
									"end": 592,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 482,
									"end": 592,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "2"
								},
								{
									"begin": 482,
									"end": 592,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 482,
									"end": 592,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 482,
									"end": 592,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "3"
								},
								{
									"begin": 482,
									"end": 592,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 482,
									"end": 592,
									"name": "tag",
									"source": 14,
									"value": "2"
								},
								{
									"begin": 482,
									"end": 592,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 576,
									"end": 588,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 1251,
									"end": 1313,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1251,
									"end": 1313,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1251,
									"end": 1313,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1251,
									"end": 1313,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1251,
									"end": 1313,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1251,
									"end": 1313,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1251,
									"end": 1313,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1251,
									"end": 1313,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1251,
									"end": 1313,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1251,
									"end": 1313,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1251,
									"end": 1313,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1251,
									"end": 1313,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1251,
									"end": 1313,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1251,
									"end": 1313,
									"name": "PUSH",
									"source": 2,
									"value": "68747470733A2F2F736F6D2E657465726E697461732E67616D65732F6A736F6E"
								},
								{
									"begin": 1251,
									"end": 1313,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1251,
									"end": 1313,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1251,
									"end": 1313,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1293,
									"end": 1306,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 1301,
									"end": 1305,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1293,
									"end": 1300,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 1293,
									"end": 1300,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1293,
									"end": 1300,
									"name": "SHL",
									"source": 2
								},
								{
									"begin": 1293,
									"end": 1306,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1293,
									"end": 1306,
									"name": "SHR",
									"source": 2
								},
								{
									"begin": 1293,
									"end": 1306,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1293,
									"end": 1306,
									"name": "tag",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 1293,
									"end": 1306,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1251,
									"end": 1313,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1297,
									"end": 1298,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1285,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 1322,
									"end": 1353,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1225,
									"end": 1412,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 482,
									"end": 592,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 376,
									"end": 2275,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "17"
								},
								{
									"begin": 376,
									"end": 2275,
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 10282,
									"end": 10368,
									"name": "tag",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 10282,
									"end": 10368,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 10355,
									"end": 10361,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 10348,
									"end": 10352,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 10348,
									"end": 10361,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 10348,
									"end": 10361,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 10348,
									"end": 10361,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "19"
								},
								{
									"begin": 10348,
									"end": 10361,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 10348,
									"end": 10361,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 10348,
									"end": 10361,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 10348,
									"end": 10361,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 10348,
									"end": 10361,
									"name": "tag",
									"source": 2,
									"value": "19"
								},
								{
									"begin": 10348,
									"end": 10361,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 10348,
									"end": 10361,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 10282,
									"end": 10368,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 10282,
									"end": 10368,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3029,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3083,
									"end": 3091,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3073,
									"end": 3081,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 15,
									"value": "23"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 15
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 15,
									"value": "25"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 15,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 15
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 15,
									"value": "26"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "56"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "25"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 15,
									"value": "56"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 15,
									"value": "27"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "58"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "26"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 15,
									"value": "58"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 15
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "59"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 15
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 15,
									"value": "59"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 15,
									"value": "28"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 15
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "61"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "27"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 15,
									"value": "61"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 15
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "tag",
									"source": 15,
									"value": "3"
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 915,
									"end": 921,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 964,
									"end": 966,
									"name": "PUSH",
									"source": 15,
									"value": "20"
								},
								{
									"begin": 952,
									"end": 961,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 943,
									"end": 950,
									"name": "DUP5",
									"source": 15
								},
								{
									"begin": 939,
									"end": 962,
									"name": "SUB",
									"source": 15
								},
								{
									"begin": 935,
									"end": 967,
									"name": "SLT",
									"source": 15
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "ISZERO",
									"source": 15
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "63"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "64"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "23"
								},
								{
									"begin": 970,
									"end": 1049,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "tag",
									"source": 15,
									"value": "64"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "tag",
									"source": 15,
									"value": "63"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 1090,
									"end": 1091,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "65"
								},
								{
									"begin": 1171,
									"end": 1178,
									"name": "DUP5",
									"source": 15
								},
								{
									"begin": 1162,
									"end": 1168,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 1151,
									"end": 1160,
									"name": "DUP6",
									"source": 15
								},
								{
									"begin": 1147,
									"end": 1169,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "28"
								},
								{
									"begin": 1115,
									"end": 1179,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "tag",
									"source": 15,
									"value": "65"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 1061,
									"end": 1189,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP3",
									"source": 15
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 845,
									"end": 1196,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 1202,
									"end": 1320,
									"name": "tag",
									"source": 15,
									"value": "29"
								},
								{
									"begin": 1202,
									"end": 1320,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 1289,
									"end": 1313,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "67"
								},
								{
									"begin": 1307,
									"end": 1312,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 1289,
									"end": 1313,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "26"
								},
								{
									"begin": 1289,
									"end": 1313,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 1289,
									"end": 1313,
									"name": "tag",
									"source": 15,
									"value": "67"
								},
								{
									"begin": 1289,
									"end": 1313,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 1284,
									"end": 1287,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 1277,
									"end": 1314,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 1202,
									"end": 1320,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 1202,
									"end": 1320,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 1202,
									"end": 1320,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 1326,
									"end": 1548,
									"name": "tag",
									"source": 15,
									"value": "13"
								},
								{
									"begin": 1326,
									"end": 1548,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 1419,
									"end": 1423,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 1457,
									"end": 1459,
									"name": "PUSH",
									"source": 15,
									"value": "20"
								},
								{
									"begin": 1446,
									"end": 1455,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 1442,
									"end": 1460,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 1434,
									"end": 1460,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 1434,
									"end": 1460,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 1470,
									"end": 1541,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "69"
								},
								{
									"begin": 1538,
									"end": 1539,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 1527,
									"end": 1536,
									"name": "DUP4",
									"source": 15
								},
								{
									"begin": 1523,
									"end": 1540,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 1514,
									"end": 1520,
									"name": "DUP5",
									"source": 15
								},
								{
									"begin": 1470,
									"end": 1541,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "29"
								},
								{
									"begin": 1470,
									"end": 1541,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 1470,
									"end": 1541,
									"name": "tag",
									"source": 15,
									"value": "69"
								},
								{
									"begin": 1470,
									"end": 1541,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 1326,
									"end": 1548,
									"name": "SWAP3",
									"source": 15
								},
								{
									"begin": 1326,
									"end": 1548,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 1326,
									"end": 1548,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 1326,
									"end": 1548,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 1326,
									"end": 1548,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 1554,
									"end": 1653,
									"name": "tag",
									"source": 15,
									"value": "30"
								},
								{
									"begin": 1554,
									"end": 1653,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 1606,
									"end": 1612,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 1640,
									"end": 1645,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 1634,
									"end": 1646,
									"name": "MLOAD",
									"source": 15
								},
								{
									"begin": 1624,
									"end": 1646,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 1624,
									"end": 1646,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 1554,
									"end": 1653,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 1554,
									"end": 1653,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 1554,
									"end": 1653,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 1554,
									"end": 1653,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 1659,
									"end": 1839,
									"name": "tag",
									"source": 15,
									"value": "31"
								},
								{
									"begin": 1659,
									"end": 1839,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 1707,
									"end": 1784,
									"name": "PUSH",
									"source": 15,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1704,
									"end": 1705,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 1697,
									"end": 1785,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 1804,
									"end": 1808,
									"name": "PUSH",
									"source": 15,
									"value": "41"
								},
								{
									"begin": 1801,
									"end": 1802,
									"name": "PUSH",
									"source": 15,
									"value": "4"
								},
								{
									"begin": 1794,
									"end": 1809,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 1828,
									"end": 1832,
									"name": "PUSH",
									"source": 15,
									"value": "24"
								},
								{
									"begin": 1825,
									"end": 1826,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 1818,
									"end": 1833,
									"name": "REVERT",
									"source": 15
								},
								{
									"begin": 1845,
									"end": 2025,
									"name": "tag",
									"source": 15,
									"value": "32"
								},
								{
									"begin": 1845,
									"end": 2025,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 1893,
									"end": 1970,
									"name": "PUSH",
									"source": 15,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1890,
									"end": 1891,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 1883,
									"end": 1971,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 1990,
									"end": 1994,
									"name": "PUSH",
									"source": 15,
									"value": "22"
								},
								{
									"begin": 1987,
									"end": 1988,
									"name": "PUSH",
									"source": 15,
									"value": "4"
								},
								{
									"begin": 1980,
									"end": 1995,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 2014,
									"end": 2018,
									"name": "PUSH",
									"source": 15,
									"value": "24"
								},
								{
									"begin": 2011,
									"end": 2012,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 2004,
									"end": 2019,
									"name": "REVERT",
									"source": 15
								},
								{
									"begin": 2031,
									"end": 2351,
									"name": "tag",
									"source": 15,
									"value": "33"
								},
								{
									"begin": 2031,
									"end": 2351,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 2075,
									"end": 2081,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 2112,
									"end": 2113,
									"name": "PUSH",
									"source": 15,
									"value": "2"
								},
								{
									"begin": 2106,
									"end": 2110,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 2102,
									"end": 2114,
									"name": "DIV",
									"source": 15
								},
								{
									"begin": 2092,
									"end": 2114,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 2092,
									"end": 2114,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 2159,
									"end": 2160,
									"name": "PUSH",
									"source": 15,
									"value": "1"
								},
								{
									"begin": 2153,
									"end": 2157,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 2149,
									"end": 2161,
									"name": "AND",
									"source": 15
								},
								{
									"begin": 2180,
									"end": 2198,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 2170,
									"end": 2251,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "74"
								},
								{
									"begin": 2170,
									"end": 2251,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 2236,
									"end": 2240,
									"name": "PUSH",
									"source": 15,
									"value": "7F"
								},
								{
									"begin": 2228,
									"end": 2234,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 2224,
									"end": 2241,
									"name": "AND",
									"source": 15
								},
								{
									"begin": 2214,
									"end": 2241,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 2214,
									"end": 2241,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 2170,
									"end": 2251,
									"name": "tag",
									"source": 15,
									"value": "74"
								},
								{
									"begin": 2170,
									"end": 2251,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 2298,
									"end": 2300,
									"name": "PUSH",
									"source": 15,
									"value": "20"
								},
								{
									"begin": 2290,
									"end": 2296,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 2287,
									"end": 2301,
									"name": "LT",
									"source": 15
								},
								{
									"begin": 2267,
									"end": 2285,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 2264,
									"end": 2302,
									"name": "SUB",
									"source": 15
								},
								{
									"begin": 2261,
									"end": 2345,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "75"
								},
								{
									"begin": 2261,
									"end": 2345,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 2317,
									"end": 2335,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "76"
								},
								{
									"begin": 2317,
									"end": 2335,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "32"
								},
								{
									"begin": 2317,
									"end": 2335,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 2317,
									"end": 2335,
									"name": "tag",
									"source": 15,
									"value": "76"
								},
								{
									"begin": 2317,
									"end": 2335,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 2261,
									"end": 2345,
									"name": "tag",
									"source": 15,
									"value": "75"
								},
								{
									"begin": 2261,
									"end": 2345,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 2082,
									"end": 2351,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 2031,
									"end": 2351,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 2031,
									"end": 2351,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 2031,
									"end": 2351,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 2031,
									"end": 2351,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 2357,
									"end": 2498,
									"name": "tag",
									"source": 15,
									"value": "34"
								},
								{
									"begin": 2357,
									"end": 2498,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 2406,
									"end": 2410,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 2429,
									"end": 2432,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 2421,
									"end": 2432,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 2421,
									"end": 2432,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 2452,
									"end": 2455,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 2449,
									"end": 2450,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 2442,
									"end": 2456,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 2486,
									"end": 2490,
									"name": "PUSH",
									"source": 15,
									"value": "20"
								},
								{
									"begin": 2483,
									"end": 2484,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 2473,
									"end": 2491,
									"name": "KECCAK256",
									"source": 15
								},
								{
									"begin": 2465,
									"end": 2491,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 2465,
									"end": 2491,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 2357,
									"end": 2498,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 2357,
									"end": 2498,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 2357,
									"end": 2498,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 2357,
									"end": 2498,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 2504,
									"end": 2597,
									"name": "tag",
									"source": 15,
									"value": "35"
								},
								{
									"begin": 2504,
									"end": 2597,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 2541,
									"end": 2547,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 2588,
									"end": 2590,
									"name": "PUSH",
									"source": 15,
									"value": "20"
								},
								{
									"begin": 2583,
									"end": 2585,
									"name": "PUSH",
									"source": 15,
									"value": "1F"
								},
								{
									"begin": 2576,
									"end": 2581,
									"name": "DUP4",
									"source": 15
								},
								{
									"begin": 2572,
									"end": 2586,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 2568,
									"end": 2591,
									"name": "DIV",
									"source": 15
								},
								{
									"begin": 2558,
									"end": 2591,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 2558,
									"end": 2591,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 2504,
									"end": 2597,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 2504,
									"end": 2597,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 2504,
									"end": 2597,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 2504,
									"end": 2597,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 2603,
									"end": 2710,
									"name": "tag",
									"source": 15,
									"value": "36"
								},
								{
									"begin": 2603,
									"end": 2710,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 2647,
									"end": 2655,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 2697,
									"end": 2702,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 2691,
									"end": 2695,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 2687,
									"end": 2703,
									"name": "SHL",
									"source": 15
								},
								{
									"begin": 2666,
									"end": 2703,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 2666,
									"end": 2703,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 2603,
									"end": 2710,
									"name": "SWAP3",
									"source": 15
								},
								{
									"begin": 2603,
									"end": 2710,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 2603,
									"end": 2710,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 2603,
									"end": 2710,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 2603,
									"end": 2710,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 2716,
									"end": 3109,
									"name": "tag",
									"source": 15,
									"value": "37"
								},
								{
									"begin": 2716,
									"end": 3109,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 2785,
									"end": 2791,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 2835,
									"end": 2836,
									"name": "PUSH",
									"source": 15,
									"value": "8"
								},
								{
									"begin": 2823,
									"end": 2833,
									"name": "DUP4",
									"source": 15
								},
								{
									"begin": 2819,
									"end": 2837,
									"name": "MUL",
									"source": 15
								},
								{
									"begin": 2858,
									"end": 2955,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "81"
								},
								{
									"begin": 2888,
									"end": 2954,
									"name": "PUSH",
									"source": 15,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2877,
									"end": 2886,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 2858,
									"end": 2955,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "36"
								},
								{
									"begin": 2858,
									"end": 2955,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 2858,
									"end": 2955,
									"name": "tag",
									"source": 15,
									"value": "81"
								},
								{
									"begin": 2858,
									"end": 2955,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 2976,
									"end": 3015,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "82"
								},
								{
									"begin": 3006,
									"end": 3014,
									"name": "DUP7",
									"source": 15
								},
								{
									"begin": 2995,
									"end": 3004,
									"name": "DUP4",
									"source": 15
								},
								{
									"begin": 2976,
									"end": 3015,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "36"
								},
								{
									"begin": 2976,
									"end": 3015,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 2976,
									"end": 3015,
									"name": "tag",
									"source": 15,
									"value": "82"
								},
								{
									"begin": 2976,
									"end": 3015,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 2964,
									"end": 3015,
									"name": "SWAP6",
									"source": 15
								},
								{
									"begin": 2964,
									"end": 3015,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 3048,
									"end": 3052,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 3044,
									"end": 3053,
									"name": "NOT",
									"source": 15
								},
								{
									"begin": 3037,
									"end": 3042,
									"name": "DUP5",
									"source": 15
								},
								{
									"begin": 3033,
									"end": 3054,
									"name": "AND",
									"source": 15
								},
								{
									"begin": 3024,
									"end": 3054,
									"name": "SWAP4",
									"source": 15
								},
								{
									"begin": 3024,
									"end": 3054,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 3097,
									"end": 3101,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 3087,
									"end": 3095,
									"name": "DUP7",
									"source": 15
								},
								{
									"begin": 3083,
									"end": 3102,
									"name": "AND",
									"source": 15
								},
								{
									"begin": 3076,
									"end": 3081,
									"name": "DUP5",
									"source": 15
								},
								{
									"begin": 3073,
									"end": 3103,
									"name": "OR",
									"source": 15
								},
								{
									"begin": 3063,
									"end": 3103,
									"name": "SWAP3",
									"source": 15
								},
								{
									"begin": 3063,
									"end": 3103,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 2792,
									"end": 3109,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 2792,
									"end": 3109,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 2716,
									"end": 3109,
									"name": "SWAP4",
									"source": 15
								},
								{
									"begin": 2716,
									"end": 3109,
									"name": "SWAP3",
									"source": 15
								},
								{
									"begin": 2716,
									"end": 3109,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 2716,
									"end": 3109,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 2716,
									"end": 3109,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 2716,
									"end": 3109,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 3115,
									"end": 3192,
									"name": "tag",
									"source": 15,
									"value": "38"
								},
								{
									"begin": 3115,
									"end": 3192,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 3152,
									"end": 3159,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 3181,
									"end": 3186,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 3170,
									"end": 3186,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 3170,
									"end": 3186,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 3115,
									"end": 3192,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 3115,
									"end": 3192,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 3115,
									"end": 3192,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 3115,
									"end": 3192,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 3198,
									"end": 3258,
									"name": "tag",
									"source": 15,
									"value": "39"
								},
								{
									"begin": 3198,
									"end": 3258,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 3226,
									"end": 3229,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 3247,
									"end": 3252,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 3240,
									"end": 3252,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 3240,
									"end": 3252,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 3198,
									"end": 3258,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 3198,
									"end": 3258,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 3198,
									"end": 3258,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 3198,
									"end": 3258,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 3264,
									"end": 3406,
									"name": "tag",
									"source": 15,
									"value": "40"
								},
								{
									"begin": 3264,
									"end": 3406,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 3314,
									"end": 3323,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 3347,
									"end": 3400,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "86"
								},
								{
									"begin": 3365,
									"end": 3399,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "87"
								},
								{
									"begin": 3374,
									"end": 3398,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "88"
								},
								{
									"begin": 3392,
									"end": 3397,
									"name": "DUP5",
									"source": 15
								},
								{
									"begin": 3374,
									"end": 3398,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "38"
								},
								{
									"begin": 3374,
									"end": 3398,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 3374,
									"end": 3398,
									"name": "tag",
									"source": 15,
									"value": "88"
								},
								{
									"begin": 3374,
									"end": 3398,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 3365,
									"end": 3399,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "39"
								},
								{
									"begin": 3365,
									"end": 3399,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 3365,
									"end": 3399,
									"name": "tag",
									"source": 15,
									"value": "87"
								},
								{
									"begin": 3365,
									"end": 3399,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 3347,
									"end": 3400,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "38"
								},
								{
									"begin": 3347,
									"end": 3400,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 3347,
									"end": 3400,
									"name": "tag",
									"source": 15,
									"value": "86"
								},
								{
									"begin": 3347,
									"end": 3400,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 3334,
									"end": 3400,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 3334,
									"end": 3400,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 3264,
									"end": 3406,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 3264,
									"end": 3406,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 3264,
									"end": 3406,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 3264,
									"end": 3406,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 3412,
									"end": 3487,
									"name": "tag",
									"source": 15,
									"value": "41"
								},
								{
									"begin": 3412,
									"end": 3487,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 3455,
									"end": 3458,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 3476,
									"end": 3481,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 3469,
									"end": 3481,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 3469,
									"end": 3481,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 3412,
									"end": 3487,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 3412,
									"end": 3487,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 3412,
									"end": 3487,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 3412,
									"end": 3487,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 3493,
									"end": 3762,
									"name": "tag",
									"source": 15,
									"value": "42"
								},
								{
									"begin": 3493,
									"end": 3762,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 3603,
									"end": 3642,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "91"
								},
								{
									"begin": 3634,
									"end": 3641,
									"name": "DUP4",
									"source": 15
								},
								{
									"begin": 3603,
									"end": 3642,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "40"
								},
								{
									"begin": 3603,
									"end": 3642,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 3603,
									"end": 3642,
									"name": "tag",
									"source": 15,
									"value": "91"
								},
								{
									"begin": 3603,
									"end": 3642,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 3664,
									"end": 3755,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "92"
								},
								{
									"begin": 3713,
									"end": 3754,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "93"
								},
								{
									"begin": 3737,
									"end": 3753,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 3713,
									"end": 3754,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "41"
								},
								{
									"begin": 3713,
									"end": 3754,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 3713,
									"end": 3754,
									"name": "tag",
									"source": 15,
									"value": "93"
								},
								{
									"begin": 3713,
									"end": 3754,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 3705,
									"end": 3711,
									"name": "DUP5",
									"source": 15
								},
								{
									"begin": 3698,
									"end": 3702,
									"name": "DUP5",
									"source": 15
								},
								{
									"begin": 3692,
									"end": 3703,
									"name": "SLOAD",
									"source": 15
								},
								{
									"begin": 3664,
									"end": 3755,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "37"
								},
								{
									"begin": 3664,
									"end": 3755,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 3664,
									"end": 3755,
									"name": "tag",
									"source": 15,
									"value": "92"
								},
								{
									"begin": 3664,
									"end": 3755,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 3658,
									"end": 3662,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 3651,
									"end": 3756,
									"name": "SSTORE",
									"source": 15
								},
								{
									"begin": 3569,
									"end": 3762,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 3493,
									"end": 3762,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 3493,
									"end": 3762,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 3493,
									"end": 3762,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 3493,
									"end": 3762,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 3768,
									"end": 3841,
									"name": "tag",
									"source": 15,
									"value": "43"
								},
								{
									"begin": 3768,
									"end": 3841,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 3813,
									"end": 3816,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 3768,
									"end": 3841,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 3768,
									"end": 3841,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 3847,
									"end": 4036,
									"name": "tag",
									"source": 15,
									"value": "44"
								},
								{
									"begin": 3847,
									"end": 4036,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 3924,
									"end": 3956,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "96"
								},
								{
									"begin": 3924,
									"end": 3956,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "43"
								},
								{
									"begin": 3924,
									"end": 3956,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 3924,
									"end": 3956,
									"name": "tag",
									"source": 15,
									"value": "96"
								},
								{
									"begin": 3924,
									"end": 3956,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 3965,
									"end": 4030,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "97"
								},
								{
									"begin": 4023,
									"end": 4029,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 4015,
									"end": 4021,
									"name": "DUP5",
									"source": 15
								},
								{
									"begin": 4009,
									"end": 4013,
									"name": "DUP5",
									"source": 15
								},
								{
									"begin": 3965,
									"end": 4030,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "42"
								},
								{
									"begin": 3965,
									"end": 4030,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 3965,
									"end": 4030,
									"name": "tag",
									"source": 15,
									"value": "97"
								},
								{
									"begin": 3965,
									"end": 4030,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 3900,
									"end": 4036,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 3847,
									"end": 4036,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 3847,
									"end": 4036,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 3847,
									"end": 4036,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 4042,
									"end": 4228,
									"name": "tag",
									"source": 15,
									"value": "45"
								},
								{
									"begin": 4042,
									"end": 4228,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 4102,
									"end": 4222,
									"name": "tag",
									"source": 15,
									"value": "99"
								},
								{
									"begin": 4102,
									"end": 4222,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 4119,
									"end": 4122,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 4112,
									"end": 4117,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 4109,
									"end": 4123,
									"name": "LT",
									"source": 15
								},
								{
									"begin": 4102,
									"end": 4222,
									"name": "ISZERO",
									"source": 15
								},
								{
									"begin": 4102,
									"end": 4222,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "101"
								},
								{
									"begin": 4102,
									"end": 4222,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 4173,
									"end": 4212,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "102"
								},
								{
									"begin": 4210,
									"end": 4211,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 4203,
									"end": 4208,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 4173,
									"end": 4212,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "44"
								},
								{
									"begin": 4173,
									"end": 4212,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 4173,
									"end": 4212,
									"name": "tag",
									"source": 15,
									"value": "102"
								},
								{
									"begin": 4173,
									"end": 4212,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 4146,
									"end": 4147,
									"name": "PUSH",
									"source": 15,
									"value": "1"
								},
								{
									"begin": 4139,
									"end": 4144,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 4135,
									"end": 4148,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 4126,
									"end": 4148,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 4126,
									"end": 4148,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 4102,
									"end": 4222,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "99"
								},
								{
									"begin": 4102,
									"end": 4222,
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 4102,
									"end": 4222,
									"name": "tag",
									"source": 15,
									"value": "101"
								},
								{
									"begin": 4102,
									"end": 4222,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 4042,
									"end": 4228,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 4042,
									"end": 4228,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 4042,
									"end": 4228,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 4234,
									"end": 4777,
									"name": "tag",
									"source": 15,
									"value": "46"
								},
								{
									"begin": 4234,
									"end": 4777,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 4335,
									"end": 4337,
									"name": "PUSH",
									"source": 15,
									"value": "1F"
								},
								{
									"begin": 4330,
									"end": 4333,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 4327,
									"end": 4338,
									"name": "GT",
									"source": 15
								},
								{
									"begin": 4324,
									"end": 4770,
									"name": "ISZERO",
									"source": 15
								},
								{
									"begin": 4324,
									"end": 4770,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "104"
								},
								{
									"begin": 4324,
									"end": 4770,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 4369,
									"end": 4407,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "105"
								},
								{
									"begin": 4401,
									"end": 4406,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 4369,
									"end": 4407,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "34"
								},
								{
									"begin": 4369,
									"end": 4407,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 4369,
									"end": 4407,
									"name": "tag",
									"source": 15,
									"value": "105"
								},
								{
									"begin": 4369,
									"end": 4407,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 4453,
									"end": 4482,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "106"
								},
								{
									"begin": 4471,
									"end": 4481,
									"name": "DUP5",
									"source": 15
								},
								{
									"begin": 4453,
									"end": 4482,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "35"
								},
								{
									"begin": 4453,
									"end": 4482,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 4453,
									"end": 4482,
									"name": "tag",
									"source": 15,
									"value": "106"
								},
								{
									"begin": 4453,
									"end": 4482,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 4443,
									"end": 4451,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 4439,
									"end": 4483,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 4636,
									"end": 4638,
									"name": "PUSH",
									"source": 15,
									"value": "20"
								},
								{
									"begin": 4624,
									"end": 4634,
									"name": "DUP6",
									"source": 15
								},
								{
									"begin": 4621,
									"end": 4639,
									"name": "LT",
									"source": 15
								},
								{
									"begin": 4618,
									"end": 4667,
									"name": "ISZERO",
									"source": 15
								},
								{
									"begin": 4618,
									"end": 4667,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "107"
								},
								{
									"begin": 4618,
									"end": 4667,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 4657,
									"end": 4665,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 4642,
									"end": 4665,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 4642,
									"end": 4665,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 4618,
									"end": 4667,
									"name": "tag",
									"source": 15,
									"value": "107"
								},
								{
									"begin": 4618,
									"end": 4667,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 4680,
									"end": 4760,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "108"
								},
								{
									"begin": 4736,
									"end": 4758,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "109"
								},
								{
									"begin": 4754,
									"end": 4757,
									"name": "DUP6",
									"source": 15
								},
								{
									"begin": 4736,
									"end": 4758,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "35"
								},
								{
									"begin": 4736,
									"end": 4758,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 4736,
									"end": 4758,
									"name": "tag",
									"source": 15,
									"value": "109"
								},
								{
									"begin": 4736,
									"end": 4758,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 4726,
									"end": 4734,
									"name": "DUP4",
									"source": 15
								},
								{
									"begin": 4722,
									"end": 4759,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 4709,
									"end": 4720,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 4680,
									"end": 4760,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "45"
								},
								{
									"begin": 4680,
									"end": 4760,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 4680,
									"end": 4760,
									"name": "tag",
									"source": 15,
									"value": "108"
								},
								{
									"begin": 4680,
									"end": 4760,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 4339,
									"end": 4770,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 4339,
									"end": 4770,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 4324,
									"end": 4770,
									"name": "tag",
									"source": 15,
									"value": "104"
								},
								{
									"begin": 4324,
									"end": 4770,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 4234,
									"end": 4777,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 4234,
									"end": 4777,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 4234,
									"end": 4777,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 4234,
									"end": 4777,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 4783,
									"end": 4900,
									"name": "tag",
									"source": 15,
									"value": "47"
								},
								{
									"begin": 4783,
									"end": 4900,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 4837,
									"end": 4845,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 4887,
									"end": 4892,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 4881,
									"end": 4885,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 4877,
									"end": 4893,
									"name": "SHR",
									"source": 15
								},
								{
									"begin": 4856,
									"end": 4893,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 4856,
									"end": 4893,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 4783,
									"end": 4900,
									"name": "SWAP3",
									"source": 15
								},
								{
									"begin": 4783,
									"end": 4900,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 4783,
									"end": 4900,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 4783,
									"end": 4900,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 4783,
									"end": 4900,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 4906,
									"end": 5075,
									"name": "tag",
									"source": 15,
									"value": "48"
								},
								{
									"begin": 4906,
									"end": 5075,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 4950,
									"end": 4956,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 4983,
									"end": 5034,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "112"
								},
								{
									"begin": 5031,
									"end": 5032,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 5027,
									"end": 5033,
									"name": "NOT",
									"source": 15
								},
								{
									"begin": 5019,
									"end": 5024,
									"name": "DUP5",
									"source": 15
								},
								{
									"begin": 5016,
									"end": 5017,
									"name": "PUSH",
									"source": 15,
									"value": "8"
								},
								{
									"begin": 5012,
									"end": 5025,
									"name": "MUL",
									"source": 15
								},
								{
									"begin": 4983,
									"end": 5034,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "47"
								},
								{
									"begin": 4983,
									"end": 5034,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 4983,
									"end": 5034,
									"name": "tag",
									"source": 15,
									"value": "112"
								},
								{
									"begin": 4983,
									"end": 5034,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 4979,
									"end": 5035,
									"name": "NOT",
									"source": 15
								},
								{
									"begin": 5064,
									"end": 5068,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 5058,
									"end": 5062,
									"name": "DUP4",
									"source": 15
								},
								{
									"begin": 5054,
									"end": 5069,
									"name": "AND",
									"source": 15
								},
								{
									"begin": 5044,
									"end": 5069,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 5044,
									"end": 5069,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 4957,
									"end": 5075,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 4906,
									"end": 5075,
									"name": "SWAP3",
									"source": 15
								},
								{
									"begin": 4906,
									"end": 5075,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 4906,
									"end": 5075,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 4906,
									"end": 5075,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 4906,
									"end": 5075,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 5080,
									"end": 5375,
									"name": "tag",
									"source": 15,
									"value": "49"
								},
								{
									"begin": 5080,
									"end": 5375,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 5156,
									"end": 5160,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 5302,
									"end": 5331,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "114"
								},
								{
									"begin": 5327,
									"end": 5330,
									"name": "DUP4",
									"source": 15
								},
								{
									"begin": 5321,
									"end": 5325,
									"name": "DUP4",
									"source": 15
								},
								{
									"begin": 5302,
									"end": 5331,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "48"
								},
								{
									"begin": 5302,
									"end": 5331,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 5302,
									"end": 5331,
									"name": "tag",
									"source": 15,
									"value": "114"
								},
								{
									"begin": 5302,
									"end": 5331,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 5294,
									"end": 5331,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 5294,
									"end": 5331,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 5364,
									"end": 5367,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 5361,
									"end": 5362,
									"name": "PUSH",
									"source": 15,
									"value": "2"
								},
								{
									"begin": 5357,
									"end": 5368,
									"name": "MUL",
									"source": 15
								},
								{
									"begin": 5351,
									"end": 5355,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 5348,
									"end": 5369,
									"name": "OR",
									"source": 15
								},
								{
									"begin": 5340,
									"end": 5369,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 5340,
									"end": 5369,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 5080,
									"end": 5375,
									"name": "SWAP3",
									"source": 15
								},
								{
									"begin": 5080,
									"end": 5375,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 5080,
									"end": 5375,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 5080,
									"end": 5375,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 5080,
									"end": 5375,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 5380,
									"end": 6775,
									"name": "tag",
									"source": 15,
									"value": "20"
								},
								{
									"begin": 5380,
									"end": 6775,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 5497,
									"end": 5534,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "116"
								},
								{
									"begin": 5530,
									"end": 5533,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 5497,
									"end": 5534,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "30"
								},
								{
									"begin": 5497,
									"end": 5534,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 5497,
									"end": 5534,
									"name": "tag",
									"source": 15,
									"value": "116"
								},
								{
									"begin": 5497,
									"end": 5534,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 5599,
									"end": 5617,
									"name": "PUSH",
									"source": 15,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5591,
									"end": 5597,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 5588,
									"end": 5618,
									"name": "GT",
									"source": 15
								},
								{
									"begin": 5585,
									"end": 5641,
									"name": "ISZERO",
									"source": 15
								},
								{
									"begin": 5585,
									"end": 5641,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "117"
								},
								{
									"begin": 5585,
									"end": 5641,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 5621,
									"end": 5639,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "118"
								},
								{
									"begin": 5621,
									"end": 5639,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "31"
								},
								{
									"begin": 5621,
									"end": 5639,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 5621,
									"end": 5639,
									"name": "tag",
									"source": 15,
									"value": "118"
								},
								{
									"begin": 5621,
									"end": 5639,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 5585,
									"end": 5641,
									"name": "tag",
									"source": 15,
									"value": "117"
								},
								{
									"begin": 5585,
									"end": 5641,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 5665,
									"end": 5703,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "119"
								},
								{
									"begin": 5697,
									"end": 5701,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 5691,
									"end": 5702,
									"name": "SLOAD",
									"source": 15
								},
								{
									"begin": 5665,
									"end": 5703,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "33"
								},
								{
									"begin": 5665,
									"end": 5703,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 5665,
									"end": 5703,
									"name": "tag",
									"source": 15,
									"value": "119"
								},
								{
									"begin": 5665,
									"end": 5703,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 5750,
									"end": 5817,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "120"
								},
								{
									"begin": 5810,
									"end": 5816,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 5802,
									"end": 5808,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 5796,
									"end": 5800,
									"name": "DUP6",
									"source": 15
								},
								{
									"begin": 5750,
									"end": 5817,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "46"
								},
								{
									"begin": 5750,
									"end": 5817,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 5750,
									"end": 5817,
									"name": "tag",
									"source": 15,
									"value": "120"
								},
								{
									"begin": 5750,
									"end": 5817,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 5844,
									"end": 5845,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 5868,
									"end": 5872,
									"name": "PUSH",
									"source": 15,
									"value": "20"
								},
								{
									"begin": 5855,
									"end": 5872,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 5855,
									"end": 5872,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 5900,
									"end": 5902,
									"name": "PUSH",
									"source": 15,
									"value": "1F"
								},
								{
									"begin": 5892,
									"end": 5898,
									"name": "DUP4",
									"source": 15
								},
								{
									"begin": 5889,
									"end": 5903,
									"name": "GT",
									"source": 15
								},
								{
									"begin": 5917,
									"end": 5918,
									"name": "PUSH",
									"source": 15,
									"value": "1"
								},
								{
									"begin": 5912,
									"end": 6530,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 5912,
									"end": 6530,
									"name": "EQ",
									"source": 15
								},
								{
									"begin": 5912,
									"end": 6530,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "122"
								},
								{
									"begin": 5912,
									"end": 6530,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 6574,
									"end": 6575,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 6591,
									"end": 6597,
									"name": "DUP5",
									"source": 15
								},
								{
									"begin": 6588,
									"end": 6665,
									"name": "ISZERO",
									"source": 15
								},
								{
									"begin": 6588,
									"end": 6665,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "123"
								},
								{
									"begin": 6588,
									"end": 6665,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 6640,
									"end": 6649,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 6635,
									"end": 6638,
									"name": "DUP8",
									"source": 15
								},
								{
									"begin": 6631,
									"end": 6650,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 6625,
									"end": 6651,
									"name": "MLOAD",
									"source": 15
								},
								{
									"begin": 6616,
									"end": 6651,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 6616,
									"end": 6651,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 6588,
									"end": 6665,
									"name": "tag",
									"source": 15,
									"value": "123"
								},
								{
									"begin": 6588,
									"end": 6665,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 6691,
									"end": 6758,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "124"
								},
								{
									"begin": 6751,
									"end": 6757,
									"name": "DUP6",
									"source": 15
								},
								{
									"begin": 6744,
									"end": 6749,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 6691,
									"end": 6758,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "49"
								},
								{
									"begin": 6691,
									"end": 6758,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 6691,
									"end": 6758,
									"name": "tag",
									"source": 15,
									"value": "124"
								},
								{
									"begin": 6691,
									"end": 6758,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 6685,
									"end": 6689,
									"name": "DUP7",
									"source": 15
								},
								{
									"begin": 6678,
									"end": 6759,
									"name": "SSTORE",
									"source": 15
								},
								{
									"begin": 6547,
									"end": 6769,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 5882,
									"end": 6769,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "121"
								},
								{
									"begin": 5882,
									"end": 6769,
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 5912,
									"end": 6530,
									"name": "tag",
									"source": 15,
									"value": "122"
								},
								{
									"begin": 5912,
									"end": 6530,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 5964,
									"end": 5968,
									"name": "PUSH",
									"source": 15,
									"value": "1F"
								},
								{
									"begin": 5960,
									"end": 5969,
									"name": "NOT",
									"source": 15
								},
								{
									"begin": 5952,
									"end": 5958,
									"name": "DUP5",
									"source": 15
								},
								{
									"begin": 5948,
									"end": 5970,
									"name": "AND",
									"source": 15
								},
								{
									"begin": 5998,
									"end": 6035,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "125"
								},
								{
									"begin": 6030,
									"end": 6034,
									"name": "DUP7",
									"source": 15
								},
								{
									"begin": 5998,
									"end": 6035,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "34"
								},
								{
									"begin": 5998,
									"end": 6035,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 5998,
									"end": 6035,
									"name": "tag",
									"source": 15,
									"value": "125"
								},
								{
									"begin": 5998,
									"end": 6035,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 6057,
									"end": 6058,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 6071,
									"end": 6279,
									"name": "tag",
									"source": 15,
									"value": "126"
								},
								{
									"begin": 6071,
									"end": 6279,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 6085,
									"end": 6092,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 6082,
									"end": 6083,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 6079,
									"end": 6093,
									"name": "LT",
									"source": 15
								},
								{
									"begin": 6071,
									"end": 6279,
									"name": "ISZERO",
									"source": 15
								},
								{
									"begin": 6071,
									"end": 6279,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "128"
								},
								{
									"begin": 6071,
									"end": 6279,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 6164,
									"end": 6173,
									"name": "DUP5",
									"source": 15
								},
								{
									"begin": 6159,
									"end": 6162,
									"name": "DUP10",
									"source": 15
								},
								{
									"begin": 6155,
									"end": 6174,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 6149,
									"end": 6175,
									"name": "MLOAD",
									"source": 15
								},
								{
									"begin": 6141,
									"end": 6147,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 6134,
									"end": 6176,
									"name": "SSTORE",
									"source": 15
								},
								{
									"begin": 6215,
									"end": 6216,
									"name": "PUSH",
									"source": 15,
									"value": "1"
								},
								{
									"begin": 6207,
									"end": 6213,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 6203,
									"end": 6217,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 6193,
									"end": 6217,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 6193,
									"end": 6217,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 6262,
									"end": 6264,
									"name": "PUSH",
									"source": 15,
									"value": "20"
								},
								{
									"begin": 6251,
									"end": 6260,
									"name": "DUP6",
									"source": 15
								},
								{
									"begin": 6247,
									"end": 6265,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 6234,
									"end": 6265,
									"name": "SWAP5",
									"source": 15
								},
								{
									"begin": 6234,
									"end": 6265,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 6108,
									"end": 6112,
									"name": "PUSH",
									"source": 15,
									"value": "20"
								},
								{
									"begin": 6105,
									"end": 6106,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 6101,
									"end": 6113,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 6096,
									"end": 6113,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 6096,
									"end": 6113,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 6071,
									"end": 6279,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "126"
								},
								{
									"begin": 6071,
									"end": 6279,
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 6071,
									"end": 6279,
									"name": "tag",
									"source": 15,
									"value": "128"
								},
								{
									"begin": 6071,
									"end": 6279,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 6307,
									"end": 6313,
									"name": "DUP7",
									"source": 15
								},
								{
									"begin": 6298,
									"end": 6305,
									"name": "DUP4",
									"source": 15
								},
								{
									"begin": 6295,
									"end": 6314,
									"name": "LT",
									"source": 15
								},
								{
									"begin": 6292,
									"end": 6471,
									"name": "ISZERO",
									"source": 15
								},
								{
									"begin": 6292,
									"end": 6471,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "129"
								},
								{
									"begin": 6292,
									"end": 6471,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 6365,
									"end": 6374,
									"name": "DUP5",
									"source": 15
								},
								{
									"begin": 6360,
									"end": 6363,
									"name": "DUP10",
									"source": 15
								},
								{
									"begin": 6356,
									"end": 6375,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 6350,
									"end": 6376,
									"name": "MLOAD",
									"source": 15
								},
								{
									"begin": 6408,
									"end": 6456,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "130"
								},
								{
									"begin": 6450,
									"end": 6454,
									"name": "PUSH",
									"source": 15,
									"value": "1F"
								},
								{
									"begin": 6442,
									"end": 6448,
									"name": "DUP10",
									"source": 15
								},
								{
									"begin": 6438,
									"end": 6455,
									"name": "AND",
									"source": 15
								},
								{
									"begin": 6427,
									"end": 6436,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 6408,
									"end": 6456,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "48"
								},
								{
									"begin": 6408,
									"end": 6456,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 6408,
									"end": 6456,
									"name": "tag",
									"source": 15,
									"value": "130"
								},
								{
									"begin": 6408,
									"end": 6456,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 6400,
									"end": 6406,
									"name": "DUP4",
									"source": 15
								},
								{
									"begin": 6393,
									"end": 6457,
									"name": "SSTORE",
									"source": 15
								},
								{
									"begin": 6315,
									"end": 6471,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 6292,
									"end": 6471,
									"name": "tag",
									"source": 15,
									"value": "129"
								},
								{
									"begin": 6292,
									"end": 6471,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 6517,
									"end": 6518,
									"name": "PUSH",
									"source": 15,
									"value": "1"
								},
								{
									"begin": 6513,
									"end": 6514,
									"name": "PUSH",
									"source": 15,
									"value": "2"
								},
								{
									"begin": 6505,
									"end": 6511,
									"name": "DUP9",
									"source": 15
								},
								{
									"begin": 6501,
									"end": 6515,
									"name": "MUL",
									"source": 15
								},
								{
									"begin": 6497,
									"end": 6519,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 6491,
									"end": 6495,
									"name": "DUP9",
									"source": 15
								},
								{
									"begin": 6484,
									"end": 6520,
									"name": "SSTORE",
									"source": 15
								},
								{
									"begin": 5919,
									"end": 6530,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 5919,
									"end": 6530,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 5919,
									"end": 6530,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 5882,
									"end": 6769,
									"name": "tag",
									"source": 15,
									"value": "121"
								},
								{
									"begin": 5882,
									"end": 6769,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 5882,
									"end": 6769,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 5472,
									"end": 6775,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 5472,
									"end": 6775,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 5472,
									"end": 6775,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 5380,
									"end": 6775,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 5380,
									"end": 6775,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 5380,
									"end": 6775,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 376,
									"end": 2275,
									"name": "tag",
									"source": 14,
									"value": "17"
								},
								{
									"begin": 376,
									"end": 2275,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 376,
									"end": 2275,
									"name": "PUSH #[$]",
									"source": 14,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 376,
									"end": 2275,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 376,
									"end": 2275,
									"name": "PUSH [$]",
									"source": 14,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 376,
									"end": 2275,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 376,
									"end": 2275,
									"name": "CODECOPY",
									"source": 14
								},
								{
									"begin": 376,
									"end": 2275,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 376,
									"end": 2275,
									"name": "RETURN",
									"source": 14
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212206e981728272f3c0e563a277c4d69e97f45313db7a6195cf9a7dc51045513422c64736f6c63430008140033",
									".code": [
										{
											"begin": 376,
											"end": 2275,
											"name": "PUSH",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 376,
											"end": 2275,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 376,
											"end": 2275,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 376,
											"end": 2275,
											"name": "CALLVALUE",
											"source": 14
										},
										{
											"begin": 376,
											"end": 2275,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 376,
											"end": 2275,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 376,
											"end": 2275,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 376,
											"end": 2275,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 376,
											"end": 2275,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 376,
											"end": 2275,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 376,
											"end": 2275,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 376,
											"end": 2275,
											"name": "tag",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 376,
											"end": 2275,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 376,
											"end": 2275,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 376,
											"end": 2275,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 376,
											"end": 2275,
											"name": "CALLDATASIZE",
											"source": 14
										},
										{
											"begin": 376,
											"end": 2275,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 376,
											"end": 2275,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 376,
											"end": 2275,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 376,
											"end": 2275,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 376,
											"end": 2275,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 376,
											"end": 2275,
											"name": "PUSH",
											"source": 14,
											"value": "E0"
										},
										{
											"begin": 376,
											"end": 2275,
											"name": "SHR",
											"source": 14
										},
										{
											"begin": 376,
											"end": 2275,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 376,
											"end": 2275,
											"name": "PUSH",
											"source": 14,
											"value": "715018A6"
										},
										{
											"begin": 376,
											"end": 2275,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 376,
											"end": 2275,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "23"
										},
										{
											"begin": 376,
											"end": 2275,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 376,
											"end": 2275,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 376,
											"end": 2275,
											"name": "PUSH",
											"source": 14,
											"value": "BD85B039"
										},
										{
											"begin": 376,
											"end": 2275,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 376,
											"end": 2275,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 376,
											"end": 2275,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 376,
											"end": 2275,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 376,
											"end": 2275,
											"name": "PUSH",
											"source": 14,
											"value": "BD85B039"
										},
										{
											"begin": 376,
											"end": 2275,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 376,
											"end": 2275,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "18"
										},
										{
											"begin": 376,
											"end": 2275,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 376,
											"end": 2275,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 376,
											"end": 2275,
											"name": "PUSH",
											"source": 14,
											"value": "E985E9C5"
										},
										{
											"begin": 376,
											"end": 2275,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 376,
											"end": 2275,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "19"
										},
										{
											"begin": 376,
											"end": 2275,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 376,
											"end": 2275,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 376,
											"end": 2275,
											"name": "PUSH",
											"source": 14,
											"value": "F242432A"
										},
										{
											"begin": 376,
											"end": 2275,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 376,
											"end": 2275,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 376,
											"end": 2275,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 376,
											"end": 2275,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 376,
											"end": 2275,
											"name": "PUSH",
											"source": 14,
											"value": "F2FDE38B"
										},
										{
											"begin": 376,
											"end": 2275,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 376,
											"end": 2275,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "21"
										},
										{
											"begin": 376,
											"end": 2275,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 376,
											"end": 2275,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 376,
											"end": 2275,
											"name": "PUSH",
											"source": 14,
											"value": "F5298ACA"
										},
										{
											"begin": 376,
											"end": 2275,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 376,
											"end": 2275,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "22"
										},
										{
											"begin": 376,
											"end": 2275,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 376,
											"end": 2275,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 376,
											"end": 2275,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 376,
											"end": 2275,
											"name": "tag",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 376,
											"end": 2275,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 376,
											"end": 2275,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 376,
											"end": 2275,
											"name": "PUSH",
											"source": 14,
											"value": "715018A6"
										},
										{
											"begin": 376,
											"end": 2275,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 376,
											"end": 2275,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "13"
										},
										{
											"begin": 376,
											"end": 2275,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 376,
											"end": 2275,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 376,
											"end": 2275,
											"name": "PUSH",
											"source": 14,
											"value": "731133E9"
										},
										{
											"begin": 376,
											"end": 2275,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 376,
											"end": 2275,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "14"
										},
										{
											"begin": 376,
											"end": 2275,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 376,
											"end": 2275,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 376,
											"end": 2275,
											"name": "PUSH",
											"source": 14,
											"value": "8DA5CB5B"
										},
										{
											"begin": 376,
											"end": 2275,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 376,
											"end": 2275,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "15"
										},
										{
											"begin": 376,
											"end": 2275,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 376,
											"end": 2275,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 376,
											"end": 2275,
											"name": "PUSH",
											"source": 14,
											"value": "A168D873"
										},
										{
											"begin": 376,
											"end": 2275,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 376,
											"end": 2275,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "16"
										},
										{
											"begin": 376,
											"end": 2275,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 376,
											"end": 2275,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 376,
											"end": 2275,
											"name": "PUSH",
											"source": 14,
											"value": "A22CB465"
										},
										{
											"begin": 376,
											"end": 2275,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 376,
											"end": 2275,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "17"
										},
										{
											"begin": 376,
											"end": 2275,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 376,
											"end": 2275,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 376,
											"end": 2275,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 376,
											"end": 2275,
											"name": "tag",
											"source": 14,
											"value": "23"
										},
										{
											"begin": 376,
											"end": 2275,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 376,
											"end": 2275,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 376,
											"end": 2275,
											"name": "PUSH",
											"source": 14,
											"value": "2EB2C2D6"
										},
										{
											"begin": 376,
											"end": 2275,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 376,
											"end": 2275,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "25"
										},
										{
											"begin": 376,
											"end": 2275,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 376,
											"end": 2275,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 376,
											"end": 2275,
											"name": "PUSH",
											"source": 14,
											"value": "2EB2C2D6"
										},
										{
											"begin": 376,
											"end": 2275,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 376,
											"end": 2275,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "8"
										},
										{
											"begin": 376,
											"end": 2275,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 376,
											"end": 2275,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 376,
											"end": 2275,
											"name": "PUSH",
											"source": 14,
											"value": "4E1273F4"
										},
										{
											"begin": 376,
											"end": 2275,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 376,
											"end": 2275,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "9"
										},
										{
											"begin": 376,
											"end": 2275,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 376,
											"end": 2275,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 376,
											"end": 2275,
											"name": "PUSH",
											"source": 14,
											"value": "4F558E79"
										},
										{
											"begin": 376,
											"end": 2275,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 376,
											"end": 2275,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "10"
										},
										{
											"begin": 376,
											"end": 2275,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 376,
											"end": 2275,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 376,
											"end": 2275,
											"name": "PUSH",
											"source": 14,
											"value": "6B20C454"
										},
										{
											"begin": 376,
											"end": 2275,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 376,
											"end": 2275,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "11"
										},
										{
											"begin": 376,
											"end": 2275,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 376,
											"end": 2275,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 376,
											"end": 2275,
											"name": "PUSH",
											"source": 14,
											"value": "711953EF"
										},
										{
											"begin": 376,
											"end": 2275,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 376,
											"end": 2275,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "12"
										},
										{
											"begin": 376,
											"end": 2275,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 376,
											"end": 2275,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 376,
											"end": 2275,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 376,
											"end": 2275,
											"name": "tag",
											"source": 14,
											"value": "25"
										},
										{
											"begin": 376,
											"end": 2275,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 376,
											"end": 2275,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 376,
											"end": 2275,
											"name": "PUSH",
											"source": 14,
											"value": "FDD58E"
										},
										{
											"begin": 376,
											"end": 2275,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 376,
											"end": 2275,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "3"
										},
										{
											"begin": 376,
											"end": 2275,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 376,
											"end": 2275,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 376,
											"end": 2275,
											"name": "PUSH",
											"source": 14,
											"value": "1FFC9A7"
										},
										{
											"begin": 376,
											"end": 2275,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 376,
											"end": 2275,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 376,
											"end": 2275,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 376,
											"end": 2275,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 376,
											"end": 2275,
											"name": "PUSH",
											"source": 14,
											"value": "E89341C"
										},
										{
											"begin": 376,
											"end": 2275,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 376,
											"end": 2275,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "5"
										},
										{
											"begin": 376,
											"end": 2275,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 376,
											"end": 2275,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 376,
											"end": 2275,
											"name": "PUSH",
											"source": 14,
											"value": "18160DDD"
										},
										{
											"begin": 376,
											"end": 2275,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 376,
											"end": 2275,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "6"
										},
										{
											"begin": 376,
											"end": 2275,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 376,
											"end": 2275,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 376,
											"end": 2275,
											"name": "PUSH",
											"source": 14,
											"value": "1F7FDFFA"
										},
										{
											"begin": 376,
											"end": 2275,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 376,
											"end": 2275,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "7"
										},
										{
											"begin": 376,
											"end": 2275,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 376,
											"end": 2275,
											"name": "tag",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 376,
											"end": 2275,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 376,
											"end": 2275,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 376,
											"end": 2275,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 376,
											"end": 2275,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 2247,
											"end": 2379,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "tag",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 2247,
											"end": 2379,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "tag",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 2247,
											"end": 2379,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "tag",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 1380,
											"end": 1685,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "tag",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 1380,
											"end": 1685,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "tag",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 1380,
											"end": 1685,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "tag",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2084,
											"end": 2187,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "tag",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 2084,
											"end": 2187,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "tag",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 2084,
											"end": 2187,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "tag",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1127,
											"end": 1227,
											"name": "tag",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 1127,
											"end": 1227,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1127,
											"end": 1227,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 1127,
											"end": 1227,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "45"
										},
										{
											"begin": 1127,
											"end": 1227,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1127,
											"end": 1227,
											"name": "tag",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 1127,
											"end": 1227,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1127,
											"end": 1227,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1127,
											"end": 1227,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1127,
											"end": 1227,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "46"
										},
										{
											"begin": 1127,
											"end": 1227,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1127,
											"end": 1227,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1127,
											"end": 1227,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "31"
										},
										{
											"begin": 1127,
											"end": 1227,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1127,
											"end": 1227,
											"name": "tag",
											"source": 6,
											"value": "46"
										},
										{
											"begin": 1127,
											"end": 1227,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1127,
											"end": 1227,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1127,
											"end": 1227,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1127,
											"end": 1227,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1127,
											"end": 1227,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1127,
											"end": 1227,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1127,
											"end": 1227,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1127,
											"end": 1227,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 886,
											"end": 1194,
											"name": "tag",
											"source": 14,
											"value": "7"
										},
										{
											"begin": 886,
											"end": 1194,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 886,
											"end": 1194,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "47"
										},
										{
											"begin": 886,
											"end": 1194,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 886,
											"end": 1194,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 886,
											"end": 1194,
											"name": "CALLDATASIZE",
											"source": 14
										},
										{
											"begin": 886,
											"end": 1194,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 886,
											"end": 1194,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 886,
											"end": 1194,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 886,
											"end": 1194,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 886,
											"end": 1194,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "48"
										},
										{
											"begin": 886,
											"end": 1194,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 886,
											"end": 1194,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 886,
											"end": 1194,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "49"
										},
										{
											"begin": 886,
											"end": 1194,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 886,
											"end": 1194,
											"name": "tag",
											"source": 14,
											"value": "48"
										},
										{
											"begin": 886,
											"end": 1194,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 886,
											"end": 1194,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "50"
										},
										{
											"begin": 886,
											"end": 1194,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 886,
											"end": 1194,
											"name": "tag",
											"source": 14,
											"value": "47"
										},
										{
											"begin": 886,
											"end": 1194,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 886,
											"end": 1194,
											"name": "STOP",
											"source": 14
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 4014,
											"end": 4443,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "tag",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 4014,
											"end": 4443,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "tag",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 2536,
											"end": 3088,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "tag",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 2536,
											"end": 3088,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "tag",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2536,
											"end": 3088,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "tag",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1320,
											"end": 1426,
											"name": "tag",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 1320,
											"end": 1426,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1320,
											"end": 1426,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "61"
										},
										{
											"begin": 1320,
											"end": 1426,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1320,
											"end": 1426,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1320,
											"end": 1426,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 1320,
											"end": 1426,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1320,
											"end": 1426,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1320,
											"end": 1426,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1320,
											"end": 1426,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1320,
											"end": 1426,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "62"
										},
										{
											"begin": 1320,
											"end": 1426,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1320,
											"end": 1426,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1320,
											"end": 1426,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1320,
											"end": 1426,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1320,
											"end": 1426,
											"name": "tag",
											"source": 6,
											"value": "62"
										},
										{
											"begin": 1320,
											"end": 1426,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1320,
											"end": 1426,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "63"
										},
										{
											"begin": 1320,
											"end": 1426,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1320,
											"end": 1426,
											"name": "tag",
											"source": 6,
											"value": "61"
										},
										{
											"begin": 1320,
											"end": 1426,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1320,
											"end": 1426,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1320,
											"end": 1426,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1320,
											"end": 1426,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 1320,
											"end": 1426,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1320,
											"end": 1426,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1320,
											"end": 1426,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "37"
										},
										{
											"begin": 1320,
											"end": 1426,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1320,
											"end": 1426,
											"name": "tag",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 1320,
											"end": 1426,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1320,
											"end": 1426,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1320,
											"end": 1426,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1320,
											"end": 1426,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1320,
											"end": 1426,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1320,
											"end": 1426,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1320,
											"end": 1426,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1320,
											"end": 1426,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 681,
											"end": 994,
											"name": "tag",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 681,
											"end": 994,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 681,
											"end": 994,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "65"
										},
										{
											"begin": 681,
											"end": 994,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 681,
											"end": 994,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 681,
											"end": 994,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 681,
											"end": 994,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 681,
											"end": 994,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 681,
											"end": 994,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 681,
											"end": 994,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 681,
											"end": 994,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "66"
										},
										{
											"begin": 681,
											"end": 994,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 681,
											"end": 994,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 681,
											"end": 994,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "67"
										},
										{
											"begin": 681,
											"end": 994,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 681,
											"end": 994,
											"name": "tag",
											"source": 5,
											"value": "66"
										},
										{
											"begin": 681,
											"end": 994,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 681,
											"end": 994,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "68"
										},
										{
											"begin": 681,
											"end": 994,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 681,
											"end": 994,
											"name": "tag",
											"source": 5,
											"value": "65"
										},
										{
											"begin": 681,
											"end": 994,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 681,
											"end": 994,
											"name": "STOP",
											"source": 5
										},
										{
											"begin": 1906,
											"end": 2069,
											"name": "tag",
											"source": 14,
											"value": "12"
										},
										{
											"begin": 1906,
											"end": 2069,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1906,
											"end": 2069,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "69"
										},
										{
											"begin": 1906,
											"end": 2069,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 1906,
											"end": 2069,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1906,
											"end": 2069,
											"name": "CALLDATASIZE",
											"source": 14
										},
										{
											"begin": 1906,
											"end": 2069,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 1906,
											"end": 2069,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1906,
											"end": 2069,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1906,
											"end": 2069,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1906,
											"end": 2069,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "70"
										},
										{
											"begin": 1906,
											"end": 2069,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1906,
											"end": 2069,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1906,
											"end": 2069,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "71"
										},
										{
											"begin": 1906,
											"end": 2069,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1906,
											"end": 2069,
											"name": "tag",
											"source": 14,
											"value": "70"
										},
										{
											"begin": 1906,
											"end": 2069,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1906,
											"end": 2069,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "72"
										},
										{
											"begin": 1906,
											"end": 2069,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1906,
											"end": 2069,
											"name": "tag",
											"source": 14,
											"value": "69"
										},
										{
											"begin": 1906,
											"end": 2069,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1906,
											"end": 2069,
											"name": "STOP",
											"source": 14
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 596,
											"end": 882,
											"name": "tag",
											"source": 14,
											"value": "14"
										},
										{
											"begin": 596,
											"end": 882,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 596,
											"end": 882,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "75"
										},
										{
											"begin": 596,
											"end": 882,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 596,
											"end": 882,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 596,
											"end": 882,
											"name": "CALLDATASIZE",
											"source": 14
										},
										{
											"begin": 596,
											"end": 882,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 596,
											"end": 882,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 596,
											"end": 882,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 596,
											"end": 882,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 596,
											"end": 882,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "76"
										},
										{
											"begin": 596,
											"end": 882,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 596,
											"end": 882,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 596,
											"end": 882,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "77"
										},
										{
											"begin": 596,
											"end": 882,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 596,
											"end": 882,
											"name": "tag",
											"source": 14,
											"value": "76"
										},
										{
											"begin": 596,
											"end": 882,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 596,
											"end": 882,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "78"
										},
										{
											"begin": 596,
											"end": 882,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 596,
											"end": 882,
											"name": "tag",
											"source": 14,
											"value": "75"
										},
										{
											"begin": 596,
											"end": 882,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 596,
											"end": 882,
											"name": "STOP",
											"source": 14
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 451,
											"end": 477,
											"name": "tag",
											"source": 14,
											"value": "16"
										},
										{
											"begin": 451,
											"end": 477,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 451,
											"end": 477,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "83"
										},
										{
											"begin": 451,
											"end": 477,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "84"
										},
										{
											"begin": 451,
											"end": 477,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 451,
											"end": 477,
											"name": "tag",
											"source": 14,
											"value": "83"
										},
										{
											"begin": 451,
											"end": 477,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 451,
											"end": 477,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 451,
											"end": 477,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 451,
											"end": 477,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "85"
										},
										{
											"begin": 451,
											"end": 477,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 451,
											"end": 477,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 451,
											"end": 477,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "82"
										},
										{
											"begin": 451,
											"end": 477,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 451,
											"end": 477,
											"name": "tag",
											"source": 14,
											"value": "85"
										},
										{
											"begin": 451,
											"end": 477,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 451,
											"end": 477,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 451,
											"end": 477,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 451,
											"end": 477,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 451,
											"end": 477,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 451,
											"end": 477,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 451,
											"end": 477,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 451,
											"end": 477,
											"name": "RETURN",
											"source": 14
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "tag",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 3156,
											"end": 3300,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "tag",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 3156,
											"end": 3300,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "tag",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 959,
											"end": 1070,
											"name": "tag",
											"source": 6,
											"value": "18"
										},
										{
											"begin": 959,
											"end": 1070,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 959,
											"end": 1070,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "90"
										},
										{
											"begin": 959,
											"end": 1070,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 959,
											"end": 1070,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 959,
											"end": 1070,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 959,
											"end": 1070,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 959,
											"end": 1070,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 959,
											"end": 1070,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 959,
											"end": 1070,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 959,
											"end": 1070,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "91"
										},
										{
											"begin": 959,
											"end": 1070,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 959,
											"end": 1070,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 959,
											"end": 1070,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 959,
											"end": 1070,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 959,
											"end": 1070,
											"name": "tag",
											"source": 6,
											"value": "91"
										},
										{
											"begin": 959,
											"end": 1070,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 959,
											"end": 1070,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "92"
										},
										{
											"begin": 959,
											"end": 1070,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 959,
											"end": 1070,
											"name": "tag",
											"source": 6,
											"value": "90"
										},
										{
											"begin": 959,
											"end": 1070,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 959,
											"end": 1070,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 959,
											"end": 1070,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 959,
											"end": 1070,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "93"
										},
										{
											"begin": 959,
											"end": 1070,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 959,
											"end": 1070,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 959,
											"end": 1070,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "31"
										},
										{
											"begin": 959,
											"end": 1070,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 959,
											"end": 1070,
											"name": "tag",
											"source": 6,
											"value": "93"
										},
										{
											"begin": 959,
											"end": 1070,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 959,
											"end": 1070,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 959,
											"end": 1070,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 959,
											"end": 1070,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 959,
											"end": 1070,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 959,
											"end": 1070,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 959,
											"end": 1070,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 959,
											"end": 1070,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "tag",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 3367,
											"end": 3524,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "tag",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 3367,
											"end": 3524,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "tag",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 3367,
											"end": 3524,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "tag",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "tag",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 3591,
											"end": 3942,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "tag",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 3591,
											"end": 3942,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "tag",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 394,
											"end": 675,
											"name": "tag",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 394,
											"end": 675,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 394,
											"end": 675,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "106"
										},
										{
											"begin": 394,
											"end": 675,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 394,
											"end": 675,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 394,
											"end": 675,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 394,
											"end": 675,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 394,
											"end": 675,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 394,
											"end": 675,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 394,
											"end": 675,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 394,
											"end": 675,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "107"
										},
										{
											"begin": 394,
											"end": 675,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 394,
											"end": 675,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 394,
											"end": 675,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "108"
										},
										{
											"begin": 394,
											"end": 675,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 394,
											"end": 675,
											"name": "tag",
											"source": 5,
											"value": "107"
										},
										{
											"begin": 394,
											"end": 675,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 394,
											"end": 675,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "109"
										},
										{
											"begin": 394,
											"end": 675,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 394,
											"end": 675,
											"name": "tag",
											"source": 5,
											"value": "106"
										},
										{
											"begin": 394,
											"end": 675,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 394,
											"end": 675,
											"name": "STOP",
											"source": 5
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "tag",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2324,
											"end": 2331,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2350,
											"end": 2359,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2350,
											"end": 2363,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2360,
											"end": 2362,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2350,
											"end": 2363,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2350,
											"end": 2363,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2350,
											"end": 2363,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2350,
											"end": 2363,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2350,
											"end": 2363,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2350,
											"end": 2363,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2350,
											"end": 2363,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2350,
											"end": 2363,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2350,
											"end": 2363,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2350,
											"end": 2363,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2350,
											"end": 2363,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2350,
											"end": 2372,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2364,
											"end": 2371,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2350,
											"end": 2372,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2350,
											"end": 2372,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2350,
											"end": 2372,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2350,
											"end": 2372,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2350,
											"end": 2372,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2350,
											"end": 2372,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2350,
											"end": 2372,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2350,
											"end": 2372,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2350,
											"end": 2372,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2350,
											"end": 2372,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2350,
											"end": 2372,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2350,
											"end": 2372,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2350,
											"end": 2372,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2350,
											"end": 2372,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2350,
											"end": 2372,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2350,
											"end": 2372,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2343,
											"end": 2372,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2343,
											"end": 2372,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2247,
											"end": 2379,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2247,
											"end": 2379,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "tag",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 1486,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1532,
											"end": 1558,
											"name": "PUSH",
											"source": 2,
											"value": "D9B67A2600000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1517,
											"end": 1558,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1517,
											"end": 1558,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1517,
											"end": 1558,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1517,
											"end": 1528,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1517,
											"end": 1558,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1517,
											"end": 1558,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1517,
											"end": 1558,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1517,
											"end": 1558,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1517,
											"end": 1626,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1517,
											"end": 1626,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 1517,
											"end": 1626,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1517,
											"end": 1626,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1589,
											"end": 1626,
											"name": "PUSH",
											"source": 2,
											"value": "E89341C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1574,
											"end": 1626,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1574,
											"end": 1626,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1574,
											"end": 1626,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1574,
											"end": 1585,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1574,
											"end": 1626,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1574,
											"end": 1626,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1574,
											"end": 1626,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1574,
											"end": 1626,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1517,
											"end": 1626,
											"name": "tag",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 1517,
											"end": 1626,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1517,
											"end": 1678,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1517,
											"end": 1678,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "113"
										},
										{
											"begin": 1517,
											"end": 1678,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1517,
											"end": 1678,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1642,
											"end": 1678,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "114"
										},
										{
											"begin": 1666,
											"end": 1677,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1642,
											"end": 1665,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "115"
										},
										{
											"begin": 1642,
											"end": 1678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1642,
											"end": 1678,
											"name": "tag",
											"source": 2,
											"value": "114"
										},
										{
											"begin": 1642,
											"end": 1678,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1517,
											"end": 1678,
											"name": "tag",
											"source": 2,
											"value": "113"
										},
										{
											"begin": 1517,
											"end": 1678,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1498,
											"end": 1678,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1498,
											"end": 1678,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1380,
											"end": 1685,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1380,
											"end": 1685,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "tag",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2157,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2176,
											"end": 2180,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 2169,
											"end": 2180,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "tag",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 2169,
											"end": 2180,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "tag",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "120"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "121"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "120"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "tag",
											"source": 2,
											"value": "121"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "tag",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "tag",
											"source": 2,
											"value": "120"
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2169,
											"end": 2180,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2084,
											"end": 2187,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2084,
											"end": 2187,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1127,
											"end": 1227,
											"name": "tag",
											"source": 6,
											"value": "45"
										},
										{
											"begin": 1127,
											"end": 1227,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1179,
											"end": 1186,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1205,
											"end": 1220,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 1205,
											"end": 1220,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1198,
											"end": 1220,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1198,
											"end": 1220,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1127,
											"end": 1227,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1127,
											"end": 1227,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 886,
											"end": 1194,
											"name": "tag",
											"source": 14,
											"value": "50"
										},
										{
											"begin": 886,
											"end": 1194,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1049,
											"end": 1050,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1026,
											"end": 1051,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1026,
											"end": 1051,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 1026,
											"end": 1037,
											"name": "PUSH",
											"source": 14,
											"value": "6"
										},
										{
											"begin": 1026,
											"end": 1037,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1026,
											"end": 1037,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1026,
											"end": 1037,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 1026,
											"end": 1037,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1026,
											"end": 1037,
											"name": "PUSH",
											"source": 14,
											"value": "100"
										},
										{
											"begin": 1026,
											"end": 1037,
											"name": "EXP",
											"source": 14
										},
										{
											"begin": 1026,
											"end": 1037,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1026,
											"end": 1037,
											"name": "DIV",
											"source": 14
										},
										{
											"begin": 1026,
											"end": 1037,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1026,
											"end": 1037,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 1026,
											"end": 1051,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1026,
											"end": 1051,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 1026,
											"end": 1051,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 1018,
											"end": 1077,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "125"
										},
										{
											"begin": 1018,
											"end": 1077,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 1018,
											"end": 1077,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 1018,
											"end": 1077,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 1018,
											"end": 1077,
											"name": "PUSH",
											"source": 14,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1018,
											"end": 1077,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1018,
											"end": 1077,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 1018,
											"end": 1077,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 1018,
											"end": 1077,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1018,
											"end": 1077,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "126"
										},
										{
											"begin": 1018,
											"end": 1077,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1018,
											"end": 1077,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "127"
										},
										{
											"begin": 1018,
											"end": 1077,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1018,
											"end": 1077,
											"name": "tag",
											"source": 14,
											"value": "126"
										},
										{
											"begin": 1018,
											"end": 1077,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1018,
											"end": 1077,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 1018,
											"end": 1077,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 1018,
											"end": 1077,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1018,
											"end": 1077,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1018,
											"end": 1077,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 1018,
											"end": 1077,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1018,
											"end": 1077,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 1018,
											"end": 1077,
											"name": "tag",
											"source": 14,
											"value": "125"
										},
										{
											"begin": 1018,
											"end": 1077,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1105,
											"end": 1116,
											"name": "PUSH",
											"source": 14,
											"value": "6"
										},
										{
											"begin": 1105,
											"end": 1116,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1105,
											"end": 1116,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1105,
											"end": 1116,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 1105,
											"end": 1116,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1105,
											"end": 1116,
											"name": "PUSH",
											"source": 14,
											"value": "100"
										},
										{
											"begin": 1105,
											"end": 1116,
											"name": "EXP",
											"source": 14
										},
										{
											"begin": 1105,
											"end": 1116,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1105,
											"end": 1116,
											"name": "DIV",
											"source": 14
										},
										{
											"begin": 1105,
											"end": 1116,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1105,
											"end": 1116,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 1091,
											"end": 1116,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1091,
											"end": 1116,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 1091,
											"end": 1101,
											"name": "CALLER",
											"source": 14
										},
										{
											"begin": 1091,
											"end": 1116,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1091,
											"end": 1116,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 1091,
											"end": 1116,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 1083,
											"end": 1149,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "128"
										},
										{
											"begin": 1083,
											"end": 1149,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 1083,
											"end": 1149,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 1083,
											"end": 1149,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 1083,
											"end": 1149,
											"name": "PUSH",
											"source": 14,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1083,
											"end": 1149,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1083,
											"end": 1149,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 1083,
											"end": 1149,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 1083,
											"end": 1149,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1083,
											"end": 1149,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "129"
										},
										{
											"begin": 1083,
											"end": 1149,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1083,
											"end": 1149,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "130"
										},
										{
											"begin": 1083,
											"end": 1149,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1083,
											"end": 1149,
											"name": "tag",
											"source": 14,
											"value": "129"
										},
										{
											"begin": 1083,
											"end": 1149,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1083,
											"end": 1149,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 1083,
											"end": 1149,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 1083,
											"end": 1149,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1083,
											"end": 1149,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1083,
											"end": 1149,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 1083,
											"end": 1149,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1083,
											"end": 1149,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 1083,
											"end": 1149,
											"name": "tag",
											"source": 14,
											"value": "128"
										},
										{
											"begin": 1083,
											"end": 1149,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1155,
											"end": 1189,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "131"
										},
										{
											"begin": 1166,
											"end": 1168,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 1170,
											"end": 1173,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 1175,
											"end": 1182,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 1184,
											"end": 1188,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 1155,
											"end": 1165,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "132"
										},
										{
											"begin": 1155,
											"end": 1189,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1155,
											"end": 1189,
											"name": "tag",
											"source": 14,
											"value": "131"
										},
										{
											"begin": 1155,
											"end": 1189,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 886,
											"end": 1194,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 886,
											"end": 1194,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 886,
											"end": 1194,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 886,
											"end": 1194,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 886,
											"end": 1194,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "tag",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4208,
											"end": 4222,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4225,
											"end": 4237,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "134"
										},
										{
											"begin": 4225,
											"end": 4235,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "135"
										},
										{
											"begin": 4225,
											"end": 4237,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4225,
											"end": 4237,
											"name": "tag",
											"source": 2,
											"value": "134"
										},
										{
											"begin": 4225,
											"end": 4237,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4208,
											"end": 4237,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4208,
											"end": 4237,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4259,
											"end": 4265,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4251,
											"end": 4265,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4251,
											"end": 4265,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4251,
											"end": 4255,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 4251,
											"end": 4265,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4251,
											"end": 4265,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4251,
											"end": 4265,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 4251,
											"end": 4265,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4251,
											"end": 4300,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4251,
											"end": 4300,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4251,
											"end": 4300,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "136"
										},
										{
											"begin": 4251,
											"end": 4300,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4251,
											"end": 4300,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4270,
											"end": 4300,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "137"
										},
										{
											"begin": 4287,
											"end": 4291,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4299,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4270,
											"end": 4286,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 4270,
											"end": 4300,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4270,
											"end": 4300,
											"name": "tag",
											"source": 2,
											"value": "137"
										},
										{
											"begin": 4270,
											"end": 4300,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4269,
											"end": 4300,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4251,
											"end": 4300,
											"name": "tag",
											"source": 2,
											"value": "136"
										},
										{
											"begin": 4251,
											"end": 4300,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4247,
											"end": 4376,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4247,
											"end": 4376,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "138"
										},
										{
											"begin": 4247,
											"end": 4376,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4352,
											"end": 4358,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4360,
											"end": 4364,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 4323,
											"end": 4365,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4323,
											"end": 4365,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4323,
											"end": 4365,
											"name": "PUSH",
											"source": 2,
											"value": "E237D92200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4323,
											"end": 4365,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4323,
											"end": 4365,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4323,
											"end": 4365,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4323,
											"end": 4365,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4323,
											"end": 4365,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "139"
										},
										{
											"begin": 4323,
											"end": 4365,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4323,
											"end": 4365,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4323,
											"end": 4365,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4323,
											"end": 4365,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "140"
										},
										{
											"begin": 4323,
											"end": 4365,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4323,
											"end": 4365,
											"name": "tag",
											"source": 2,
											"value": "139"
										},
										{
											"begin": 4323,
											"end": 4365,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4323,
											"end": 4365,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4323,
											"end": 4365,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4323,
											"end": 4365,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4323,
											"end": 4365,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4323,
											"end": 4365,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4323,
											"end": 4365,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4323,
											"end": 4365,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 4247,
											"end": 4376,
											"name": "tag",
											"source": 2,
											"value": "138"
										},
										{
											"begin": 4247,
											"end": 4376,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4385,
											"end": 4436,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "141"
										},
										{
											"begin": 4408,
											"end": 4412,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 4414,
											"end": 4416,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 4418,
											"end": 4421,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 4423,
											"end": 4429,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 4431,
											"end": 4435,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 4385,
											"end": 4407,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "142"
										},
										{
											"begin": 4385,
											"end": 4436,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4385,
											"end": 4436,
											"name": "tag",
											"source": 2,
											"value": "141"
										},
										{
											"begin": 4385,
											"end": 4436,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4198,
											"end": 4443,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4014,
											"end": 4443,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4014,
											"end": 4443,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "tag",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2660,
											"end": 2676,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2711,
											"end": 2714,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2711,
											"end": 2721,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2692,
											"end": 2700,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2692,
											"end": 2707,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2692,
											"end": 2721,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2809,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "144"
										},
										{
											"begin": 2688,
											"end": 2809,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2770,
											"end": 2773,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2770,
											"end": 2780,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2782,
											"end": 2790,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2782,
											"end": 2797,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2744,
											"end": 2798,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2744,
											"end": 2798,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2744,
											"end": 2798,
											"name": "PUSH",
											"source": 2,
											"value": "5B05999100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2744,
											"end": 2798,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2744,
											"end": 2798,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2744,
											"end": 2798,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2744,
											"end": 2798,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2744,
											"end": 2798,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "145"
										},
										{
											"begin": 2744,
											"end": 2798,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2744,
											"end": 2798,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2744,
											"end": 2798,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2744,
											"end": 2798,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "146"
										},
										{
											"begin": 2744,
											"end": 2798,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2744,
											"end": 2798,
											"name": "tag",
											"source": 2,
											"value": "145"
										},
										{
											"begin": 2744,
											"end": 2798,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2744,
											"end": 2798,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2744,
											"end": 2798,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2744,
											"end": 2798,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2744,
											"end": 2798,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2744,
											"end": 2798,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2744,
											"end": 2798,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2744,
											"end": 2798,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2809,
											"name": "tag",
											"source": 2,
											"value": "144"
										},
										{
											"begin": 2688,
											"end": 2809,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2819,
											"end": 2849,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2866,
											"end": 2874,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2866,
											"end": 2881,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "147"
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "148"
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "149"
										},
										{
											"begin": 2852,
											"end": 2882,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "tag",
											"source": 2,
											"value": "148"
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "tag",
											"source": 2,
											"value": "147"
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "150"
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "CALLDATACOPY",
											"source": 2
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "tag",
											"source": 2,
											"value": "150"
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2852,
											"end": 2882,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2819,
											"end": 2882,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2819,
											"end": 2882,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2898,
											"end": 2907,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2893,
											"end": 3051,
											"name": "tag",
											"source": 2,
											"value": "151"
										},
										{
											"begin": 2893,
											"end": 3051,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2917,
											"end": 2925,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2917,
											"end": 2932,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2913,
											"end": 2914,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2913,
											"end": 2932,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2893,
											"end": 3051,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2893,
											"end": 3051,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "152"
										},
										{
											"begin": 2893,
											"end": 3051,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2972,
											"end": 3040,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "154"
										},
										{
											"begin": 2982,
											"end": 3012,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "155"
										},
										{
											"begin": 3010,
											"end": 3011,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2982,
											"end": 2990,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 2982,
											"end": 3009,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "156"
										},
										{
											"begin": 2982,
											"end": 3009,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2982,
											"end": 3012,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2982,
											"end": 3012,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2982,
											"end": 3012,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2982,
											"end": 3012,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2982,
											"end": 3012,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2982,
											"end": 3012,
											"name": "tag",
											"source": 2,
											"value": "155"
										},
										{
											"begin": 2982,
											"end": 3012,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3014,
											"end": 3039,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "157"
										},
										{
											"begin": 3037,
											"end": 3038,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3014,
											"end": 3017,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 3014,
											"end": 3036,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "158"
										},
										{
											"begin": 3014,
											"end": 3036,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3014,
											"end": 3039,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3014,
											"end": 3039,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3014,
											"end": 3039,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3014,
											"end": 3039,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3014,
											"end": 3039,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3014,
											"end": 3039,
											"name": "tag",
											"source": 2,
											"value": "157"
										},
										{
											"begin": 3014,
											"end": 3039,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2972,
											"end": 2981,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 2972,
											"end": 3040,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2972,
											"end": 3040,
											"name": "tag",
											"source": 2,
											"value": "154"
										},
										{
											"begin": 2972,
											"end": 3040,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2953,
											"end": 2966,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2967,
											"end": 2968,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2953,
											"end": 2969,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2953,
											"end": 2969,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2953,
											"end": 2969,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2953,
											"end": 2969,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2953,
											"end": 2969,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "159"
										},
										{
											"begin": 2953,
											"end": 2969,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2953,
											"end": 2969,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "160"
										},
										{
											"begin": 2953,
											"end": 2969,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "161"
										},
										{
											"begin": 2953,
											"end": 2969,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2953,
											"end": 2969,
											"name": "tag",
											"source": 2,
											"value": "160"
										},
										{
											"begin": 2953,
											"end": 2969,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2953,
											"end": 2969,
											"name": "tag",
											"source": 2,
											"value": "159"
										},
										{
											"begin": 2953,
											"end": 2969,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2953,
											"end": 2969,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2953,
											"end": 2969,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2953,
											"end": 2969,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2953,
											"end": 2969,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2953,
											"end": 2969,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2953,
											"end": 3040,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2953,
											"end": 3040,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2953,
											"end": 3040,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2953,
											"end": 3040,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2953,
											"end": 3040,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2934,
											"end": 2937,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2934,
											"end": 2937,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "162"
										},
										{
											"begin": 2934,
											"end": 2937,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2934,
											"end": 2937,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "163"
										},
										{
											"begin": 2934,
											"end": 2937,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2934,
											"end": 2937,
											"name": "tag",
											"source": 2,
											"value": "162"
										},
										{
											"begin": 2934,
											"end": 2937,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2934,
											"end": 2937,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2934,
											"end": 2937,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2893,
											"end": 3051,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "151"
										},
										{
											"begin": 2893,
											"end": 3051,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2893,
											"end": 3051,
											"name": "tag",
											"source": 2,
											"value": "152"
										},
										{
											"begin": 2893,
											"end": 3051,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2893,
											"end": 3051,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3068,
											"end": 3081,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3061,
											"end": 3081,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3061,
											"end": 3081,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3061,
											"end": 3081,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2536,
											"end": 3088,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2536,
											"end": 3088,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1320,
											"end": 1426,
											"name": "tag",
											"source": 6,
											"value": "63"
										},
										{
											"begin": 1320,
											"end": 1426,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1377,
											"end": 1381,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1418,
											"end": 1419,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1400,
											"end": 1415,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "165"
										},
										{
											"begin": 1412,
											"end": 1414,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1400,
											"end": 1411,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "92"
										},
										{
											"begin": 1400,
											"end": 1415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1400,
											"end": 1415,
											"name": "tag",
											"source": 6,
											"value": "165"
										},
										{
											"begin": 1400,
											"end": 1415,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1400,
											"end": 1419,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 1393,
											"end": 1419,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1393,
											"end": 1419,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1320,
											"end": 1426,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1320,
											"end": 1426,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1320,
											"end": 1426,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1320,
											"end": 1426,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 681,
											"end": 994,
											"name": "tag",
											"source": 5,
											"value": "68"
										},
										{
											"begin": 681,
											"end": 994,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 804,
											"end": 816,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "167"
										},
										{
											"begin": 804,
											"end": 814,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "135"
										},
										{
											"begin": 804,
											"end": 816,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 804,
											"end": 816,
											"name": "tag",
											"source": 5,
											"value": "167"
										},
										{
											"begin": 804,
											"end": 816,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 793,
											"end": 816,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 793,
											"end": 816,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 793,
											"end": 800,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 793,
											"end": 816,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 793,
											"end": 816,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 793,
											"end": 816,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 793,
											"end": 816,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 793,
											"end": 860,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 793,
											"end": 860,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 793,
											"end": 860,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "168"
										},
										{
											"begin": 793,
											"end": 860,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 793,
											"end": 860,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 821,
											"end": 860,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "169"
										},
										{
											"begin": 838,
											"end": 845,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 847,
											"end": 859,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "170"
										},
										{
											"begin": 847,
											"end": 857,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "135"
										},
										{
											"begin": 847,
											"end": 859,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 847,
											"end": 859,
											"name": "tag",
											"source": 5,
											"value": "170"
										},
										{
											"begin": 847,
											"end": 859,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 821,
											"end": 837,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "97"
										},
										{
											"begin": 821,
											"end": 860,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 821,
											"end": 860,
											"name": "tag",
											"source": 5,
											"value": "169"
										},
										{
											"begin": 821,
											"end": 860,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 820,
											"end": 860,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 793,
											"end": 860,
											"name": "tag",
											"source": 5,
											"value": "168"
										},
										{
											"begin": 793,
											"end": 860,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 789,
											"end": 945,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 789,
											"end": 945,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "171"
										},
										{
											"begin": 789,
											"end": 945,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 912,
											"end": 924,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "172"
										},
										{
											"begin": 912,
											"end": 922,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "135"
										},
										{
											"begin": 912,
											"end": 924,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 912,
											"end": 924,
											"name": "tag",
											"source": 5,
											"value": "172"
										},
										{
											"begin": 912,
											"end": 924,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 926,
											"end": 933,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 883,
											"end": 934,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 883,
											"end": 934,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 883,
											"end": 934,
											"name": "PUSH",
											"source": 5,
											"value": "E237D92200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 883,
											"end": 934,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 883,
											"end": 934,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 883,
											"end": 934,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 883,
											"end": 934,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 883,
											"end": 934,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "173"
										},
										{
											"begin": 883,
											"end": 934,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 883,
											"end": 934,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 883,
											"end": 934,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 883,
											"end": 934,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "140"
										},
										{
											"begin": 883,
											"end": 934,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 883,
											"end": 934,
											"name": "tag",
											"source": 5,
											"value": "173"
										},
										{
											"begin": 883,
											"end": 934,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 883,
											"end": 934,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 883,
											"end": 934,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 883,
											"end": 934,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 883,
											"end": 934,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 883,
											"end": 934,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 883,
											"end": 934,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 883,
											"end": 934,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 789,
											"end": 945,
											"name": "tag",
											"source": 5,
											"value": "171"
										},
										{
											"begin": 789,
											"end": 945,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 955,
											"end": 987,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "174"
										},
										{
											"begin": 966,
											"end": 973,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 975,
											"end": 978,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 980,
											"end": 986,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 955,
											"end": 965,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "175"
										},
										{
											"begin": 955,
											"end": 987,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 955,
											"end": 987,
											"name": "tag",
											"source": 5,
											"value": "174"
										},
										{
											"begin": 955,
											"end": 987,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 681,
											"end": 994,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 681,
											"end": 994,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 681,
											"end": 994,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 681,
											"end": 994,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1906,
											"end": 2069,
											"name": "tag",
											"source": 14,
											"value": "72"
										},
										{
											"begin": 1906,
											"end": 2069,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2002,
											"end": 2003,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1979,
											"end": 2004,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1979,
											"end": 2004,
											"modifierDepth": 1,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 1979,
											"end": 1990,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "6"
										},
										{
											"begin": 1979,
											"end": 1990,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1979,
											"end": 1990,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1979,
											"end": 1990,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 1979,
											"end": 1990,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1979,
											"end": 1990,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "100"
										},
										{
											"begin": 1979,
											"end": 1990,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 14
										},
										{
											"begin": 1979,
											"end": 1990,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1979,
											"end": 1990,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 14
										},
										{
											"begin": 1979,
											"end": 1990,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1979,
											"end": 1990,
											"modifierDepth": 1,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 1979,
											"end": 2004,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1979,
											"end": 2004,
											"modifierDepth": 1,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 1979,
											"end": 2004,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 1971,
											"end": 2037,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "180"
										},
										{
											"begin": 1971,
											"end": 2037,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 1971,
											"end": 2037,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 1971,
											"end": 2037,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 1971,
											"end": 2037,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1971,
											"end": 2037,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1971,
											"end": 2037,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 1971,
											"end": 2037,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 1971,
											"end": 2037,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1971,
											"end": 2037,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "181"
										},
										{
											"begin": 1971,
											"end": 2037,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1971,
											"end": 2037,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "182"
										},
										{
											"begin": 1971,
											"end": 2037,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1971,
											"end": 2037,
											"modifierDepth": 1,
											"name": "tag",
											"source": 14,
											"value": "181"
										},
										{
											"begin": 1971,
											"end": 2037,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1971,
											"end": 2037,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 1971,
											"end": 2037,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 1971,
											"end": 2037,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1971,
											"end": 2037,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1971,
											"end": 2037,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 1971,
											"end": 2037,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1971,
											"end": 2037,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 1971,
											"end": 2037,
											"modifierDepth": 1,
											"name": "tag",
											"source": 14,
											"value": "180"
										},
										{
											"begin": 1971,
											"end": 2037,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2057,
											"end": 2064,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2043,
											"end": 2054,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "6"
										},
										{
											"begin": 2043,
											"end": 2054,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2043,
											"end": 2064,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "100"
										},
										{
											"begin": 2043,
											"end": 2064,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 14
										},
										{
											"begin": 2043,
											"end": 2064,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2043,
											"end": 2064,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 2043,
											"end": 2064,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2043,
											"end": 2064,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2043,
											"end": 2064,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 2043,
											"end": 2064,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 14
										},
										{
											"begin": 2043,
											"end": 2064,
											"modifierDepth": 1,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 2043,
											"end": 2064,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2043,
											"end": 2064,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 2043,
											"end": 2064,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2043,
											"end": 2064,
											"modifierDepth": 1,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 2043,
											"end": 2064,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 2043,
											"end": 2064,
											"modifierDepth": 1,
											"name": "OR",
											"source": 14
										},
										{
											"begin": 2043,
											"end": 2064,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2043,
											"end": 2064,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 14
										},
										{
											"begin": 2043,
											"end": 2064,
											"modifierDepth": 1,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1906,
											"end": 2069,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1906,
											"end": 2069,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 596,
											"end": 882,
											"name": "tag",
											"source": 14,
											"value": "78"
										},
										{
											"begin": 596,
											"end": 882,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 739,
											"end": 740,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 716,
											"end": 741,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 716,
											"end": 741,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 716,
											"end": 727,
											"name": "PUSH",
											"source": 14,
											"value": "6"
										},
										{
											"begin": 716,
											"end": 727,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 716,
											"end": 727,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 716,
											"end": 727,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 716,
											"end": 727,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 716,
											"end": 727,
											"name": "PUSH",
											"source": 14,
											"value": "100"
										},
										{
											"begin": 716,
											"end": 727,
											"name": "EXP",
											"source": 14
										},
										{
											"begin": 716,
											"end": 727,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 716,
											"end": 727,
											"name": "DIV",
											"source": 14
										},
										{
											"begin": 716,
											"end": 727,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 716,
											"end": 727,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 716,
											"end": 741,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 716,
											"end": 741,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 716,
											"end": 741,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 708,
											"end": 767,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "189"
										},
										{
											"begin": 708,
											"end": 767,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 708,
											"end": 767,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 708,
											"end": 767,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 708,
											"end": 767,
											"name": "PUSH",
											"source": 14,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 708,
											"end": 767,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 708,
											"end": 767,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 708,
											"end": 767,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 708,
											"end": 767,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 708,
											"end": 767,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "190"
										},
										{
											"begin": 708,
											"end": 767,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 708,
											"end": 767,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "127"
										},
										{
											"begin": 708,
											"end": 767,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 708,
											"end": 767,
											"name": "tag",
											"source": 14,
											"value": "190"
										},
										{
											"begin": 708,
											"end": 767,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 708,
											"end": 767,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 708,
											"end": 767,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 708,
											"end": 767,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 708,
											"end": 767,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 708,
											"end": 767,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 708,
											"end": 767,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 708,
											"end": 767,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 708,
											"end": 767,
											"name": "tag",
											"source": 14,
											"value": "189"
										},
										{
											"begin": 708,
											"end": 767,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 795,
											"end": 806,
											"name": "PUSH",
											"source": 14,
											"value": "6"
										},
										{
											"begin": 795,
											"end": 806,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 795,
											"end": 806,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 795,
											"end": 806,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 795,
											"end": 806,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 795,
											"end": 806,
											"name": "PUSH",
											"source": 14,
											"value": "100"
										},
										{
											"begin": 795,
											"end": 806,
											"name": "EXP",
											"source": 14
										},
										{
											"begin": 795,
											"end": 806,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 795,
											"end": 806,
											"name": "DIV",
											"source": 14
										},
										{
											"begin": 795,
											"end": 806,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 795,
											"end": 806,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 781,
											"end": 806,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 781,
											"end": 806,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 781,
											"end": 791,
											"name": "CALLER",
											"source": 14
										},
										{
											"begin": 781,
											"end": 806,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 781,
											"end": 806,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 781,
											"end": 806,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 773,
											"end": 839,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "191"
										},
										{
											"begin": 773,
											"end": 839,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 773,
											"end": 839,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 773,
											"end": 839,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 773,
											"end": 839,
											"name": "PUSH",
											"source": 14,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 773,
											"end": 839,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 773,
											"end": 839,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 773,
											"end": 839,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 773,
											"end": 839,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 773,
											"end": 839,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "192"
										},
										{
											"begin": 773,
											"end": 839,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 773,
											"end": 839,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "130"
										},
										{
											"begin": 773,
											"end": 839,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 773,
											"end": 839,
											"name": "tag",
											"source": 14,
											"value": "192"
										},
										{
											"begin": 773,
											"end": 839,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 773,
											"end": 839,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 773,
											"end": 839,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 773,
											"end": 839,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 773,
											"end": 839,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 773,
											"end": 839,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 773,
											"end": 839,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 773,
											"end": 839,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 773,
											"end": 839,
											"name": "tag",
											"source": 14,
											"value": "191"
										},
										{
											"begin": 773,
											"end": 839,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 845,
											"end": 877,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "193"
										},
										{
											"begin": 851,
											"end": 858,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 860,
											"end": 862,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 864,
											"end": 870,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 872,
											"end": 876,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 845,
											"end": 850,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "194"
										},
										{
											"begin": 845,
											"end": 877,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 845,
											"end": 877,
											"name": "tag",
											"source": 14,
											"value": "193"
										},
										{
											"begin": 845,
											"end": 877,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 596,
											"end": 882,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 596,
											"end": 882,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 596,
											"end": 882,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 596,
											"end": 882,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 596,
											"end": 882,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 451,
											"end": 477,
											"name": "tag",
											"source": 14,
											"value": "84"
										},
										{
											"begin": 451,
											"end": 477,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 451,
											"end": 477,
											"name": "PUSH",
											"source": 14,
											"value": "6"
										},
										{
											"begin": 451,
											"end": 477,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 451,
											"end": 477,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 451,
											"end": 477,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 451,
											"end": 477,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 451,
											"end": 477,
											"name": "PUSH",
											"source": 14,
											"value": "100"
										},
										{
											"begin": 451,
											"end": 477,
											"name": "EXP",
											"source": 14
										},
										{
											"begin": 451,
											"end": 477,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 451,
											"end": 477,
											"name": "DIV",
											"source": 14
										},
										{
											"begin": 451,
											"end": 477,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 451,
											"end": 477,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 451,
											"end": 477,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 451,
											"end": 477,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "tag",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3241,
											"end": 3293,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "197"
										},
										{
											"begin": 3260,
											"end": 3272,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "198"
										},
										{
											"begin": 3260,
											"end": 3270,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "135"
										},
										{
											"begin": 3260,
											"end": 3272,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3260,
											"end": 3272,
											"name": "tag",
											"source": 2,
											"value": "198"
										},
										{
											"begin": 3260,
											"end": 3272,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3274,
											"end": 3282,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3284,
											"end": 3292,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3241,
											"end": 3259,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "199"
										},
										{
											"begin": 3241,
											"end": 3293,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3241,
											"end": 3293,
											"name": "tag",
											"source": 2,
											"value": "197"
										},
										{
											"begin": 3241,
											"end": 3293,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3156,
											"end": 3300,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3156,
											"end": 3300,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 959,
											"end": 1070,
											"name": "tag",
											"source": 6,
											"value": "92"
										},
										{
											"begin": 959,
											"end": 1070,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1021,
											"end": 1028,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1047,
											"end": 1059,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1047,
											"end": 1063,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1060,
											"end": 1062,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1047,
											"end": 1063,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1047,
											"end": 1063,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1047,
											"end": 1063,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1047,
											"end": 1063,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1047,
											"end": 1063,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1047,
											"end": 1063,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1047,
											"end": 1063,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1047,
											"end": 1063,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1047,
											"end": 1063,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1047,
											"end": 1063,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1047,
											"end": 1063,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 1047,
											"end": 1063,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1040,
											"end": 1063,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1040,
											"end": 1063,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 959,
											"end": 1070,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 959,
											"end": 1070,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 959,
											"end": 1070,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 959,
											"end": 1070,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "tag",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3457,
											"end": 3461,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3480,
											"end": 3498,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3480,
											"end": 3507,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3499,
											"end": 3506,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3480,
											"end": 3507,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3480,
											"end": 3507,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3480,
											"end": 3507,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3480,
											"end": 3507,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3480,
											"end": 3507,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3480,
											"end": 3507,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3480,
											"end": 3507,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3480,
											"end": 3507,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3480,
											"end": 3507,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3480,
											"end": 3507,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3480,
											"end": 3507,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3480,
											"end": 3507,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3480,
											"end": 3507,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3480,
											"end": 3507,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3480,
											"end": 3507,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3508,
											"end": 3516,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 3480,
											"end": 3517,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3473,
											"end": 3517,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3473,
											"end": 3517,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3367,
											"end": 3524,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3367,
											"end": 3524,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "tag",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3714,
											"end": 3728,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3731,
											"end": 3743,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "203"
										},
										{
											"begin": 3731,
											"end": 3741,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "135"
										},
										{
											"begin": 3731,
											"end": 3743,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3731,
											"end": 3743,
											"name": "tag",
											"source": 2,
											"value": "203"
										},
										{
											"begin": 3731,
											"end": 3743,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3714,
											"end": 3743,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3714,
											"end": 3743,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3765,
											"end": 3771,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3757,
											"end": 3771,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3757,
											"end": 3771,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3757,
											"end": 3761,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 3757,
											"end": 3771,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3757,
											"end": 3771,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3757,
											"end": 3771,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 3757,
											"end": 3771,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3757,
											"end": 3806,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3757,
											"end": 3806,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3757,
											"end": 3806,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "204"
										},
										{
											"begin": 3757,
											"end": 3806,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3757,
											"end": 3806,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3776,
											"end": 3806,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "205"
										},
										{
											"begin": 3793,
											"end": 3797,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 3799,
											"end": 3805,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3776,
											"end": 3792,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 3776,
											"end": 3806,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3776,
											"end": 3806,
											"name": "tag",
											"source": 2,
											"value": "205"
										},
										{
											"begin": 3776,
											"end": 3806,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3775,
											"end": 3806,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3757,
											"end": 3806,
											"name": "tag",
											"source": 2,
											"value": "204"
										},
										{
											"begin": 3757,
											"end": 3806,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3753,
											"end": 3882,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3753,
											"end": 3882,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "206"
										},
										{
											"begin": 3753,
											"end": 3882,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3858,
											"end": 3864,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3866,
											"end": 3870,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "PUSH",
											"source": 2,
											"value": "E237D92200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "207"
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "140"
										},
										{
											"begin": 3829,
											"end": 3871,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "tag",
											"source": 2,
											"value": "207"
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3753,
											"end": 3882,
											"name": "tag",
											"source": 2,
											"value": "206"
										},
										{
											"begin": 3753,
											"end": 3882,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3891,
											"end": 3935,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "208"
										},
										{
											"begin": 3909,
											"end": 3913,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 3915,
											"end": 3917,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 3919,
											"end": 3921,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 3923,
											"end": 3928,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 3930,
											"end": 3934,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 3891,
											"end": 3908,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "209"
										},
										{
											"begin": 3891,
											"end": 3935,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3891,
											"end": 3935,
											"name": "tag",
											"source": 2,
											"value": "208"
										},
										{
											"begin": 3891,
											"end": 3935,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3704,
											"end": 3942,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3591,
											"end": 3942,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3591,
											"end": 3942,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2647,
											"end": 2648,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2635,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 2672,
											"end": 2703,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 394,
											"end": 675,
											"name": "tag",
											"source": 5,
											"value": "109"
										},
										{
											"begin": 394,
											"end": 675,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 492,
											"end": 504,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "217"
										},
										{
											"begin": 492,
											"end": 502,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "135"
										},
										{
											"begin": 492,
											"end": 504,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 492,
											"end": 504,
											"name": "tag",
											"source": 5,
											"value": "217"
										},
										{
											"begin": 492,
											"end": 504,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 481,
											"end": 504,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 481,
											"end": 504,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 481,
											"end": 488,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 481,
											"end": 504,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 481,
											"end": 504,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 481,
											"end": 504,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 481,
											"end": 504,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 481,
											"end": 548,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 481,
											"end": 548,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 481,
											"end": 548,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "218"
										},
										{
											"begin": 481,
											"end": 548,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 481,
											"end": 548,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 509,
											"end": 548,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "219"
										},
										{
											"begin": 526,
											"end": 533,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 535,
											"end": 547,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "220"
										},
										{
											"begin": 535,
											"end": 545,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "135"
										},
										{
											"begin": 535,
											"end": 547,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 535,
											"end": 547,
											"name": "tag",
											"source": 5,
											"value": "220"
										},
										{
											"begin": 535,
											"end": 547,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 509,
											"end": 525,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "97"
										},
										{
											"begin": 509,
											"end": 548,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 509,
											"end": 548,
											"name": "tag",
											"source": 5,
											"value": "219"
										},
										{
											"begin": 509,
											"end": 548,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 508,
											"end": 548,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 481,
											"end": 548,
											"name": "tag",
											"source": 5,
											"value": "218"
										},
										{
											"begin": 481,
											"end": 548,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 477,
											"end": 633,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 477,
											"end": 633,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "221"
										},
										{
											"begin": 477,
											"end": 633,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 600,
											"end": 612,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "222"
										},
										{
											"begin": 600,
											"end": 610,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "135"
										},
										{
											"begin": 600,
											"end": 612,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 600,
											"end": 612,
											"name": "tag",
											"source": 5,
											"value": "222"
										},
										{
											"begin": 600,
											"end": 612,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 614,
											"end": 621,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 571,
											"end": 622,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 571,
											"end": 622,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 571,
											"end": 622,
											"name": "PUSH",
											"source": 5,
											"value": "E237D92200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 571,
											"end": 622,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 571,
											"end": 622,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 571,
											"end": 622,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 571,
											"end": 622,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 571,
											"end": 622,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "223"
										},
										{
											"begin": 571,
											"end": 622,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 571,
											"end": 622,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 571,
											"end": 622,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 571,
											"end": 622,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "140"
										},
										{
											"begin": 571,
											"end": 622,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 571,
											"end": 622,
											"name": "tag",
											"source": 5,
											"value": "223"
										},
										{
											"begin": 571,
											"end": 622,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 571,
											"end": 622,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 571,
											"end": 622,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 571,
											"end": 622,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 571,
											"end": 622,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 571,
											"end": 622,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 571,
											"end": 622,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 571,
											"end": 622,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 477,
											"end": 633,
											"name": "tag",
											"source": 5,
											"value": "221"
										},
										{
											"begin": 477,
											"end": 633,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 643,
											"end": 668,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "224"
										},
										{
											"begin": 649,
											"end": 656,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 658,
											"end": 660,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 662,
											"end": 667,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 643,
											"end": 648,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "225"
										},
										{
											"begin": 643,
											"end": 668,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 643,
											"end": 668,
											"name": "tag",
											"source": 5,
											"value": "224"
										},
										{
											"begin": 643,
											"end": 668,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 394,
											"end": 675,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 394,
											"end": 675,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 394,
											"end": 675,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 394,
											"end": 675,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 762,
											"end": 908,
											"name": "tag",
											"source": 11,
											"value": "115"
										},
										{
											"begin": 762,
											"end": 908,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 838,
											"end": 842,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 876,
											"end": 901,
											"name": "PUSH",
											"source": 11,
											"value": "1FFC9A700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 861,
											"end": 901,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 861,
											"end": 901,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 861,
											"end": 901,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 861,
											"end": 872,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 861,
											"end": 901,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 861,
											"end": 901,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 861,
											"end": 901,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 861,
											"end": 901,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 854,
											"end": 901,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 854,
											"end": 901,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 762,
											"end": 908,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 762,
											"end": 908,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 762,
											"end": 908,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 762,
											"end": 908,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 11523,
											"end": 11805,
											"name": "tag",
											"source": 2,
											"value": "132"
										},
										{
											"begin": 11523,
											"end": 11805,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11658,
											"end": 11659,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11644,
											"end": 11660,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11644,
											"end": 11660,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 11644,
											"end": 11646,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11644,
											"end": 11660,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11644,
											"end": 11660,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 11644,
											"end": 11660,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 11640,
											"end": 11728,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "228"
										},
										{
											"begin": 11640,
											"end": 11728,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 11714,
											"end": 11715,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11683,
											"end": 11717,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 11683,
											"end": 11717,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 11683,
											"end": 11717,
											"name": "PUSH",
											"source": 2,
											"value": "57F447CE00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11683,
											"end": 11717,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11683,
											"end": 11717,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 11683,
											"end": 11717,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 11683,
											"end": 11717,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11683,
											"end": 11717,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "229"
										},
										{
											"begin": 11683,
											"end": 11717,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 11683,
											"end": 11717,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11683,
											"end": 11717,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 11683,
											"end": 11717,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 11683,
											"end": 11717,
											"name": "tag",
											"source": 2,
											"value": "229"
										},
										{
											"begin": 11683,
											"end": 11717,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11683,
											"end": 11717,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 11683,
											"end": 11717,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 11683,
											"end": 11717,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 11683,
											"end": 11717,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 11683,
											"end": 11717,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 11683,
											"end": 11717,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11683,
											"end": 11717,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 11640,
											"end": 11728,
											"name": "tag",
											"source": 2,
											"value": "228"
										},
										{
											"begin": 11640,
											"end": 11728,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11737,
											"end": 11798,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "230"
										},
										{
											"begin": 11772,
											"end": 11773,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11776,
											"end": 11778,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 11780,
											"end": 11783,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 11785,
											"end": 11791,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 11793,
											"end": 11797,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 11737,
											"end": 11763,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "231"
										},
										{
											"begin": 11737,
											"end": 11798,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 11737,
											"end": 11798,
											"name": "tag",
											"source": 2,
											"value": "230"
										},
										{
											"begin": 11737,
											"end": 11798,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11523,
											"end": 11805,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11523,
											"end": 11805,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11523,
											"end": 11805,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11523,
											"end": 11805,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11523,
											"end": 11805,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 9,
											"value": "135"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9015,
											"end": 9460,
											"name": "tag",
											"source": 2,
											"value": "142"
										},
										{
											"begin": 9015,
											"end": 9460,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9222,
											"end": 9223,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9208,
											"end": 9224,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9208,
											"end": 9224,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9208,
											"end": 9210,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 9208,
											"end": 9224,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9208,
											"end": 9224,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9208,
											"end": 9224,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9204,
											"end": 9292,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "234"
										},
										{
											"begin": 9204,
											"end": 9292,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 9278,
											"end": 9279,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9247,
											"end": 9281,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9247,
											"end": 9281,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9247,
											"end": 9281,
											"name": "PUSH",
											"source": 2,
											"value": "57F447CE00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9247,
											"end": 9281,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9247,
											"end": 9281,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9247,
											"end": 9281,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 9247,
											"end": 9281,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9247,
											"end": 9281,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "235"
										},
										{
											"begin": 9247,
											"end": 9281,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9247,
											"end": 9281,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9247,
											"end": 9281,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 9247,
											"end": 9281,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9247,
											"end": 9281,
											"name": "tag",
											"source": 2,
											"value": "235"
										},
										{
											"begin": 9247,
											"end": 9281,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9247,
											"end": 9281,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9247,
											"end": 9281,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9247,
											"end": 9281,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9247,
											"end": 9281,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9247,
											"end": 9281,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9247,
											"end": 9281,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9247,
											"end": 9281,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 9204,
											"end": 9292,
											"name": "tag",
											"source": 2,
											"value": "234"
										},
										{
											"begin": 9204,
											"end": 9292,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9321,
											"end": 9322,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9305,
											"end": 9323,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9305,
											"end": 9323,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9305,
											"end": 9309,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 9305,
											"end": 9323,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9305,
											"end": 9323,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9305,
											"end": 9323,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9301,
											"end": 9389,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "236"
										},
										{
											"begin": 9301,
											"end": 9389,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 9375,
											"end": 9376,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9346,
											"end": 9378,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9346,
											"end": 9378,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9346,
											"end": 9378,
											"name": "PUSH",
											"source": 2,
											"value": "1A8351400000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9346,
											"end": 9378,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9346,
											"end": 9378,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9346,
											"end": 9378,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 9346,
											"end": 9378,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9346,
											"end": 9378,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "237"
										},
										{
											"begin": 9346,
											"end": 9378,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9346,
											"end": 9378,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9346,
											"end": 9378,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 9346,
											"end": 9378,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9346,
											"end": 9378,
											"name": "tag",
											"source": 2,
											"value": "237"
										},
										{
											"begin": 9346,
											"end": 9378,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9346,
											"end": 9378,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9346,
											"end": 9378,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9346,
											"end": 9378,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9346,
											"end": 9378,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9346,
											"end": 9378,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9346,
											"end": 9378,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9346,
											"end": 9378,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 9301,
											"end": 9389,
											"name": "tag",
											"source": 2,
											"value": "236"
										},
										{
											"begin": 9301,
											"end": 9389,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9398,
											"end": 9453,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "238"
										},
										{
											"begin": 9425,
											"end": 9429,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 9431,
											"end": 9433,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 9435,
											"end": 9438,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 9440,
											"end": 9446,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 9448,
											"end": 9452,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 9398,
											"end": 9424,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "231"
										},
										{
											"begin": 9398,
											"end": 9453,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9398,
											"end": 9453,
											"name": "tag",
											"source": 2,
											"value": "238"
										},
										{
											"begin": 9398,
											"end": 9453,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9015,
											"end": 9460,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9015,
											"end": 9460,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9015,
											"end": 9460,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9015,
											"end": 9460,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9015,
											"end": 9460,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9015,
											"end": 9460,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4603,
											"end": 4800,
											"name": "tag",
											"source": 8,
											"value": "156"
										},
										{
											"begin": 4603,
											"end": 4800,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4689,
											"end": 4700,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4777,
											"end": 4781,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4772,
											"end": 4775,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4768,
											"end": 4782,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 4761,
											"end": 4765,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4756,
											"end": 4759,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 4752,
											"end": 4766,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4748,
											"end": 4783,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4742,
											"end": 4784,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4735,
											"end": 4784,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4735,
											"end": 4784,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4603,
											"end": 4800,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 4603,
											"end": 4800,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4603,
											"end": 4800,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4603,
											"end": 4800,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4603,
											"end": 4800,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4204,
											"end": 4401,
											"name": "tag",
											"source": 8,
											"value": "158"
										},
										{
											"begin": 4204,
											"end": 4401,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4290,
											"end": 4301,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4378,
											"end": 4382,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4373,
											"end": 4376,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4369,
											"end": 4383,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 4362,
											"end": 4366,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4357,
											"end": 4360,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 4353,
											"end": 4367,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4349,
											"end": 4384,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4343,
											"end": 4385,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4336,
											"end": 4385,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4336,
											"end": 4385,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4204,
											"end": 4401,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 4204,
											"end": 4401,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4204,
											"end": 4401,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4204,
											"end": 4401,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4204,
											"end": 4401,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12784,
											"end": 13049,
											"name": "tag",
											"source": 2,
											"value": "175"
										},
										{
											"begin": 12784,
											"end": 13049,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12904,
											"end": 12905,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12888,
											"end": 12906,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12888,
											"end": 12906,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 12888,
											"end": 12892,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 12888,
											"end": 12906,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12888,
											"end": 12906,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 12888,
											"end": 12906,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 12884,
											"end": 12972,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "242"
										},
										{
											"begin": 12884,
											"end": 12972,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 12958,
											"end": 12959,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12929,
											"end": 12961,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 12929,
											"end": 12961,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 12929,
											"end": 12961,
											"name": "PUSH",
											"source": 2,
											"value": "1A8351400000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12929,
											"end": 12961,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12929,
											"end": 12961,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12929,
											"end": 12961,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 12929,
											"end": 12961,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12929,
											"end": 12961,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "243"
										},
										{
											"begin": 12929,
											"end": 12961,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 12929,
											"end": 12961,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12929,
											"end": 12961,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 12929,
											"end": 12961,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 12929,
											"end": 12961,
											"name": "tag",
											"source": 2,
											"value": "243"
										},
										{
											"begin": 12929,
											"end": 12961,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12929,
											"end": 12961,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 12929,
											"end": 12961,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 12929,
											"end": 12961,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 12929,
											"end": 12961,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 12929,
											"end": 12961,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 12929,
											"end": 12961,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12929,
											"end": 12961,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 12884,
											"end": 12972,
											"name": "tag",
											"source": 2,
											"value": "242"
										},
										{
											"begin": 12884,
											"end": 12972,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12981,
											"end": 13042,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "244"
										},
										{
											"begin": 13008,
											"end": 13012,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 13022,
											"end": 13023,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 13026,
											"end": 13029,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 13031,
											"end": 13037,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 12981,
											"end": 13042,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 12981,
											"end": 13042,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 12981,
											"end": 13042,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 12981,
											"end": 13042,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 12981,
											"end": 13042,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12981,
											"end": 13042,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 12981,
											"end": 13042,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12981,
											"end": 13042,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 12981,
											"end": 13042,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12981,
											"end": 13042,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12981,
											"end": 13042,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12981,
											"end": 13042,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12981,
											"end": 13007,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "231"
										},
										{
											"begin": 12981,
											"end": 13042,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 12981,
											"end": 13042,
											"name": "tag",
											"source": 2,
											"value": "244"
										},
										{
											"begin": 12981,
											"end": 13042,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12784,
											"end": 13049,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12784,
											"end": 13049,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12784,
											"end": 13049,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12784,
											"end": 13049,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "246"
										},
										{
											"begin": 1866,
											"end": 1876,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 1866,
											"end": 1878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "tag",
											"source": 0,
											"value": "246"
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "247"
										},
										{
											"begin": 1855,
											"end": 1860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 1855,
											"end": 1862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "tag",
											"source": 0,
											"value": "247"
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "248"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "249"
										},
										{
											"begin": 1928,
											"end": 1938,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 1928,
											"end": 1940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "tag",
											"source": 0,
											"value": "249"
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "250"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 1901,
											"end": 1941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "tag",
											"source": 0,
											"value": "250"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "tag",
											"source": 0,
											"value": "248"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3029,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3083,
											"end": 3091,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3081,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10746,
											"end": 11092,
											"name": "tag",
											"source": 2,
											"value": "194"
										},
										{
											"begin": 10746,
											"end": 11092,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10856,
											"end": 10857,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10842,
											"end": 10858,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10842,
											"end": 10858,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10842,
											"end": 10844,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10842,
											"end": 10858,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10842,
											"end": 10858,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10842,
											"end": 10858,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10838,
											"end": 10926,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "253"
										},
										{
											"begin": 10838,
											"end": 10926,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10912,
											"end": 10913,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10881,
											"end": 10915,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10881,
											"end": 10915,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10881,
											"end": 10915,
											"name": "PUSH",
											"source": 2,
											"value": "57F447CE00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10881,
											"end": 10915,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10881,
											"end": 10915,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10881,
											"end": 10915,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10881,
											"end": 10915,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10881,
											"end": 10915,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "254"
										},
										{
											"begin": 10881,
											"end": 10915,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10881,
											"end": 10915,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10881,
											"end": 10915,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 10881,
											"end": 10915,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10881,
											"end": 10915,
											"name": "tag",
											"source": 2,
											"value": "254"
										},
										{
											"begin": 10881,
											"end": 10915,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10881,
											"end": 10915,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10881,
											"end": 10915,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10881,
											"end": 10915,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10881,
											"end": 10915,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10881,
											"end": 10915,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10881,
											"end": 10915,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10881,
											"end": 10915,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 10838,
											"end": 10926,
											"name": "tag",
											"source": 2,
											"value": "253"
										},
										{
											"begin": 10838,
											"end": 10926,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10956,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10958,
											"end": 10981,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10985,
											"end": 11014,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "255"
										},
										{
											"begin": 11004,
											"end": 11006,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 11008,
											"end": 11013,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 10985,
											"end": 11003,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "256"
										},
										{
											"begin": 10985,
											"end": 11014,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10985,
											"end": 11014,
											"name": "tag",
											"source": 2,
											"value": "255"
										},
										{
											"begin": 10985,
											"end": 11014,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10935,
											"end": 11014,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10935,
											"end": 11014,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10935,
											"end": 11014,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10935,
											"end": 11014,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11024,
											"end": 11085,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "257"
										},
										{
											"begin": 11059,
											"end": 11060,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11063,
											"end": 11065,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 11067,
											"end": 11070,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11072,
											"end": 11078,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11080,
											"end": 11084,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 11024,
											"end": 11050,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "231"
										},
										{
											"begin": 11024,
											"end": 11085,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 11024,
											"end": 11085,
											"name": "tag",
											"source": 2,
											"value": "257"
										},
										{
											"begin": 11024,
											"end": 11085,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10828,
											"end": 11092,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10828,
											"end": 11092,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10746,
											"end": 11092,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10746,
											"end": 11092,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10746,
											"end": 11092,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10746,
											"end": 11092,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10746,
											"end": 11092,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 13268,
											"end": 13583,
											"name": "tag",
											"source": 2,
											"value": "199"
										},
										{
											"begin": 13268,
											"end": 13583,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 13395,
											"end": 13396,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 13375,
											"end": 13397,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13375,
											"end": 13397,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 13375,
											"end": 13383,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 13375,
											"end": 13397,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13375,
											"end": 13397,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 13375,
											"end": 13397,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 13371,
											"end": 13465,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "259"
										},
										{
											"begin": 13371,
											"end": 13465,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 13451,
											"end": 13452,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 13420,
											"end": 13454,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 13420,
											"end": 13454,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 13420,
											"end": 13454,
											"name": "PUSH",
											"source": 2,
											"value": "CED3E10000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13420,
											"end": 13454,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 13420,
											"end": 13454,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 13420,
											"end": 13454,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 13420,
											"end": 13454,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 13420,
											"end": 13454,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "260"
										},
										{
											"begin": 13420,
											"end": 13454,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 13420,
											"end": 13454,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13420,
											"end": 13454,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 13420,
											"end": 13454,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 13420,
											"end": 13454,
											"name": "tag",
											"source": 2,
											"value": "260"
										},
										{
											"begin": 13420,
											"end": 13454,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 13420,
											"end": 13454,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 13420,
											"end": 13454,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 13420,
											"end": 13454,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 13420,
											"end": 13454,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 13420,
											"end": 13454,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 13420,
											"end": 13454,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13420,
											"end": 13454,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 13371,
											"end": 13465,
											"name": "tag",
											"source": 2,
											"value": "259"
										},
										{
											"begin": 13371,
											"end": 13465,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 13512,
											"end": 13520,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 13474,
											"end": 13492,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 13474,
											"end": 13499,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 13493,
											"end": 13498,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 13474,
											"end": 13499,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13474,
											"end": 13499,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 13474,
											"end": 13499,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13474,
											"end": 13499,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 13474,
											"end": 13499,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 13474,
											"end": 13499,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 13474,
											"end": 13499,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 13474,
											"end": 13499,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 13474,
											"end": 13499,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13474,
											"end": 13499,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 13474,
											"end": 13499,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 13474,
											"end": 13499,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 13474,
											"end": 13499,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 13474,
											"end": 13499,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 13474,
											"end": 13499,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 13474,
											"end": 13509,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 13500,
											"end": 13508,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 13474,
											"end": 13509,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13474,
											"end": 13509,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 13474,
											"end": 13509,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13474,
											"end": 13509,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 13474,
											"end": 13509,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 13474,
											"end": 13509,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 13474,
											"end": 13509,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 13474,
											"end": 13509,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 13474,
											"end": 13509,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13474,
											"end": 13509,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 13474,
											"end": 13509,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 13474,
											"end": 13509,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 13474,
											"end": 13509,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 13474,
											"end": 13509,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 13474,
											"end": 13509,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 13474,
											"end": 13509,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 13474,
											"end": 13520,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 13474,
											"end": 13520,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 13474,
											"end": 13520,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 13474,
											"end": 13520,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 13474,
											"end": 13520,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 13474,
											"end": 13520,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 13474,
											"end": 13520,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 13474,
											"end": 13520,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 13474,
											"end": 13520,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 13474,
											"end": 13520,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13474,
											"end": 13520,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 13474,
											"end": 13520,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 13474,
											"end": 13520,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 13474,
											"end": 13520,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 13474,
											"end": 13520,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 13474,
											"end": 13520,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13474,
											"end": 13520,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 13474,
											"end": 13520,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13557,
											"end": 13565,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 13535,
											"end": 13576,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13535,
											"end": 13576,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 13550,
											"end": 13555,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 13535,
											"end": 13576,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13535,
											"end": 13576,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 13535,
											"end": 13576,
											"name": "PUSH",
											"source": 2,
											"value": "17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
										},
										{
											"begin": 13567,
											"end": 13575,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 13535,
											"end": 13576,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 13535,
											"end": 13576,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 13535,
											"end": 13576,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "261"
										},
										{
											"begin": 13535,
											"end": 13576,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 13535,
											"end": 13576,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13535,
											"end": 13576,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 13535,
											"end": 13576,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 13535,
											"end": 13576,
											"name": "tag",
											"source": 2,
											"value": "261"
										},
										{
											"begin": 13535,
											"end": 13576,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 13535,
											"end": 13576,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 13535,
											"end": 13576,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 13535,
											"end": 13576,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 13535,
											"end": 13576,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 13535,
											"end": 13576,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 13535,
											"end": 13576,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13535,
											"end": 13576,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 13268,
											"end": 13583,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13268,
											"end": 13583,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13268,
											"end": 13583,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13268,
											"end": 13583,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8151,
											"end": 8614,
											"name": "tag",
											"source": 2,
											"value": "209"
										},
										{
											"begin": 8151,
											"end": 8614,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8287,
											"end": 8288,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8273,
											"end": 8289,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8273,
											"end": 8289,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8273,
											"end": 8275,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 8273,
											"end": 8289,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8273,
											"end": 8289,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8273,
											"end": 8289,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 8269,
											"end": 8357,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "263"
										},
										{
											"begin": 8269,
											"end": 8357,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 8343,
											"end": 8344,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8312,
											"end": 8346,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8312,
											"end": 8346,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8312,
											"end": 8346,
											"name": "PUSH",
											"source": 2,
											"value": "57F447CE00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8312,
											"end": 8346,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8312,
											"end": 8346,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8312,
											"end": 8346,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 8312,
											"end": 8346,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8312,
											"end": 8346,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "264"
										},
										{
											"begin": 8312,
											"end": 8346,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8312,
											"end": 8346,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8312,
											"end": 8346,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 8312,
											"end": 8346,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8312,
											"end": 8346,
											"name": "tag",
											"source": 2,
											"value": "264"
										},
										{
											"begin": 8312,
											"end": 8346,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8312,
											"end": 8346,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8312,
											"end": 8346,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8312,
											"end": 8346,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8312,
											"end": 8346,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8312,
											"end": 8346,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 8312,
											"end": 8346,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8312,
											"end": 8346,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 8269,
											"end": 8357,
											"name": "tag",
											"source": 2,
											"value": "263"
										},
										{
											"begin": 8269,
											"end": 8357,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8386,
											"end": 8387,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8370,
											"end": 8388,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8370,
											"end": 8388,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8370,
											"end": 8374,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 8370,
											"end": 8388,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8370,
											"end": 8388,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8370,
											"end": 8388,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 8366,
											"end": 8454,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "265"
										},
										{
											"begin": 8366,
											"end": 8454,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 8440,
											"end": 8441,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8411,
											"end": 8443,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8411,
											"end": 8443,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8411,
											"end": 8443,
											"name": "PUSH",
											"source": 2,
											"value": "1A8351400000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8411,
											"end": 8443,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8411,
											"end": 8443,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8411,
											"end": 8443,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 8411,
											"end": 8443,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8411,
											"end": 8443,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "266"
										},
										{
											"begin": 8411,
											"end": 8443,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8411,
											"end": 8443,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8411,
											"end": 8443,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 8411,
											"end": 8443,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8411,
											"end": 8443,
											"name": "tag",
											"source": 2,
											"value": "266"
										},
										{
											"begin": 8411,
											"end": 8443,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8411,
											"end": 8443,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8411,
											"end": 8443,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8411,
											"end": 8443,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8411,
											"end": 8443,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8411,
											"end": 8443,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 8411,
											"end": 8443,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8411,
											"end": 8443,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 8366,
											"end": 8454,
											"name": "tag",
											"source": 2,
											"value": "265"
										},
										{
											"begin": 8366,
											"end": 8454,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8464,
											"end": 8484,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8486,
											"end": 8509,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8513,
											"end": 8542,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "267"
										},
										{
											"begin": 8532,
											"end": 8534,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 8536,
											"end": 8541,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 8513,
											"end": 8531,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "256"
										},
										{
											"begin": 8513,
											"end": 8542,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8513,
											"end": 8542,
											"name": "tag",
											"source": 2,
											"value": "267"
										},
										{
											"begin": 8513,
											"end": 8542,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8463,
											"end": 8542,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8463,
											"end": 8542,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8463,
											"end": 8542,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8463,
											"end": 8542,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8552,
											"end": 8607,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "268"
										},
										{
											"begin": 8579,
											"end": 8583,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 8585,
											"end": 8587,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 8589,
											"end": 8592,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 8594,
											"end": 8600,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 8602,
											"end": 8606,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 8552,
											"end": 8578,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "231"
										},
										{
											"begin": 8552,
											"end": 8607,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8552,
											"end": 8607,
											"name": "tag",
											"source": 2,
											"value": "268"
										},
										{
											"begin": 8552,
											"end": 8607,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8259,
											"end": 8614,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8259,
											"end": 8614,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8151,
											"end": 8614,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8151,
											"end": 8614,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8151,
											"end": 8614,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8151,
											"end": 8614,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8151,
											"end": 8614,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8151,
											"end": 8614,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 12099,
											"end": 12428,
											"name": "tag",
											"source": 2,
											"value": "225"
										},
										{
											"begin": 12099,
											"end": 12428,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12194,
											"end": 12195,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12178,
											"end": 12196,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12178,
											"end": 12196,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 12178,
											"end": 12182,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 12178,
											"end": 12196,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12178,
											"end": 12196,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 12178,
											"end": 12196,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 12174,
											"end": 12262,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "270"
										},
										{
											"begin": 12174,
											"end": 12262,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 12248,
											"end": 12249,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12219,
											"end": 12251,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 12219,
											"end": 12251,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 12219,
											"end": 12251,
											"name": "PUSH",
											"source": 2,
											"value": "1A8351400000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12219,
											"end": 12251,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12219,
											"end": 12251,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12219,
											"end": 12251,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 12219,
											"end": 12251,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12219,
											"end": 12251,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "271"
										},
										{
											"begin": 12219,
											"end": 12251,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 12219,
											"end": 12251,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12219,
											"end": 12251,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 12219,
											"end": 12251,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 12219,
											"end": 12251,
											"name": "tag",
											"source": 2,
											"value": "271"
										},
										{
											"begin": 12219,
											"end": 12251,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12219,
											"end": 12251,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 12219,
											"end": 12251,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 12219,
											"end": 12251,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 12219,
											"end": 12251,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 12219,
											"end": 12251,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 12219,
											"end": 12251,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12219,
											"end": 12251,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 12174,
											"end": 12262,
											"name": "tag",
											"source": 2,
											"value": "270"
										},
										{
											"begin": 12174,
											"end": 12262,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12272,
											"end": 12292,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12294,
											"end": 12317,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 12321,
											"end": 12350,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "272"
										},
										{
											"begin": 12340,
											"end": 12342,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 12344,
											"end": 12349,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 12321,
											"end": 12339,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "256"
										},
										{
											"begin": 12321,
											"end": 12350,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 12321,
											"end": 12350,
											"name": "tag",
											"source": 2,
											"value": "272"
										},
										{
											"begin": 12321,
											"end": 12350,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12271,
											"end": 12350,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 12271,
											"end": 12350,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12271,
											"end": 12350,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 12271,
											"end": 12350,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12360,
											"end": 12421,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "273"
										},
										{
											"begin": 12387,
											"end": 12391,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 12401,
											"end": 12402,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12405,
											"end": 12408,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 12410,
											"end": 12416,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 12360,
											"end": 12421,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 12360,
											"end": 12421,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 12360,
											"end": 12421,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 12360,
											"end": 12421,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 12360,
											"end": 12421,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12360,
											"end": 12421,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 12360,
											"end": 12421,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12360,
											"end": 12421,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 12360,
											"end": 12421,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12360,
											"end": 12421,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12360,
											"end": 12421,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12360,
											"end": 12421,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12360,
											"end": 12386,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "231"
										},
										{
											"begin": 12360,
											"end": 12421,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 12360,
											"end": 12421,
											"name": "tag",
											"source": 2,
											"value": "273"
										},
										{
											"begin": 12360,
											"end": 12421,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12164,
											"end": 12428,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12164,
											"end": 12428,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12099,
											"end": 12428,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12099,
											"end": 12428,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12099,
											"end": 12428,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12099,
											"end": 12428,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7004,
											"end": 7694,
											"name": "tag",
											"source": 2,
											"value": "231"
										},
										{
											"begin": 7004,
											"end": 7694,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7205,
											"end": 7235,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "275"
										},
										{
											"begin": 7213,
											"end": 7217,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 7219,
											"end": 7221,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 7223,
											"end": 7226,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 7228,
											"end": 7234,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 7205,
											"end": 7212,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "276"
										},
										{
											"begin": 7205,
											"end": 7235,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7205,
											"end": 7235,
											"name": "tag",
											"source": 2,
											"value": "275"
										},
										{
											"begin": 7205,
											"end": 7235,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7263,
											"end": 7264,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7249,
											"end": 7265,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7249,
											"end": 7265,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7249,
											"end": 7251,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 7249,
											"end": 7265,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7249,
											"end": 7265,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7249,
											"end": 7265,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 7245,
											"end": 7688,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "277"
										},
										{
											"begin": 7245,
											"end": 7688,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7281,
											"end": 7297,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7300,
											"end": 7312,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "278"
										},
										{
											"begin": 7300,
											"end": 7310,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "135"
										},
										{
											"begin": 7300,
											"end": 7312,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7300,
											"end": 7312,
											"name": "tag",
											"source": 2,
											"value": "278"
										},
										{
											"begin": 7300,
											"end": 7312,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7281,
											"end": 7312,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7281,
											"end": 7312,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7344,
											"end": 7345,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 7330,
											"end": 7333,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 7330,
											"end": 7340,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7330,
											"end": 7345,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7326,
											"end": 7678,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "279"
										},
										{
											"begin": 7326,
											"end": 7678,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7365,
											"end": 7375,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7378,
											"end": 7403,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "280"
										},
										{
											"begin": 7401,
											"end": 7402,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7378,
											"end": 7381,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 7378,
											"end": 7400,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "158"
										},
										{
											"begin": 7378,
											"end": 7400,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7378,
											"end": 7403,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7378,
											"end": 7403,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7378,
											"end": 7403,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7378,
											"end": 7403,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7378,
											"end": 7403,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7378,
											"end": 7403,
											"name": "tag",
											"source": 2,
											"value": "280"
										},
										{
											"begin": 7378,
											"end": 7403,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7365,
											"end": 7403,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7365,
											"end": 7403,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7421,
											"end": 7434,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7437,
											"end": 7465,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "281"
										},
										{
											"begin": 7463,
											"end": 7464,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7437,
											"end": 7443,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 7437,
											"end": 7462,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "158"
										},
										{
											"begin": 7437,
											"end": 7462,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7437,
											"end": 7465,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7437,
											"end": 7465,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7437,
											"end": 7465,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7437,
											"end": 7465,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7437,
											"end": 7465,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7437,
											"end": 7465,
											"name": "tag",
											"source": 2,
											"value": "281"
										},
										{
											"begin": 7437,
											"end": 7465,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7421,
											"end": 7465,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7421,
											"end": 7465,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7483,
											"end": 7550,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "282"
										},
										{
											"begin": 7514,
											"end": 7522,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7524,
											"end": 7528,
											"name": "DUP10",
											"source": 2
										},
										{
											"begin": 7530,
											"end": 7532,
											"name": "DUP10",
											"source": 2
										},
										{
											"begin": 7534,
											"end": 7536,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 7538,
											"end": 7543,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 7545,
											"end": 7549,
											"name": "DUP10",
											"source": 2
										},
										{
											"begin": 7483,
											"end": 7513,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "283"
										},
										{
											"begin": 7483,
											"end": 7550,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7483,
											"end": 7550,
											"name": "tag",
											"source": 2,
											"value": "282"
										},
										{
											"begin": 7483,
											"end": 7550,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7347,
											"end": 7565,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7347,
											"end": 7565,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7326,
											"end": 7678,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "284"
										},
										{
											"begin": 7326,
											"end": 7678,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7326,
											"end": 7678,
											"name": "tag",
											"source": 2,
											"value": "279"
										},
										{
											"begin": 7326,
											"end": 7678,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7589,
											"end": 7663,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "285"
										},
										{
											"begin": 7625,
											"end": 7633,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7635,
											"end": 7639,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 7641,
											"end": 7643,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 7645,
											"end": 7648,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 7650,
											"end": 7656,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 7658,
											"end": 7662,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 7589,
											"end": 7624,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "286"
										},
										{
											"begin": 7589,
											"end": 7663,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7589,
											"end": 7663,
											"name": "tag",
											"source": 2,
											"value": "285"
										},
										{
											"begin": 7589,
											"end": 7663,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7326,
											"end": 7678,
											"name": "tag",
											"source": 2,
											"value": "284"
										},
										{
											"begin": 7326,
											"end": 7678,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7267,
											"end": 7688,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7245,
											"end": 7688,
											"name": "tag",
											"source": 2,
											"value": "277"
										},
										{
											"begin": 7245,
											"end": 7688,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7004,
											"end": 7694,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7004,
											"end": 7694,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7004,
											"end": 7694,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7004,
											"end": 7694,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7004,
											"end": 7694,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7004,
											"end": 7694,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 16080,
											"end": 16929,
											"name": "tag",
											"source": 2,
											"value": "256"
										},
										{
											"begin": 16080,
											"end": 16929,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 16188,
											"end": 16211,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 16213,
											"end": 16236,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 16374,
											"end": 16378,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 16368,
											"end": 16379,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 16358,
											"end": 16379,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 16358,
											"end": 16379,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16444,
											"end": 16445,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 16436,
											"end": 16442,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 16429,
											"end": 16446,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 16582,
											"end": 16590,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 16575,
											"end": 16579,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 16567,
											"end": 16573,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 16563,
											"end": 16580,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 16556,
											"end": 16591,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 16704,
											"end": 16708,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 16696,
											"end": 16702,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 16692,
											"end": 16709,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 16682,
											"end": 16709,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 16682,
											"end": 16709,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16737,
											"end": 16738,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 16729,
											"end": 16735,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 16722,
											"end": 16739,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 16778,
											"end": 16786,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 16771,
											"end": 16775,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 16763,
											"end": 16769,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 16759,
											"end": 16776,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 16752,
											"end": 16787,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 16907,
											"end": 16911,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 16899,
											"end": 16905,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 16895,
											"end": 16912,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 16889,
											"end": 16893,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 16882,
											"end": 16913,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 16080,
											"end": 16929,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 16080,
											"end": 16929,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16080,
											"end": 16929,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 16080,
											"end": 16929,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 16080,
											"end": 16929,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16080,
											"end": 16929,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2073,
											"end": 2273,
											"name": "tag",
											"source": 14,
											"value": "276"
										},
										{
											"begin": 2073,
											"end": 2273,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2232,
											"end": 2268,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "289"
										},
										{
											"begin": 2246,
											"end": 2250,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 2252,
											"end": 2254,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 2256,
											"end": 2259,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 2261,
											"end": 2267,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 2232,
											"end": 2245,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "290"
										},
										{
											"begin": 2232,
											"end": 2268,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2232,
											"end": 2268,
											"name": "tag",
											"source": 14,
											"value": "289"
										},
										{
											"begin": 2232,
											"end": 2268,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2073,
											"end": 2273,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2073,
											"end": 2273,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2073,
											"end": 2273,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2073,
											"end": 2273,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2073,
											"end": 2273,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 13761,
											"end": 14735,
											"name": "tag",
											"source": 2,
											"value": "283"
										},
										{
											"begin": 13761,
											"end": 14735,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 13984,
											"end": 13985,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 13967,
											"end": 13969,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 13967,
											"end": 13981,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13967,
											"end": 13981,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 13967,
											"end": 13981,
											"name": "EXTCODESIZE",
											"source": 2
										},
										{
											"begin": 13967,
											"end": 13985,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 13963,
											"end": 14729,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 13963,
											"end": 14729,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "292"
										},
										{
											"begin": 13963,
											"end": 14729,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 14022,
											"end": 14024,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14043,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14005,
											"end": 14043,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14043,
											"name": "PUSH",
											"source": 2,
											"value": "F23A6E61"
										},
										{
											"begin": 14044,
											"end": 14052,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 14054,
											"end": 14058,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 14060,
											"end": 14062,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 14064,
											"end": 14069,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 14071,
											"end": 14075,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "293"
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "SWAP6",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "294"
										},
										{
											"begin": 14005,
											"end": 14076,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "tag",
											"source": 2,
											"value": "293"
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "295"
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "296"
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "297"
										},
										{
											"begin": 14005,
											"end": 14076,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "tag",
											"source": 2,
											"value": "296"
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "tag",
											"source": 2,
											"value": "295"
										},
										{
											"begin": 14005,
											"end": 14076,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "298"
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "303"
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "PUSH",
											"source": 2,
											"value": "3F"
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "302"
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "tag",
											"source": 2,
											"value": "303"
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "tag",
											"source": 2,
											"value": "302"
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14377,
											"end": 14378,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 14360,
											"end": 14366,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14360,
											"end": 14373,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 14360,
											"end": 14378,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 14356,
											"end": 14705,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "304"
										},
										{
											"begin": 14356,
											"end": 14705,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 14487,
											"end": 14489,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 14464,
											"end": 14490,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 14464,
											"end": 14490,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 14464,
											"end": 14490,
											"name": "PUSH",
											"source": 2,
											"value": "57F447CE00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 14464,
											"end": 14490,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14464,
											"end": 14490,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 14464,
											"end": 14490,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 14464,
											"end": 14490,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14464,
											"end": 14490,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "305"
										},
										{
											"begin": 14464,
											"end": 14490,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 14464,
											"end": 14490,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14464,
											"end": 14490,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 14464,
											"end": 14490,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 14464,
											"end": 14490,
											"name": "tag",
											"source": 2,
											"value": "305"
										},
										{
											"begin": 14464,
											"end": 14490,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14464,
											"end": 14490,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 14464,
											"end": 14490,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 14464,
											"end": 14490,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 14464,
											"end": 14490,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 14464,
											"end": 14490,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 14464,
											"end": 14490,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14464,
											"end": 14490,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 14356,
											"end": 14705,
											"name": "tag",
											"source": 2,
											"value": "304"
										},
										{
											"begin": 14356,
											"end": 14705,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14657,
											"end": 14663,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 14651,
											"end": 14664,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 14642,
											"end": 14648,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14638,
											"end": 14640,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 14634,
											"end": 14649,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14627,
											"end": 14665,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "tag",
											"source": 2,
											"value": "298"
										},
										{
											"begin": 14001,
											"end": 14719,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14137,
											"end": 14180,
											"name": "PUSH",
											"source": 2,
											"value": "F23A6E61"
										},
										{
											"begin": 14137,
											"end": 14180,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 14137,
											"end": 14180,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 14125,
											"end": 14180,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14125,
											"end": 14180,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 14125,
											"end": 14180,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 14125,
											"end": 14133,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14125,
											"end": 14180,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14125,
											"end": 14180,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 14125,
											"end": 14180,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 14125,
											"end": 14180,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 14121,
											"end": 14295,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "308"
										},
										{
											"begin": 14121,
											"end": 14295,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 14273,
											"end": 14275,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 14250,
											"end": 14276,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 14250,
											"end": 14276,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 14250,
											"end": 14276,
											"name": "PUSH",
											"source": 2,
											"value": "57F447CE00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 14250,
											"end": 14276,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14250,
											"end": 14276,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 14250,
											"end": 14276,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 14250,
											"end": 14276,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14250,
											"end": 14276,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "309"
										},
										{
											"begin": 14250,
											"end": 14276,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 14250,
											"end": 14276,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14250,
											"end": 14276,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 14250,
											"end": 14276,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 14250,
											"end": 14276,
											"name": "tag",
											"source": 2,
											"value": "309"
										},
										{
											"begin": 14250,
											"end": 14276,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14250,
											"end": 14276,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 14250,
											"end": 14276,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 14250,
											"end": 14276,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 14250,
											"end": 14276,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 14250,
											"end": 14276,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 14250,
											"end": 14276,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14250,
											"end": 14276,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 14121,
											"end": 14295,
											"name": "tag",
											"source": 2,
											"value": "308"
										},
										{
											"begin": 14121,
											"end": 14295,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14077,
											"end": 14309,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13963,
											"end": 14729,
											"name": "tag",
											"source": 2,
											"value": "292"
										},
										{
											"begin": 13963,
											"end": 14729,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 13761,
											"end": 14735,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13761,
											"end": 14735,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13761,
											"end": 14735,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13761,
											"end": 14735,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13761,
											"end": 14735,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13761,
											"end": 14735,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13761,
											"end": 14735,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 14923,
											"end": 15964,
											"name": "tag",
											"source": 2,
											"value": "286"
										},
										{
											"begin": 14923,
											"end": 15964,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15171,
											"end": 15172,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 15154,
											"end": 15156,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 15154,
											"end": 15168,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15154,
											"end": 15168,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 15154,
											"end": 15168,
											"name": "EXTCODESIZE",
											"source": 2
										},
										{
											"begin": 15154,
											"end": 15172,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 15150,
											"end": 15958,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 15150,
											"end": 15958,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "311"
										},
										{
											"begin": 15150,
											"end": 15958,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 15209,
											"end": 15211,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15235,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15192,
											"end": 15235,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15235,
											"name": "PUSH",
											"source": 2,
											"value": "BC197C81"
										},
										{
											"begin": 15236,
											"end": 15244,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 15246,
											"end": 15250,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 15252,
											"end": 15255,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 15257,
											"end": 15263,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 15265,
											"end": 15269,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "312"
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "SWAP6",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "313"
										},
										{
											"begin": 15192,
											"end": 15270,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "tag",
											"source": 2,
											"value": "312"
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "314"
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "315"
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "297"
										},
										{
											"begin": 15192,
											"end": 15270,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "tag",
											"source": 2,
											"value": "315"
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "tag",
											"source": 2,
											"value": "314"
										},
										{
											"begin": 15192,
											"end": 15270,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "316"
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "321"
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "PUSH",
											"source": 2,
											"value": "3F"
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "320"
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "tag",
											"source": 2,
											"value": "321"
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "tag",
											"source": 2,
											"value": "320"
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15606,
											"end": 15607,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 15589,
											"end": 15595,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15589,
											"end": 15602,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 15589,
											"end": 15607,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 15585,
											"end": 15934,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "322"
										},
										{
											"begin": 15585,
											"end": 15934,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 15716,
											"end": 15718,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 15693,
											"end": 15719,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 15693,
											"end": 15719,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 15693,
											"end": 15719,
											"name": "PUSH",
											"source": 2,
											"value": "57F447CE00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15693,
											"end": 15719,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15693,
											"end": 15719,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 15693,
											"end": 15719,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 15693,
											"end": 15719,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 15693,
											"end": 15719,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "323"
										},
										{
											"begin": 15693,
											"end": 15719,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 15693,
											"end": 15719,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15693,
											"end": 15719,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 15693,
											"end": 15719,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 15693,
											"end": 15719,
											"name": "tag",
											"source": 2,
											"value": "323"
										},
										{
											"begin": 15693,
											"end": 15719,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15693,
											"end": 15719,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 15693,
											"end": 15719,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 15693,
											"end": 15719,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 15693,
											"end": 15719,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 15693,
											"end": 15719,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 15693,
											"end": 15719,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15693,
											"end": 15719,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 15585,
											"end": 15934,
											"name": "tag",
											"source": 2,
											"value": "322"
										},
										{
											"begin": 15585,
											"end": 15934,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15886,
											"end": 15892,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 15880,
											"end": 15893,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 15871,
											"end": 15877,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15867,
											"end": 15869,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 15863,
											"end": 15878,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 15856,
											"end": 15894,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "tag",
											"source": 2,
											"value": "316"
										},
										{
											"begin": 15188,
											"end": 15948,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15361,
											"end": 15409,
											"name": "PUSH",
											"source": 2,
											"value": "BC197C81"
										},
										{
											"begin": 15361,
											"end": 15409,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 15361,
											"end": 15409,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 15349,
											"end": 15409,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15349,
											"end": 15409,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 15349,
											"end": 15409,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 15349,
											"end": 15357,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15349,
											"end": 15409,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15349,
											"end": 15409,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 15349,
											"end": 15409,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 15349,
											"end": 15409,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 15345,
											"end": 15524,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "326"
										},
										{
											"begin": 15345,
											"end": 15524,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 15502,
											"end": 15504,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 15479,
											"end": 15505,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 15479,
											"end": 15505,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 15479,
											"end": 15505,
											"name": "PUSH",
											"source": 2,
											"value": "57F447CE00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15479,
											"end": 15505,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15479,
											"end": 15505,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 15479,
											"end": 15505,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 15479,
											"end": 15505,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 15479,
											"end": 15505,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "327"
										},
										{
											"begin": 15479,
											"end": 15505,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 15479,
											"end": 15505,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15479,
											"end": 15505,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 15479,
											"end": 15505,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 15479,
											"end": 15505,
											"name": "tag",
											"source": 2,
											"value": "327"
										},
										{
											"begin": 15479,
											"end": 15505,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15479,
											"end": 15505,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 15479,
											"end": 15505,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 15479,
											"end": 15505,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 15479,
											"end": 15505,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 15479,
											"end": 15505,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 15479,
											"end": 15505,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15479,
											"end": 15505,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 15345,
											"end": 15524,
											"name": "tag",
											"source": 2,
											"value": "326"
										},
										{
											"begin": 15345,
											"end": 15524,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15271,
											"end": 15538,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15150,
											"end": 15958,
											"name": "tag",
											"source": 2,
											"value": "311"
										},
										{
											"begin": 15150,
											"end": 15958,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14923,
											"end": 15964,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14923,
											"end": 15964,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14923,
											"end": 15964,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14923,
											"end": 15964,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14923,
											"end": 15964,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14923,
											"end": 15964,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14923,
											"end": 15964,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1483,
											"end": 3001,
											"name": "tag",
											"source": 6,
											"value": "290"
										},
										{
											"begin": 1483,
											"end": 3001,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1647,
											"end": 1683,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "329"
										},
										{
											"begin": 1661,
											"end": 1665,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1667,
											"end": 1669,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1671,
											"end": 1674,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1676,
											"end": 1682,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1647,
											"end": 1660,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "330"
										},
										{
											"begin": 1647,
											"end": 1683,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1647,
											"end": 1683,
											"name": "tag",
											"source": 6,
											"value": "329"
										},
										{
											"begin": 1647,
											"end": 1683,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1714,
											"end": 1715,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1698,
											"end": 1716,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1698,
											"end": 1716,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1698,
											"end": 1702,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1698,
											"end": 1716,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1698,
											"end": 1716,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1698,
											"end": 1716,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1694,
											"end": 2227,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "331"
										},
										{
											"begin": 1694,
											"end": 2227,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1732,
											"end": 1754,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1777,
											"end": 1786,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1772,
											"end": 2065,
											"name": "tag",
											"source": 6,
											"value": "332"
										},
										{
											"begin": 1772,
											"end": 2065,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1796,
											"end": 1799,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1796,
											"end": 1806,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1792,
											"end": 1793,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1792,
											"end": 1806,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 1772,
											"end": 2065,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1772,
											"end": 2065,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "333"
										},
										{
											"begin": 1772,
											"end": 2065,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1831,
											"end": 1844,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1847,
											"end": 1853,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1854,
											"end": 1855,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1847,
											"end": 1856,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1847,
											"end": 1856,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1847,
											"end": 1856,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1847,
											"end": 1856,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 1847,
											"end": 1856,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "335"
										},
										{
											"begin": 1847,
											"end": 1856,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1847,
											"end": 1856,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "336"
										},
										{
											"begin": 1847,
											"end": 1856,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "161"
										},
										{
											"begin": 1847,
											"end": 1856,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1847,
											"end": 1856,
											"name": "tag",
											"source": 6,
											"value": "336"
										},
										{
											"begin": 1847,
											"end": 1856,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1847,
											"end": 1856,
											"name": "tag",
											"source": 6,
											"value": "335"
										},
										{
											"begin": 1847,
											"end": 1856,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1847,
											"end": 1856,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1847,
											"end": 1856,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 1847,
											"end": 1856,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1847,
											"end": 1856,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1847,
											"end": 1856,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1847,
											"end": 1856,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1831,
											"end": 1856,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1831,
											"end": 1856,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2004,
											"end": 2009,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1980,
											"end": 1992,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1980,
											"end": 2000,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1993,
											"end": 1996,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 1997,
											"end": 1998,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1993,
											"end": 1999,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1993,
											"end": 1999,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1993,
											"end": 1999,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1993,
											"end": 1999,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 1993,
											"end": 1999,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "337"
										},
										{
											"begin": 1993,
											"end": 1999,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1993,
											"end": 1999,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "338"
										},
										{
											"begin": 1993,
											"end": 1999,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "161"
										},
										{
											"begin": 1993,
											"end": 1999,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1993,
											"end": 1999,
											"name": "tag",
											"source": 6,
											"value": "338"
										},
										{
											"begin": 1993,
											"end": 1999,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1993,
											"end": 1999,
											"name": "tag",
											"source": 6,
											"value": "337"
										},
										{
											"begin": 1993,
											"end": 1999,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1993,
											"end": 1999,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1993,
											"end": 1999,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 1993,
											"end": 1999,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1993,
											"end": 1999,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1993,
											"end": 1999,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1993,
											"end": 1999,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1980,
											"end": 2000,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1980,
											"end": 2000,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1980,
											"end": 2000,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1980,
											"end": 2000,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1980,
											"end": 2000,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1980,
											"end": 2000,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1980,
											"end": 2000,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1980,
											"end": 2000,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1980,
											"end": 2000,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1980,
											"end": 2000,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1980,
											"end": 2000,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 1980,
											"end": 2000,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1980,
											"end": 2009,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1980,
											"end": 2009,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1980,
											"end": 2009,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1980,
											"end": 2009,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "339"
										},
										{
											"begin": 1980,
											"end": 2009,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1980,
											"end": 2009,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1980,
											"end": 2009,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "340"
										},
										{
											"begin": 1980,
											"end": 2009,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1980,
											"end": 2009,
											"name": "tag",
											"source": 6,
											"value": "339"
										},
										{
											"begin": 1980,
											"end": 2009,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1980,
											"end": 2009,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1980,
											"end": 2009,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1980,
											"end": 2009,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1980,
											"end": 2009,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1980,
											"end": 2009,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1980,
											"end": 2009,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 1980,
											"end": 2009,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2045,
											"end": 2050,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2027,
											"end": 2050,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2027,
											"end": 2050,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "341"
										},
										{
											"begin": 2027,
											"end": 2050,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2027,
											"end": 2050,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2027,
											"end": 2050,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "340"
										},
										{
											"begin": 2027,
											"end": 2050,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2027,
											"end": 2050,
											"name": "tag",
											"source": 6,
											"value": "341"
										},
										{
											"begin": 2027,
											"end": 2050,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2027,
											"end": 2050,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2027,
											"end": 2050,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1813,
											"end": 2065,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1808,
											"end": 1811,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1808,
											"end": 1811,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "342"
										},
										{
											"begin": 1808,
											"end": 1811,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1808,
											"end": 1811,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "163"
										},
										{
											"begin": 1808,
											"end": 1811,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1808,
											"end": 1811,
											"name": "tag",
											"source": 6,
											"value": "342"
										},
										{
											"begin": 1808,
											"end": 1811,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1808,
											"end": 1811,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1808,
											"end": 1811,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1772,
											"end": 2065,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "332"
										},
										{
											"begin": 1772,
											"end": 2065,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1772,
											"end": 2065,
											"name": "tag",
											"source": 6,
											"value": "333"
										},
										{
											"begin": 1772,
											"end": 2065,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1772,
											"end": 2065,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2202,
											"end": 2216,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2183,
											"end": 2198,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 2183,
											"end": 2198,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2183,
											"end": 2216,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2183,
											"end": 2216,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2183,
											"end": 2216,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2183,
											"end": 2216,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "343"
										},
										{
											"begin": 2183,
											"end": 2216,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2183,
											"end": 2216,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2183,
											"end": 2216,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "340"
										},
										{
											"begin": 2183,
											"end": 2216,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2183,
											"end": 2216,
											"name": "tag",
											"source": 6,
											"value": "343"
										},
										{
											"begin": 2183,
											"end": 2216,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2183,
											"end": 2216,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2183,
											"end": 2216,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2183,
											"end": 2216,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2183,
											"end": 2216,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2183,
											"end": 2216,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2183,
											"end": 2216,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 2183,
											"end": 2216,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1718,
											"end": 2227,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1694,
											"end": 2227,
											"name": "tag",
											"source": 6,
											"value": "331"
										},
										{
											"begin": 1694,
											"end": 2227,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2255,
											"end": 2256,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2241,
											"end": 2257,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2241,
											"end": 2257,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2241,
											"end": 2243,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2241,
											"end": 2257,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2241,
											"end": 2257,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2241,
											"end": 2257,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2237,
											"end": 2995,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "344"
										},
										{
											"begin": 2237,
											"end": 2995,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2273,
											"end": 2295,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2318,
											"end": 2327,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2313,
											"end": 2772,
											"name": "tag",
											"source": 6,
											"value": "345"
										},
										{
											"begin": 2313,
											"end": 2772,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2337,
											"end": 2340,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2337,
											"end": 2347,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2333,
											"end": 2334,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2333,
											"end": 2347,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 2313,
											"end": 2772,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2313,
											"end": 2772,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "346"
										},
										{
											"begin": 2313,
											"end": 2772,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2372,
											"end": 2385,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2388,
											"end": 2394,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2395,
											"end": 2396,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2388,
											"end": 2397,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2388,
											"end": 2397,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2388,
											"end": 2397,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2388,
											"end": 2397,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 2388,
											"end": 2397,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "348"
										},
										{
											"begin": 2388,
											"end": 2397,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2388,
											"end": 2397,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "349"
										},
										{
											"begin": 2388,
											"end": 2397,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "161"
										},
										{
											"begin": 2388,
											"end": 2397,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2388,
											"end": 2397,
											"name": "tag",
											"source": 6,
											"value": "349"
										},
										{
											"begin": 2388,
											"end": 2397,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2388,
											"end": 2397,
											"name": "tag",
											"source": 6,
											"value": "348"
										},
										{
											"begin": 2388,
											"end": 2397,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2388,
											"end": 2397,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2388,
											"end": 2397,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 2388,
											"end": 2397,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2388,
											"end": 2397,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2388,
											"end": 2397,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2388,
											"end": 2397,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2372,
											"end": 2397,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2372,
											"end": 2397,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2578,
											"end": 2583,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2554,
											"end": 2566,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2554,
											"end": 2574,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2567,
											"end": 2570,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 2571,
											"end": 2572,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2567,
											"end": 2573,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2567,
											"end": 2573,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2567,
											"end": 2573,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2567,
											"end": 2573,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 2567,
											"end": 2573,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "350"
										},
										{
											"begin": 2567,
											"end": 2573,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2567,
											"end": 2573,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "351"
										},
										{
											"begin": 2567,
											"end": 2573,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "161"
										},
										{
											"begin": 2567,
											"end": 2573,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2567,
											"end": 2573,
											"name": "tag",
											"source": 6,
											"value": "351"
										},
										{
											"begin": 2567,
											"end": 2573,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2567,
											"end": 2573,
											"name": "tag",
											"source": 6,
											"value": "350"
										},
										{
											"begin": 2567,
											"end": 2573,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2567,
											"end": 2573,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2567,
											"end": 2573,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 2567,
											"end": 2573,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2567,
											"end": 2573,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2567,
											"end": 2573,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2567,
											"end": 2573,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2554,
											"end": 2574,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2554,
											"end": 2574,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2554,
											"end": 2574,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2554,
											"end": 2574,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2554,
											"end": 2574,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2554,
											"end": 2574,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2554,
											"end": 2574,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2554,
											"end": 2574,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2554,
											"end": 2574,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2554,
											"end": 2574,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2554,
											"end": 2574,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 2554,
											"end": 2574,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2554,
											"end": 2583,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2554,
											"end": 2583,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2554,
											"end": 2583,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2554,
											"end": 2583,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2554,
											"end": 2583,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2554,
											"end": 2583,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2554,
											"end": 2583,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2554,
											"end": 2583,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2554,
											"end": 2583,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2554,
											"end": 2583,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 2554,
											"end": 2583,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2734,
											"end": 2739,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2716,
											"end": 2739,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2716,
											"end": 2739,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2716,
											"end": 2739,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2716,
											"end": 2739,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2354,
											"end": 2772,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2349,
											"end": 2352,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2349,
											"end": 2352,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "352"
										},
										{
											"begin": 2349,
											"end": 2352,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2349,
											"end": 2352,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "163"
										},
										{
											"begin": 2349,
											"end": 2352,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2349,
											"end": 2352,
											"name": "tag",
											"source": 6,
											"value": "352"
										},
										{
											"begin": 2349,
											"end": 2352,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2349,
											"end": 2352,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2349,
											"end": 2352,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2313,
											"end": 2772,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "345"
										},
										{
											"begin": 2313,
											"end": 2772,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2313,
											"end": 2772,
											"name": "tag",
											"source": 6,
											"value": "346"
										},
										{
											"begin": 2313,
											"end": 2772,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2313,
											"end": 2772,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2956,
											"end": 2970,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2937,
											"end": 2952,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 2937,
											"end": 2952,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2937,
											"end": 2970,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2937,
											"end": 2970,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2937,
											"end": 2970,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2937,
											"end": 2970,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2937,
											"end": 2970,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2937,
											"end": 2970,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2937,
											"end": 2970,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2937,
											"end": 2970,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2937,
											"end": 2970,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2937,
											"end": 2970,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 2937,
											"end": 2970,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2259,
											"end": 2995,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2237,
											"end": 2995,
											"name": "tag",
											"source": 6,
											"value": "344"
										},
										{
											"begin": 2237,
											"end": 2995,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1483,
											"end": 3001,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1483,
											"end": 3001,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1483,
											"end": 3001,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1483,
											"end": 3001,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1483,
											"end": 3001,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5144,
											"end": 6425,
											"name": "tag",
											"source": 2,
											"value": "330"
										},
										{
											"begin": 5144,
											"end": 6425,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5279,
											"end": 5285,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5279,
											"end": 5292,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5265,
											"end": 5268,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5265,
											"end": 5275,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5265,
											"end": 5292,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 5261,
											"end": 5378,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "354"
										},
										{
											"begin": 5261,
											"end": 5378,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5344,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5341,
											"end": 5351,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5353,
											"end": 5359,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5353,
											"end": 5366,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5315,
											"end": 5367,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5315,
											"end": 5367,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5315,
											"end": 5367,
											"name": "PUSH",
											"source": 2,
											"value": "5B05999100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5315,
											"end": 5367,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5315,
											"end": 5367,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5315,
											"end": 5367,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5315,
											"end": 5367,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5315,
											"end": 5367,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "355"
										},
										{
											"begin": 5315,
											"end": 5367,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5315,
											"end": 5367,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5315,
											"end": 5367,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5315,
											"end": 5367,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "146"
										},
										{
											"begin": 5315,
											"end": 5367,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5315,
											"end": 5367,
											"name": "tag",
											"source": 2,
											"value": "355"
										},
										{
											"begin": 5315,
											"end": 5367,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5315,
											"end": 5367,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5315,
											"end": 5367,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5315,
											"end": 5367,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5315,
											"end": 5367,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5315,
											"end": 5367,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5315,
											"end": 5367,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5315,
											"end": 5367,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 5261,
											"end": 5378,
											"name": "tag",
											"source": 2,
											"value": "354"
										},
										{
											"begin": 5261,
											"end": 5378,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5388,
											"end": 5404,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5407,
											"end": 5419,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "356"
										},
										{
											"begin": 5407,
											"end": 5417,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "135"
										},
										{
											"begin": 5407,
											"end": 5419,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5407,
											"end": 5419,
											"name": "tag",
											"source": 2,
											"value": "356"
										},
										{
											"begin": 5407,
											"end": 5419,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5388,
											"end": 5419,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5388,
											"end": 5419,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5435,
											"end": 5444,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5430,
											"end": 6121,
											"name": "tag",
											"source": 2,
											"value": "357"
										},
										{
											"begin": 5430,
											"end": 6121,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5454,
											"end": 5457,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5454,
											"end": 5464,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5450,
											"end": 5451,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5450,
											"end": 5464,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 5430,
											"end": 6121,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 5430,
											"end": 6121,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "358"
										},
										{
											"begin": 5430,
											"end": 6121,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5485,
											"end": 5495,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5498,
											"end": 5523,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "360"
										},
										{
											"begin": 5521,
											"end": 5522,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5498,
											"end": 5501,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 5498,
											"end": 5520,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "158"
										},
										{
											"begin": 5498,
											"end": 5520,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5498,
											"end": 5523,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5498,
											"end": 5523,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5498,
											"end": 5523,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5498,
											"end": 5523,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5498,
											"end": 5523,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5498,
											"end": 5523,
											"name": "tag",
											"source": 2,
											"value": "360"
										},
										{
											"begin": 5498,
											"end": 5523,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5485,
											"end": 5523,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5485,
											"end": 5523,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5550,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5553,
											"end": 5581,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "361"
										},
										{
											"begin": 5579,
											"end": 5580,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5553,
											"end": 5559,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 5553,
											"end": 5578,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "158"
										},
										{
											"begin": 5553,
											"end": 5578,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5553,
											"end": 5581,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5553,
											"end": 5581,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5553,
											"end": 5581,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5553,
											"end": 5581,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5553,
											"end": 5581,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5553,
											"end": 5581,
											"name": "tag",
											"source": 2,
											"value": "361"
										},
										{
											"begin": 5553,
											"end": 5581,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5581,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5581,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5616,
											"end": 5617,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5600,
											"end": 5618,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5600,
											"end": 5618,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5600,
											"end": 5604,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 5600,
											"end": 5618,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5600,
											"end": 5618,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5600,
											"end": 5618,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 5596,
											"end": 6016,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "362"
										},
										{
											"begin": 5596,
											"end": 6016,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5638,
											"end": 5657,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5660,
											"end": 5669,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5660,
											"end": 5673,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5670,
											"end": 5672,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5660,
											"end": 5673,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5660,
											"end": 5673,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5660,
											"end": 5673,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5660,
											"end": 5673,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5660,
											"end": 5673,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5660,
											"end": 5673,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5660,
											"end": 5673,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5660,
											"end": 5673,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5660,
											"end": 5673,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5660,
											"end": 5673,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5660,
											"end": 5673,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 5660,
											"end": 5679,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5674,
											"end": 5678,
											"name": "DUP11",
											"source": 2
										},
										{
											"begin": 5660,
											"end": 5679,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5660,
											"end": 5679,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5660,
											"end": 5679,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5660,
											"end": 5679,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5660,
											"end": 5679,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5660,
											"end": 5679,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5660,
											"end": 5679,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5660,
											"end": 5679,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5660,
											"end": 5679,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5660,
											"end": 5679,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5660,
											"end": 5679,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5660,
											"end": 5679,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5660,
											"end": 5679,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5660,
											"end": 5679,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5660,
											"end": 5679,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 5660,
											"end": 5679,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 5638,
											"end": 5679,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5638,
											"end": 5679,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5715,
											"end": 5720,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5701,
											"end": 5712,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5701,
											"end": 5720,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 5697,
											"end": 5826,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 5697,
											"end": 5826,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "363"
										},
										{
											"begin": 5697,
											"end": 5826,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5778,
											"end": 5782,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 5784,
											"end": 5795,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5797,
											"end": 5802,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5804,
											"end": 5806,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5751,
											"end": 5807,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5751,
											"end": 5807,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5751,
											"end": 5807,
											"name": "PUSH",
											"source": 2,
											"value": "3DEE4C500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5751,
											"end": 5807,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5751,
											"end": 5807,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5751,
											"end": 5807,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5751,
											"end": 5807,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5751,
											"end": 5807,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "364"
										},
										{
											"begin": 5751,
											"end": 5807,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 5751,
											"end": 5807,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 5751,
											"end": 5807,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5751,
											"end": 5807,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5751,
											"end": 5807,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5751,
											"end": 5807,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "365"
										},
										{
											"begin": 5751,
											"end": 5807,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5751,
											"end": 5807,
											"name": "tag",
											"source": 2,
											"value": "364"
										},
										{
											"begin": 5751,
											"end": 5807,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5751,
											"end": 5807,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5751,
											"end": 5807,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5751,
											"end": 5807,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5751,
											"end": 5807,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5751,
											"end": 5807,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5751,
											"end": 5807,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5751,
											"end": 5807,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 5697,
											"end": 5826,
											"name": "tag",
											"source": 2,
											"value": "363"
										},
										{
											"begin": 5697,
											"end": 5826,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5978,
											"end": 5983,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5964,
											"end": 5975,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5964,
											"end": 5983,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5942,
											"end": 5951,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5942,
											"end": 5955,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5952,
											"end": 5954,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5942,
											"end": 5955,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5942,
											"end": 5955,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5942,
											"end": 5955,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5942,
											"end": 5955,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5942,
											"end": 5955,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5942,
											"end": 5955,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5942,
											"end": 5955,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5942,
											"end": 5955,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5942,
											"end": 5955,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5942,
											"end": 5955,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5942,
											"end": 5955,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 5942,
											"end": 5961,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5956,
											"end": 5960,
											"name": "DUP12",
											"source": 2
										},
										{
											"begin": 5942,
											"end": 5961,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5942,
											"end": 5961,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5942,
											"end": 5961,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5942,
											"end": 5961,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5942,
											"end": 5961,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5942,
											"end": 5961,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5942,
											"end": 5961,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5942,
											"end": 5961,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5942,
											"end": 5961,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5942,
											"end": 5961,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5942,
											"end": 5961,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5942,
											"end": 5961,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5942,
											"end": 5961,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5942,
											"end": 5961,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5942,
											"end": 5961,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 5942,
											"end": 5983,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5942,
											"end": 5983,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5942,
											"end": 5983,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 5942,
											"end": 5983,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5620,
											"end": 6016,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5596,
											"end": 6016,
											"name": "tag",
											"source": 2,
											"value": "362"
										},
										{
											"begin": 5596,
											"end": 6016,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6048,
											"end": 6049,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6034,
											"end": 6050,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6034,
											"end": 6050,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6034,
											"end": 6036,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 6034,
											"end": 6050,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6034,
											"end": 6050,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6034,
											"end": 6050,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 6030,
											"end": 6111,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "366"
										},
										{
											"begin": 6030,
											"end": 6111,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6091,
											"end": 6096,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6070,
											"end": 6079,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6070,
											"end": 6083,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6080,
											"end": 6082,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 6070,
											"end": 6083,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6070,
											"end": 6083,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6070,
											"end": 6083,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6070,
											"end": 6083,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6070,
											"end": 6083,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6070,
											"end": 6083,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6070,
											"end": 6083,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6070,
											"end": 6083,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6070,
											"end": 6083,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6070,
											"end": 6083,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6070,
											"end": 6083,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6070,
											"end": 6087,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6084,
											"end": 6086,
											"name": "DUP10",
											"source": 2
										},
										{
											"begin": 6070,
											"end": 6087,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6070,
											"end": 6087,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6070,
											"end": 6087,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6070,
											"end": 6087,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6070,
											"end": 6087,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6070,
											"end": 6087,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6070,
											"end": 6087,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6070,
											"end": 6087,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6070,
											"end": 6087,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6070,
											"end": 6087,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6070,
											"end": 6087,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6070,
											"end": 6087,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6070,
											"end": 6087,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6070,
											"end": 6087,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6070,
											"end": 6087,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6070,
											"end": 6087,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6070,
											"end": 6096,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6070,
											"end": 6096,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6070,
											"end": 6096,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6070,
											"end": 6096,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "367"
										},
										{
											"begin": 6070,
											"end": 6096,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6070,
											"end": 6096,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6070,
											"end": 6096,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "340"
										},
										{
											"begin": 6070,
											"end": 6096,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6070,
											"end": 6096,
											"name": "tag",
											"source": 2,
											"value": "367"
										},
										{
											"begin": 6070,
											"end": 6096,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6070,
											"end": 6096,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6070,
											"end": 6096,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6070,
											"end": 6096,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6070,
											"end": 6096,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6070,
											"end": 6096,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6070,
											"end": 6096,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6070,
											"end": 6096,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6030,
											"end": 6111,
											"name": "tag",
											"source": 2,
											"value": "366"
										},
										{
											"begin": 6030,
											"end": 6111,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5471,
											"end": 6121,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5471,
											"end": 6121,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5466,
											"end": 5469,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5466,
											"end": 5469,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "368"
										},
										{
											"begin": 5466,
											"end": 5469,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5466,
											"end": 5469,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "163"
										},
										{
											"begin": 5466,
											"end": 5469,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5466,
											"end": 5469,
											"name": "tag",
											"source": 2,
											"value": "368"
										},
										{
											"begin": 5466,
											"end": 5469,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5466,
											"end": 5469,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5466,
											"end": 5469,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5430,
											"end": 6121,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "357"
										},
										{
											"begin": 5430,
											"end": 6121,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5430,
											"end": 6121,
											"name": "tag",
											"source": 2,
											"value": "358"
										},
										{
											"begin": 5430,
											"end": 6121,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5430,
											"end": 6121,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6149,
											"end": 6150,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 6135,
											"end": 6138,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6135,
											"end": 6145,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6135,
											"end": 6150,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6131,
											"end": 6419,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "369"
										},
										{
											"begin": 6131,
											"end": 6419,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6166,
											"end": 6176,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6179,
											"end": 6204,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "370"
										},
										{
											"begin": 6202,
											"end": 6203,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6179,
											"end": 6182,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6179,
											"end": 6201,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "158"
										},
										{
											"begin": 6179,
											"end": 6201,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6179,
											"end": 6204,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6179,
											"end": 6204,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6179,
											"end": 6204,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6179,
											"end": 6204,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6179,
											"end": 6204,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6179,
											"end": 6204,
											"name": "tag",
											"source": 2,
											"value": "370"
										},
										{
											"begin": 6179,
											"end": 6204,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6166,
											"end": 6204,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6166,
											"end": 6204,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6218,
											"end": 6231,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6234,
											"end": 6262,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "371"
										},
										{
											"begin": 6260,
											"end": 6261,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6234,
											"end": 6240,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6234,
											"end": 6259,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "158"
										},
										{
											"begin": 6234,
											"end": 6259,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6234,
											"end": 6262,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6234,
											"end": 6262,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6234,
											"end": 6262,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6234,
											"end": 6262,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6234,
											"end": 6262,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6234,
											"end": 6262,
											"name": "tag",
											"source": 2,
											"value": "371"
										},
										{
											"begin": 6234,
											"end": 6262,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6218,
											"end": 6262,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6218,
											"end": 6262,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6312,
											"end": 6314,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6306,
											"end": 6310,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6296,
											"end": 6304,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "PUSH",
											"source": 2,
											"value": "C3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62"
										},
										{
											"begin": 6316,
											"end": 6318,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6320,
											"end": 6325,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "372"
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "146"
										},
										{
											"begin": 6281,
											"end": 6326,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "tag",
											"source": 2,
											"value": "372"
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6281,
											"end": 6326,
											"name": "LOG4",
											"source": 2
										},
										{
											"begin": 6152,
											"end": 6337,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6152,
											"end": 6337,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6131,
											"end": 6419,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "373"
										},
										{
											"begin": 6131,
											"end": 6419,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6131,
											"end": 6419,
											"name": "tag",
											"source": 2,
											"value": "369"
										},
										{
											"begin": 6131,
											"end": 6419,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6392,
											"end": 6394,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6390,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6376,
											"end": 6384,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "PUSH",
											"source": 2,
											"value": "4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB"
										},
										{
											"begin": 6396,
											"end": 6399,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 6401,
											"end": 6407,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "374"
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "375"
										},
										{
											"begin": 6362,
											"end": 6408,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "tag",
											"source": 2,
											"value": "374"
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6362,
											"end": 6408,
											"name": "LOG4",
											"source": 2
										},
										{
											"begin": 6131,
											"end": 6419,
											"name": "tag",
											"source": 2,
											"value": "373"
										},
										{
											"begin": 6131,
											"end": 6419,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5251,
											"end": 6425,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5144,
											"end": 6425,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5144,
											"end": 6425,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5144,
											"end": 6425,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5144,
											"end": 6425,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5144,
											"end": 6425,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7,
											"end": 82,
											"name": "tag",
											"source": 15,
											"value": "376"
										},
										{
											"begin": 7,
											"end": 82,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 40,
											"end": 46,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 75,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 67,
											"end": 76,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 57,
											"end": 76,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 57,
											"end": 76,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7,
											"end": 82,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 7,
											"end": 82,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 15,
											"value": "377"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 211,
											"end": 328,
											"name": "tag",
											"source": 15,
											"value": "378"
										},
										{
											"begin": 211,
											"end": 328,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 334,
											"end": 460,
											"name": "tag",
											"source": 15,
											"value": "379"
										},
										{
											"begin": 334,
											"end": 460,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 453,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 404,
											"end": 409,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 400,
											"end": 454,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 389,
											"end": 454,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 389,
											"end": 454,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 334,
											"end": 460,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 334,
											"end": 460,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 466,
											"end": 562,
											"name": "tag",
											"source": 15,
											"value": "380"
										},
										{
											"begin": 466,
											"end": 562,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 503,
											"end": 510,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "440"
										},
										{
											"begin": 550,
											"end": 555,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "379"
										},
										{
											"begin": 532,
											"end": 556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 532,
											"end": 556,
											"name": "tag",
											"source": 15,
											"value": "440"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 521,
											"end": 556,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 521,
											"end": 556,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 466,
											"end": 562,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 466,
											"end": 562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 568,
											"end": 690,
											"name": "tag",
											"source": 15,
											"value": "381"
										},
										{
											"begin": 568,
											"end": 690,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "442"
										},
										{
											"begin": 659,
											"end": 664,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "380"
										},
										{
											"begin": 641,
											"end": 665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 641,
											"end": 665,
											"name": "tag",
											"source": 15,
											"value": "442"
										},
										{
											"begin": 641,
											"end": 665,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 634,
											"end": 639,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 631,
											"end": 666,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 621,
											"end": 684,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "443"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 680,
											"end": 681,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 677,
											"end": 678,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 670,
											"end": 682,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 621,
											"end": 684,
											"name": "tag",
											"source": 15,
											"value": "443"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 568,
											"end": 690,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 568,
											"end": 690,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 696,
											"end": 835,
											"name": "tag",
											"source": 15,
											"value": "382"
										},
										{
											"begin": 696,
											"end": 835,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 742,
											"end": 747,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 780,
											"end": 786,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 767,
											"end": 787,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 758,
											"end": 787,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 758,
											"end": 787,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "445"
										},
										{
											"begin": 823,
											"end": 828,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "381"
										},
										{
											"begin": 796,
											"end": 829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 796,
											"end": 829,
											"name": "tag",
											"source": 15,
											"value": "445"
										},
										{
											"begin": 796,
											"end": 829,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 696,
											"end": 835,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 841,
											"end": 918,
											"name": "tag",
											"source": 15,
											"value": "383"
										},
										{
											"begin": 841,
											"end": 918,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 878,
											"end": 885,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 907,
											"end": 912,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 896,
											"end": 912,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 896,
											"end": 912,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 841,
											"end": 918,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 841,
											"end": 918,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 841,
											"end": 918,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 841,
											"end": 918,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 924,
											"end": 1046,
											"name": "tag",
											"source": 15,
											"value": "384"
										},
										{
											"begin": 924,
											"end": 1046,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "448"
										},
										{
											"begin": 1015,
											"end": 1020,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "383"
										},
										{
											"begin": 997,
											"end": 1021,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "tag",
											"source": 15,
											"value": "448"
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 990,
											"end": 995,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 987,
											"end": 1022,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "449"
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 1036,
											"end": 1037,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1033,
											"end": 1034,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 1026,
											"end": 1038,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "tag",
											"source": 15,
											"value": "449"
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 924,
											"end": 1046,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 924,
											"end": 1046,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "tag",
											"source": 15,
											"value": "385"
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1098,
											"end": 1103,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1123,
											"end": 1143,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 1114,
											"end": 1143,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1114,
											"end": 1143,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "451"
										},
										{
											"begin": 1179,
											"end": 1184,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "384"
										},
										{
											"begin": 1152,
											"end": 1185,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "tag",
											"source": 15,
											"value": "451"
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1052,
											"end": 1191,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "tag",
											"source": 15,
											"value": "28"
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1265,
											"end": 1271,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 1322,
											"end": 1324,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 1310,
											"end": 1319,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 1301,
											"end": 1308,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 1297,
											"end": 1320,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 1293,
											"end": 1325,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 1290,
											"end": 1409,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 1290,
											"end": 1409,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "453"
										},
										{
											"begin": 1290,
											"end": 1409,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 1328,
											"end": 1407,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "454"
										},
										{
											"begin": 1328,
											"end": 1407,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "377"
										},
										{
											"begin": 1328,
											"end": 1407,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1328,
											"end": 1407,
											"name": "tag",
											"source": 15,
											"value": "454"
										},
										{
											"begin": 1328,
											"end": 1407,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1290,
											"end": 1409,
											"name": "tag",
											"source": 15,
											"value": "453"
										},
										{
											"begin": 1290,
											"end": 1409,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1448,
											"end": 1449,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1473,
											"end": 1526,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "455"
										},
										{
											"begin": 1518,
											"end": 1525,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 1509,
											"end": 1515,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 1498,
											"end": 1507,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 1494,
											"end": 1516,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1473,
											"end": 1526,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "382"
										},
										{
											"begin": 1473,
											"end": 1526,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1473,
											"end": 1526,
											"name": "tag",
											"source": 15,
											"value": "455"
										},
										{
											"begin": 1473,
											"end": 1526,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1463,
											"end": 1526,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 1463,
											"end": 1526,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1419,
											"end": 1536,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1575,
											"end": 1577,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 1601,
											"end": 1654,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "456"
										},
										{
											"begin": 1646,
											"end": 1653,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 1637,
											"end": 1643,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 1626,
											"end": 1635,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 1622,
											"end": 1644,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1601,
											"end": 1654,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "385"
										},
										{
											"begin": 1601,
											"end": 1654,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1601,
											"end": 1654,
											"name": "tag",
											"source": 15,
											"value": "456"
										},
										{
											"begin": 1601,
											"end": 1654,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1591,
											"end": 1654,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 1591,
											"end": 1654,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1546,
											"end": 1664,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1197,
											"end": 1671,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1677,
											"end": 1795,
											"name": "tag",
											"source": 15,
											"value": "386"
										},
										{
											"begin": 1677,
											"end": 1795,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1764,
											"end": 1788,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "458"
										},
										{
											"begin": 1782,
											"end": 1787,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1764,
											"end": 1788,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "383"
										},
										{
											"begin": 1764,
											"end": 1788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1764,
											"end": 1788,
											"name": "tag",
											"source": 15,
											"value": "458"
										},
										{
											"begin": 1764,
											"end": 1788,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1759,
											"end": 1762,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 1752,
											"end": 1789,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 1677,
											"end": 1795,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1677,
											"end": 1795,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1677,
											"end": 1795,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1801,
											"end": 2023,
											"name": "tag",
											"source": 15,
											"value": "31"
										},
										{
											"begin": 1801,
											"end": 2023,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1894,
											"end": 1898,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1932,
											"end": 1934,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 1921,
											"end": 1930,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 1917,
											"end": 1935,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1909,
											"end": 1935,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1909,
											"end": 1935,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1945,
											"end": 2016,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "460"
										},
										{
											"begin": 2013,
											"end": 2014,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2002,
											"end": 2011,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 1998,
											"end": 2015,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1989,
											"end": 1995,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 1945,
											"end": 2016,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "386"
										},
										{
											"begin": 1945,
											"end": 2016,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1945,
											"end": 2016,
											"name": "tag",
											"source": 15,
											"value": "460"
										},
										{
											"begin": 1945,
											"end": 2016,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1801,
											"end": 2023,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 1801,
											"end": 2023,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 1801,
											"end": 2023,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1801,
											"end": 2023,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1801,
											"end": 2023,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2029,
											"end": 2178,
											"name": "tag",
											"source": 15,
											"value": "387"
										},
										{
											"begin": 2029,
											"end": 2178,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2065,
											"end": 2072,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2105,
											"end": 2171,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2098,
											"end": 2103,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 2094,
											"end": 2172,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 2083,
											"end": 2172,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2083,
											"end": 2172,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2029,
											"end": 2178,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 2029,
											"end": 2178,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2029,
											"end": 2178,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2029,
											"end": 2178,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2184,
											"end": 2304,
											"name": "tag",
											"source": 15,
											"value": "388"
										},
										{
											"begin": 2184,
											"end": 2304,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2256,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "463"
										},
										{
											"begin": 2273,
											"end": 2278,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2256,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "387"
										},
										{
											"begin": 2256,
											"end": 2279,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2256,
											"end": 2279,
											"name": "tag",
											"source": 15,
											"value": "463"
										},
										{
											"begin": 2256,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2249,
											"end": 2254,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2246,
											"end": 2280,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 2236,
											"end": 2298,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "464"
										},
										{
											"begin": 2236,
											"end": 2298,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 2294,
											"end": 2295,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2291,
											"end": 2292,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 2236,
											"end": 2298,
											"name": "tag",
											"source": 15,
											"value": "464"
										},
										{
											"begin": 2236,
											"end": 2298,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2184,
											"end": 2304,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2184,
											"end": 2304,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2310,
											"end": 2447,
											"name": "tag",
											"source": 15,
											"value": "389"
										},
										{
											"begin": 2310,
											"end": 2447,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2355,
											"end": 2360,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2393,
											"end": 2399,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2380,
											"end": 2400,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 2371,
											"end": 2400,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2371,
											"end": 2400,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2409,
											"end": 2441,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "466"
										},
										{
											"begin": 2435,
											"end": 2440,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2409,
											"end": 2441,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "388"
										},
										{
											"begin": 2409,
											"end": 2441,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2409,
											"end": 2441,
											"name": "tag",
											"source": 15,
											"value": "466"
										},
										{
											"begin": 2409,
											"end": 2441,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2310,
											"end": 2447,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 2310,
											"end": 2447,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 2310,
											"end": 2447,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2310,
											"end": 2447,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2310,
											"end": 2447,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2453,
											"end": 2780,
											"name": "tag",
											"source": 15,
											"value": "34"
										},
										{
											"begin": 2453,
											"end": 2780,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2511,
											"end": 2517,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2560,
											"end": 2562,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 2548,
											"end": 2557,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 2539,
											"end": 2546,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 2535,
											"end": 2558,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 2531,
											"end": 2563,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 2528,
											"end": 2647,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 2528,
											"end": 2647,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "468"
										},
										{
											"begin": 2528,
											"end": 2647,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 2566,
											"end": 2645,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "469"
										},
										{
											"begin": 2566,
											"end": 2645,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "377"
										},
										{
											"begin": 2566,
											"end": 2645,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2566,
											"end": 2645,
											"name": "tag",
											"source": 15,
											"value": "469"
										},
										{
											"begin": 2566,
											"end": 2645,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2528,
											"end": 2647,
											"name": "tag",
											"source": 15,
											"value": "468"
										},
										{
											"begin": 2528,
											"end": 2647,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2686,
											"end": 2687,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2711,
											"end": 2763,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "470"
										},
										{
											"begin": 2755,
											"end": 2762,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 2746,
											"end": 2752,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 2735,
											"end": 2744,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 2731,
											"end": 2753,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2711,
											"end": 2763,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "389"
										},
										{
											"begin": 2711,
											"end": 2763,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2711,
											"end": 2763,
											"name": "tag",
											"source": 15,
											"value": "470"
										},
										{
											"begin": 2711,
											"end": 2763,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2701,
											"end": 2763,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 2701,
											"end": 2763,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2657,
											"end": 2773,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2453,
											"end": 2780,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 2453,
											"end": 2780,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 2453,
											"end": 2780,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2453,
											"end": 2780,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2453,
											"end": 2780,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2786,
											"end": 2876,
											"name": "tag",
											"source": 15,
											"value": "390"
										},
										{
											"begin": 2786,
											"end": 2876,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2820,
											"end": 2827,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2863,
											"end": 2868,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2856,
											"end": 2869,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 2849,
											"end": 2870,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 2838,
											"end": 2870,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2838,
											"end": 2870,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2786,
											"end": 2876,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 2786,
											"end": 2876,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2786,
											"end": 2876,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2786,
											"end": 2876,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2882,
											"end": 2991,
											"name": "tag",
											"source": 15,
											"value": "391"
										},
										{
											"begin": 2882,
											"end": 2991,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2963,
											"end": 2984,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "473"
										},
										{
											"begin": 2978,
											"end": 2983,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2963,
											"end": 2984,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "390"
										},
										{
											"begin": 2963,
											"end": 2984,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2963,
											"end": 2984,
											"name": "tag",
											"source": 15,
											"value": "473"
										},
										{
											"begin": 2963,
											"end": 2984,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2958,
											"end": 2961,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 2951,
											"end": 2985,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 2882,
											"end": 2991,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2882,
											"end": 2991,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2882,
											"end": 2991,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2997,
											"end": 3207,
											"name": "tag",
											"source": 15,
											"value": "37"
										},
										{
											"begin": 2997,
											"end": 3207,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3084,
											"end": 3088,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3122,
											"end": 3124,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 3111,
											"end": 3120,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 3107,
											"end": 3125,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3099,
											"end": 3125,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 3099,
											"end": 3125,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3135,
											"end": 3200,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "475"
										},
										{
											"begin": 3197,
											"end": 3198,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3186,
											"end": 3195,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 3182,
											"end": 3199,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3173,
											"end": 3179,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 3135,
											"end": 3200,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "391"
										},
										{
											"begin": 3135,
											"end": 3200,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3135,
											"end": 3200,
											"name": "tag",
											"source": 15,
											"value": "475"
										},
										{
											"begin": 3135,
											"end": 3200,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2997,
											"end": 3207,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 2997,
											"end": 3207,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 2997,
											"end": 3207,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2997,
											"end": 3207,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2997,
											"end": 3207,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3213,
											"end": 3542,
											"name": "tag",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 3213,
											"end": 3542,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3272,
											"end": 3278,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3321,
											"end": 3323,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 3309,
											"end": 3318,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 3300,
											"end": 3307,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 3296,
											"end": 3319,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 3292,
											"end": 3324,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 3289,
											"end": 3408,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 3289,
											"end": 3408,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "477"
										},
										{
											"begin": 3289,
											"end": 3408,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 3327,
											"end": 3406,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "478"
										},
										{
											"begin": 3327,
											"end": 3406,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "377"
										},
										{
											"begin": 3327,
											"end": 3406,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3327,
											"end": 3406,
											"name": "tag",
											"source": 15,
											"value": "478"
										},
										{
											"begin": 3327,
											"end": 3406,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3289,
											"end": 3408,
											"name": "tag",
											"source": 15,
											"value": "477"
										},
										{
											"begin": 3289,
											"end": 3408,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3447,
											"end": 3448,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3472,
											"end": 3525,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "479"
										},
										{
											"begin": 3517,
											"end": 3524,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 3508,
											"end": 3514,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 3497,
											"end": 3506,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 3493,
											"end": 3515,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3472,
											"end": 3525,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "385"
										},
										{
											"begin": 3472,
											"end": 3525,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3472,
											"end": 3525,
											"name": "tag",
											"source": 15,
											"value": "479"
										},
										{
											"begin": 3472,
											"end": 3525,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3462,
											"end": 3525,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 3462,
											"end": 3525,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3418,
											"end": 3535,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3213,
											"end": 3542,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 3213,
											"end": 3542,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 3213,
											"end": 3542,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3213,
											"end": 3542,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3213,
											"end": 3542,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3548,
											"end": 3647,
											"name": "tag",
											"source": 15,
											"value": "392"
										},
										{
											"begin": 3548,
											"end": 3647,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3600,
											"end": 3606,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3634,
											"end": 3639,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 3628,
											"end": 3640,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 3618,
											"end": 3640,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 3618,
											"end": 3640,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3548,
											"end": 3647,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 3548,
											"end": 3647,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 3548,
											"end": 3647,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3548,
											"end": 3647,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3653,
											"end": 3822,
											"name": "tag",
											"source": 15,
											"value": "393"
										},
										{
											"begin": 3653,
											"end": 3822,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3737,
											"end": 3748,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3771,
											"end": 3777,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 3766,
											"end": 3769,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 3759,
											"end": 3778,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 3811,
											"end": 3815,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 3806,
											"end": 3809,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 3802,
											"end": 3816,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3787,
											"end": 3816,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 3787,
											"end": 3816,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3653,
											"end": 3822,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 3653,
											"end": 3822,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 3653,
											"end": 3822,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3653,
											"end": 3822,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3653,
											"end": 3822,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3828,
											"end": 4074,
											"name": "tag",
											"source": 15,
											"value": "394"
										},
										{
											"begin": 3828,
											"end": 4074,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3909,
											"end": 3910,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3919,
											"end": 4032,
											"name": "tag",
											"source": 15,
											"value": "483"
										},
										{
											"begin": 3919,
											"end": 4032,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3933,
											"end": 3939,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 3930,
											"end": 3931,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 3927,
											"end": 3940,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 3919,
											"end": 4032,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 3919,
											"end": 4032,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "485"
										},
										{
											"begin": 3919,
											"end": 4032,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 4018,
											"end": 4019,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 4013,
											"end": 4016,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 4009,
											"end": 4020,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4003,
											"end": 4021,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 3999,
											"end": 4000,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 3994,
											"end": 3997,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 3990,
											"end": 4001,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3983,
											"end": 4022,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 3955,
											"end": 3957,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 3952,
											"end": 3953,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 3948,
											"end": 3958,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3943,
											"end": 3958,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 3943,
											"end": 3958,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3919,
											"end": 4032,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "483"
										},
										{
											"begin": 3919,
											"end": 4032,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3919,
											"end": 4032,
											"name": "tag",
											"source": 15,
											"value": "485"
										},
										{
											"begin": 3919,
											"end": 4032,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4066,
											"end": 4067,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 4057,
											"end": 4063,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 4052,
											"end": 4055,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 4048,
											"end": 4064,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4041,
											"end": 4068,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 3890,
											"end": 4074,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3828,
											"end": 4074,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3828,
											"end": 4074,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3828,
											"end": 4074,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3828,
											"end": 4074,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4080,
											"end": 4182,
											"name": "tag",
											"source": 15,
											"value": "395"
										},
										{
											"begin": 4080,
											"end": 4182,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4121,
											"end": 4127,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 4172,
											"end": 4174,
											"name": "PUSH",
											"source": 15,
											"value": "1F"
										},
										{
											"begin": 4168,
											"end": 4175,
											"name": "NOT",
											"source": 15
										},
										{
											"begin": 4163,
											"end": 4165,
											"name": "PUSH",
											"source": 15,
											"value": "1F"
										},
										{
											"begin": 4156,
											"end": 4161,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 4152,
											"end": 4166,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4148,
											"end": 4176,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 4138,
											"end": 4176,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 4138,
											"end": 4176,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4080,
											"end": 4182,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 4080,
											"end": 4182,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 4080,
											"end": 4182,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4080,
											"end": 4182,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4188,
											"end": 4565,
											"name": "tag",
											"source": 15,
											"value": "396"
										},
										{
											"begin": 4188,
											"end": 4565,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4276,
											"end": 4279,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 4304,
											"end": 4343,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "488"
										},
										{
											"begin": 4337,
											"end": 4342,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 4304,
											"end": 4343,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "392"
										},
										{
											"begin": 4304,
											"end": 4343,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4304,
											"end": 4343,
											"name": "tag",
											"source": 15,
											"value": "488"
										},
										{
											"begin": 4304,
											"end": 4343,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4359,
											"end": 4430,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "489"
										},
										{
											"begin": 4423,
											"end": 4429,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 4418,
											"end": 4421,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 4359,
											"end": 4430,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "393"
										},
										{
											"begin": 4359,
											"end": 4430,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4359,
											"end": 4430,
											"name": "tag",
											"source": 15,
											"value": "489"
										},
										{
											"begin": 4359,
											"end": 4430,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4352,
											"end": 4430,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 4352,
											"end": 4430,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4439,
											"end": 4504,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "490"
										},
										{
											"begin": 4497,
											"end": 4503,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 4492,
											"end": 4495,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 4485,
											"end": 4489,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 4478,
											"end": 4483,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 4474,
											"end": 4490,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4439,
											"end": 4504,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "394"
										},
										{
											"begin": 4439,
											"end": 4504,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4439,
											"end": 4504,
											"name": "tag",
											"source": 15,
											"value": "490"
										},
										{
											"begin": 4439,
											"end": 4504,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4529,
											"end": 4558,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "491"
										},
										{
											"begin": 4551,
											"end": 4557,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 4529,
											"end": 4558,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "395"
										},
										{
											"begin": 4529,
											"end": 4558,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4529,
											"end": 4558,
											"name": "tag",
											"source": 15,
											"value": "491"
										},
										{
											"begin": 4529,
											"end": 4558,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4524,
											"end": 4527,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 4520,
											"end": 4559,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4513,
											"end": 4559,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 4513,
											"end": 4559,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4280,
											"end": 4565,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4188,
											"end": 4565,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 4188,
											"end": 4565,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 4188,
											"end": 4565,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4188,
											"end": 4565,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4188,
											"end": 4565,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4571,
											"end": 4884,
											"name": "tag",
											"source": 15,
											"value": "43"
										},
										{
											"begin": 4571,
											"end": 4884,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4684,
											"end": 4688,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 4722,
											"end": 4724,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 4711,
											"end": 4720,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 4707,
											"end": 4725,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4699,
											"end": 4725,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 4699,
											"end": 4725,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4771,
											"end": 4780,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 4765,
											"end": 4769,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 4761,
											"end": 4781,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 4757,
											"end": 4758,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 4746,
											"end": 4755,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 4742,
											"end": 4759,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4735,
											"end": 4782,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 4799,
											"end": 4877,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "493"
										},
										{
											"begin": 4872,
											"end": 4876,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 4863,
											"end": 4869,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 4799,
											"end": 4877,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "396"
										},
										{
											"begin": 4799,
											"end": 4877,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4799,
											"end": 4877,
											"name": "tag",
											"source": 15,
											"value": "493"
										},
										{
											"begin": 4799,
											"end": 4877,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4791,
											"end": 4877,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 4791,
											"end": 4877,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4571,
											"end": 4884,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 4571,
											"end": 4884,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 4571,
											"end": 4884,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4571,
											"end": 4884,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4571,
											"end": 4884,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4890,
											"end": 5007,
											"name": "tag",
											"source": 15,
											"value": "397"
										},
										{
											"begin": 4890,
											"end": 5007,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4999,
											"end": 5000,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 4996,
											"end": 4997,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 4989,
											"end": 5001,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 5013,
											"end": 5193,
											"name": "tag",
											"source": 15,
											"value": "149"
										},
										{
											"begin": 5013,
											"end": 5193,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5061,
											"end": 5138,
											"name": "PUSH",
											"source": 15,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5058,
											"end": 5059,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 5051,
											"end": 5139,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 5158,
											"end": 5162,
											"name": "PUSH",
											"source": 15,
											"value": "41"
										},
										{
											"begin": 5155,
											"end": 5156,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 5148,
											"end": 5163,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 5182,
											"end": 5186,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 5179,
											"end": 5180,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 5172,
											"end": 5187,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 5199,
											"end": 5480,
											"name": "tag",
											"source": 15,
											"value": "398"
										},
										{
											"begin": 5199,
											"end": 5480,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5282,
											"end": 5309,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "497"
										},
										{
											"begin": 5304,
											"end": 5308,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 5282,
											"end": 5309,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "395"
										},
										{
											"begin": 5282,
											"end": 5309,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 5282,
											"end": 5309,
											"name": "tag",
											"source": 15,
											"value": "497"
										},
										{
											"begin": 5282,
											"end": 5309,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5274,
											"end": 5280,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 5270,
											"end": 5310,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 5412,
											"end": 5418,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 5400,
											"end": 5410,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 5397,
											"end": 5419,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 5376,
											"end": 5394,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5364,
											"end": 5374,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 5361,
											"end": 5395,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 5358,
											"end": 5420,
											"name": "OR",
											"source": 15
										},
										{
											"begin": 5355,
											"end": 5443,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 5355,
											"end": 5443,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "498"
										},
										{
											"begin": 5355,
											"end": 5443,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 5423,
											"end": 5441,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "499"
										},
										{
											"begin": 5423,
											"end": 5441,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "149"
										},
										{
											"begin": 5423,
											"end": 5441,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 5423,
											"end": 5441,
											"name": "tag",
											"source": 15,
											"value": "499"
										},
										{
											"begin": 5423,
											"end": 5441,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5355,
											"end": 5443,
											"name": "tag",
											"source": 15,
											"value": "498"
										},
										{
											"begin": 5355,
											"end": 5443,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5463,
											"end": 5473,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 5459,
											"end": 5461,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 5452,
											"end": 5474,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 5242,
											"end": 5480,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5199,
											"end": 5480,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5199,
											"end": 5480,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5199,
											"end": 5480,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 5486,
											"end": 5615,
											"name": "tag",
											"source": 15,
											"value": "399"
										},
										{
											"begin": 5486,
											"end": 5615,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5520,
											"end": 5526,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 5547,
											"end": 5567,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "501"
										},
										{
											"begin": 5547,
											"end": 5567,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "376"
										},
										{
											"begin": 5547,
											"end": 5567,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 5547,
											"end": 5567,
											"name": "tag",
											"source": 15,
											"value": "501"
										},
										{
											"begin": 5547,
											"end": 5567,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5537,
											"end": 5567,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 5537,
											"end": 5567,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5576,
											"end": 5609,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "502"
										},
										{
											"begin": 5604,
											"end": 5608,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 5596,
											"end": 5602,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 5576,
											"end": 5609,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "398"
										},
										{
											"begin": 5576,
											"end": 5609,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 5576,
											"end": 5609,
											"name": "tag",
											"source": 15,
											"value": "502"
										},
										{
											"begin": 5576,
											"end": 5609,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5486,
											"end": 5615,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 5486,
											"end": 5615,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 5486,
											"end": 5615,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5486,
											"end": 5615,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 5621,
											"end": 5932,
											"name": "tag",
											"source": 15,
											"value": "400"
										},
										{
											"begin": 5621,
											"end": 5932,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5698,
											"end": 5702,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 5788,
											"end": 5806,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5780,
											"end": 5786,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 5777,
											"end": 5807,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 5774,
											"end": 5830,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 5774,
											"end": 5830,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "504"
										},
										{
											"begin": 5774,
											"end": 5830,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 5810,
											"end": 5828,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "505"
										},
										{
											"begin": 5810,
											"end": 5828,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "149"
										},
										{
											"begin": 5810,
											"end": 5828,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 5810,
											"end": 5828,
											"name": "tag",
											"source": 15,
											"value": "505"
										},
										{
											"begin": 5810,
											"end": 5828,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5774,
											"end": 5830,
											"name": "tag",
											"source": 15,
											"value": "504"
										},
										{
											"begin": 5774,
											"end": 5830,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5860,
											"end": 5864,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 5852,
											"end": 5858,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 5848,
											"end": 5865,
											"name": "MUL",
											"source": 15
										},
										{
											"begin": 5840,
											"end": 5865,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 5840,
											"end": 5865,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5920,
											"end": 5924,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 5914,
											"end": 5918,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 5910,
											"end": 5925,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 5902,
											"end": 5925,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 5902,
											"end": 5925,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5621,
											"end": 5932,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 5621,
											"end": 5932,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 5621,
											"end": 5932,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5621,
											"end": 5932,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 5938,
											"end": 6055,
											"name": "tag",
											"source": 15,
											"value": "401"
										},
										{
											"begin": 5938,
											"end": 6055,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6047,
											"end": 6048,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 6044,
											"end": 6045,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 6037,
											"end": 6049,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 6078,
											"end": 6788,
											"name": "tag",
											"source": 15,
											"value": "402"
										},
										{
											"begin": 6078,
											"end": 6788,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6174,
											"end": 6179,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 6199,
											"end": 6280,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "508"
										},
										{
											"begin": 6215,
											"end": 6279,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "509"
										},
										{
											"begin": 6272,
											"end": 6278,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 6215,
											"end": 6279,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "400"
										},
										{
											"begin": 6215,
											"end": 6279,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 6215,
											"end": 6279,
											"name": "tag",
											"source": 15,
											"value": "509"
										},
										{
											"begin": 6215,
											"end": 6279,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6199,
											"end": 6280,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "399"
										},
										{
											"begin": 6199,
											"end": 6280,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 6199,
											"end": 6280,
											"name": "tag",
											"source": 15,
											"value": "508"
										},
										{
											"begin": 6199,
											"end": 6280,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6190,
											"end": 6280,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 6190,
											"end": 6280,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6300,
											"end": 6305,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 6329,
											"end": 6335,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 6322,
											"end": 6327,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 6315,
											"end": 6336,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 6363,
											"end": 6367,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 6356,
											"end": 6361,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 6352,
											"end": 6368,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 6345,
											"end": 6368,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 6345,
											"end": 6368,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6416,
											"end": 6420,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 6408,
											"end": 6414,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 6404,
											"end": 6421,
											"name": "MUL",
											"source": 15
										},
										{
											"begin": 6396,
											"end": 6402,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 6392,
											"end": 6422,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 6445,
											"end": 6448,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 6437,
											"end": 6443,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 6434,
											"end": 6449,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 6431,
											"end": 6553,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 6431,
											"end": 6553,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "510"
										},
										{
											"begin": 6431,
											"end": 6553,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 6464,
											"end": 6543,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "511"
										},
										{
											"begin": 6464,
											"end": 6543,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "401"
										},
										{
											"begin": 6464,
											"end": 6543,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 6464,
											"end": 6543,
											"name": "tag",
											"source": 15,
											"value": "511"
										},
										{
											"begin": 6464,
											"end": 6543,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6431,
											"end": 6553,
											"name": "tag",
											"source": 15,
											"value": "510"
										},
										{
											"begin": 6431,
											"end": 6553,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6579,
											"end": 6585,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 6562,
											"end": 6782,
											"name": "tag",
											"source": 15,
											"value": "512"
										},
										{
											"begin": 6562,
											"end": 6782,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6596,
											"end": 6602,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 6591,
											"end": 6594,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 6588,
											"end": 6603,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 6562,
											"end": 6782,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 6562,
											"end": 6782,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "514"
										},
										{
											"begin": 6562,
											"end": 6782,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 6671,
											"end": 6674,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 6700,
											"end": 6737,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "515"
										},
										{
											"begin": 6733,
											"end": 6736,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 6721,
											"end": 6731,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 6700,
											"end": 6737,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "385"
										},
										{
											"begin": 6700,
											"end": 6737,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 6700,
											"end": 6737,
											"name": "tag",
											"source": 15,
											"value": "515"
										},
										{
											"begin": 6700,
											"end": 6737,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6695,
											"end": 6698,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 6688,
											"end": 6738,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 6767,
											"end": 6771,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 6762,
											"end": 6765,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 6758,
											"end": 6772,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 6751,
											"end": 6772,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 6751,
											"end": 6772,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6638,
											"end": 6782,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6622,
											"end": 6626,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 6617,
											"end": 6620,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 6613,
											"end": 6627,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 6606,
											"end": 6627,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 6606,
											"end": 6627,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6562,
											"end": 6782,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "512"
										},
										{
											"begin": 6562,
											"end": 6782,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 6562,
											"end": 6782,
											"name": "tag",
											"source": 15,
											"value": "514"
										},
										{
											"begin": 6562,
											"end": 6782,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6566,
											"end": 6587,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6180,
											"end": 6788,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6180,
											"end": 6788,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6078,
											"end": 6788,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 6078,
											"end": 6788,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 6078,
											"end": 6788,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6078,
											"end": 6788,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6078,
											"end": 6788,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6078,
											"end": 6788,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 6811,
											"end": 7181,
											"name": "tag",
											"source": 15,
											"value": "403"
										},
										{
											"begin": 6811,
											"end": 7181,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6882,
											"end": 6887,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 6931,
											"end": 6934,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 6924,
											"end": 6928,
											"name": "PUSH",
											"source": 15,
											"value": "1F"
										},
										{
											"begin": 6916,
											"end": 6922,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 6912,
											"end": 6929,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 6908,
											"end": 6935,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 6898,
											"end": 7020,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "517"
										},
										{
											"begin": 6898,
											"end": 7020,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 6939,
											"end": 7018,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "518"
										},
										{
											"begin": 6939,
											"end": 7018,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "397"
										},
										{
											"begin": 6939,
											"end": 7018,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 6939,
											"end": 7018,
											"name": "tag",
											"source": 15,
											"value": "518"
										},
										{
											"begin": 6939,
											"end": 7018,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6898,
											"end": 7020,
											"name": "tag",
											"source": 15,
											"value": "517"
										},
										{
											"begin": 6898,
											"end": 7020,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7056,
											"end": 7062,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 7043,
											"end": 7063,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 7081,
											"end": 7175,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "519"
										},
										{
											"begin": 7171,
											"end": 7174,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 7163,
											"end": 7169,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 7156,
											"end": 7160,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 7148,
											"end": 7154,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 7144,
											"end": 7161,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 7081,
											"end": 7175,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "402"
										},
										{
											"begin": 7081,
											"end": 7175,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 7081,
											"end": 7175,
											"name": "tag",
											"source": 15,
											"value": "519"
										},
										{
											"begin": 7081,
											"end": 7175,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7072,
											"end": 7175,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 7072,
											"end": 7175,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6888,
											"end": 7181,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6811,
											"end": 7181,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 6811,
											"end": 7181,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 6811,
											"end": 7181,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6811,
											"end": 7181,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6811,
											"end": 7181,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 7187,
											"end": 7304,
											"name": "tag",
											"source": 15,
											"value": "404"
										},
										{
											"begin": 7187,
											"end": 7304,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7296,
											"end": 7297,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 7293,
											"end": 7294,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 7286,
											"end": 7298,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 7310,
											"end": 7617,
											"name": "tag",
											"source": 15,
											"value": "405"
										},
										{
											"begin": 7310,
											"end": 7617,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7371,
											"end": 7375,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 7461,
											"end": 7479,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7453,
											"end": 7459,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 7450,
											"end": 7480,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 7447,
											"end": 7503,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 7447,
											"end": 7503,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "522"
										},
										{
											"begin": 7447,
											"end": 7503,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 7483,
											"end": 7501,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "523"
										},
										{
											"begin": 7483,
											"end": 7501,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "149"
										},
										{
											"begin": 7483,
											"end": 7501,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 7483,
											"end": 7501,
											"name": "tag",
											"source": 15,
											"value": "523"
										},
										{
											"begin": 7483,
											"end": 7501,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7447,
											"end": 7503,
											"name": "tag",
											"source": 15,
											"value": "522"
										},
										{
											"begin": 7447,
											"end": 7503,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7521,
											"end": 7550,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "524"
										},
										{
											"begin": 7543,
											"end": 7549,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 7521,
											"end": 7550,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "395"
										},
										{
											"begin": 7521,
											"end": 7550,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 7521,
											"end": 7550,
											"name": "tag",
											"source": 15,
											"value": "524"
										},
										{
											"begin": 7521,
											"end": 7550,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7513,
											"end": 7550,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 7513,
											"end": 7550,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7605,
											"end": 7609,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 7599,
											"end": 7603,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 7595,
											"end": 7610,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 7587,
											"end": 7610,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 7587,
											"end": 7610,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7310,
											"end": 7617,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 7310,
											"end": 7617,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 7310,
											"end": 7617,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7310,
											"end": 7617,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 7623,
											"end": 7769,
											"name": "tag",
											"source": 15,
											"value": "406"
										},
										{
											"begin": 7623,
											"end": 7769,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7720,
											"end": 7726,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 7715,
											"end": 7718,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 7710,
											"end": 7713,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 7697,
											"end": 7727,
											"name": "CALLDATACOPY",
											"source": 15
										},
										{
											"begin": 7761,
											"end": 7762,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 7752,
											"end": 7758,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 7747,
											"end": 7750,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 7743,
											"end": 7759,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 7736,
											"end": 7763,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 7623,
											"end": 7769,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7623,
											"end": 7769,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7623,
											"end": 7769,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7623,
											"end": 7769,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 7775,
											"end": 8198,
											"name": "tag",
											"source": 15,
											"value": "407"
										},
										{
											"begin": 7775,
											"end": 8198,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7852,
											"end": 7857,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 7877,
											"end": 7942,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "527"
										},
										{
											"begin": 7893,
											"end": 7941,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "528"
										},
										{
											"begin": 7934,
											"end": 7940,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 7893,
											"end": 7941,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "405"
										},
										{
											"begin": 7893,
											"end": 7941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 7893,
											"end": 7941,
											"name": "tag",
											"source": 15,
											"value": "528"
										},
										{
											"begin": 7893,
											"end": 7941,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7877,
											"end": 7942,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "399"
										},
										{
											"begin": 7877,
											"end": 7942,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 7877,
											"end": 7942,
											"name": "tag",
											"source": 15,
											"value": "527"
										},
										{
											"begin": 7877,
											"end": 7942,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7868,
											"end": 7942,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 7868,
											"end": 7942,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7965,
											"end": 7971,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 7958,
											"end": 7963,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 7951,
											"end": 7972,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 8003,
											"end": 8007,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 7996,
											"end": 8001,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 7992,
											"end": 8008,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 8041,
											"end": 8044,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 8032,
											"end": 8038,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 8027,
											"end": 8030,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 8023,
											"end": 8039,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 8020,
											"end": 8045,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 8017,
											"end": 8129,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 8017,
											"end": 8129,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "529"
										},
										{
											"begin": 8017,
											"end": 8129,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 8048,
											"end": 8127,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "530"
										},
										{
											"begin": 8048,
											"end": 8127,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "404"
										},
										{
											"begin": 8048,
											"end": 8127,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 8048,
											"end": 8127,
											"name": "tag",
											"source": 15,
											"value": "530"
										},
										{
											"begin": 8048,
											"end": 8127,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8017,
											"end": 8129,
											"name": "tag",
											"source": 15,
											"value": "529"
										},
										{
											"begin": 8017,
											"end": 8129,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8138,
											"end": 8192,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "531"
										},
										{
											"begin": 8185,
											"end": 8191,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 8180,
											"end": 8183,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 8175,
											"end": 8178,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 8138,
											"end": 8192,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "406"
										},
										{
											"begin": 8138,
											"end": 8192,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 8138,
											"end": 8192,
											"name": "tag",
											"source": 15,
											"value": "531"
										},
										{
											"begin": 8138,
											"end": 8192,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7858,
											"end": 8198,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7775,
											"end": 8198,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 7775,
											"end": 8198,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 7775,
											"end": 8198,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7775,
											"end": 8198,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7775,
											"end": 8198,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7775,
											"end": 8198,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 8217,
											"end": 8555,
											"name": "tag",
											"source": 15,
											"value": "408"
										},
										{
											"begin": 8217,
											"end": 8555,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8272,
											"end": 8277,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 8321,
											"end": 8324,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 8314,
											"end": 8318,
											"name": "PUSH",
											"source": 15,
											"value": "1F"
										},
										{
											"begin": 8306,
											"end": 8312,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 8302,
											"end": 8319,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 8298,
											"end": 8325,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 8288,
											"end": 8410,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "533"
										},
										{
											"begin": 8288,
											"end": 8410,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 8329,
											"end": 8408,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "534"
										},
										{
											"begin": 8329,
											"end": 8408,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "397"
										},
										{
											"begin": 8329,
											"end": 8408,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 8329,
											"end": 8408,
											"name": "tag",
											"source": 15,
											"value": "534"
										},
										{
											"begin": 8329,
											"end": 8408,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8288,
											"end": 8410,
											"name": "tag",
											"source": 15,
											"value": "533"
										},
										{
											"begin": 8288,
											"end": 8410,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8446,
											"end": 8452,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 8433,
											"end": 8453,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 8471,
											"end": 8549,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "535"
										},
										{
											"begin": 8545,
											"end": 8548,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 8537,
											"end": 8543,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 8530,
											"end": 8534,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 8522,
											"end": 8528,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 8518,
											"end": 8535,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 8471,
											"end": 8549,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "407"
										},
										{
											"begin": 8471,
											"end": 8549,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 8471,
											"end": 8549,
											"name": "tag",
											"source": 15,
											"value": "535"
										},
										{
											"begin": 8471,
											"end": 8549,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8462,
											"end": 8549,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 8462,
											"end": 8549,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 8278,
											"end": 8555,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 8217,
											"end": 8555,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 8217,
											"end": 8555,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 8217,
											"end": 8555,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 8217,
											"end": 8555,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 8217,
											"end": 8555,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 8561,
											"end": 9924,
											"name": "tag",
											"source": 15,
											"value": "49"
										},
										{
											"begin": 8561,
											"end": 9924,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8706,
											"end": 8712,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 8714,
											"end": 8720,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 8722,
											"end": 8728,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 8730,
											"end": 8736,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 8779,
											"end": 8782,
											"name": "PUSH",
											"source": 15,
											"value": "80"
										},
										{
											"begin": 8767,
											"end": 8776,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 8758,
											"end": 8765,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 8754,
											"end": 8777,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 8750,
											"end": 8783,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 8747,
											"end": 8867,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 8747,
											"end": 8867,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "537"
										},
										{
											"begin": 8747,
											"end": 8867,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 8786,
											"end": 8865,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "538"
										},
										{
											"begin": 8786,
											"end": 8865,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "377"
										},
										{
											"begin": 8786,
											"end": 8865,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 8786,
											"end": 8865,
											"name": "tag",
											"source": 15,
											"value": "538"
										},
										{
											"begin": 8786,
											"end": 8865,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8747,
											"end": 8867,
											"name": "tag",
											"source": 15,
											"value": "537"
										},
										{
											"begin": 8747,
											"end": 8867,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8906,
											"end": 8907,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 8931,
											"end": 8984,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "539"
										},
										{
											"begin": 8976,
											"end": 8983,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 8967,
											"end": 8973,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 8956,
											"end": 8965,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 8952,
											"end": 8974,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 8931,
											"end": 8984,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "382"
										},
										{
											"begin": 8931,
											"end": 8984,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 8931,
											"end": 8984,
											"name": "tag",
											"source": 15,
											"value": "539"
										},
										{
											"begin": 8931,
											"end": 8984,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8921,
											"end": 8984,
											"name": "SWAP5",
											"source": 15
										},
										{
											"begin": 8921,
											"end": 8984,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 8877,
											"end": 8994,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 9061,
											"end": 9063,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 9050,
											"end": 9059,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 9046,
											"end": 9064,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 9033,
											"end": 9065,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 9092,
											"end": 9110,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9084,
											"end": 9090,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 9081,
											"end": 9111,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 9078,
											"end": 9195,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 9078,
											"end": 9195,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "540"
										},
										{
											"begin": 9078,
											"end": 9195,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 9114,
											"end": 9193,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "541"
										},
										{
											"begin": 9114,
											"end": 9193,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "378"
										},
										{
											"begin": 9114,
											"end": 9193,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 9114,
											"end": 9193,
											"name": "tag",
											"source": 15,
											"value": "541"
										},
										{
											"begin": 9114,
											"end": 9193,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9078,
											"end": 9195,
											"name": "tag",
											"source": 15,
											"value": "540"
										},
										{
											"begin": 9078,
											"end": 9195,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9219,
											"end": 9297,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "542"
										},
										{
											"begin": 9289,
											"end": 9296,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 9280,
											"end": 9286,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 9269,
											"end": 9278,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 9265,
											"end": 9287,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 9219,
											"end": 9297,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "403"
										},
										{
											"begin": 9219,
											"end": 9297,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 9219,
											"end": 9297,
											"name": "tag",
											"source": 15,
											"value": "542"
										},
										{
											"begin": 9219,
											"end": 9297,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9209,
											"end": 9297,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 9209,
											"end": 9297,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 9004,
											"end": 9307,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 9374,
											"end": 9376,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 9363,
											"end": 9372,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 9359,
											"end": 9377,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 9346,
											"end": 9378,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 9405,
											"end": 9423,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9397,
											"end": 9403,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 9394,
											"end": 9424,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 9391,
											"end": 9508,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 9391,
											"end": 9508,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "543"
										},
										{
											"begin": 9391,
											"end": 9508,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 9427,
											"end": 9506,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "544"
										},
										{
											"begin": 9427,
											"end": 9506,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "378"
										},
										{
											"begin": 9427,
											"end": 9506,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 9427,
											"end": 9506,
											"name": "tag",
											"source": 15,
											"value": "544"
										},
										{
											"begin": 9427,
											"end": 9506,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9391,
											"end": 9508,
											"name": "tag",
											"source": 15,
											"value": "543"
										},
										{
											"begin": 9391,
											"end": 9508,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9532,
											"end": 9610,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "545"
										},
										{
											"begin": 9602,
											"end": 9609,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 9593,
											"end": 9599,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 9582,
											"end": 9591,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 9578,
											"end": 9600,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 9532,
											"end": 9610,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "403"
										},
										{
											"begin": 9532,
											"end": 9610,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 9532,
											"end": 9610,
											"name": "tag",
											"source": 15,
											"value": "545"
										},
										{
											"begin": 9532,
											"end": 9610,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9522,
											"end": 9610,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 9522,
											"end": 9610,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 9317,
											"end": 9620,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 9687,
											"end": 9689,
											"name": "PUSH",
											"source": 15,
											"value": "60"
										},
										{
											"begin": 9676,
											"end": 9685,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 9672,
											"end": 9690,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 9659,
											"end": 9691,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 9718,
											"end": 9736,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9710,
											"end": 9716,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 9707,
											"end": 9737,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 9704,
											"end": 9821,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 9704,
											"end": 9821,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "546"
										},
										{
											"begin": 9704,
											"end": 9821,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 9740,
											"end": 9819,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "547"
										},
										{
											"begin": 9740,
											"end": 9819,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "378"
										},
										{
											"begin": 9740,
											"end": 9819,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 9740,
											"end": 9819,
											"name": "tag",
											"source": 15,
											"value": "547"
										},
										{
											"begin": 9740,
											"end": 9819,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9704,
											"end": 9821,
											"name": "tag",
											"source": 15,
											"value": "546"
										},
										{
											"begin": 9704,
											"end": 9821,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9845,
											"end": 9907,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "548"
										},
										{
											"begin": 9899,
											"end": 9906,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 9890,
											"end": 9896,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 9879,
											"end": 9888,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 9875,
											"end": 9897,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 9845,
											"end": 9907,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "408"
										},
										{
											"begin": 9845,
											"end": 9907,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 9845,
											"end": 9907,
											"name": "tag",
											"source": 15,
											"value": "548"
										},
										{
											"begin": 9845,
											"end": 9907,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9835,
											"end": 9907,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 9835,
											"end": 9907,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 9630,
											"end": 9917,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 8561,
											"end": 9924,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 8561,
											"end": 9924,
											"name": "SWAP6",
											"source": 15
										},
										{
											"begin": 8561,
											"end": 9924,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 8561,
											"end": 9924,
											"name": "SWAP5",
											"source": 15
										},
										{
											"begin": 8561,
											"end": 9924,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 8561,
											"end": 9924,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 8561,
											"end": 9924,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 8561,
											"end": 9924,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 9930,
											"end": 11439,
											"name": "tag",
											"source": 15,
											"value": "53"
										},
										{
											"begin": 9930,
											"end": 11439,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 10084,
											"end": 10090,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 10092,
											"end": 10098,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 10100,
											"end": 10106,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 10108,
											"end": 10114,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 10116,
											"end": 10122,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 10165,
											"end": 10168,
											"name": "PUSH",
											"source": 15,
											"value": "A0"
										},
										{
											"begin": 10153,
											"end": 10162,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 10144,
											"end": 10151,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 10140,
											"end": 10163,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 10136,
											"end": 10169,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 10133,
											"end": 10253,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 10133,
											"end": 10253,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "550"
										},
										{
											"begin": 10133,
											"end": 10253,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 10172,
											"end": 10251,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "551"
										},
										{
											"begin": 10172,
											"end": 10251,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "377"
										},
										{
											"begin": 10172,
											"end": 10251,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 10172,
											"end": 10251,
											"name": "tag",
											"source": 15,
											"value": "551"
										},
										{
											"begin": 10172,
											"end": 10251,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 10133,
											"end": 10253,
											"name": "tag",
											"source": 15,
											"value": "550"
										},
										{
											"begin": 10133,
											"end": 10253,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 10292,
											"end": 10293,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 10317,
											"end": 10370,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "552"
										},
										{
											"begin": 10362,
											"end": 10369,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 10353,
											"end": 10359,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 10342,
											"end": 10351,
											"name": "DUP10",
											"source": 15
										},
										{
											"begin": 10338,
											"end": 10360,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 10317,
											"end": 10370,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "382"
										},
										{
											"begin": 10317,
											"end": 10370,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 10317,
											"end": 10370,
											"name": "tag",
											"source": 15,
											"value": "552"
										},
										{
											"begin": 10317,
											"end": 10370,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 10307,
											"end": 10370,
											"name": "SWAP6",
											"source": 15
										},
										{
											"begin": 10307,
											"end": 10370,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 10263,
											"end": 10380,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 10419,
											"end": 10421,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 10445,
											"end": 10498,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "553"
										},
										{
											"begin": 10490,
											"end": 10497,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 10481,
											"end": 10487,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 10470,
											"end": 10479,
											"name": "DUP10",
											"source": 15
										},
										{
											"begin": 10466,
											"end": 10488,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 10445,
											"end": 10498,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "382"
										},
										{
											"begin": 10445,
											"end": 10498,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 10445,
											"end": 10498,
											"name": "tag",
											"source": 15,
											"value": "553"
										},
										{
											"begin": 10445,
											"end": 10498,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 10435,
											"end": 10498,
											"name": "SWAP5",
											"source": 15
										},
										{
											"begin": 10435,
											"end": 10498,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 10390,
											"end": 10508,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 10575,
											"end": 10577,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 10564,
											"end": 10573,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 10560,
											"end": 10578,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 10547,
											"end": 10579,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 10606,
											"end": 10624,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10598,
											"end": 10604,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 10595,
											"end": 10625,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 10592,
											"end": 10709,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 10592,
											"end": 10709,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "554"
										},
										{
											"begin": 10592,
											"end": 10709,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 10628,
											"end": 10707,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "555"
										},
										{
											"begin": 10628,
											"end": 10707,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "378"
										},
										{
											"begin": 10628,
											"end": 10707,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 10628,
											"end": 10707,
											"name": "tag",
											"source": 15,
											"value": "555"
										},
										{
											"begin": 10628,
											"end": 10707,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 10592,
											"end": 10709,
											"name": "tag",
											"source": 15,
											"value": "554"
										},
										{
											"begin": 10592,
											"end": 10709,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 10733,
											"end": 10811,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "556"
										},
										{
											"begin": 10803,
											"end": 10810,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 10794,
											"end": 10800,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 10783,
											"end": 10792,
											"name": "DUP10",
											"source": 15
										},
										{
											"begin": 10779,
											"end": 10801,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 10733,
											"end": 10811,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "403"
										},
										{
											"begin": 10733,
											"end": 10811,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 10733,
											"end": 10811,
											"name": "tag",
											"source": 15,
											"value": "556"
										},
										{
											"begin": 10733,
											"end": 10811,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 10723,
											"end": 10811,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 10723,
											"end": 10811,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 10518,
											"end": 10821,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 10888,
											"end": 10890,
											"name": "PUSH",
											"source": 15,
											"value": "60"
										},
										{
											"begin": 10877,
											"end": 10886,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 10873,
											"end": 10891,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 10860,
											"end": 10892,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 10919,
											"end": 10937,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10911,
											"end": 10917,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 10908,
											"end": 10938,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 10905,
											"end": 11022,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 10905,
											"end": 11022,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "557"
										},
										{
											"begin": 10905,
											"end": 11022,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 10941,
											"end": 11020,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "558"
										},
										{
											"begin": 10941,
											"end": 11020,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "378"
										},
										{
											"begin": 10941,
											"end": 11020,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 10941,
											"end": 11020,
											"name": "tag",
											"source": 15,
											"value": "558"
										},
										{
											"begin": 10941,
											"end": 11020,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 10905,
											"end": 11022,
											"name": "tag",
											"source": 15,
											"value": "557"
										},
										{
											"begin": 10905,
											"end": 11022,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 11046,
											"end": 11124,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "559"
										},
										{
											"begin": 11116,
											"end": 11123,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 11107,
											"end": 11113,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 11096,
											"end": 11105,
											"name": "DUP10",
											"source": 15
										},
										{
											"begin": 11092,
											"end": 11114,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 11046,
											"end": 11124,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "403"
										},
										{
											"begin": 11046,
											"end": 11124,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 11046,
											"end": 11124,
											"name": "tag",
											"source": 15,
											"value": "559"
										},
										{
											"begin": 11046,
											"end": 11124,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 11036,
											"end": 11124,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 11036,
											"end": 11124,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 10831,
											"end": 11134,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 11201,
											"end": 11204,
											"name": "PUSH",
											"source": 15,
											"value": "80"
										},
										{
											"begin": 11190,
											"end": 11199,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 11186,
											"end": 11205,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 11173,
											"end": 11206,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 11233,
											"end": 11251,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11225,
											"end": 11231,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 11222,
											"end": 11252,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 11219,
											"end": 11336,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 11219,
											"end": 11336,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "560"
										},
										{
											"begin": 11219,
											"end": 11336,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 11255,
											"end": 11334,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "561"
										},
										{
											"begin": 11255,
											"end": 11334,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "378"
										},
										{
											"begin": 11255,
											"end": 11334,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 11255,
											"end": 11334,
											"name": "tag",
											"source": 15,
											"value": "561"
										},
										{
											"begin": 11255,
											"end": 11334,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 11219,
											"end": 11336,
											"name": "tag",
											"source": 15,
											"value": "560"
										},
										{
											"begin": 11219,
											"end": 11336,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 11360,
											"end": 11422,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "562"
										},
										{
											"begin": 11414,
											"end": 11421,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 11405,
											"end": 11411,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 11394,
											"end": 11403,
											"name": "DUP10",
											"source": 15
										},
										{
											"begin": 11390,
											"end": 11412,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 11360,
											"end": 11422,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "408"
										},
										{
											"begin": 11360,
											"end": 11422,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 11360,
											"end": 11422,
											"name": "tag",
											"source": 15,
											"value": "562"
										},
										{
											"begin": 11360,
											"end": 11422,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 11350,
											"end": 11422,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 11350,
											"end": 11422,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 11144,
											"end": 11432,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 9930,
											"end": 11439,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 9930,
											"end": 11439,
											"name": "SWAP6",
											"source": 15
										},
										{
											"begin": 9930,
											"end": 11439,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 9930,
											"end": 11439,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 9930,
											"end": 11439,
											"name": "SWAP6",
											"source": 15
										},
										{
											"begin": 9930,
											"end": 11439,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 9930,
											"end": 11439,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 9930,
											"end": 11439,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 9930,
											"end": 11439,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 11445,
											"end": 11756,
											"name": "tag",
											"source": 15,
											"value": "409"
										},
										{
											"begin": 11445,
											"end": 11756,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 11522,
											"end": 11526,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 11612,
											"end": 11630,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11604,
											"end": 11610,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 11601,
											"end": 11631,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 11598,
											"end": 11654,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 11598,
											"end": 11654,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "564"
										},
										{
											"begin": 11598,
											"end": 11654,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 11634,
											"end": 11652,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "565"
										},
										{
											"begin": 11634,
											"end": 11652,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "149"
										},
										{
											"begin": 11634,
											"end": 11652,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 11634,
											"end": 11652,
											"name": "tag",
											"source": 15,
											"value": "565"
										},
										{
											"begin": 11634,
											"end": 11652,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 11598,
											"end": 11654,
											"name": "tag",
											"source": 15,
											"value": "564"
										},
										{
											"begin": 11598,
											"end": 11654,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 11684,
											"end": 11688,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 11676,
											"end": 11682,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 11672,
											"end": 11689,
											"name": "MUL",
											"source": 15
										},
										{
											"begin": 11664,
											"end": 11689,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 11664,
											"end": 11689,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 11744,
											"end": 11748,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 11738,
											"end": 11742,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 11734,
											"end": 11749,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 11726,
											"end": 11749,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 11726,
											"end": 11749,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 11445,
											"end": 11756,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 11445,
											"end": 11756,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 11445,
											"end": 11756,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 11445,
											"end": 11756,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 11779,
											"end": 12489,
											"name": "tag",
											"source": 15,
											"value": "410"
										},
										{
											"begin": 11779,
											"end": 12489,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 11875,
											"end": 11880,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 11900,
											"end": 11981,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "567"
										},
										{
											"begin": 11916,
											"end": 11980,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "568"
										},
										{
											"begin": 11973,
											"end": 11979,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 11916,
											"end": 11980,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "409"
										},
										{
											"begin": 11916,
											"end": 11980,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 11916,
											"end": 11980,
											"name": "tag",
											"source": 15,
											"value": "568"
										},
										{
											"begin": 11916,
											"end": 11980,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 11900,
											"end": 11981,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "399"
										},
										{
											"begin": 11900,
											"end": 11981,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 11900,
											"end": 11981,
											"name": "tag",
											"source": 15,
											"value": "567"
										},
										{
											"begin": 11900,
											"end": 11981,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 11891,
											"end": 11981,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 11891,
											"end": 11981,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 12001,
											"end": 12006,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 12030,
											"end": 12036,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 12023,
											"end": 12028,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 12016,
											"end": 12037,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 12064,
											"end": 12068,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 12057,
											"end": 12062,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 12053,
											"end": 12069,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 12046,
											"end": 12069,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 12046,
											"end": 12069,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 12117,
											"end": 12121,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 12109,
											"end": 12115,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 12105,
											"end": 12122,
											"name": "MUL",
											"source": 15
										},
										{
											"begin": 12097,
											"end": 12103,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 12093,
											"end": 12123,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 12146,
											"end": 12149,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 12138,
											"end": 12144,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 12135,
											"end": 12150,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 12132,
											"end": 12254,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 12132,
											"end": 12254,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "569"
										},
										{
											"begin": 12132,
											"end": 12254,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 12165,
											"end": 12244,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "570"
										},
										{
											"begin": 12165,
											"end": 12244,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "401"
										},
										{
											"begin": 12165,
											"end": 12244,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 12165,
											"end": 12244,
											"name": "tag",
											"source": 15,
											"value": "570"
										},
										{
											"begin": 12165,
											"end": 12244,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12132,
											"end": 12254,
											"name": "tag",
											"source": 15,
											"value": "569"
										},
										{
											"begin": 12132,
											"end": 12254,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12280,
											"end": 12286,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 12263,
											"end": 12483,
											"name": "tag",
											"source": 15,
											"value": "571"
										},
										{
											"begin": 12263,
											"end": 12483,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12297,
											"end": 12303,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 12292,
											"end": 12295,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 12289,
											"end": 12304,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 12263,
											"end": 12483,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 12263,
											"end": 12483,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "573"
										},
										{
											"begin": 12263,
											"end": 12483,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 12372,
											"end": 12375,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 12401,
											"end": 12438,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "574"
										},
										{
											"begin": 12434,
											"end": 12437,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 12422,
											"end": 12432,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 12401,
											"end": 12438,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "382"
										},
										{
											"begin": 12401,
											"end": 12438,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 12401,
											"end": 12438,
											"name": "tag",
											"source": 15,
											"value": "574"
										},
										{
											"begin": 12401,
											"end": 12438,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12396,
											"end": 12399,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 12389,
											"end": 12439,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 12468,
											"end": 12472,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 12463,
											"end": 12466,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 12459,
											"end": 12473,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 12452,
											"end": 12473,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 12452,
											"end": 12473,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 12339,
											"end": 12483,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 12323,
											"end": 12327,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 12318,
											"end": 12321,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 12314,
											"end": 12328,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 12307,
											"end": 12328,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 12307,
											"end": 12328,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 12263,
											"end": 12483,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "571"
										},
										{
											"begin": 12263,
											"end": 12483,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 12263,
											"end": 12483,
											"name": "tag",
											"source": 15,
											"value": "573"
										},
										{
											"begin": 12263,
											"end": 12483,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12267,
											"end": 12288,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 11881,
											"end": 12489,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 11881,
											"end": 12489,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 11779,
											"end": 12489,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 11779,
											"end": 12489,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 11779,
											"end": 12489,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 11779,
											"end": 12489,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 11779,
											"end": 12489,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 11779,
											"end": 12489,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 12512,
											"end": 12882,
											"name": "tag",
											"source": 15,
											"value": "411"
										},
										{
											"begin": 12512,
											"end": 12882,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12583,
											"end": 12588,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 12632,
											"end": 12635,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 12625,
											"end": 12629,
											"name": "PUSH",
											"source": 15,
											"value": "1F"
										},
										{
											"begin": 12617,
											"end": 12623,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 12613,
											"end": 12630,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 12609,
											"end": 12636,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 12599,
											"end": 12721,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "576"
										},
										{
											"begin": 12599,
											"end": 12721,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 12640,
											"end": 12719,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "577"
										},
										{
											"begin": 12640,
											"end": 12719,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "397"
										},
										{
											"begin": 12640,
											"end": 12719,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 12640,
											"end": 12719,
											"name": "tag",
											"source": 15,
											"value": "577"
										},
										{
											"begin": 12640,
											"end": 12719,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12599,
											"end": 12721,
											"name": "tag",
											"source": 15,
											"value": "576"
										},
										{
											"begin": 12599,
											"end": 12721,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12757,
											"end": 12763,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 12744,
											"end": 12764,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 12782,
											"end": 12876,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "578"
										},
										{
											"begin": 12872,
											"end": 12875,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 12864,
											"end": 12870,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 12857,
											"end": 12861,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 12849,
											"end": 12855,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 12845,
											"end": 12862,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 12782,
											"end": 12876,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "410"
										},
										{
											"begin": 12782,
											"end": 12876,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 12782,
											"end": 12876,
											"name": "tag",
											"source": 15,
											"value": "578"
										},
										{
											"begin": 12782,
											"end": 12876,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12773,
											"end": 12876,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 12773,
											"end": 12876,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 12589,
											"end": 12882,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 12512,
											"end": 12882,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 12512,
											"end": 12882,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 12512,
											"end": 12882,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 12512,
											"end": 12882,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 12512,
											"end": 12882,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 12888,
											"end": 13782,
											"name": "tag",
											"source": 15,
											"value": "57"
										},
										{
											"begin": 12888,
											"end": 13782,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 13006,
											"end": 13012,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 13014,
											"end": 13020,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 13063,
											"end": 13065,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 13051,
											"end": 13060,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 13042,
											"end": 13049,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 13038,
											"end": 13061,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 13034,
											"end": 13066,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 13031,
											"end": 13150,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 13031,
											"end": 13150,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "580"
										},
										{
											"begin": 13031,
											"end": 13150,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 13069,
											"end": 13148,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "581"
										},
										{
											"begin": 13069,
											"end": 13148,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "377"
										},
										{
											"begin": 13069,
											"end": 13148,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 13069,
											"end": 13148,
											"name": "tag",
											"source": 15,
											"value": "581"
										},
										{
											"begin": 13069,
											"end": 13148,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 13031,
											"end": 13150,
											"name": "tag",
											"source": 15,
											"value": "580"
										},
										{
											"begin": 13031,
											"end": 13150,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 13217,
											"end": 13218,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 13206,
											"end": 13215,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 13202,
											"end": 13219,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 13189,
											"end": 13220,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 13247,
											"end": 13265,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13239,
											"end": 13245,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 13236,
											"end": 13266,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 13233,
											"end": 13350,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 13233,
											"end": 13350,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "582"
										},
										{
											"begin": 13233,
											"end": 13350,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 13269,
											"end": 13348,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "583"
										},
										{
											"begin": 13269,
											"end": 13348,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "378"
										},
										{
											"begin": 13269,
											"end": 13348,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 13269,
											"end": 13348,
											"name": "tag",
											"source": 15,
											"value": "583"
										},
										{
											"begin": 13269,
											"end": 13348,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 13233,
											"end": 13350,
											"name": "tag",
											"source": 15,
											"value": "582"
										},
										{
											"begin": 13233,
											"end": 13350,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 13374,
											"end": 13452,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "584"
										},
										{
											"begin": 13444,
											"end": 13451,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 13435,
											"end": 13441,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 13424,
											"end": 13433,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 13420,
											"end": 13442,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 13374,
											"end": 13452,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "411"
										},
										{
											"begin": 13374,
											"end": 13452,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 13374,
											"end": 13452,
											"name": "tag",
											"source": 15,
											"value": "584"
										},
										{
											"begin": 13374,
											"end": 13452,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 13364,
											"end": 13452,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 13364,
											"end": 13452,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 13160,
											"end": 13462,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 13529,
											"end": 13531,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 13518,
											"end": 13527,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 13514,
											"end": 13532,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 13501,
											"end": 13533,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 13560,
											"end": 13578,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13552,
											"end": 13558,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 13549,
											"end": 13579,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 13546,
											"end": 13663,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 13546,
											"end": 13663,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "585"
										},
										{
											"begin": 13546,
											"end": 13663,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 13582,
											"end": 13661,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "586"
										},
										{
											"begin": 13582,
											"end": 13661,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "378"
										},
										{
											"begin": 13582,
											"end": 13661,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 13582,
											"end": 13661,
											"name": "tag",
											"source": 15,
											"value": "586"
										},
										{
											"begin": 13582,
											"end": 13661,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 13546,
											"end": 13663,
											"name": "tag",
											"source": 15,
											"value": "585"
										},
										{
											"begin": 13546,
											"end": 13663,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 13687,
											"end": 13765,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "587"
										},
										{
											"begin": 13757,
											"end": 13764,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 13748,
											"end": 13754,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 13737,
											"end": 13746,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 13733,
											"end": 13755,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 13687,
											"end": 13765,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "403"
										},
										{
											"begin": 13687,
											"end": 13765,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 13687,
											"end": 13765,
											"name": "tag",
											"source": 15,
											"value": "587"
										},
										{
											"begin": 13687,
											"end": 13765,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 13677,
											"end": 13765,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 13677,
											"end": 13765,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 13472,
											"end": 13775,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 12888,
											"end": 13782,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 12888,
											"end": 13782,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 12888,
											"end": 13782,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 12888,
											"end": 13782,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 12888,
											"end": 13782,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 12888,
											"end": 13782,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 13788,
											"end": 13902,
											"name": "tag",
											"source": 15,
											"value": "412"
										},
										{
											"begin": 13788,
											"end": 13902,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 13855,
											"end": 13861,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 13889,
											"end": 13894,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 13883,
											"end": 13895,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 13873,
											"end": 13895,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 13873,
											"end": 13895,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 13788,
											"end": 13902,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 13788,
											"end": 13902,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 13788,
											"end": 13902,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 13788,
											"end": 13902,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 13908,
											"end": 14092,
											"name": "tag",
											"source": 15,
											"value": "413"
										},
										{
											"begin": 13908,
											"end": 14092,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 14007,
											"end": 14018,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 14041,
											"end": 14047,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 14036,
											"end": 14039,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 14029,
											"end": 14048,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 14081,
											"end": 14085,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 14076,
											"end": 14079,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 14072,
											"end": 14086,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 14057,
											"end": 14086,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 14057,
											"end": 14086,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 13908,
											"end": 14092,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 13908,
											"end": 14092,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 13908,
											"end": 14092,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 13908,
											"end": 14092,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 13908,
											"end": 14092,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 14098,
											"end": 14230,
											"name": "tag",
											"source": 15,
											"value": "414"
										},
										{
											"begin": 14098,
											"end": 14230,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 14165,
											"end": 14169,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 14188,
											"end": 14191,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 14180,
											"end": 14191,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 14180,
											"end": 14191,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 14218,
											"end": 14222,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 14213,
											"end": 14216,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 14209,
											"end": 14223,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 14201,
											"end": 14223,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 14201,
											"end": 14223,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 14098,
											"end": 14230,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 14098,
											"end": 14230,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 14098,
											"end": 14230,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 14098,
											"end": 14230,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 14236,
											"end": 14344,
											"name": "tag",
											"source": 15,
											"value": "415"
										},
										{
											"begin": 14236,
											"end": 14344,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 14313,
											"end": 14337,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "592"
										},
										{
											"begin": 14331,
											"end": 14336,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 14313,
											"end": 14337,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "383"
										},
										{
											"begin": 14313,
											"end": 14337,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 14313,
											"end": 14337,
											"name": "tag",
											"source": 15,
											"value": "592"
										},
										{
											"begin": 14313,
											"end": 14337,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 14308,
											"end": 14311,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 14301,
											"end": 14338,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 14236,
											"end": 14344,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 14236,
											"end": 14344,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 14236,
											"end": 14344,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 14350,
											"end": 14529,
											"name": "tag",
											"source": 15,
											"value": "416"
										},
										{
											"begin": 14350,
											"end": 14529,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 14419,
											"end": 14429,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 14440,
											"end": 14486,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "594"
										},
										{
											"begin": 14482,
											"end": 14485,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 14474,
											"end": 14480,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 14440,
											"end": 14486,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "415"
										},
										{
											"begin": 14440,
											"end": 14486,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 14440,
											"end": 14486,
											"name": "tag",
											"source": 15,
											"value": "594"
										},
										{
											"begin": 14440,
											"end": 14486,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 14518,
											"end": 14522,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 14513,
											"end": 14516,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 14509,
											"end": 14523,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 14495,
											"end": 14523,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 14495,
											"end": 14523,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 14350,
											"end": 14529,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 14350,
											"end": 14529,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 14350,
											"end": 14529,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 14350,
											"end": 14529,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 14350,
											"end": 14529,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 14535,
											"end": 14648,
											"name": "tag",
											"source": 15,
											"value": "417"
										},
										{
											"begin": 14535,
											"end": 14648,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 14605,
											"end": 14609,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 14637,
											"end": 14641,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 14632,
											"end": 14635,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 14628,
											"end": 14642,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 14620,
											"end": 14642,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 14620,
											"end": 14642,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 14535,
											"end": 14648,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 14535,
											"end": 14648,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 14535,
											"end": 14648,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 14535,
											"end": 14648,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 14684,
											"end": 15416,
											"name": "tag",
											"source": 15,
											"value": "418"
										},
										{
											"begin": 14684,
											"end": 15416,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 14803,
											"end": 14806,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 14832,
											"end": 14886,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "597"
										},
										{
											"begin": 14880,
											"end": 14885,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 14832,
											"end": 14886,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "412"
										},
										{
											"begin": 14832,
											"end": 14886,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 14832,
											"end": 14886,
											"name": "tag",
											"source": 15,
											"value": "597"
										},
										{
											"begin": 14832,
											"end": 14886,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 14902,
											"end": 14988,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "598"
										},
										{
											"begin": 14981,
											"end": 14987,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 14976,
											"end": 14979,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 14902,
											"end": 14988,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "413"
										},
										{
											"begin": 14902,
											"end": 14988,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 14902,
											"end": 14988,
											"name": "tag",
											"source": 15,
											"value": "598"
										},
										{
											"begin": 14902,
											"end": 14988,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 14895,
											"end": 14988,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 14895,
											"end": 14988,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 15012,
											"end": 15068,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "599"
										},
										{
											"begin": 15062,
											"end": 15067,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 15012,
											"end": 15068,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "414"
										},
										{
											"begin": 15012,
											"end": 15068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 15012,
											"end": 15068,
											"name": "tag",
											"source": 15,
											"value": "599"
										},
										{
											"begin": 15012,
											"end": 15068,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 15091,
											"end": 15098,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 15122,
											"end": 15123,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 15107,
											"end": 15391,
											"name": "tag",
											"source": 15,
											"value": "600"
										},
										{
											"begin": 15107,
											"end": 15391,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 15132,
											"end": 15138,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 15129,
											"end": 15130,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 15126,
											"end": 15139,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 15107,
											"end": 15391,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 15107,
											"end": 15391,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "602"
										},
										{
											"begin": 15107,
											"end": 15391,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 15208,
											"end": 15214,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 15202,
											"end": 15215,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 15235,
											"end": 15298,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "603"
										},
										{
											"begin": 15294,
											"end": 15297,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 15279,
											"end": 15292,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 15235,
											"end": 15298,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "416"
										},
										{
											"begin": 15235,
											"end": 15298,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 15235,
											"end": 15298,
											"name": "tag",
											"source": 15,
											"value": "603"
										},
										{
											"begin": 15235,
											"end": 15298,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 15228,
											"end": 15298,
											"name": "SWAP8",
											"source": 15
										},
										{
											"begin": 15228,
											"end": 15298,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 15321,
											"end": 15381,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "604"
										},
										{
											"begin": 15374,
											"end": 15380,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 15321,
											"end": 15381,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "417"
										},
										{
											"begin": 15321,
											"end": 15381,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 15321,
											"end": 15381,
											"name": "tag",
											"source": 15,
											"value": "604"
										},
										{
											"begin": 15321,
											"end": 15381,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 15311,
											"end": 15381,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 15311,
											"end": 15381,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 15167,
											"end": 15391,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 15154,
											"end": 15155,
											"name": "PUSH",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 15151,
											"end": 15152,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 15147,
											"end": 15156,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 15142,
											"end": 15156,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 15142,
											"end": 15156,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 15107,
											"end": 15391,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "600"
										},
										{
											"begin": 15107,
											"end": 15391,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 15107,
											"end": 15391,
											"name": "tag",
											"source": 15,
											"value": "602"
										},
										{
											"begin": 15107,
											"end": 15391,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 15111,
											"end": 15125,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 15407,
											"end": 15410,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 15400,
											"end": 15410,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 15400,
											"end": 15410,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 14808,
											"end": 15416,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 14808,
											"end": 15416,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 14808,
											"end": 15416,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 14684,
											"end": 15416,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 14684,
											"end": 15416,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 14684,
											"end": 15416,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 14684,
											"end": 15416,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 14684,
											"end": 15416,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 15422,
											"end": 15795,
											"name": "tag",
											"source": 15,
											"value": "60"
										},
										{
											"begin": 15422,
											"end": 15795,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 15565,
											"end": 15569,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 15603,
											"end": 15605,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 15592,
											"end": 15601,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 15588,
											"end": 15606,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 15580,
											"end": 15606,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 15580,
											"end": 15606,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 15652,
											"end": 15661,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 15646,
											"end": 15650,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 15642,
											"end": 15662,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 15638,
											"end": 15639,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 15627,
											"end": 15636,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 15623,
											"end": 15640,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 15616,
											"end": 15663,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 15680,
											"end": 15788,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "606"
										},
										{
											"begin": 15783,
											"end": 15787,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 15774,
											"end": 15780,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 15680,
											"end": 15788,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "418"
										},
										{
											"begin": 15680,
											"end": 15788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 15680,
											"end": 15788,
											"name": "tag",
											"source": 15,
											"value": "606"
										},
										{
											"begin": 15680,
											"end": 15788,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 15672,
											"end": 15788,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 15672,
											"end": 15788,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 15422,
											"end": 15795,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 15422,
											"end": 15795,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 15422,
											"end": 15795,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 15422,
											"end": 15795,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 15422,
											"end": 15795,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 15801,
											"end": 16840,
											"name": "tag",
											"source": 15,
											"value": "67"
										},
										{
											"begin": 15801,
											"end": 16840,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 15928,
											"end": 15934,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 15936,
											"end": 15942,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 15944,
											"end": 15950,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 15993,
											"end": 15995,
											"name": "PUSH",
											"source": 15,
											"value": "60"
										},
										{
											"begin": 15981,
											"end": 15990,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 15972,
											"end": 15979,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 15968,
											"end": 15991,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 15964,
											"end": 15996,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 15961,
											"end": 16080,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 15961,
											"end": 16080,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "608"
										},
										{
											"begin": 15961,
											"end": 16080,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 15999,
											"end": 16078,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "609"
										},
										{
											"begin": 15999,
											"end": 16078,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "377"
										},
										{
											"begin": 15999,
											"end": 16078,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 15999,
											"end": 16078,
											"name": "tag",
											"source": 15,
											"value": "609"
										},
										{
											"begin": 15999,
											"end": 16078,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 15961,
											"end": 16080,
											"name": "tag",
											"source": 15,
											"value": "608"
										},
										{
											"begin": 15961,
											"end": 16080,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 16119,
											"end": 16120,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 16144,
											"end": 16197,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "610"
										},
										{
											"begin": 16189,
											"end": 16196,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 16180,
											"end": 16186,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 16169,
											"end": 16178,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 16165,
											"end": 16187,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 16144,
											"end": 16197,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "382"
										},
										{
											"begin": 16144,
											"end": 16197,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 16144,
											"end": 16197,
											"name": "tag",
											"source": 15,
											"value": "610"
										},
										{
											"begin": 16144,
											"end": 16197,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 16134,
											"end": 16197,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 16134,
											"end": 16197,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 16090,
											"end": 16207,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 16274,
											"end": 16276,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 16263,
											"end": 16272,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 16259,
											"end": 16277,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 16246,
											"end": 16278,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 16305,
											"end": 16323,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16297,
											"end": 16303,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 16294,
											"end": 16324,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 16291,
											"end": 16408,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 16291,
											"end": 16408,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "611"
										},
										{
											"begin": 16291,
											"end": 16408,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 16327,
											"end": 16406,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "612"
										},
										{
											"begin": 16327,
											"end": 16406,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "378"
										},
										{
											"begin": 16327,
											"end": 16406,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 16327,
											"end": 16406,
											"name": "tag",
											"source": 15,
											"value": "612"
										},
										{
											"begin": 16327,
											"end": 16406,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 16291,
											"end": 16408,
											"name": "tag",
											"source": 15,
											"value": "611"
										},
										{
											"begin": 16291,
											"end": 16408,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 16432,
											"end": 16510,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "613"
										},
										{
											"begin": 16502,
											"end": 16509,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 16493,
											"end": 16499,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 16482,
											"end": 16491,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 16478,
											"end": 16500,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 16432,
											"end": 16510,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "403"
										},
										{
											"begin": 16432,
											"end": 16510,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 16432,
											"end": 16510,
											"name": "tag",
											"source": 15,
											"value": "613"
										},
										{
											"begin": 16432,
											"end": 16510,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 16422,
											"end": 16510,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 16422,
											"end": 16510,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 16217,
											"end": 16520,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 16587,
											"end": 16589,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 16576,
											"end": 16585,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 16572,
											"end": 16590,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 16559,
											"end": 16591,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 16618,
											"end": 16636,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16610,
											"end": 16616,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 16607,
											"end": 16637,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 16604,
											"end": 16721,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 16604,
											"end": 16721,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "614"
										},
										{
											"begin": 16604,
											"end": 16721,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 16640,
											"end": 16719,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "615"
										},
										{
											"begin": 16640,
											"end": 16719,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "378"
										},
										{
											"begin": 16640,
											"end": 16719,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 16640,
											"end": 16719,
											"name": "tag",
											"source": 15,
											"value": "615"
										},
										{
											"begin": 16640,
											"end": 16719,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 16604,
											"end": 16721,
											"name": "tag",
											"source": 15,
											"value": "614"
										},
										{
											"begin": 16604,
											"end": 16721,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 16745,
											"end": 16823,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "616"
										},
										{
											"begin": 16815,
											"end": 16822,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 16806,
											"end": 16812,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 16795,
											"end": 16804,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 16791,
											"end": 16813,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 16745,
											"end": 16823,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "403"
										},
										{
											"begin": 16745,
											"end": 16823,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 16745,
											"end": 16823,
											"name": "tag",
											"source": 15,
											"value": "616"
										},
										{
											"begin": 16745,
											"end": 16823,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 16735,
											"end": 16823,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 16735,
											"end": 16823,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 16530,
											"end": 16833,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 15801,
											"end": 16840,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 15801,
											"end": 16840,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 15801,
											"end": 16840,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 15801,
											"end": 16840,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 15801,
											"end": 16840,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 15801,
											"end": 16840,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 16846,
											"end": 17175,
											"name": "tag",
											"source": 15,
											"value": "71"
										},
										{
											"begin": 16846,
											"end": 17175,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 16905,
											"end": 16911,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 16954,
											"end": 16956,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 16942,
											"end": 16951,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 16933,
											"end": 16940,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 16929,
											"end": 16952,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 16925,
											"end": 16957,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 16922,
											"end": 17041,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 16922,
											"end": 17041,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "618"
										},
										{
											"begin": 16922,
											"end": 17041,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 16960,
											"end": 17039,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "619"
										},
										{
											"begin": 16960,
											"end": 17039,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "377"
										},
										{
											"begin": 16960,
											"end": 17039,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 16960,
											"end": 17039,
											"name": "tag",
											"source": 15,
											"value": "619"
										},
										{
											"begin": 16960,
											"end": 17039,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 16922,
											"end": 17041,
											"name": "tag",
											"source": 15,
											"value": "618"
										},
										{
											"begin": 16922,
											"end": 17041,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 17080,
											"end": 17081,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 17105,
											"end": 17158,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "620"
										},
										{
											"begin": 17150,
											"end": 17157,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 17141,
											"end": 17147,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 17130,
											"end": 17139,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 17126,
											"end": 17148,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 17105,
											"end": 17158,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "382"
										},
										{
											"begin": 17105,
											"end": 17158,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 17105,
											"end": 17158,
											"name": "tag",
											"source": 15,
											"value": "620"
										},
										{
											"begin": 17105,
											"end": 17158,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 17095,
											"end": 17158,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 17095,
											"end": 17158,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 17051,
											"end": 17168,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 16846,
											"end": 17175,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 16846,
											"end": 17175,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 16846,
											"end": 17175,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 16846,
											"end": 17175,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 16846,
											"end": 17175,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 17181,
											"end": 18124,
											"name": "tag",
											"source": 15,
											"value": "77"
										},
										{
											"begin": 17181,
											"end": 18124,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 17276,
											"end": 17282,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 17284,
											"end": 17290,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 17292,
											"end": 17298,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 17300,
											"end": 17306,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 17349,
											"end": 17352,
											"name": "PUSH",
											"source": 15,
											"value": "80"
										},
										{
											"begin": 17337,
											"end": 17346,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 17328,
											"end": 17335,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 17324,
											"end": 17347,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 17320,
											"end": 17353,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 17317,
											"end": 17437,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 17317,
											"end": 17437,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "622"
										},
										{
											"begin": 17317,
											"end": 17437,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 17356,
											"end": 17435,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "623"
										},
										{
											"begin": 17356,
											"end": 17435,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "377"
										},
										{
											"begin": 17356,
											"end": 17435,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 17356,
											"end": 17435,
											"name": "tag",
											"source": 15,
											"value": "623"
										},
										{
											"begin": 17356,
											"end": 17435,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 17317,
											"end": 17437,
											"name": "tag",
											"source": 15,
											"value": "622"
										},
										{
											"begin": 17317,
											"end": 17437,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 17476,
											"end": 17477,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 17501,
											"end": 17554,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "624"
										},
										{
											"begin": 17546,
											"end": 17553,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 17537,
											"end": 17543,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 17526,
											"end": 17535,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 17522,
											"end": 17544,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 17501,
											"end": 17554,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "382"
										},
										{
											"begin": 17501,
											"end": 17554,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 17501,
											"end": 17554,
											"name": "tag",
											"source": 15,
											"value": "624"
										},
										{
											"begin": 17501,
											"end": 17554,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 17491,
											"end": 17554,
											"name": "SWAP5",
											"source": 15
										},
										{
											"begin": 17491,
											"end": 17554,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 17447,
											"end": 17564,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 17603,
											"end": 17605,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 17629,
											"end": 17682,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "625"
										},
										{
											"begin": 17674,
											"end": 17681,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 17665,
											"end": 17671,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 17654,
											"end": 17663,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 17650,
											"end": 17672,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 17629,
											"end": 17682,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "385"
										},
										{
											"begin": 17629,
											"end": 17682,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 17629,
											"end": 17682,
											"name": "tag",
											"source": 15,
											"value": "625"
										},
										{
											"begin": 17629,
											"end": 17682,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 17619,
											"end": 17682,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 17619,
											"end": 17682,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 17574,
											"end": 17692,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 17731,
											"end": 17733,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 17757,
											"end": 17810,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "626"
										},
										{
											"begin": 17802,
											"end": 17809,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 17793,
											"end": 17799,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 17782,
											"end": 17791,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 17778,
											"end": 17800,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 17757,
											"end": 17810,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "385"
										},
										{
											"begin": 17757,
											"end": 17810,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 17757,
											"end": 17810,
											"name": "tag",
											"source": 15,
											"value": "626"
										},
										{
											"begin": 17757,
											"end": 17810,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 17747,
											"end": 17810,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 17747,
											"end": 17810,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 17702,
											"end": 17820,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 17887,
											"end": 17889,
											"name": "PUSH",
											"source": 15,
											"value": "60"
										},
										{
											"begin": 17876,
											"end": 17885,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 17872,
											"end": 17890,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 17859,
											"end": 17891,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 17918,
											"end": 17936,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17910,
											"end": 17916,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 17907,
											"end": 17937,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 17904,
											"end": 18021,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 17904,
											"end": 18021,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "627"
										},
										{
											"begin": 17904,
											"end": 18021,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 17940,
											"end": 18019,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "628"
										},
										{
											"begin": 17940,
											"end": 18019,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "378"
										},
										{
											"begin": 17940,
											"end": 18019,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 17940,
											"end": 18019,
											"name": "tag",
											"source": 15,
											"value": "628"
										},
										{
											"begin": 17940,
											"end": 18019,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 17904,
											"end": 18021,
											"name": "tag",
											"source": 15,
											"value": "627"
										},
										{
											"begin": 17904,
											"end": 18021,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 18045,
											"end": 18107,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "629"
										},
										{
											"begin": 18099,
											"end": 18106,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 18090,
											"end": 18096,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 18079,
											"end": 18088,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 18075,
											"end": 18097,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 18045,
											"end": 18107,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "408"
										},
										{
											"begin": 18045,
											"end": 18107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 18045,
											"end": 18107,
											"name": "tag",
											"source": 15,
											"value": "629"
										},
										{
											"begin": 18045,
											"end": 18107,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 18035,
											"end": 18107,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 18035,
											"end": 18107,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 17830,
											"end": 18117,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 17181,
											"end": 18124,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 17181,
											"end": 18124,
											"name": "SWAP6",
											"source": 15
										},
										{
											"begin": 17181,
											"end": 18124,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 17181,
											"end": 18124,
											"name": "SWAP5",
											"source": 15
										},
										{
											"begin": 17181,
											"end": 18124,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 17181,
											"end": 18124,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 17181,
											"end": 18124,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 17181,
											"end": 18124,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 18130,
											"end": 18248,
											"name": "tag",
											"source": 15,
											"value": "419"
										},
										{
											"begin": 18130,
											"end": 18248,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 18217,
											"end": 18241,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "631"
										},
										{
											"begin": 18235,
											"end": 18240,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 18217,
											"end": 18241,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "380"
										},
										{
											"begin": 18217,
											"end": 18241,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 18217,
											"end": 18241,
											"name": "tag",
											"source": 15,
											"value": "631"
										},
										{
											"begin": 18217,
											"end": 18241,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 18212,
											"end": 18215,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 18205,
											"end": 18242,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 18130,
											"end": 18248,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 18130,
											"end": 18248,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 18130,
											"end": 18248,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 18254,
											"end": 18476,
											"name": "tag",
											"source": 15,
											"value": "82"
										},
										{
											"begin": 18254,
											"end": 18476,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 18347,
											"end": 18351,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 18385,
											"end": 18387,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 18374,
											"end": 18383,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 18370,
											"end": 18388,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 18362,
											"end": 18388,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 18362,
											"end": 18388,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 18398,
											"end": 18469,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "633"
										},
										{
											"begin": 18466,
											"end": 18467,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 18455,
											"end": 18464,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 18451,
											"end": 18468,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 18442,
											"end": 18448,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 18398,
											"end": 18469,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "419"
										},
										{
											"begin": 18398,
											"end": 18469,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 18398,
											"end": 18469,
											"name": "tag",
											"source": 15,
											"value": "633"
										},
										{
											"begin": 18398,
											"end": 18469,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 18254,
											"end": 18476,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 18254,
											"end": 18476,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 18254,
											"end": 18476,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 18254,
											"end": 18476,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 18254,
											"end": 18476,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 18482,
											"end": 18598,
											"name": "tag",
											"source": 15,
											"value": "420"
										},
										{
											"begin": 18482,
											"end": 18598,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 18552,
											"end": 18573,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "635"
										},
										{
											"begin": 18567,
											"end": 18572,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 18552,
											"end": 18573,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "390"
										},
										{
											"begin": 18552,
											"end": 18573,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 18552,
											"end": 18573,
											"name": "tag",
											"source": 15,
											"value": "635"
										},
										{
											"begin": 18552,
											"end": 18573,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 18545,
											"end": 18550,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 18542,
											"end": 18574,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 18532,
											"end": 18592,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "636"
										},
										{
											"begin": 18532,
											"end": 18592,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 18588,
											"end": 18589,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 18585,
											"end": 18586,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 18578,
											"end": 18590,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 18532,
											"end": 18592,
											"name": "tag",
											"source": 15,
											"value": "636"
										},
										{
											"begin": 18532,
											"end": 18592,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 18482,
											"end": 18598,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 18482,
											"end": 18598,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 18604,
											"end": 18737,
											"name": "tag",
											"source": 15,
											"value": "421"
										},
										{
											"begin": 18604,
											"end": 18737,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 18647,
											"end": 18652,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 18685,
											"end": 18691,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 18672,
											"end": 18692,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 18663,
											"end": 18692,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 18663,
											"end": 18692,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 18701,
											"end": 18731,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "638"
										},
										{
											"begin": 18725,
											"end": 18730,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 18701,
											"end": 18731,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "420"
										},
										{
											"begin": 18701,
											"end": 18731,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 18701,
											"end": 18731,
											"name": "tag",
											"source": 15,
											"value": "638"
										},
										{
											"begin": 18701,
											"end": 18731,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 18604,
											"end": 18737,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 18604,
											"end": 18737,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 18604,
											"end": 18737,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 18604,
											"end": 18737,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 18604,
											"end": 18737,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 18743,
											"end": 19211,
											"name": "tag",
											"source": 15,
											"value": "88"
										},
										{
											"begin": 18743,
											"end": 19211,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 18808,
											"end": 18814,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 18816,
											"end": 18822,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 18865,
											"end": 18867,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 18853,
											"end": 18862,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 18844,
											"end": 18851,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 18840,
											"end": 18863,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 18836,
											"end": 18868,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 18833,
											"end": 18952,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 18833,
											"end": 18952,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "640"
										},
										{
											"begin": 18833,
											"end": 18952,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 18871,
											"end": 18950,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "641"
										},
										{
											"begin": 18871,
											"end": 18950,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "377"
										},
										{
											"begin": 18871,
											"end": 18950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 18871,
											"end": 18950,
											"name": "tag",
											"source": 15,
											"value": "641"
										},
										{
											"begin": 18871,
											"end": 18950,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 18833,
											"end": 18952,
											"name": "tag",
											"source": 15,
											"value": "640"
										},
										{
											"begin": 18833,
											"end": 18952,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 18991,
											"end": 18992,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 19016,
											"end": 19069,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "642"
										},
										{
											"begin": 19061,
											"end": 19068,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 19052,
											"end": 19058,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 19041,
											"end": 19050,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 19037,
											"end": 19059,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 19016,
											"end": 19069,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "382"
										},
										{
											"begin": 19016,
											"end": 19069,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 19016,
											"end": 19069,
											"name": "tag",
											"source": 15,
											"value": "642"
										},
										{
											"begin": 19016,
											"end": 19069,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 19006,
											"end": 19069,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 19006,
											"end": 19069,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 18962,
											"end": 19079,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 19118,
											"end": 19120,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 19144,
											"end": 19194,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "643"
										},
										{
											"begin": 19186,
											"end": 19193,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 19177,
											"end": 19183,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 19166,
											"end": 19175,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 19162,
											"end": 19184,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 19144,
											"end": 19194,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "421"
										},
										{
											"begin": 19144,
											"end": 19194,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 19144,
											"end": 19194,
											"name": "tag",
											"source": 15,
											"value": "643"
										},
										{
											"begin": 19144,
											"end": 19194,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 19134,
											"end": 19194,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 19134,
											"end": 19194,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 19089,
											"end": 19204,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 18743,
											"end": 19211,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 18743,
											"end": 19211,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 18743,
											"end": 19211,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 18743,
											"end": 19211,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 18743,
											"end": 19211,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 18743,
											"end": 19211,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 19217,
											"end": 19691,
											"name": "tag",
											"source": 15,
											"value": "96"
										},
										{
											"begin": 19217,
											"end": 19691,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 19285,
											"end": 19291,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 19293,
											"end": 19299,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 19342,
											"end": 19344,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 19330,
											"end": 19339,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 19321,
											"end": 19328,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 19317,
											"end": 19340,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 19313,
											"end": 19345,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 19310,
											"end": 19429,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 19310,
											"end": 19429,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "645"
										},
										{
											"begin": 19310,
											"end": 19429,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 19348,
											"end": 19427,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "646"
										},
										{
											"begin": 19348,
											"end": 19427,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "377"
										},
										{
											"begin": 19348,
											"end": 19427,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 19348,
											"end": 19427,
											"name": "tag",
											"source": 15,
											"value": "646"
										},
										{
											"begin": 19348,
											"end": 19427,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 19310,
											"end": 19429,
											"name": "tag",
											"source": 15,
											"value": "645"
										},
										{
											"begin": 19310,
											"end": 19429,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 19468,
											"end": 19469,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 19493,
											"end": 19546,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "647"
										},
										{
											"begin": 19538,
											"end": 19545,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 19529,
											"end": 19535,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 19518,
											"end": 19527,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 19514,
											"end": 19536,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 19493,
											"end": 19546,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "382"
										},
										{
											"begin": 19493,
											"end": 19546,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 19493,
											"end": 19546,
											"name": "tag",
											"source": 15,
											"value": "647"
										},
										{
											"begin": 19493,
											"end": 19546,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 19483,
											"end": 19546,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 19483,
											"end": 19546,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 19439,
											"end": 19556,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 19595,
											"end": 19597,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 19621,
											"end": 19674,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "648"
										},
										{
											"begin": 19666,
											"end": 19673,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 19657,
											"end": 19663,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 19646,
											"end": 19655,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 19642,
											"end": 19664,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 19621,
											"end": 19674,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "382"
										},
										{
											"begin": 19621,
											"end": 19674,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 19621,
											"end": 19674,
											"name": "tag",
											"source": 15,
											"value": "648"
										},
										{
											"begin": 19621,
											"end": 19674,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 19611,
											"end": 19674,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 19611,
											"end": 19674,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 19566,
											"end": 19684,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 19217,
											"end": 19691,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 19217,
											"end": 19691,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 19217,
											"end": 19691,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 19217,
											"end": 19691,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 19217,
											"end": 19691,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 19217,
											"end": 19691,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 19697,
											"end": 20786,
											"name": "tag",
											"source": 15,
											"value": "101"
										},
										{
											"begin": 19697,
											"end": 20786,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 19801,
											"end": 19807,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 19809,
											"end": 19815,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 19817,
											"end": 19823,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 19825,
											"end": 19831,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 19833,
											"end": 19839,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 19882,
											"end": 19885,
											"name": "PUSH",
											"source": 15,
											"value": "A0"
										},
										{
											"begin": 19870,
											"end": 19879,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 19861,
											"end": 19868,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 19857,
											"end": 19880,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 19853,
											"end": 19886,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 19850,
											"end": 19970,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 19850,
											"end": 19970,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "650"
										},
										{
											"begin": 19850,
											"end": 19970,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 19889,
											"end": 19968,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "651"
										},
										{
											"begin": 19889,
											"end": 19968,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "377"
										},
										{
											"begin": 19889,
											"end": 19968,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 19889,
											"end": 19968,
											"name": "tag",
											"source": 15,
											"value": "651"
										},
										{
											"begin": 19889,
											"end": 19968,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 19850,
											"end": 19970,
											"name": "tag",
											"source": 15,
											"value": "650"
										},
										{
											"begin": 19850,
											"end": 19970,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 20009,
											"end": 20010,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 20034,
											"end": 20087,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "652"
										},
										{
											"begin": 20079,
											"end": 20086,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 20070,
											"end": 20076,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 20059,
											"end": 20068,
											"name": "DUP10",
											"source": 15
										},
										{
											"begin": 20055,
											"end": 20077,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 20034,
											"end": 20087,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "382"
										},
										{
											"begin": 20034,
											"end": 20087,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 20034,
											"end": 20087,
											"name": "tag",
											"source": 15,
											"value": "652"
										},
										{
											"begin": 20034,
											"end": 20087,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 20024,
											"end": 20087,
											"name": "SWAP6",
											"source": 15
										},
										{
											"begin": 20024,
											"end": 20087,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 19980,
											"end": 20097,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 20136,
											"end": 20138,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 20162,
											"end": 20215,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "653"
										},
										{
											"begin": 20207,
											"end": 20214,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 20198,
											"end": 20204,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 20187,
											"end": 20196,
											"name": "DUP10",
											"source": 15
										},
										{
											"begin": 20183,
											"end": 20205,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 20162,
											"end": 20215,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "382"
										},
										{
											"begin": 20162,
											"end": 20215,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 20162,
											"end": 20215,
											"name": "tag",
											"source": 15,
											"value": "653"
										},
										{
											"begin": 20162,
											"end": 20215,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 20152,
											"end": 20215,
											"name": "SWAP5",
											"source": 15
										},
										{
											"begin": 20152,
											"end": 20215,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 20107,
											"end": 20225,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 20264,
											"end": 20266,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 20290,
											"end": 20343,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "654"
										},
										{
											"begin": 20335,
											"end": 20342,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 20326,
											"end": 20332,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 20315,
											"end": 20324,
											"name": "DUP10",
											"source": 15
										},
										{
											"begin": 20311,
											"end": 20333,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 20290,
											"end": 20343,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "385"
										},
										{
											"begin": 20290,
											"end": 20343,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 20290,
											"end": 20343,
											"name": "tag",
											"source": 15,
											"value": "654"
										},
										{
											"begin": 20290,
											"end": 20343,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 20280,
											"end": 20343,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 20280,
											"end": 20343,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 20235,
											"end": 20353,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 20392,
											"end": 20394,
											"name": "PUSH",
											"source": 15,
											"value": "60"
										},
										{
											"begin": 20418,
											"end": 20471,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "655"
										},
										{
											"begin": 20463,
											"end": 20470,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 20454,
											"end": 20460,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 20443,
											"end": 20452,
											"name": "DUP10",
											"source": 15
										},
										{
											"begin": 20439,
											"end": 20461,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 20418,
											"end": 20471,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "385"
										},
										{
											"begin": 20418,
											"end": 20471,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 20418,
											"end": 20471,
											"name": "tag",
											"source": 15,
											"value": "655"
										},
										{
											"begin": 20418,
											"end": 20471,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 20408,
											"end": 20471,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 20408,
											"end": 20471,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 20363,
											"end": 20481,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 20548,
											"end": 20551,
											"name": "PUSH",
											"source": 15,
											"value": "80"
										},
										{
											"begin": 20537,
											"end": 20546,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 20533,
											"end": 20552,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 20520,
											"end": 20553,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 20580,
											"end": 20598,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20572,
											"end": 20578,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 20569,
											"end": 20599,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 20566,
											"end": 20683,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 20566,
											"end": 20683,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "656"
										},
										{
											"begin": 20566,
											"end": 20683,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 20602,
											"end": 20681,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "657"
										},
										{
											"begin": 20602,
											"end": 20681,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "378"
										},
										{
											"begin": 20602,
											"end": 20681,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 20602,
											"end": 20681,
											"name": "tag",
											"source": 15,
											"value": "657"
										},
										{
											"begin": 20602,
											"end": 20681,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 20566,
											"end": 20683,
											"name": "tag",
											"source": 15,
											"value": "656"
										},
										{
											"begin": 20566,
											"end": 20683,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 20707,
											"end": 20769,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "658"
										},
										{
											"begin": 20761,
											"end": 20768,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 20752,
											"end": 20758,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 20741,
											"end": 20750,
											"name": "DUP10",
											"source": 15
										},
										{
											"begin": 20737,
											"end": 20759,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 20707,
											"end": 20769,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "408"
										},
										{
											"begin": 20707,
											"end": 20769,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 20707,
											"end": 20769,
											"name": "tag",
											"source": 15,
											"value": "658"
										},
										{
											"begin": 20707,
											"end": 20769,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 20697,
											"end": 20769,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 20697,
											"end": 20769,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 20491,
											"end": 20779,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 19697,
											"end": 20786,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 19697,
											"end": 20786,
											"name": "SWAP6",
											"source": 15
										},
										{
											"begin": 19697,
											"end": 20786,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 19697,
											"end": 20786,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 19697,
											"end": 20786,
											"name": "SWAP6",
											"source": 15
										},
										{
											"begin": 19697,
											"end": 20786,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 19697,
											"end": 20786,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 19697,
											"end": 20786,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 19697,
											"end": 20786,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 20792,
											"end": 21411,
											"name": "tag",
											"source": 15,
											"value": "108"
										},
										{
											"begin": 20792,
											"end": 21411,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 20869,
											"end": 20875,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 20877,
											"end": 20883,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 20885,
											"end": 20891,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 20934,
											"end": 20936,
											"name": "PUSH",
											"source": 15,
											"value": "60"
										},
										{
											"begin": 20922,
											"end": 20931,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 20913,
											"end": 20920,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 20909,
											"end": 20932,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 20905,
											"end": 20937,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 20902,
											"end": 21021,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 20902,
											"end": 21021,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "660"
										},
										{
											"begin": 20902,
											"end": 21021,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 20940,
											"end": 21019,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "661"
										},
										{
											"begin": 20940,
											"end": 21019,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "377"
										},
										{
											"begin": 20940,
											"end": 21019,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 20940,
											"end": 21019,
											"name": "tag",
											"source": 15,
											"value": "661"
										},
										{
											"begin": 20940,
											"end": 21019,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 20902,
											"end": 21021,
											"name": "tag",
											"source": 15,
											"value": "660"
										},
										{
											"begin": 20902,
											"end": 21021,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 21060,
											"end": 21061,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 21085,
											"end": 21138,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "662"
										},
										{
											"begin": 21130,
											"end": 21137,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 21121,
											"end": 21127,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 21110,
											"end": 21119,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 21106,
											"end": 21128,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 21085,
											"end": 21138,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "382"
										},
										{
											"begin": 21085,
											"end": 21138,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 21085,
											"end": 21138,
											"name": "tag",
											"source": 15,
											"value": "662"
										},
										{
											"begin": 21085,
											"end": 21138,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 21075,
											"end": 21138,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 21075,
											"end": 21138,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 21031,
											"end": 21148,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 21187,
											"end": 21189,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 21213,
											"end": 21266,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "663"
										},
										{
											"begin": 21258,
											"end": 21265,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 21249,
											"end": 21255,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 21238,
											"end": 21247,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 21234,
											"end": 21256,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 21213,
											"end": 21266,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "385"
										},
										{
											"begin": 21213,
											"end": 21266,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 21213,
											"end": 21266,
											"name": "tag",
											"source": 15,
											"value": "663"
										},
										{
											"begin": 21213,
											"end": 21266,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 21203,
											"end": 21266,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 21203,
											"end": 21266,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 21158,
											"end": 21276,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 21315,
											"end": 21317,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 21341,
											"end": 21394,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "664"
										},
										{
											"begin": 21386,
											"end": 21393,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 21377,
											"end": 21383,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 21366,
											"end": 21375,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 21362,
											"end": 21384,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 21341,
											"end": 21394,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "385"
										},
										{
											"begin": 21341,
											"end": 21394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 21341,
											"end": 21394,
											"name": "tag",
											"source": 15,
											"value": "664"
										},
										{
											"begin": 21341,
											"end": 21394,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 21331,
											"end": 21394,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 21331,
											"end": 21394,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 21286,
											"end": 21404,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 20792,
											"end": 21411,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 20792,
											"end": 21411,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 20792,
											"end": 21411,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 20792,
											"end": 21411,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 20792,
											"end": 21411,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 20792,
											"end": 21411,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 21417,
											"end": 21597,
											"name": "tag",
											"source": 15,
											"value": "422"
										},
										{
											"begin": 21417,
											"end": 21597,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 21465,
											"end": 21542,
											"name": "PUSH",
											"source": 15,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 21462,
											"end": 21463,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 21455,
											"end": 21543,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 21562,
											"end": 21566,
											"name": "PUSH",
											"source": 15,
											"value": "22"
										},
										{
											"begin": 21559,
											"end": 21560,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 21552,
											"end": 21567,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 21586,
											"end": 21590,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 21583,
											"end": 21584,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 21576,
											"end": 21591,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 21603,
											"end": 21923,
											"name": "tag",
											"source": 15,
											"value": "118"
										},
										{
											"begin": 21603,
											"end": 21923,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 21647,
											"end": 21653,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 21684,
											"end": 21685,
											"name": "PUSH",
											"source": 15,
											"value": "2"
										},
										{
											"begin": 21678,
											"end": 21682,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 21674,
											"end": 21686,
											"name": "DIV",
											"source": 15
										},
										{
											"begin": 21664,
											"end": 21686,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 21664,
											"end": 21686,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 21731,
											"end": 21732,
											"name": "PUSH",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 21725,
											"end": 21729,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 21721,
											"end": 21733,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 21752,
											"end": 21770,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 21742,
											"end": 21823,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "667"
										},
										{
											"begin": 21742,
											"end": 21823,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 21808,
											"end": 21812,
											"name": "PUSH",
											"source": 15,
											"value": "7F"
										},
										{
											"begin": 21800,
											"end": 21806,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 21796,
											"end": 21813,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 21786,
											"end": 21813,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 21786,
											"end": 21813,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 21742,
											"end": 21823,
											"name": "tag",
											"source": 15,
											"value": "667"
										},
										{
											"begin": 21742,
											"end": 21823,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 21870,
											"end": 21872,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 21862,
											"end": 21868,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 21859,
											"end": 21873,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 21839,
											"end": 21857,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 21836,
											"end": 21874,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 21833,
											"end": 21917,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "668"
										},
										{
											"begin": 21833,
											"end": 21917,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 21889,
											"end": 21907,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "669"
										},
										{
											"begin": 21889,
											"end": 21907,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "422"
										},
										{
											"begin": 21889,
											"end": 21907,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 21889,
											"end": 21907,
											"name": "tag",
											"source": 15,
											"value": "669"
										},
										{
											"begin": 21889,
											"end": 21907,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 21833,
											"end": 21917,
											"name": "tag",
											"source": 15,
											"value": "668"
										},
										{
											"begin": 21833,
											"end": 21917,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 21654,
											"end": 21923,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 21603,
											"end": 21923,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 21603,
											"end": 21923,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 21603,
											"end": 21923,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 21603,
											"end": 21923,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 21929,
											"end": 22100,
											"name": "tag",
											"source": 15,
											"value": "423"
										},
										{
											"begin": 21929,
											"end": 22100,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 22069,
											"end": 22092,
											"name": "PUSH",
											"source": 15,
											"value": "47616D652061646472657373206E6F74207365742E0000000000000000000000"
										},
										{
											"begin": 22065,
											"end": 22066,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 22057,
											"end": 22063,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 22053,
											"end": 22067,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 22046,
											"end": 22093,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 21929,
											"end": 22100,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 21929,
											"end": 22100,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 22106,
											"end": 22472,
											"name": "tag",
											"source": 15,
											"value": "424"
										},
										{
											"begin": 22106,
											"end": 22472,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 22248,
											"end": 22251,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 22269,
											"end": 22336,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "672"
										},
										{
											"begin": 22333,
											"end": 22335,
											"name": "PUSH",
											"source": 15,
											"value": "15"
										},
										{
											"begin": 22328,
											"end": 22331,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 22269,
											"end": 22336,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "393"
										},
										{
											"begin": 22269,
											"end": 22336,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 22269,
											"end": 22336,
											"name": "tag",
											"source": 15,
											"value": "672"
										},
										{
											"begin": 22269,
											"end": 22336,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 22262,
											"end": 22336,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 22262,
											"end": 22336,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 22345,
											"end": 22438,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "673"
										},
										{
											"begin": 22434,
											"end": 22437,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 22345,
											"end": 22438,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "423"
										},
										{
											"begin": 22345,
											"end": 22438,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 22345,
											"end": 22438,
											"name": "tag",
											"source": 15,
											"value": "673"
										},
										{
											"begin": 22345,
											"end": 22438,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 22463,
											"end": 22465,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 22458,
											"end": 22461,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 22454,
											"end": 22466,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 22447,
											"end": 22466,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 22447,
											"end": 22466,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 22106,
											"end": 22472,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 22106,
											"end": 22472,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 22106,
											"end": 22472,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 22106,
											"end": 22472,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 22478,
											"end": 22897,
											"name": "tag",
											"source": 15,
											"value": "127"
										},
										{
											"begin": 22478,
											"end": 22897,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 22644,
											"end": 22648,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 22682,
											"end": 22684,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 22671,
											"end": 22680,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 22667,
											"end": 22685,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 22659,
											"end": 22685,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 22659,
											"end": 22685,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 22731,
											"end": 22740,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 22725,
											"end": 22729,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 22721,
											"end": 22741,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 22717,
											"end": 22718,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 22706,
											"end": 22715,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 22702,
											"end": 22719,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 22695,
											"end": 22742,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 22759,
											"end": 22890,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "675"
										},
										{
											"begin": 22885,
											"end": 22889,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 22759,
											"end": 22890,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "424"
										},
										{
											"begin": 22759,
											"end": 22890,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 22759,
											"end": 22890,
											"name": "tag",
											"source": 15,
											"value": "675"
										},
										{
											"begin": 22759,
											"end": 22890,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 22751,
											"end": 22890,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 22751,
											"end": 22890,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 22478,
											"end": 22897,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 22478,
											"end": 22897,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 22478,
											"end": 22897,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 22478,
											"end": 22897,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 22903,
											"end": 23081,
											"name": "tag",
											"source": 15,
											"value": "425"
										},
										{
											"begin": 22903,
											"end": 23081,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 23043,
											"end": 23073,
											"name": "PUSH",
											"source": 15,
											"value": "4F6E6C792067616D6520636F6E74726163742063616E206D696E742E00000000"
										},
										{
											"begin": 23039,
											"end": 23040,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 23031,
											"end": 23037,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 23027,
											"end": 23041,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 23020,
											"end": 23074,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 22903,
											"end": 23081,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 22903,
											"end": 23081,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 23087,
											"end": 23453,
											"name": "tag",
											"source": 15,
											"value": "426"
										},
										{
											"begin": 23087,
											"end": 23453,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 23229,
											"end": 23232,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 23250,
											"end": 23317,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "678"
										},
										{
											"begin": 23314,
											"end": 23316,
											"name": "PUSH",
											"source": 15,
											"value": "1C"
										},
										{
											"begin": 23309,
											"end": 23312,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 23250,
											"end": 23317,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "393"
										},
										{
											"begin": 23250,
											"end": 23317,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 23250,
											"end": 23317,
											"name": "tag",
											"source": 15,
											"value": "678"
										},
										{
											"begin": 23250,
											"end": 23317,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 23243,
											"end": 23317,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 23243,
											"end": 23317,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 23326,
											"end": 23419,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "679"
										},
										{
											"begin": 23415,
											"end": 23418,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 23326,
											"end": 23419,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "425"
										},
										{
											"begin": 23326,
											"end": 23419,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 23326,
											"end": 23419,
											"name": "tag",
											"source": 15,
											"value": "679"
										},
										{
											"begin": 23326,
											"end": 23419,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 23444,
											"end": 23446,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 23439,
											"end": 23442,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 23435,
											"end": 23447,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 23428,
											"end": 23447,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 23428,
											"end": 23447,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 23087,
											"end": 23453,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 23087,
											"end": 23453,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 23087,
											"end": 23453,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 23087,
											"end": 23453,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 23459,
											"end": 23878,
											"name": "tag",
											"source": 15,
											"value": "130"
										},
										{
											"begin": 23459,
											"end": 23878,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 23625,
											"end": 23629,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 23663,
											"end": 23665,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 23652,
											"end": 23661,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 23648,
											"end": 23666,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 23640,
											"end": 23666,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 23640,
											"end": 23666,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 23712,
											"end": 23721,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 23706,
											"end": 23710,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 23702,
											"end": 23722,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 23698,
											"end": 23699,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 23687,
											"end": 23696,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 23683,
											"end": 23700,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 23676,
											"end": 23723,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 23740,
											"end": 23871,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "681"
										},
										{
											"begin": 23866,
											"end": 23870,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 23740,
											"end": 23871,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "426"
										},
										{
											"begin": 23740,
											"end": 23871,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 23740,
											"end": 23871,
											"name": "tag",
											"source": 15,
											"value": "681"
										},
										{
											"begin": 23740,
											"end": 23871,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 23732,
											"end": 23871,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 23732,
											"end": 23871,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 23459,
											"end": 23878,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 23459,
											"end": 23878,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 23459,
											"end": 23878,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 23459,
											"end": 23878,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 23884,
											"end": 24216,
											"name": "tag",
											"source": 15,
											"value": "140"
										},
										{
											"begin": 23884,
											"end": 24216,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 24005,
											"end": 24009,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 24043,
											"end": 24045,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 24032,
											"end": 24041,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 24028,
											"end": 24046,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 24020,
											"end": 24046,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 24020,
											"end": 24046,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 24056,
											"end": 24127,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "683"
										},
										{
											"begin": 24124,
											"end": 24125,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 24113,
											"end": 24122,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 24109,
											"end": 24126,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 24100,
											"end": 24106,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 24056,
											"end": 24127,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "419"
										},
										{
											"begin": 24056,
											"end": 24127,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 24056,
											"end": 24127,
											"name": "tag",
											"source": 15,
											"value": "683"
										},
										{
											"begin": 24056,
											"end": 24127,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 24137,
											"end": 24209,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "684"
										},
										{
											"begin": 24205,
											"end": 24207,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 24194,
											"end": 24203,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 24190,
											"end": 24208,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 24181,
											"end": 24187,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 24137,
											"end": 24209,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "419"
										},
										{
											"begin": 24137,
											"end": 24209,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 24137,
											"end": 24209,
											"name": "tag",
											"source": 15,
											"value": "684"
										},
										{
											"begin": 24137,
											"end": 24209,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 23884,
											"end": 24216,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 23884,
											"end": 24216,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 23884,
											"end": 24216,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 23884,
											"end": 24216,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 23884,
											"end": 24216,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 23884,
											"end": 24216,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 24222,
											"end": 24554,
											"name": "tag",
											"source": 15,
											"value": "146"
										},
										{
											"begin": 24222,
											"end": 24554,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 24343,
											"end": 24347,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 24381,
											"end": 24383,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 24370,
											"end": 24379,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 24366,
											"end": 24384,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 24358,
											"end": 24384,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 24358,
											"end": 24384,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 24394,
											"end": 24465,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "686"
										},
										{
											"begin": 24462,
											"end": 24463,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 24451,
											"end": 24460,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 24447,
											"end": 24464,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 24438,
											"end": 24444,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 24394,
											"end": 24465,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "386"
										},
										{
											"begin": 24394,
											"end": 24465,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 24394,
											"end": 24465,
											"name": "tag",
											"source": 15,
											"value": "686"
										},
										{
											"begin": 24394,
											"end": 24465,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 24475,
											"end": 24547,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "687"
										},
										{
											"begin": 24543,
											"end": 24545,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 24532,
											"end": 24541,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 24528,
											"end": 24546,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 24519,
											"end": 24525,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 24475,
											"end": 24547,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "386"
										},
										{
											"begin": 24475,
											"end": 24547,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 24475,
											"end": 24547,
											"name": "tag",
											"source": 15,
											"value": "687"
										},
										{
											"begin": 24475,
											"end": 24547,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 24222,
											"end": 24554,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 24222,
											"end": 24554,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 24222,
											"end": 24554,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 24222,
											"end": 24554,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 24222,
											"end": 24554,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 24222,
											"end": 24554,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 24560,
											"end": 24740,
											"name": "tag",
											"source": 15,
											"value": "161"
										},
										{
											"begin": 24560,
											"end": 24740,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 24608,
											"end": 24685,
											"name": "PUSH",
											"source": 15,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 24605,
											"end": 24606,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 24598,
											"end": 24686,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 24705,
											"end": 24709,
											"name": "PUSH",
											"source": 15,
											"value": "32"
										},
										{
											"begin": 24702,
											"end": 24703,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 24695,
											"end": 24710,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 24729,
											"end": 24733,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 24726,
											"end": 24727,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 24719,
											"end": 24734,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 24746,
											"end": 24926,
											"name": "tag",
											"source": 15,
											"value": "427"
										},
										{
											"begin": 24746,
											"end": 24926,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 24794,
											"end": 24871,
											"name": "PUSH",
											"source": 15,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 24791,
											"end": 24792,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 24784,
											"end": 24872,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 24891,
											"end": 24895,
											"name": "PUSH",
											"source": 15,
											"value": "11"
										},
										{
											"begin": 24888,
											"end": 24889,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 24881,
											"end": 24896,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 24915,
											"end": 24919,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 24912,
											"end": 24913,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 24905,
											"end": 24920,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 24932,
											"end": 25165,
											"name": "tag",
											"source": 15,
											"value": "163"
										},
										{
											"begin": 24932,
											"end": 25165,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 24971,
											"end": 24974,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 24994,
											"end": 25018,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "691"
										},
										{
											"begin": 25012,
											"end": 25017,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 24994,
											"end": 25018,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "383"
										},
										{
											"begin": 24994,
											"end": 25018,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 24994,
											"end": 25018,
											"name": "tag",
											"source": 15,
											"value": "691"
										},
										{
											"begin": 24994,
											"end": 25018,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 24985,
											"end": 25018,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 24985,
											"end": 25018,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 25040,
											"end": 25106,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 25033,
											"end": 25038,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 25030,
											"end": 25107,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 25027,
											"end": 25130,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "692"
										},
										{
											"begin": 25027,
											"end": 25130,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 25110,
											"end": 25128,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "693"
										},
										{
											"begin": 25110,
											"end": 25128,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "427"
										},
										{
											"begin": 25110,
											"end": 25128,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 25110,
											"end": 25128,
											"name": "tag",
											"source": 15,
											"value": "693"
										},
										{
											"begin": 25110,
											"end": 25128,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 25027,
											"end": 25130,
											"name": "tag",
											"source": 15,
											"value": "692"
										},
										{
											"begin": 25027,
											"end": 25130,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 25157,
											"end": 25158,
											"name": "PUSH",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 25150,
											"end": 25155,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 25146,
											"end": 25159,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 25139,
											"end": 25159,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 25139,
											"end": 25159,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 24932,
											"end": 25165,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 24932,
											"end": 25165,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 24932,
											"end": 25165,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 24932,
											"end": 25165,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 25171,
											"end": 25349,
											"name": "tag",
											"source": 15,
											"value": "428"
										},
										{
											"begin": 25171,
											"end": 25349,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 25311,
											"end": 25341,
											"name": "PUSH",
											"source": 15,
											"value": "47616D65206164647265737320697320616C7265616479207365742E00000000"
										},
										{
											"begin": 25307,
											"end": 25308,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 25299,
											"end": 25305,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 25295,
											"end": 25309,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 25288,
											"end": 25342,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 25171,
											"end": 25349,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 25171,
											"end": 25349,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 25355,
											"end": 25721,
											"name": "tag",
											"source": 15,
											"value": "429"
										},
										{
											"begin": 25355,
											"end": 25721,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 25497,
											"end": 25500,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 25518,
											"end": 25585,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "696"
										},
										{
											"begin": 25582,
											"end": 25584,
											"name": "PUSH",
											"source": 15,
											"value": "1C"
										},
										{
											"begin": 25577,
											"end": 25580,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 25518,
											"end": 25585,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "393"
										},
										{
											"begin": 25518,
											"end": 25585,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 25518,
											"end": 25585,
											"name": "tag",
											"source": 15,
											"value": "696"
										},
										{
											"begin": 25518,
											"end": 25585,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 25511,
											"end": 25585,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 25511,
											"end": 25585,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 25594,
											"end": 25687,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "697"
										},
										{
											"begin": 25683,
											"end": 25686,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 25594,
											"end": 25687,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "428"
										},
										{
											"begin": 25594,
											"end": 25687,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 25594,
											"end": 25687,
											"name": "tag",
											"source": 15,
											"value": "697"
										},
										{
											"begin": 25594,
											"end": 25687,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 25712,
											"end": 25714,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 25707,
											"end": 25710,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 25703,
											"end": 25715,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 25696,
											"end": 25715,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 25696,
											"end": 25715,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 25355,
											"end": 25721,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 25355,
											"end": 25721,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 25355,
											"end": 25721,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 25355,
											"end": 25721,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 25727,
											"end": 26146,
											"name": "tag",
											"source": 15,
											"value": "182"
										},
										{
											"begin": 25727,
											"end": 26146,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 25893,
											"end": 25897,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 25931,
											"end": 25933,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 25920,
											"end": 25929,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 25916,
											"end": 25934,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 25908,
											"end": 25934,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 25908,
											"end": 25934,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 25980,
											"end": 25989,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 25974,
											"end": 25978,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 25970,
											"end": 25990,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 25966,
											"end": 25967,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 25955,
											"end": 25964,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 25951,
											"end": 25968,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 25944,
											"end": 25991,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 26008,
											"end": 26139,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "699"
										},
										{
											"begin": 26134,
											"end": 26138,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 26008,
											"end": 26139,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "429"
										},
										{
											"begin": 26008,
											"end": 26139,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 26008,
											"end": 26139,
											"name": "tag",
											"source": 15,
											"value": "699"
										},
										{
											"begin": 26008,
											"end": 26139,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 26000,
											"end": 26139,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 26000,
											"end": 26139,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 25727,
											"end": 26146,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 25727,
											"end": 26146,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 25727,
											"end": 26146,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 25727,
											"end": 26146,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 26152,
											"end": 26250,
											"name": "tag",
											"source": 15,
											"value": "430"
										},
										{
											"begin": 26152,
											"end": 26250,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 26203,
											"end": 26209,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 26237,
											"end": 26242,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 26231,
											"end": 26243,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 26221,
											"end": 26243,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 26221,
											"end": 26243,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 26152,
											"end": 26250,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 26152,
											"end": 26250,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 26152,
											"end": 26250,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 26152,
											"end": 26250,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 26256,
											"end": 26424,
											"name": "tag",
											"source": 15,
											"value": "431"
										},
										{
											"begin": 26256,
											"end": 26424,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 26339,
											"end": 26350,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 26373,
											"end": 26379,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 26368,
											"end": 26371,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 26361,
											"end": 26380,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 26413,
											"end": 26417,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 26408,
											"end": 26411,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 26404,
											"end": 26418,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 26389,
											"end": 26418,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 26389,
											"end": 26418,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 26256,
											"end": 26424,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 26256,
											"end": 26424,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 26256,
											"end": 26424,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 26256,
											"end": 26424,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 26256,
											"end": 26424,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 26430,
											"end": 26803,
											"name": "tag",
											"source": 15,
											"value": "432"
										},
										{
											"begin": 26430,
											"end": 26803,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 26516,
											"end": 26519,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 26544,
											"end": 26582,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "703"
										},
										{
											"begin": 26576,
											"end": 26581,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 26544,
											"end": 26582,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "430"
										},
										{
											"begin": 26544,
											"end": 26582,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 26544,
											"end": 26582,
											"name": "tag",
											"source": 15,
											"value": "703"
										},
										{
											"begin": 26544,
											"end": 26582,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 26598,
											"end": 26668,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "704"
										},
										{
											"begin": 26661,
											"end": 26667,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 26656,
											"end": 26659,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 26598,
											"end": 26668,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "431"
										},
										{
											"begin": 26598,
											"end": 26668,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 26598,
											"end": 26668,
											"name": "tag",
											"source": 15,
											"value": "704"
										},
										{
											"begin": 26598,
											"end": 26668,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 26591,
											"end": 26668,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 26591,
											"end": 26668,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 26677,
											"end": 26742,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "705"
										},
										{
											"begin": 26735,
											"end": 26741,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 26730,
											"end": 26733,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 26723,
											"end": 26727,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 26716,
											"end": 26721,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 26712,
											"end": 26728,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 26677,
											"end": 26742,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "394"
										},
										{
											"begin": 26677,
											"end": 26742,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 26677,
											"end": 26742,
											"name": "tag",
											"source": 15,
											"value": "705"
										},
										{
											"begin": 26677,
											"end": 26742,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 26767,
											"end": 26796,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "706"
										},
										{
											"begin": 26789,
											"end": 26795,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 26767,
											"end": 26796,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "395"
										},
										{
											"begin": 26767,
											"end": 26796,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 26767,
											"end": 26796,
											"name": "tag",
											"source": 15,
											"value": "706"
										},
										{
											"begin": 26767,
											"end": 26796,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 26762,
											"end": 26765,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 26758,
											"end": 26797,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 26751,
											"end": 26797,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 26751,
											"end": 26797,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 26520,
											"end": 26803,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 26430,
											"end": 26803,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 26430,
											"end": 26803,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 26430,
											"end": 26803,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 26430,
											"end": 26803,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 26430,
											"end": 26803,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 26809,
											"end": 27560,
											"name": "tag",
											"source": 15,
											"value": "294"
										},
										{
											"begin": 26809,
											"end": 27560,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 27032,
											"end": 27036,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 27070,
											"end": 27073,
											"name": "PUSH",
											"source": 15,
											"value": "A0"
										},
										{
											"begin": 27059,
											"end": 27068,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 27055,
											"end": 27074,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 27047,
											"end": 27074,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 27047,
											"end": 27074,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 27084,
											"end": 27155,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "708"
										},
										{
											"begin": 27152,
											"end": 27153,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 27141,
											"end": 27150,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 27137,
											"end": 27154,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 27128,
											"end": 27134,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 27084,
											"end": 27155,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "419"
										},
										{
											"begin": 27084,
											"end": 27155,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 27084,
											"end": 27155,
											"name": "tag",
											"source": 15,
											"value": "708"
										},
										{
											"begin": 27084,
											"end": 27155,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 27165,
											"end": 27237,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "709"
										},
										{
											"begin": 27233,
											"end": 27235,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 27222,
											"end": 27231,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 27218,
											"end": 27236,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 27209,
											"end": 27215,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 27165,
											"end": 27237,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "419"
										},
										{
											"begin": 27165,
											"end": 27237,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 27165,
											"end": 27237,
											"name": "tag",
											"source": 15,
											"value": "709"
										},
										{
											"begin": 27165,
											"end": 27237,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 27247,
											"end": 27319,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "710"
										},
										{
											"begin": 27315,
											"end": 27317,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 27304,
											"end": 27313,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 27300,
											"end": 27318,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 27291,
											"end": 27297,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 27247,
											"end": 27319,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "386"
										},
										{
											"begin": 27247,
											"end": 27319,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 27247,
											"end": 27319,
											"name": "tag",
											"source": 15,
											"value": "710"
										},
										{
											"begin": 27247,
											"end": 27319,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 27329,
											"end": 27401,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "711"
										},
										{
											"begin": 27397,
											"end": 27399,
											"name": "PUSH",
											"source": 15,
											"value": "60"
										},
										{
											"begin": 27386,
											"end": 27395,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 27382,
											"end": 27400,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 27373,
											"end": 27379,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 27329,
											"end": 27401,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "386"
										},
										{
											"begin": 27329,
											"end": 27401,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 27329,
											"end": 27401,
											"name": "tag",
											"source": 15,
											"value": "711"
										},
										{
											"begin": 27329,
											"end": 27401,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 27449,
											"end": 27458,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 27443,
											"end": 27447,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 27439,
											"end": 27459,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 27433,
											"end": 27436,
											"name": "PUSH",
											"source": 15,
											"value": "80"
										},
										{
											"begin": 27422,
											"end": 27431,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 27418,
											"end": 27437,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 27411,
											"end": 27460,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 27477,
											"end": 27553,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "712"
										},
										{
											"begin": 27548,
											"end": 27552,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 27539,
											"end": 27545,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 27477,
											"end": 27553,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "432"
										},
										{
											"begin": 27477,
											"end": 27553,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 27477,
											"end": 27553,
											"name": "tag",
											"source": 15,
											"value": "712"
										},
										{
											"begin": 27477,
											"end": 27553,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 27469,
											"end": 27553,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 27469,
											"end": 27553,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 26809,
											"end": 27560,
											"name": "SWAP7",
											"source": 15
										},
										{
											"begin": 26809,
											"end": 27560,
											"name": "SWAP6",
											"source": 15
										},
										{
											"begin": 26809,
											"end": 27560,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 26809,
											"end": 27560,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 26809,
											"end": 27560,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 26809,
											"end": 27560,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 26809,
											"end": 27560,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 26809,
											"end": 27560,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 26809,
											"end": 27560,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 27566,
											"end": 27707,
											"name": "tag",
											"source": 15,
											"value": "433"
										},
										{
											"begin": 27566,
											"end": 27707,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 27622,
											"end": 27627,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 27653,
											"end": 27659,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 27647,
											"end": 27660,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 27638,
											"end": 27660,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 27638,
											"end": 27660,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 27669,
											"end": 27701,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "714"
										},
										{
											"begin": 27695,
											"end": 27700,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 27669,
											"end": 27701,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "388"
										},
										{
											"begin": 27669,
											"end": 27701,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 27669,
											"end": 27701,
											"name": "tag",
											"source": 15,
											"value": "714"
										},
										{
											"begin": 27669,
											"end": 27701,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 27566,
											"end": 27707,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 27566,
											"end": 27707,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 27566,
											"end": 27707,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 27566,
											"end": 27707,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 27566,
											"end": 27707,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 27713,
											"end": 28062,
											"name": "tag",
											"source": 15,
											"value": "297"
										},
										{
											"begin": 27713,
											"end": 28062,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 27782,
											"end": 27788,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 27831,
											"end": 27833,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 27819,
											"end": 27828,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 27810,
											"end": 27817,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 27806,
											"end": 27829,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 27802,
											"end": 27834,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 27799,
											"end": 27918,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 27799,
											"end": 27918,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "716"
										},
										{
											"begin": 27799,
											"end": 27918,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 27837,
											"end": 27916,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "717"
										},
										{
											"begin": 27837,
											"end": 27916,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "377"
										},
										{
											"begin": 27837,
											"end": 27916,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 27837,
											"end": 27916,
											"name": "tag",
											"source": 15,
											"value": "717"
										},
										{
											"begin": 27837,
											"end": 27916,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 27799,
											"end": 27918,
											"name": "tag",
											"source": 15,
											"value": "716"
										},
										{
											"begin": 27799,
											"end": 27918,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 27957,
											"end": 27958,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 27982,
											"end": 28045,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "718"
										},
										{
											"begin": 28037,
											"end": 28044,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 28028,
											"end": 28034,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 28017,
											"end": 28026,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 28013,
											"end": 28035,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 27982,
											"end": 28045,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "433"
										},
										{
											"begin": 27982,
											"end": 28045,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 27982,
											"end": 28045,
											"name": "tag",
											"source": 15,
											"value": "718"
										},
										{
											"begin": 27982,
											"end": 28045,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 27972,
											"end": 28045,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 27972,
											"end": 28045,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 27928,
											"end": 28055,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 27713,
											"end": 28062,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 27713,
											"end": 28062,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 27713,
											"end": 28062,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 27713,
											"end": 28062,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 27713,
											"end": 28062,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 28068,
											"end": 29121,
											"name": "tag",
											"source": 15,
											"value": "313"
										},
										{
											"begin": 28068,
											"end": 29121,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 28391,
											"end": 28395,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 28429,
											"end": 28432,
											"name": "PUSH",
											"source": 15,
											"value": "A0"
										},
										{
											"begin": 28418,
											"end": 28427,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 28414,
											"end": 28433,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 28406,
											"end": 28433,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 28406,
											"end": 28433,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 28443,
											"end": 28514,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "720"
										},
										{
											"begin": 28511,
											"end": 28512,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 28500,
											"end": 28509,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 28496,
											"end": 28513,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 28487,
											"end": 28493,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 28443,
											"end": 28514,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "419"
										},
										{
											"begin": 28443,
											"end": 28514,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 28443,
											"end": 28514,
											"name": "tag",
											"source": 15,
											"value": "720"
										},
										{
											"begin": 28443,
											"end": 28514,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 28524,
											"end": 28596,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "721"
										},
										{
											"begin": 28592,
											"end": 28594,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 28581,
											"end": 28590,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 28577,
											"end": 28595,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 28568,
											"end": 28574,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 28524,
											"end": 28596,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "419"
										},
										{
											"begin": 28524,
											"end": 28596,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 28524,
											"end": 28596,
											"name": "tag",
											"source": 15,
											"value": "721"
										},
										{
											"begin": 28524,
											"end": 28596,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 28643,
											"end": 28652,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 28637,
											"end": 28641,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 28633,
											"end": 28653,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 28628,
											"end": 28630,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 28617,
											"end": 28626,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 28613,
											"end": 28631,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 28606,
											"end": 28654,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 28671,
											"end": 28779,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "722"
										},
										{
											"begin": 28774,
											"end": 28778,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 28765,
											"end": 28771,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 28671,
											"end": 28779,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "418"
										},
										{
											"begin": 28671,
											"end": 28779,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 28671,
											"end": 28779,
											"name": "tag",
											"source": 15,
											"value": "722"
										},
										{
											"begin": 28671,
											"end": 28779,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 28663,
											"end": 28779,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 28663,
											"end": 28779,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 28826,
											"end": 28835,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 28820,
											"end": 28824,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 28816,
											"end": 28836,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 28811,
											"end": 28813,
											"name": "PUSH",
											"source": 15,
											"value": "60"
										},
										{
											"begin": 28800,
											"end": 28809,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 28796,
											"end": 28814,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 28789,
											"end": 28837,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 28854,
											"end": 28962,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "723"
										},
										{
											"begin": 28957,
											"end": 28961,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 28948,
											"end": 28954,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 28854,
											"end": 28962,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "418"
										},
										{
											"begin": 28854,
											"end": 28962,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 28854,
											"end": 28962,
											"name": "tag",
											"source": 15,
											"value": "723"
										},
										{
											"begin": 28854,
											"end": 28962,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 28846,
											"end": 28962,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 28846,
											"end": 28962,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 29010,
											"end": 29019,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 29004,
											"end": 29008,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 29000,
											"end": 29020,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 28994,
											"end": 28997,
											"name": "PUSH",
											"source": 15,
											"value": "80"
										},
										{
											"begin": 28983,
											"end": 28992,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 28979,
											"end": 28998,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 28972,
											"end": 29021,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 29038,
											"end": 29114,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "724"
										},
										{
											"begin": 29109,
											"end": 29113,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 29100,
											"end": 29106,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 29038,
											"end": 29114,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "432"
										},
										{
											"begin": 29038,
											"end": 29114,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 29038,
											"end": 29114,
											"name": "tag",
											"source": 15,
											"value": "724"
										},
										{
											"begin": 29038,
											"end": 29114,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 29030,
											"end": 29114,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 29030,
											"end": 29114,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 28068,
											"end": 29121,
											"name": "SWAP7",
											"source": 15
										},
										{
											"begin": 28068,
											"end": 29121,
											"name": "SWAP6",
											"source": 15
										},
										{
											"begin": 28068,
											"end": 29121,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 28068,
											"end": 29121,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 28068,
											"end": 29121,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 28068,
											"end": 29121,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 28068,
											"end": 29121,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 28068,
											"end": 29121,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 28068,
											"end": 29121,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 29127,
											"end": 29318,
											"name": "tag",
											"source": 15,
											"value": "340"
										},
										{
											"begin": 29127,
											"end": 29318,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 29167,
											"end": 29170,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 29186,
											"end": 29206,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "726"
										},
										{
											"begin": 29204,
											"end": 29205,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 29186,
											"end": 29206,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "383"
										},
										{
											"begin": 29186,
											"end": 29206,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 29186,
											"end": 29206,
											"name": "tag",
											"source": 15,
											"value": "726"
										},
										{
											"begin": 29186,
											"end": 29206,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 29181,
											"end": 29206,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 29181,
											"end": 29206,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 29220,
											"end": 29240,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "727"
										},
										{
											"begin": 29238,
											"end": 29239,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 29220,
											"end": 29240,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "383"
										},
										{
											"begin": 29220,
											"end": 29240,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 29220,
											"end": 29240,
											"name": "tag",
											"source": 15,
											"value": "727"
										},
										{
											"begin": 29220,
											"end": 29240,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 29215,
											"end": 29240,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 29215,
											"end": 29240,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 29263,
											"end": 29264,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 29260,
											"end": 29261,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 29256,
											"end": 29265,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 29249,
											"end": 29265,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 29249,
											"end": 29265,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 29284,
											"end": 29287,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 29281,
											"end": 29282,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 29278,
											"end": 29288,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 29275,
											"end": 29311,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 29275,
											"end": 29311,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "728"
										},
										{
											"begin": 29275,
											"end": 29311,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 29291,
											"end": 29309,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "729"
										},
										{
											"begin": 29291,
											"end": 29309,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "427"
										},
										{
											"begin": 29291,
											"end": 29309,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 29291,
											"end": 29309,
											"name": "tag",
											"source": 15,
											"value": "729"
										},
										{
											"begin": 29291,
											"end": 29309,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 29275,
											"end": 29311,
											"name": "tag",
											"source": 15,
											"value": "728"
										},
										{
											"begin": 29275,
											"end": 29311,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 29127,
											"end": 29318,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 29127,
											"end": 29318,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 29127,
											"end": 29318,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 29127,
											"end": 29318,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 29127,
											"end": 29318,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 29324,
											"end": 29877,
											"name": "tag",
											"source": 15,
											"value": "365"
										},
										{
											"begin": 29324,
											"end": 29877,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 29501,
											"end": 29505,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 29539,
											"end": 29542,
											"name": "PUSH",
											"source": 15,
											"value": "80"
										},
										{
											"begin": 29528,
											"end": 29537,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 29524,
											"end": 29543,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 29516,
											"end": 29543,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 29516,
											"end": 29543,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 29553,
											"end": 29624,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "731"
										},
										{
											"begin": 29621,
											"end": 29622,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 29610,
											"end": 29619,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 29606,
											"end": 29623,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 29597,
											"end": 29603,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 29553,
											"end": 29624,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "419"
										},
										{
											"begin": 29553,
											"end": 29624,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 29553,
											"end": 29624,
											"name": "tag",
											"source": 15,
											"value": "731"
										},
										{
											"begin": 29553,
											"end": 29624,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 29634,
											"end": 29706,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "732"
										},
										{
											"begin": 29702,
											"end": 29704,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 29691,
											"end": 29700,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 29687,
											"end": 29705,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 29678,
											"end": 29684,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 29634,
											"end": 29706,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "386"
										},
										{
											"begin": 29634,
											"end": 29706,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 29634,
											"end": 29706,
											"name": "tag",
											"source": 15,
											"value": "732"
										},
										{
											"begin": 29634,
											"end": 29706,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 29716,
											"end": 29788,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "733"
										},
										{
											"begin": 29784,
											"end": 29786,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 29773,
											"end": 29782,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 29769,
											"end": 29787,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 29760,
											"end": 29766,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 29716,
											"end": 29788,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "386"
										},
										{
											"begin": 29716,
											"end": 29788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 29716,
											"end": 29788,
											"name": "tag",
											"source": 15,
											"value": "733"
										},
										{
											"begin": 29716,
											"end": 29788,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 29798,
											"end": 29870,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "734"
										},
										{
											"begin": 29866,
											"end": 29868,
											"name": "PUSH",
											"source": 15,
											"value": "60"
										},
										{
											"begin": 29855,
											"end": 29864,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 29851,
											"end": 29869,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 29842,
											"end": 29848,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 29798,
											"end": 29870,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "386"
										},
										{
											"begin": 29798,
											"end": 29870,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 29798,
											"end": 29870,
											"name": "tag",
											"source": 15,
											"value": "734"
										},
										{
											"begin": 29798,
											"end": 29870,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 29324,
											"end": 29877,
											"name": "SWAP6",
											"source": 15
										},
										{
											"begin": 29324,
											"end": 29877,
											"name": "SWAP5",
											"source": 15
										},
										{
											"begin": 29324,
											"end": 29877,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 29324,
											"end": 29877,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 29324,
											"end": 29877,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 29324,
											"end": 29877,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 29324,
											"end": 29877,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 29324,
											"end": 29877,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 29883,
											"end": 30517,
											"name": "tag",
											"source": 15,
											"value": "375"
										},
										{
											"begin": 29883,
											"end": 30517,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 30104,
											"end": 30108,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 30142,
											"end": 30144,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 30131,
											"end": 30140,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 30127,
											"end": 30145,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 30119,
											"end": 30145,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 30119,
											"end": 30145,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 30191,
											"end": 30200,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 30185,
											"end": 30189,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 30181,
											"end": 30201,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 30177,
											"end": 30178,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 30166,
											"end": 30175,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 30162,
											"end": 30179,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 30155,
											"end": 30202,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 30219,
											"end": 30327,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "736"
										},
										{
											"begin": 30322,
											"end": 30326,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 30313,
											"end": 30319,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 30219,
											"end": 30327,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "418"
										},
										{
											"begin": 30219,
											"end": 30327,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 30219,
											"end": 30327,
											"name": "tag",
											"source": 15,
											"value": "736"
										},
										{
											"begin": 30219,
											"end": 30327,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 30211,
											"end": 30327,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 30211,
											"end": 30327,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 30374,
											"end": 30383,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 30368,
											"end": 30372,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 30364,
											"end": 30384,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 30359,
											"end": 30361,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 30348,
											"end": 30357,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 30344,
											"end": 30362,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 30337,
											"end": 30385,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 30402,
											"end": 30510,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "737"
										},
										{
											"begin": 30505,
											"end": 30509,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 30496,
											"end": 30502,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 30402,
											"end": 30510,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "418"
										},
										{
											"begin": 30402,
											"end": 30510,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 30402,
											"end": 30510,
											"name": "tag",
											"source": 15,
											"value": "737"
										},
										{
											"begin": 30402,
											"end": 30510,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 30394,
											"end": 30510,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 30394,
											"end": 30510,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 29883,
											"end": 30517,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 29883,
											"end": 30517,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 29883,
											"end": 30517,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 29883,
											"end": 30517,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 29883,
											"end": 30517,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 29883,
											"end": 30517,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC1155/ERC1155.sol",
								"@openzeppelin/contracts/token/ERC1155/IERC1155.sol",
								"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol",
								"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol",
								"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol",
								"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol",
								"@openzeppelin/contracts/utils/Arrays.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"contracts/SomTokens/SomTokens.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"balanceOf(address,uint256)": "00fdd58e",
							"balanceOfBatch(address[],uint256[])": "4e1273f4",
							"burn(address,uint256,uint256)": "f5298aca",
							"burnBatch(address,uint256[],uint256[])": "6b20c454",
							"exists(uint256)": "4f558e79",
							"gameAddress()": "a168d873",
							"isApprovedForAll(address,address)": "e985e9c5",
							"mint(address,uint256,uint256,bytes)": "731133e9",
							"mintBatch(address,uint256[],uint256[],bytes)": "1f7fdffa",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
							"safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
							"setApprovalForAll(address,bool)": "a22cb465",
							"setGameAddress(address)": "711953ef",
							"supportsInterface(bytes4)": "01ffc9a7",
							"totalSupply()": "18160ddd",
							"totalSupply(uint256)": "bd85b039",
							"transferOwnership(address)": "f2fde38b",
							"uri(uint256)": "0e89341c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"initialOwner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"burnBatch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"exists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"gameAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"mintBatch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"setGameAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"custom:security-contact\":\"krlebyte@gmail.com\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"See {IERC1155-balanceOf}.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length.\"},\"exists(uint256)\":{\"details\":\"Indicates whether any token exist with a given id, or not.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC1155-isApprovedForAll}.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"See {IERC1155-safeBatchTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"See {IERC1155-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC1155-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"totalSupply()\":{\"details\":\"Total value of tokens.\"},\"totalSupply(uint256)\":{\"details\":\"Total value of tokens in with a given id.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"uri(uint256)\":{\"details\":\"See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP]. Clients calling this function must replace the `\\\\{id\\\\}` substring with the actual token type ID.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/SomTokens/SomTokens.sol\":\"SomTokens\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":{\"keccak256\":\"0xd9b0b8ee1ac6dfee14eb1ad4383a4739dbaa0f2036594bb3a16f0408085dadde\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6309805132e519162d1134c67df22dd963323a9208b4f41344a4c13ed63c1026\",\"dweb:/ipfs/QmTBPHnf6qbtAD4NVnKVFmubUHRqMDPLkseR6apxTUpsQo\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0xe64b3445a3f638890af7ad92464cd18f1f202a2f5a7ed42dabf74317bae43303\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6620b77b8dcd786149534b1c664f94ff1f8bb1ad141e8da7d9ec64b9624c73f0\",\"dweb:/ipfs/QmVWHh5UvQ7PxRUtUNfd94mSxxxStuzV1NBZtLiKqKpBrQ\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0xb69597a63b202e28401128bed6a6d259e8730191274471af7303eafb247881a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://25addbda49a578b3318130585601344c5149a5549d749adf88e9685349a46b23\",\"dweb:/ipfs/Qme2DuD8gpsve1ZvaSMQpBwMdpU7yAtekDwr7gUp8dX4zX\"]},\"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\":{\"keccak256\":\"0xdfab949ba677f4b122d0c14225e6db7ca8a65524e2f00049e57b04f68eceeb87\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://25d240211d484954a409a8870c3a971af9e2eb6b6d0ab46b50c193c4a1576006\",\"dweb:/ipfs/QmdzSJoJ6iqoWrGKNeDjV4KVfCqna7Vc7AMoQxpxTdTMpF\"]},\"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol\":{\"keccak256\":\"0x1cebc792116430641b9ec887f245ce5dde0ace17a8d5fc38e03fd087e061b537\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://21fea8da292377bdc2930254fd5536c1d2be84a1fcb6268527ab8dd1142b23ee\",\"dweb:/ipfs/QmS5AwrNHbvcFB7TmwcXZNXPgMXZxRxmmcey4eP8YTvBgX\"]},\"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":{\"keccak256\":\"0xe92b5e199b963d108ad6e06feeede151ba23849e0d064956535489ff967ffe68\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://280e17738a67b06dae02fec32982bd48a8ab71d8df95e9975ae03532634bc522\",\"dweb:/ipfs/QmecjsNcFgy2mMjuNfRDkLpAYMRWnh5o73fw1Bj2rCso2z\"]},\"@openzeppelin/contracts/utils/Arrays.sol\":{\"keccak256\":\"0x8806d620b6571932b662cfd48fbd518d4f70df1f88a23b5724cacde64a77bda1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8043304c8f9e1c1dc4a41935efa067daa77ad7abbae1fda41f015d53fbf327a5\",\"dweb:/ipfs/QmTrF2hSkRZoN9EEu8zdEhBpGNZ7RxzCdXf9ydzc2HQ3tM\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867\",\"dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"contracts/SomTokens/SomTokens.sol\":{\"keccak256\":\"0x72834f5556cb26713cbc4bebf2f094e9d870ac863e671c75f55dbaa236a899b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4941599fc662e81cceb93cf596c9377e0a664baaa32da619d0d75d4a93ee70fc\",\"dweb:/ipfs/QmYfJBCdDg9ANXUNszyDbPm5g8aadGaHWFEStJ4n82sLXN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 326,
								"contract": "contracts/SomTokens/SomTokens.sol:SomTokens",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 332,
								"contract": "contracts/SomTokens/SomTokens.sol:SomTokens",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							},
							{
								"astId": 334,
								"contract": "contracts/SomTokens/SomTokens.sol:SomTokens",
								"label": "_uri",
								"offset": 0,
								"slot": "2",
								"type": "t_string_storage"
							},
							{
								"astId": 8,
								"contract": "contracts/SomTokens/SomTokens.sol:SomTokens",
								"label": "_owner",
								"offset": 0,
								"slot": "3",
								"type": "t_address"
							},
							{
								"astId": 1591,
								"contract": "contracts/SomTokens/SomTokens.sol:SomTokens",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_uint256)"
							},
							{
								"astId": 1593,
								"contract": "contracts/SomTokens/SomTokens.sol:SomTokens",
								"label": "_totalSupplyAll",
								"offset": 0,
								"slot": "5",
								"type": "t_uint256"
							},
							{
								"astId": 3190,
								"contract": "contracts/SomTokens/SomTokens.sol:SomTokens",
								"label": "gameAddress",
								"offset": 0,
								"slot": "6",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_uint256,t_uint256)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							1973
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 1974,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1973,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1973,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								1973
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1963,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1963,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							284
						],
						"IERC20Errors": [
							189
						],
						"IERC721Errors": [
							237
						]
					},
					"id": 285,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 150,
								"nodeType": "StructuredDocumentation",
								"src": "138:139:1",
								"text": " @dev Standard ERC20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens."
							},
							"fullyImplemented": true,
							"id": 189,
							"linearizedBaseContracts": [
								189
							],
							"name": "IERC20Errors",
							"nameLocation": "288:12:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 151,
										"nodeType": "StructuredDocumentation",
										"src": "307:309:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 159,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "627:24:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "660:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "652:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 155,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "676:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "668:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 154,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 157,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "693:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "685:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 156,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "685:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "651:49:1"
									},
									"src": "621:80:1"
								},
								{
									"documentation": {
										"id": 160,
										"nodeType": "StructuredDocumentation",
										"src": "707:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 164,
									"name": "ERC20InvalidSender",
									"nameLocation": "870:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "897:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "889:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "889:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "888:16:1"
									},
									"src": "864:41:1"
								},
								{
									"documentation": {
										"id": 165,
										"nodeType": "StructuredDocumentation",
										"src": "911:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 169,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1081:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1110:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "1102:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 166,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1102:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1101:18:1"
									},
									"src": "1075:45:1"
								},
								{
									"documentation": {
										"id": 170,
										"nodeType": "StructuredDocumentation",
										"src": "1126:345:1",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 178,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1482:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1517:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1509:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 171,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1509:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1534:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1526:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 173,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1526:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1553:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1545:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 175,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1545:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1508:52:1"
									},
									"src": "1476:85:1"
								},
								{
									"documentation": {
										"id": 179,
										"nodeType": "StructuredDocumentation",
										"src": "1567:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 183,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1752:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 182,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 181,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1781:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 183,
												"src": "1773:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 180,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1773:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1772:18:1"
									},
									"src": "1746:45:1"
								},
								{
									"documentation": {
										"id": 184,
										"nodeType": "StructuredDocumentation",
										"src": "1797:195:1",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 188,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2003:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 186,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2031:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "2023:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 185,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2023:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2022:17:1"
									},
									"src": "1997:43:1"
								}
							],
							"scope": 285,
							"src": "278:1764:1",
							"usedErrors": [
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 190,
								"nodeType": "StructuredDocumentation",
								"src": "2044:141:1",
								"text": " @dev Standard ERC721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens."
							},
							"fullyImplemented": true,
							"id": 237,
							"linearizedBaseContracts": [
								237
							],
							"name": "IERC721Errors",
							"nameLocation": "2196:13:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 191,
										"nodeType": "StructuredDocumentation",
										"src": "2216:219:1",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 195,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2446:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2473:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 195,
												"src": "2465:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 192,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2465:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2464:15:1"
									},
									"src": "2440:40:1"
								},
								{
									"documentation": {
										"id": 196,
										"nodeType": "StructuredDocumentation",
										"src": "2486:132:1",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 200,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2629:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2660:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 200,
												"src": "2652:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 197,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2652:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2651:17:1"
									},
									"src": "2623:46:1"
								},
								{
									"documentation": {
										"id": 201,
										"nodeType": "StructuredDocumentation",
										"src": "2675:289:1",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 209,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2975:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 203,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3004:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "2996:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 202,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2996:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3020:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3012:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 204,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3012:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3037:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3029:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 206,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3029:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2995:48:1"
									},
									"src": "2969:75:1"
								},
								{
									"documentation": {
										"id": 210,
										"nodeType": "StructuredDocumentation",
										"src": "3050:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 214,
									"name": "ERC721InvalidSender",
									"nameLocation": "3213:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 212,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3241:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 214,
												"src": "3233:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 211,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3233:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3232:16:1"
									},
									"src": "3207:42:1"
								},
								{
									"documentation": {
										"id": 215,
										"nodeType": "StructuredDocumentation",
										"src": "3255:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 219,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3425:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3455:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "3447:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 216,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3447:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3446:18:1"
									},
									"src": "3419:46:1"
								},
								{
									"documentation": {
										"id": 220,
										"nodeType": "StructuredDocumentation",
										"src": "3471:247:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 226,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3729:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3764:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "3756:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3756:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3782:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "3774:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 223,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3774:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3755:35:1"
									},
									"src": "3723:68:1"
								},
								{
									"documentation": {
										"id": 227,
										"nodeType": "StructuredDocumentation",
										"src": "3797:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 231,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3982:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 229,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4012:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "4004:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 228,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4004:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4003:18:1"
									},
									"src": "3976:46:1"
								},
								{
									"documentation": {
										"id": 232,
										"nodeType": "StructuredDocumentation",
										"src": "4028:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 236,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4236:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 234,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4266:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "4258:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 233,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4258:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4257:18:1"
									},
									"src": "4230:46:1"
								}
							],
							"scope": 285,
							"src": "2186:2092:1",
							"usedErrors": [
								195,
								200,
								209,
								214,
								219,
								226,
								231,
								236
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 238,
								"nodeType": "StructuredDocumentation",
								"src": "4280:143:1",
								"text": " @dev Standard ERC1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens."
							},
							"fullyImplemented": true,
							"id": 284,
							"linearizedBaseContracts": [
								284
							],
							"name": "IERC1155Errors",
							"nameLocation": "4434:14:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 239,
										"nodeType": "StructuredDocumentation",
										"src": "4455:361:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 249,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4827:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 241,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4862:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4854:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 240,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4854:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4878:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4870:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 242,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4870:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4895:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4887:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 244,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4887:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 247,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4911:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4903:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 246,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4903:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4853:66:1"
									},
									"src": "4821:99:1"
								},
								{
									"documentation": {
										"id": 250,
										"nodeType": "StructuredDocumentation",
										"src": "4926:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 254,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5089:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 253,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 252,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5118:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 254,
												"src": "5110:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 251,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5110:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5109:16:1"
									},
									"src": "5083:43:1"
								},
								{
									"documentation": {
										"id": 255,
										"nodeType": "StructuredDocumentation",
										"src": "5132:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 259,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5302:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 257,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5333:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 259,
												"src": "5325:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 256,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5325:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5324:18:1"
									},
									"src": "5296:47:1"
								},
								{
									"documentation": {
										"id": 260,
										"nodeType": "StructuredDocumentation",
										"src": "5349:256:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 266,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5616:28:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5653:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5645:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 261,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5645:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5671:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5663:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 263,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5663:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5644:33:1"
									},
									"src": "5610:68:1"
								},
								{
									"documentation": {
										"id": 267,
										"nodeType": "StructuredDocumentation",
										"src": "5684:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 271,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5869:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5900:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "5892:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 268,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5892:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5891:18:1"
									},
									"src": "5863:47:1"
								},
								{
									"documentation": {
										"id": 272,
										"nodeType": "StructuredDocumentation",
										"src": "5916:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 276,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6124:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 274,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6155:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 276,
												"src": "6147:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 273,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6147:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6146:18:1"
									},
									"src": "6118:47:1"
								},
								{
									"documentation": {
										"id": 277,
										"nodeType": "StructuredDocumentation",
										"src": "6171:280:1",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 283,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6462:25:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 282,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 279,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6496:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "6488:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 278,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6488:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6515:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "6507:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 280,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6507:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6487:41:1"
									},
									"src": "6456:73:1"
								}
							],
							"scope": 285,
							"src": "4424:2107:1",
							"usedErrors": [
								249,
								254,
								259,
								266,
								271,
								276,
								283
							],
							"usedEvents": []
						}
					],
					"src": "112:6420:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC1155/ERC1155.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol",
					"exportedSymbols": {
						"Arrays": [
							1951
						],
						"Context": [
							1973
						],
						"ERC1155": [
							1335
						],
						"ERC165": [
							2107
						],
						"IERC1155": [
							1458
						],
						"IERC1155Errors": [
							284
						],
						"IERC1155MetadataURI": [
							1768
						],
						"IERC1155Receiver": [
							1500
						],
						"IERC165": [
							2119
						]
					},
					"id": 1336,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 286,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "109:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC1155/IERC1155.sol",
							"file": "./IERC1155.sol",
							"id": 288,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1336,
							"sourceUnit": 1459,
							"src": "135:40:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 287,
										"name": "IERC1155",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1458,
										"src": "143:8:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol",
							"file": "./IERC1155Receiver.sol",
							"id": 290,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1336,
							"sourceUnit": 1501,
							"src": "176:56:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 289,
										"name": "IERC1155Receiver",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1500,
										"src": "184:16:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol",
							"file": "./extensions/IERC1155MetadataURI.sol",
							"id": 292,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1336,
							"sourceUnit": 1769,
							"src": "233:73:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 291,
										"name": "IERC1155MetadataURI",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1768,
										"src": "241:19:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 294,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1336,
							"sourceUnit": 1974,
							"src": "307:48:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 293,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1973,
										"src": "315:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
							"file": "../../utils/introspection/ERC165.sol",
							"id": 297,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1336,
							"sourceUnit": 2108,
							"src": "356:69:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 295,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2119,
										"src": "364:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								},
								{
									"foreign": {
										"id": 296,
										"name": "ERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2107,
										"src": "373:6:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Arrays.sol",
							"file": "../../utils/Arrays.sol",
							"id": 299,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1336,
							"sourceUnit": 1952,
							"src": "426:46:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 298,
										"name": "Arrays",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1951,
										"src": "434:6:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 301,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1336,
							"sourceUnit": 285,
							"src": "473:67:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 300,
										"name": "IERC1155Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 284,
										"src": "481:14:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 303,
										"name": "Context",
										"nameLocations": [
											"756:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1973,
										"src": "756:7:2"
									},
									"id": 304,
									"nodeType": "InheritanceSpecifier",
									"src": "756:7:2"
								},
								{
									"baseName": {
										"id": 305,
										"name": "ERC165",
										"nameLocations": [
											"765:6:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2107,
										"src": "765:6:2"
									},
									"id": 306,
									"nodeType": "InheritanceSpecifier",
									"src": "765:6:2"
								},
								{
									"baseName": {
										"id": 307,
										"name": "IERC1155",
										"nameLocations": [
											"773:8:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1458,
										"src": "773:8:2"
									},
									"id": 308,
									"nodeType": "InheritanceSpecifier",
									"src": "773:8:2"
								},
								{
									"baseName": {
										"id": 309,
										"name": "IERC1155MetadataURI",
										"nameLocations": [
											"783:19:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1768,
										"src": "783:19:2"
									},
									"id": 310,
									"nodeType": "InheritanceSpecifier",
									"src": "783:19:2"
								},
								{
									"baseName": {
										"id": 311,
										"name": "IERC1155Errors",
										"nameLocations": [
											"804:14:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 284,
										"src": "804:14:2"
									},
									"id": 312,
									"nodeType": "InheritanceSpecifier",
									"src": "804:14:2"
								}
							],
							"canonicalName": "ERC1155",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 302,
								"nodeType": "StructuredDocumentation",
								"src": "542:184:2",
								"text": " @dev Implementation of the basic standard multi-token.\n See https://eips.ethereum.org/EIPS/eip-1155\n Originally based on code by Enjin: https://github.com/enjin/erc-1155"
							},
							"fullyImplemented": true,
							"id": 1335,
							"linearizedBaseContracts": [
								1335,
								284,
								1768,
								1458,
								2107,
								2119,
								1973
							],
							"name": "ERC1155",
							"nameLocation": "745:7:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 316,
									"libraryName": {
										"id": 313,
										"name": "Arrays",
										"nameLocations": [
											"831:6:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1951,
										"src": "831:6:2"
									},
									"nodeType": "UsingForDirective",
									"src": "825:27:2",
									"typeName": {
										"baseType": {
											"id": 314,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "842:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 315,
										"nodeType": "ArrayTypeName",
										"src": "842:9:2",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
											"typeString": "uint256[]"
										}
									}
								},
								{
									"global": false,
									"id": 320,
									"libraryName": {
										"id": 317,
										"name": "Arrays",
										"nameLocations": [
											"863:6:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1951,
										"src": "863:6:2"
									},
									"nodeType": "UsingForDirective",
									"src": "857:27:2",
									"typeName": {
										"baseType": {
											"id": 318,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "874:7:2",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"id": 319,
										"nodeType": "ArrayTypeName",
										"src": "874:9:2",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
											"typeString": "address[]"
										}
									}
								},
								{
									"constant": false,
									"id": 326,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "957:9:2",
									"nodeType": "VariableDeclaration",
									"scope": 1335,
									"src": "890:76:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(uint256 => mapping(address => uint256))"
									},
									"typeName": {
										"id": 325,
										"keyName": "id",
										"keyNameLocation": "906:2:2",
										"keyType": {
											"id": 321,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "898:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "890:58:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(uint256 => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 324,
											"keyName": "account",
											"keyNameLocation": "928:7:2",
											"keyType": {
												"id": 322,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "920:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "912:35:2",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 323,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "939:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 332,
									"mutability": "mutable",
									"name": "_operatorApprovals",
									"nameLocation": "1043:18:2",
									"nodeType": "VariableDeclaration",
									"scope": 1335,
									"src": "973:88:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
										"typeString": "mapping(address => mapping(address => bool))"
									},
									"typeName": {
										"id": 331,
										"keyName": "account",
										"keyNameLocation": "989:7:2",
										"keyType": {
											"id": 327,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "981:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "973:61:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
											"typeString": "mapping(address => mapping(address => bool))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 330,
											"keyName": "operator",
											"keyNameLocation": "1016:8:2",
											"keyType": {
												"id": 328,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1008:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1000:33:2",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 329,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1028:4:2",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 334,
									"mutability": "mutable",
									"name": "_uri",
									"nameLocation": "1197:4:2",
									"nodeType": "VariableDeclaration",
									"scope": 1335,
									"src": "1182:19:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 333,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1182:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 344,
										"nodeType": "Block",
										"src": "1283:30:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 341,
															"name": "uri_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 337,
															"src": "1301:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 340,
														"name": "_setURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 958,
														"src": "1293:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (string memory)"
														}
													},
													"id": 342,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1293:13:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 343,
												"nodeType": "ExpressionStatement",
												"src": "1293:13:2"
											}
										]
									},
									"documentation": {
										"id": 335,
										"nodeType": "StructuredDocumentation",
										"src": "1208:38:2",
										"text": " @dev See {_setURI}."
									},
									"id": 345,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 338,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 337,
												"mutability": "mutable",
												"name": "uri_",
												"nameLocation": "1277:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "1263:18:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 336,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1263:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1262:20:2"
									},
									"returnParameters": {
										"id": 339,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1283:0:2"
									},
									"scope": 1335,
									"src": "1251:62:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										2106,
										2118
									],
									"body": {
										"id": 375,
										"nodeType": "Block",
										"src": "1488:197:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 373,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 368,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 361,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 356,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 348,
																"src": "1517:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 358,
																			"name": "IERC1155",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1458,
																			"src": "1537:8:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC1155_$1458_$",
																				"typeString": "type(contract IERC1155)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC1155_$1458_$",
																				"typeString": "type(contract IERC1155)"
																			}
																		],
																		"id": 357,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "1532:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 359,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1532:14:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC1155_$1458",
																		"typeString": "type(contract IERC1155)"
																	}
																},
																"id": 360,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1547:11:2",
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "1532:26:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "1517:41:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "||",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 367,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 362,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 348,
																"src": "1574:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 364,
																			"name": "IERC1155MetadataURI",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1768,
																			"src": "1594:19:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC1155MetadataURI_$1768_$",
																				"typeString": "type(contract IERC1155MetadataURI)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC1155MetadataURI_$1768_$",
																				"typeString": "type(contract IERC1155MetadataURI)"
																			}
																		],
																		"id": 363,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "1589:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 365,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1589:25:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC1155MetadataURI_$1768",
																		"typeString": "type(contract IERC1155MetadataURI)"
																	}
																},
																"id": 366,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1615:11:2",
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "1589:37:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "1574:52:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "1517:109:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 371,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 348,
																"src": "1666:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 369,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "1642:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_ERC1155_$1335_$",
																	"typeString": "type(contract super ERC1155)"
																}
															},
															"id": 370,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1648:17:2",
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2106,
															"src": "1642:23:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 372,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1642:36:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1517:161:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 355,
												"id": 374,
												"nodeType": "Return",
												"src": "1498:180:2"
											}
										]
									},
									"documentation": {
										"id": 346,
										"nodeType": "StructuredDocumentation",
										"src": "1319:56:2",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 376,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "1389:17:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 352,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 350,
												"name": "ERC165",
												"nameLocations": [
													"1456:6:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2107,
												"src": "1456:6:2"
											},
											{
												"id": 351,
												"name": "IERC165",
												"nameLocations": [
													"1464:7:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2119,
												"src": "1464:7:2"
											}
										],
										"src": "1447:25:2"
									},
									"parameters": {
										"id": 349,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 348,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "1414:11:2",
												"nodeType": "VariableDeclaration",
												"scope": 376,
												"src": "1407:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 347,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1407:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1406:20:2"
									},
									"returnParameters": {
										"id": 355,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 354,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 376,
												"src": "1482:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 353,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1482:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1481:6:2"
									},
									"scope": 1335,
									"src": "1380:305:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1767
									],
									"body": {
										"id": 386,
										"nodeType": "Block",
										"src": "2159:28:2",
										"statements": [
											{
												"expression": {
													"id": 384,
													"name": "_uri",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 334,
													"src": "2176:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 383,
												"id": 385,
												"nodeType": "Return",
												"src": "2169:11:2"
											}
										]
									},
									"documentation": {
										"id": 377,
										"nodeType": "StructuredDocumentation",
										"src": "1691:388:2",
										"text": " @dev See {IERC1155MetadataURI-uri}.\n This implementation returns the same URI for *all* token types. It relies\n on the token type ID substitution mechanism\n https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\n Clients calling this function must replace the `\\{id\\}` substring with the\n actual token type ID."
									},
									"functionSelector": "0e89341c",
									"id": 387,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "uri",
									"nameLocation": "2093:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 380,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 379,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 387,
												"src": "2097:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 378,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2097:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2096:18:2"
									},
									"returnParameters": {
										"id": 383,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 382,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 387,
												"src": "2144:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 381,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2144:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2143:15:2"
									},
									"scope": 1335,
									"src": "2084:103:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1396
									],
									"body": {
										"id": 403,
										"nodeType": "Block",
										"src": "2333:46:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 397,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 326,
															"src": "2350:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(uint256 => mapping(address => uint256))"
															}
														},
														"id": 399,
														"indexExpression": {
															"id": 398,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 392,
															"src": "2360:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "2350:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 401,
													"indexExpression": {
														"id": 400,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 390,
														"src": "2364:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2350:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 396,
												"id": 402,
												"nodeType": "Return",
												"src": "2343:29:2"
											}
										]
									},
									"documentation": {
										"id": 388,
										"nodeType": "StructuredDocumentation",
										"src": "2193:49:2",
										"text": " @dev See {IERC1155-balanceOf}."
									},
									"functionSelector": "00fdd58e",
									"id": 404,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "2256:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 393,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 390,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2274:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 404,
												"src": "2266:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 389,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2266:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 392,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "2291:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 404,
												"src": "2283:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 391,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2283:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2265:29:2"
									},
									"returnParameters": {
										"id": 396,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 395,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 404,
												"src": "2324:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 394,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2324:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2323:9:2"
									},
									"scope": 1335,
									"src": "2247:132:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1409
									],
									"body": {
										"id": 473,
										"nodeType": "Block",
										"src": "2678:410:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 421,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 417,
															"name": "accounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 408,
															"src": "2692:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														"id": 418,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2701:6:2",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "2692:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"id": 419,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 411,
															"src": "2711:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 420,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2715:6:2",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "2711:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2692:29:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 430,
												"nodeType": "IfStatement",
												"src": "2688:121:2",
												"trueBody": {
													"id": 429,
													"nodeType": "Block",
													"src": "2723:86:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"expression": {
																			"id": 423,
																			"name": "ids",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 411,
																			"src": "2770:3:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																				"typeString": "uint256[] memory"
																			}
																		},
																		"id": 424,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2774:6:2",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "2770:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"expression": {
																			"id": 425,
																			"name": "accounts",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 408,
																			"src": "2782:8:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																				"typeString": "address[] memory"
																			}
																		},
																		"id": 426,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2791:6:2",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "2782:15:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 422,
																	"name": "ERC1155InvalidArrayLength",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 283,
																	"src": "2744:25:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$",
																		"typeString": "function (uint256,uint256) pure"
																	}
																},
																"id": 427,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2744:54:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 428,
															"nodeType": "RevertStatement",
															"src": "2737:61:2"
														}
													]
												}
											},
											{
												"assignments": [
													435
												],
												"declarations": [
													{
														"constant": false,
														"id": 435,
														"mutability": "mutable",
														"name": "batchBalances",
														"nameLocation": "2836:13:2",
														"nodeType": "VariableDeclaration",
														"scope": 473,
														"src": "2819:30:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 433,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2819:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 434,
															"nodeType": "ArrayTypeName",
															"src": "2819:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 442,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 439,
																"name": "accounts",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 408,
																"src": "2866:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																	"typeString": "address[] memory"
																}
															},
															"id": 440,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2875:6:2",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "2866:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 438,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "2852:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 436,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2856:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 437,
															"nodeType": "ArrayTypeName",
															"src": "2856:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														}
													},
													"id": 441,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2852:30:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2819:63:2"
											},
											{
												"body": {
													"id": 469,
													"nodeType": "Block",
													"src": "2939:112:2",
													"statements": [
														{
															"expression": {
																"id": 467,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 454,
																		"name": "batchBalances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 435,
																		"src": "2953:13:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 456,
																	"indexExpression": {
																		"id": 455,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 444,
																		"src": "2967:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "2953:16:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 460,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 444,
																					"src": "3010:1:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"id": 458,
																					"name": "accounts",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 408,
																					"src": "2982:8:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																						"typeString": "address[] memory"
																					}
																				},
																				"id": 459,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "2991:18:2",
																				"memberName": "unsafeMemoryAccess",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1950,
																				"src": "2982:27:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_array$_t_address_$dyn_memory_ptr_$_t_uint256_$returns$_t_address_$attached_to$_t_array$_t_address_$dyn_memory_ptr_$",
																					"typeString": "function (address[] memory,uint256) pure returns (address)"
																				}
																			},
																			"id": 461,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "2982:30:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"arguments": [
																				{
																					"id": 464,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 444,
																					"src": "3037:1:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"id": 462,
																					"name": "ids",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 411,
																					"src": "3014:3:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																						"typeString": "uint256[] memory"
																					}
																				},
																				"id": 463,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "3018:18:2",
																				"memberName": "unsafeMemoryAccess",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1937,
																				"src": "3014:22:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$",
																					"typeString": "function (uint256[] memory,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 465,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3014:25:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 457,
																		"name": "balanceOf",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 404,
																		"src": "2972:9:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (address,uint256) view returns (uint256)"
																		}
																	},
																	"id": 466,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2972:68:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2953:87:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 468,
															"nodeType": "ExpressionStatement",
															"src": "2953:87:2"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 450,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 447,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 444,
														"src": "2913:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 448,
															"name": "accounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 408,
															"src": "2917:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														"id": 449,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2926:6:2",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "2917:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2913:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 470,
												"initializationExpression": {
													"assignments": [
														444
													],
													"declarations": [
														{
															"constant": false,
															"id": 444,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "2906:1:2",
															"nodeType": "VariableDeclaration",
															"scope": 470,
															"src": "2898:9:2",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 443,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2898:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 446,
													"initialValue": {
														"hexValue": "30",
														"id": 445,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2910:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "2898:13:2"
												},
												"loopExpression": {
													"expression": {
														"id": 452,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": true,
														"src": "2934:3:2",
														"subExpression": {
															"id": 451,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 444,
															"src": "2936:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 453,
													"nodeType": "ExpressionStatement",
													"src": "2934:3:2"
												},
												"nodeType": "ForStatement",
												"src": "2893:158:2"
											},
											{
												"expression": {
													"id": 471,
													"name": "batchBalances",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 435,
													"src": "3068:13:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"functionReturnParameters": 416,
												"id": 472,
												"nodeType": "Return",
												"src": "3061:20:2"
											}
										]
									},
									"documentation": {
										"id": 405,
										"nodeType": "StructuredDocumentation",
										"src": "2385:146:2",
										"text": " @dev See {IERC1155-balanceOfBatch}.\n Requirements:\n - `accounts` and `ids` must have the same length."
									},
									"functionSelector": "4e1273f4",
									"id": 474,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOfBatch",
									"nameLocation": "2545:14:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 412,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 408,
												"mutability": "mutable",
												"name": "accounts",
												"nameLocation": "2586:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 474,
												"src": "2569:25:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 406,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2569:7:2",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 407,
													"nodeType": "ArrayTypeName",
													"src": "2569:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 411,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "2621:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 474,
												"src": "2604:20:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 409,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2604:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 410,
													"nodeType": "ArrayTypeName",
													"src": "2604:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2559:71:2"
									},
									"returnParameters": {
										"id": 416,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 415,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 474,
												"src": "2660:16:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 413,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2660:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 414,
													"nodeType": "ArrayTypeName",
													"src": "2660:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2659:18:2"
									},
									"scope": 1335,
									"src": "2536:552:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1417
									],
									"body": {
										"id": 489,
										"nodeType": "Block",
										"src": "3231:69:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 483,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1963,
																"src": "3260:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 484,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3260:12:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 485,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 477,
															"src": "3274:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 486,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 479,
															"src": "3284:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 482,
														"name": "_setApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1180,
														"src": "3241:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 487,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3241:52:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 488,
												"nodeType": "ExpressionStatement",
												"src": "3241:52:2"
											}
										]
									},
									"documentation": {
										"id": 475,
										"nodeType": "StructuredDocumentation",
										"src": "3094:57:2",
										"text": " @dev See {IERC1155-setApprovalForAll}."
									},
									"functionSelector": "a22cb465",
									"id": 490,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "3165:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 480,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 477,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3191:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 490,
												"src": "3183:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 476,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3183:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 479,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "3206:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 490,
												"src": "3201:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 478,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3201:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3182:33:2"
									},
									"returnParameters": {
										"id": 481,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3231:0:2"
									},
									"scope": 1335,
									"src": "3156:144:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1427
									],
									"body": {
										"id": 506,
										"nodeType": "Block",
										"src": "3463:61:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 500,
															"name": "_operatorApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 332,
															"src": "3480:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																"typeString": "mapping(address => mapping(address => bool))"
															}
														},
														"id": 502,
														"indexExpression": {
															"id": 501,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 493,
															"src": "3499:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3480:27:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 504,
													"indexExpression": {
														"id": 503,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 495,
														"src": "3508:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3480:37:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 499,
												"id": 505,
												"nodeType": "Return",
												"src": "3473:44:2"
											}
										]
									},
									"documentation": {
										"id": 491,
										"nodeType": "StructuredDocumentation",
										"src": "3306:56:2",
										"text": " @dev See {IERC1155-isApprovedForAll}."
									},
									"functionSelector": "e985e9c5",
									"id": 507,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "3376:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 496,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 493,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3401:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 507,
												"src": "3393:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 492,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3393:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 495,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3418:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 507,
												"src": "3410:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 494,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3410:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3392:35:2"
									},
									"returnParameters": {
										"id": 499,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 498,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 507,
												"src": "3457:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 497,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3457:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3456:6:2"
									},
									"scope": 1335,
									"src": "3367:157:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1441
									],
									"body": {
										"id": 550,
										"nodeType": "Block",
										"src": "3704:238:2",
										"statements": [
											{
												"assignments": [
													522
												],
												"declarations": [
													{
														"constant": false,
														"id": 522,
														"mutability": "mutable",
														"name": "sender",
														"nameLocation": "3722:6:2",
														"nodeType": "VariableDeclaration",
														"scope": 550,
														"src": "3714:14:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 521,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3714:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 525,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 523,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1963,
														"src": "3731:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 524,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3731:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3714:29:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 534,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 528,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 526,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 510,
															"src": "3757:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"id": 527,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 522,
															"src": "3765:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "3757:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 533,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "3775:31:2",
														"subExpression": {
															"arguments": [
																{
																	"id": 530,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 510,
																	"src": "3793:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 531,
																	"name": "sender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 522,
																	"src": "3799:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 529,
																"name": "isApprovedForAll",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 507,
																"src": "3776:16:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address,address) view returns (bool)"
																}
															},
															"id": 532,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3776:30:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "3757:49:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 541,
												"nodeType": "IfStatement",
												"src": "3753:129:2",
												"trueBody": {
													"id": 540,
													"nodeType": "Block",
													"src": "3808:74:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 536,
																		"name": "sender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 522,
																		"src": "3858:6:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 537,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 510,
																		"src": "3866:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 535,
																	"name": "ERC1155MissingApprovalForAll",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 266,
																	"src": "3829:28:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (address,address) pure"
																	}
																},
																"id": 538,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3829:42:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 539,
															"nodeType": "RevertStatement",
															"src": "3822:49:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 543,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 510,
															"src": "3909:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 544,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 512,
															"src": "3915:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 545,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 514,
															"src": "3919:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 546,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 516,
															"src": "3923:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 547,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 518,
															"src": "3930:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 542,
														"name": "_safeTransferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 892,
														"src": "3891:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,uint256,bytes memory)"
														}
													},
													"id": 548,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3891:44:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 549,
												"nodeType": "ExpressionStatement",
												"src": "3891:44:2"
											}
										]
									},
									"documentation": {
										"id": 508,
										"nodeType": "StructuredDocumentation",
										"src": "3530:56:2",
										"text": " @dev See {IERC1155-safeTransferFrom}."
									},
									"functionSelector": "f242432a",
									"id": 551,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "3600:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 519,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 510,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3625:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 551,
												"src": "3617:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 509,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3617:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 512,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3639:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 551,
												"src": "3631:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 511,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3631:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 514,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "3651:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 551,
												"src": "3643:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 513,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3643:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 516,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3663:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 551,
												"src": "3655:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 515,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3655:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 518,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3683:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 551,
												"src": "3670:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 517,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3670:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3616:72:2"
									},
									"returnParameters": {
										"id": 520,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3704:0:2"
									},
									"scope": 1335,
									"src": "3591:351:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1457
									],
									"body": {
										"id": 596,
										"nodeType": "Block",
										"src": "4198:245:2",
										"statements": [
											{
												"assignments": [
													568
												],
												"declarations": [
													{
														"constant": false,
														"id": 568,
														"mutability": "mutable",
														"name": "sender",
														"nameLocation": "4216:6:2",
														"nodeType": "VariableDeclaration",
														"scope": 596,
														"src": "4208:14:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 567,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4208:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 571,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 569,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1963,
														"src": "4225:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 570,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4225:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4208:29:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 580,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 574,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 572,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 554,
															"src": "4251:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"id": 573,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 568,
															"src": "4259:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "4251:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 579,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "4269:31:2",
														"subExpression": {
															"arguments": [
																{
																	"id": 576,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 554,
																	"src": "4287:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 577,
																	"name": "sender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 568,
																	"src": "4293:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 575,
																"name": "isApprovedForAll",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 507,
																"src": "4270:16:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address,address) view returns (bool)"
																}
															},
															"id": 578,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4270:30:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4251:49:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 587,
												"nodeType": "IfStatement",
												"src": "4247:129:2",
												"trueBody": {
													"id": 586,
													"nodeType": "Block",
													"src": "4302:74:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 582,
																		"name": "sender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 568,
																		"src": "4352:6:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 583,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 554,
																		"src": "4360:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 581,
																	"name": "ERC1155MissingApprovalForAll",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 266,
																	"src": "4323:28:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (address,address) pure"
																	}
																},
																"id": 584,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4323:42:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 585,
															"nodeType": "RevertStatement",
															"src": "4316:49:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 589,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 554,
															"src": "4408:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 590,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 556,
															"src": "4414:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 591,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 559,
															"src": "4418:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 592,
															"name": "values",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 562,
															"src": "4423:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 593,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 564,
															"src": "4431:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 588,
														"name": "_safeBatchTransferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 947,
														"src": "4385:22:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 594,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4385:51:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 595,
												"nodeType": "ExpressionStatement",
												"src": "4385:51:2"
											}
										]
									},
									"documentation": {
										"id": 552,
										"nodeType": "StructuredDocumentation",
										"src": "3948:61:2",
										"text": " @dev See {IERC1155-safeBatchTransferFrom}."
									},
									"functionSelector": "2eb2c2d6",
									"id": 597,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeBatchTransferFrom",
									"nameLocation": "4023:21:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 565,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 554,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4062:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 597,
												"src": "4054:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 553,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4054:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 556,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4084:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 597,
												"src": "4076:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 555,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4076:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 559,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "4113:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 597,
												"src": "4096:20:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 557,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "4096:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 558,
													"nodeType": "ArrayTypeName",
													"src": "4096:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 562,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "4143:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 597,
												"src": "4126:23:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 560,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "4126:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 561,
													"nodeType": "ArrayTypeName",
													"src": "4126:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 564,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4172:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 597,
												"src": "4159:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 563,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4159:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4044:138:2"
									},
									"returnParameters": {
										"id": 566,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4198:0:2"
									},
									"scope": 1335,
									"src": "4014:429:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 749,
										"nodeType": "Block",
										"src": "5251:1174:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 615,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 611,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 605,
															"src": "5265:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 612,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5269:6:2",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5265:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"id": 613,
															"name": "values",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 608,
															"src": "5279:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 614,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5286:6:2",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5279:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5265:27:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 624,
												"nodeType": "IfStatement",
												"src": "5261:117:2",
												"trueBody": {
													"id": 623,
													"nodeType": "Block",
													"src": "5294:84:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"expression": {
																			"id": 617,
																			"name": "ids",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 605,
																			"src": "5341:3:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																				"typeString": "uint256[] memory"
																			}
																		},
																		"id": 618,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5345:6:2",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "5341:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"expression": {
																			"id": 619,
																			"name": "values",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 608,
																			"src": "5353:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																				"typeString": "uint256[] memory"
																			}
																		},
																		"id": 620,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5360:6:2",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "5353:13:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 616,
																	"name": "ERC1155InvalidArrayLength",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 283,
																	"src": "5315:25:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$",
																		"typeString": "function (uint256,uint256) pure"
																	}
																},
																"id": 621,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5315:52:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 622,
															"nodeType": "RevertStatement",
															"src": "5308:59:2"
														}
													]
												}
											},
											{
												"assignments": [
													626
												],
												"declarations": [
													{
														"constant": false,
														"id": 626,
														"mutability": "mutable",
														"name": "operator",
														"nameLocation": "5396:8:2",
														"nodeType": "VariableDeclaration",
														"scope": 749,
														"src": "5388:16:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 625,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5388:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 629,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 627,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1963,
														"src": "5407:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 628,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5407:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5388:31:2"
											},
											{
												"body": {
													"id": 710,
													"nodeType": "Block",
													"src": "5471:650:2",
													"statements": [
														{
															"assignments": [
																642
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 642,
																	"mutability": "mutable",
																	"name": "id",
																	"nameLocation": "5493:2:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 710,
																	"src": "5485:10:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 641,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "5485:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 647,
															"initialValue": {
																"arguments": [
																	{
																		"id": 645,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 631,
																		"src": "5521:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 643,
																		"name": "ids",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 605,
																		"src": "5498:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 644,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5502:18:2",
																	"memberName": "unsafeMemoryAccess",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1937,
																	"src": "5498:22:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$",
																		"typeString": "function (uint256[] memory,uint256) pure returns (uint256)"
																	}
																},
																"id": 646,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5498:25:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "5485:38:2"
														},
														{
															"assignments": [
																649
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 649,
																	"mutability": "mutable",
																	"name": "value",
																	"nameLocation": "5545:5:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 710,
																	"src": "5537:13:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 648,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "5537:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 654,
															"initialValue": {
																"arguments": [
																	{
																		"id": 652,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 631,
																		"src": "5579:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 650,
																		"name": "values",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 608,
																		"src": "5553:6:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 651,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5560:18:2",
																	"memberName": "unsafeMemoryAccess",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1937,
																	"src": "5553:25:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$",
																		"typeString": "function (uint256[] memory,uint256) pure returns (uint256)"
																	}
																},
																"id": 653,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5553:28:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "5537:44:2"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 660,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 655,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 600,
																	"src": "5600:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 658,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5616:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 657,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5608:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 656,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5608:7:2",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 659,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5608:10:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "5600:18:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 693,
															"nodeType": "IfStatement",
															"src": "5596:420:2",
															"trueBody": {
																"id": 692,
																"nodeType": "Block",
																"src": "5620:396:2",
																"statements": [
																	{
																		"assignments": [
																			662
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 662,
																				"mutability": "mutable",
																				"name": "fromBalance",
																				"nameLocation": "5646:11:2",
																				"nodeType": "VariableDeclaration",
																				"scope": 692,
																				"src": "5638:19:2",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 661,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "5638:7:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 668,
																		"initialValue": {
																			"baseExpression": {
																				"baseExpression": {
																					"id": 663,
																					"name": "_balances",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 326,
																					"src": "5660:9:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																						"typeString": "mapping(uint256 => mapping(address => uint256))"
																					}
																				},
																				"id": 665,
																				"indexExpression": {
																					"id": 664,
																					"name": "id",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 642,
																					"src": "5670:2:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "5660:13:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 667,
																			"indexExpression": {
																				"id": 666,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 600,
																				"src": "5674:4:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "5660:19:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "5638:41:2"
																	},
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 671,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 669,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 662,
																				"src": "5701:11:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<",
																			"rightExpression": {
																				"id": 670,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 649,
																				"src": "5715:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "5701:19:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 680,
																		"nodeType": "IfStatement",
																		"src": "5697:129:2",
																		"trueBody": {
																			"id": 679,
																			"nodeType": "Block",
																			"src": "5722:104:2",
																			"statements": [
																				{
																					"errorCall": {
																						"arguments": [
																							{
																								"id": 673,
																								"name": "from",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 600,
																								"src": "5778:4:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							},
																							{
																								"id": 674,
																								"name": "fromBalance",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 662,
																								"src": "5784:11:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							{
																								"id": 675,
																								"name": "value",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 649,
																								"src": "5797:5:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							{
																								"id": 676,
																								"name": "id",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 642,
																								"src": "5804:2:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								},
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							],
																							"id": 672,
																							"name": "ERC1155InsufficientBalance",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 249,
																							"src": "5751:26:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
																								"typeString": "function (address,uint256,uint256,uint256) pure"
																							}
																						},
																						"id": 677,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "5751:56:2",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_tuple$__$",
																							"typeString": "tuple()"
																						}
																					},
																					"id": 678,
																					"nodeType": "RevertStatement",
																					"src": "5744:63:2"
																				}
																			]
																		}
																	},
																	{
																		"id": 691,
																		"nodeType": "UncheckedBlock",
																		"src": "5843:159:2",
																		"statements": [
																			{
																				"expression": {
																					"id": 689,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftHandSide": {
																						"baseExpression": {
																							"baseExpression": {
																								"id": 681,
																								"name": "_balances",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 326,
																								"src": "5942:9:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																									"typeString": "mapping(uint256 => mapping(address => uint256))"
																								}
																							},
																							"id": 684,
																							"indexExpression": {
																								"id": 682,
																								"name": "id",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 642,
																								"src": "5952:2:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "IndexAccess",
																							"src": "5942:13:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																								"typeString": "mapping(address => uint256)"
																							}
																						},
																						"id": 685,
																						"indexExpression": {
																							"id": 683,
																							"name": "from",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 600,
																							"src": "5956:4:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": true,
																						"nodeType": "IndexAccess",
																						"src": "5942:19:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "Assignment",
																					"operator": "=",
																					"rightHandSide": {
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 688,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 686,
																							"name": "fromBalance",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 662,
																							"src": "5964:11:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "-",
																						"rightExpression": {
																							"id": 687,
																							"name": "value",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 649,
																							"src": "5978:5:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "5964:19:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "5942:41:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 690,
																				"nodeType": "ExpressionStatement",
																				"src": "5942:41:2"
																			}
																		]
																	}
																]
															}
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 699,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 694,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 602,
																	"src": "6034:2:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 697,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "6048:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 696,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "6040:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 695,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "6040:7:2",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 698,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6040:10:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "6034:16:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 709,
															"nodeType": "IfStatement",
															"src": "6030:81:2",
															"trueBody": {
																"id": 708,
																"nodeType": "Block",
																"src": "6052:59:2",
																"statements": [
																	{
																		"expression": {
																			"id": 706,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"baseExpression": {
																					"baseExpression": {
																						"id": 700,
																						"name": "_balances",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 326,
																						"src": "6070:9:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																							"typeString": "mapping(uint256 => mapping(address => uint256))"
																						}
																					},
																					"id": 703,
																					"indexExpression": {
																						"id": 701,
																						"name": "id",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 642,
																						"src": "6080:2:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "6070:13:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																						"typeString": "mapping(address => uint256)"
																					}
																				},
																				"id": 704,
																				"indexExpression": {
																					"id": 702,
																					"name": "to",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 602,
																					"src": "6084:2:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "6070:17:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "+=",
																			"rightHandSide": {
																				"id": 705,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 649,
																				"src": "6091:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6070:26:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 707,
																		"nodeType": "ExpressionStatement",
																		"src": "6070:26:2"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 637,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 634,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 631,
														"src": "5450:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 635,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 605,
															"src": "5454:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 636,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5458:6:2",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5454:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5450:14:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 711,
												"initializationExpression": {
													"assignments": [
														631
													],
													"declarations": [
														{
															"constant": false,
															"id": 631,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "5443:1:2",
															"nodeType": "VariableDeclaration",
															"scope": 711,
															"src": "5435:9:2",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 630,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "5435:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 633,
													"initialValue": {
														"hexValue": "30",
														"id": 632,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5447:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "5435:13:2"
												},
												"loopExpression": {
													"expression": {
														"id": 639,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": true,
														"src": "5466:3:2",
														"subExpression": {
															"id": 638,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 631,
															"src": "5468:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 640,
													"nodeType": "ExpressionStatement",
													"src": "5466:3:2"
												},
												"nodeType": "ForStatement",
												"src": "5430:691:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 715,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 712,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 605,
															"src": "6135:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 713,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6139:6:2",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "6135:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "31",
														"id": 714,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6149:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "6135:15:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 747,
													"nodeType": "Block",
													"src": "6343:76:2",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 740,
																		"name": "operator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 626,
																		"src": "6376:8:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 741,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 600,
																		"src": "6386:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 742,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 602,
																		"src": "6392:2:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 743,
																		"name": "ids",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 605,
																		"src": "6396:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	{
																		"id": 744,
																		"name": "values",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 608,
																		"src": "6401:6:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		},
																		{
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	],
																	"id": 739,
																	"name": "TransferBatch",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1370,
																	"src": "6362:13:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
																		"typeString": "function (address,address,address,uint256[] memory,uint256[] memory)"
																	}
																},
																"id": 745,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6362:46:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 746,
															"nodeType": "EmitStatement",
															"src": "6357:51:2"
														}
													]
												},
												"id": 748,
												"nodeType": "IfStatement",
												"src": "6131:288:2",
												"trueBody": {
													"id": 738,
													"nodeType": "Block",
													"src": "6152:185:2",
													"statements": [
														{
															"assignments": [
																717
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 717,
																	"mutability": "mutable",
																	"name": "id",
																	"nameLocation": "6174:2:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 738,
																	"src": "6166:10:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 716,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6166:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 722,
															"initialValue": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 720,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6202:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"expression": {
																		"id": 718,
																		"name": "ids",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 605,
																		"src": "6179:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 719,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6183:18:2",
																	"memberName": "unsafeMemoryAccess",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1937,
																	"src": "6179:22:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$",
																		"typeString": "function (uint256[] memory,uint256) pure returns (uint256)"
																	}
																},
																"id": 721,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6179:25:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6166:38:2"
														},
														{
															"assignments": [
																724
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 724,
																	"mutability": "mutable",
																	"name": "value",
																	"nameLocation": "6226:5:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 738,
																	"src": "6218:13:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 723,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6218:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 729,
															"initialValue": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 727,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6260:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"expression": {
																		"id": 725,
																		"name": "values",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 608,
																		"src": "6234:6:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 726,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6241:18:2",
																	"memberName": "unsafeMemoryAccess",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1937,
																	"src": "6234:25:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$",
																		"typeString": "function (uint256[] memory,uint256) pure returns (uint256)"
																	}
																},
																"id": 728,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6234:28:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6218:44:2"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 731,
																		"name": "operator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 626,
																		"src": "6296:8:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 732,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 600,
																		"src": "6306:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 733,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 602,
																		"src": "6312:2:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 734,
																		"name": "id",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 717,
																		"src": "6316:2:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 735,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 724,
																		"src": "6320:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 730,
																	"name": "TransferSingle",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1355,
																	"src": "6281:14:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,address,uint256,uint256)"
																	}
																},
																"id": 736,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6281:45:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 737,
															"nodeType": "EmitStatement",
															"src": "6276:50:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 598,
										"nodeType": "StructuredDocumentation",
										"src": "4449:690:2",
										"text": " @dev Transfers a `value` amount of tokens of type `id` from `from` to `to`. Will mint (or burn) if `from`\n (or `to`) is the zero address.\n Emits a {TransferSingle} event if the arrays contain one element, and {TransferBatch} otherwise.\n Requirements:\n - If `to` refers to a smart contract, it must implement either {IERC1155Receiver-onERC1155Received}\n   or {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\n - `ids` and `values` must have the same length.\n NOTE: The ERC-1155 acceptance check is not performed in this function. See {_updateWithAcceptanceCheck} instead."
									},
									"id": 750,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "5153:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 609,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 600,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5169:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "5161:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 599,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5161:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 602,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5183:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "5175:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 601,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5175:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 605,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "5204:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "5187:20:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 603,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "5187:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 604,
													"nodeType": "ArrayTypeName",
													"src": "5187:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 608,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "5226:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "5209:23:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 606,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "5209:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 607,
													"nodeType": "ArrayTypeName",
													"src": "5209:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5160:73:2"
									},
									"returnParameters": {
										"id": 610,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5251:0:2"
									},
									"scope": 1335,
									"src": "5144:1281:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 825,
										"nodeType": "Block",
										"src": "7195:499:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 767,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 753,
															"src": "7213:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 768,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 755,
															"src": "7219:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 769,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 758,
															"src": "7223:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 770,
															"name": "values",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 761,
															"src": "7228:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														],
														"id": 766,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 750,
														"src": "7205:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256[] memory,uint256[] memory)"
														}
													},
													"id": 771,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7205:30:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 772,
												"nodeType": "ExpressionStatement",
												"src": "7205:30:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 778,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 773,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 755,
														"src": "7249:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 776,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7263:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 775,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7255:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 774,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7255:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 777,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7255:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7249:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 824,
												"nodeType": "IfStatement",
												"src": "7245:443:2",
												"trueBody": {
													"id": 823,
													"nodeType": "Block",
													"src": "7267:421:2",
													"statements": [
														{
															"assignments": [
																780
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 780,
																	"mutability": "mutable",
																	"name": "operator",
																	"nameLocation": "7289:8:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 823,
																	"src": "7281:16:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"typeName": {
																		"id": 779,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7281:7:2",
																		"stateMutability": "nonpayable",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 783,
															"initialValue": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 781,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1963,
																	"src": "7300:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 782,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7300:12:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "7281:31:2"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 787,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 784,
																		"name": "ids",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 758,
																		"src": "7330:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 785,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "7334:6:2",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "7330:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 786,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7344:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7330:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 821,
																"nodeType": "Block",
																"src": "7571:107:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 813,
																					"name": "operator",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 780,
																					"src": "7625:8:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 814,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 753,
																					"src": "7635:4:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 815,
																					"name": "to",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 755,
																					"src": "7641:2:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 816,
																					"name": "ids",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 758,
																					"src": "7645:3:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																						"typeString": "uint256[] memory"
																					}
																				},
																				{
																					"id": 817,
																					"name": "values",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 761,
																					"src": "7650:6:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																						"typeString": "uint256[] memory"
																					}
																				},
																				{
																					"id": 818,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 763,
																					"src": "7658:4:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																						"typeString": "uint256[] memory"
																					},
																					{
																						"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																						"typeString": "uint256[] memory"
																					},
																					{
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				],
																				"id": 812,
																				"name": "_doSafeBatchTransferAcceptanceCheck",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1318,
																				"src": "7589:35:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
																					"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
																				}
																			},
																			"id": 819,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7589:74:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 820,
																		"nodeType": "ExpressionStatement",
																		"src": "7589:74:2"
																	}
																]
															},
															"id": 822,
															"nodeType": "IfStatement",
															"src": "7326:352:2",
															"trueBody": {
																"id": 811,
																"nodeType": "Block",
																"src": "7347:218:2",
																"statements": [
																	{
																		"assignments": [
																			789
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 789,
																				"mutability": "mutable",
																				"name": "id",
																				"nameLocation": "7373:2:2",
																				"nodeType": "VariableDeclaration",
																				"scope": 811,
																				"src": "7365:10:2",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 788,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "7365:7:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 794,
																		"initialValue": {
																			"arguments": [
																				{
																					"hexValue": "30",
																					"id": 792,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "7401:1:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					}
																				],
																				"expression": {
																					"id": 790,
																					"name": "ids",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 758,
																					"src": "7378:3:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																						"typeString": "uint256[] memory"
																					}
																				},
																				"id": 791,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "7382:18:2",
																				"memberName": "unsafeMemoryAccess",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1937,
																				"src": "7378:22:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$",
																					"typeString": "function (uint256[] memory,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 793,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7378:25:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "7365:38:2"
																	},
																	{
																		"assignments": [
																			796
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 796,
																				"mutability": "mutable",
																				"name": "value",
																				"nameLocation": "7429:5:2",
																				"nodeType": "VariableDeclaration",
																				"scope": 811,
																				"src": "7421:13:2",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 795,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "7421:7:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 801,
																		"initialValue": {
																			"arguments": [
																				{
																					"hexValue": "30",
																					"id": 799,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "7463:1:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					}
																				],
																				"expression": {
																					"id": 797,
																					"name": "values",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 761,
																					"src": "7437:6:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																						"typeString": "uint256[] memory"
																					}
																				},
																				"id": 798,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "7444:18:2",
																				"memberName": "unsafeMemoryAccess",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1937,
																				"src": "7437:25:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$",
																					"typeString": "function (uint256[] memory,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 800,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7437:28:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "7421:44:2"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 803,
																					"name": "operator",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 780,
																					"src": "7514:8:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 804,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 753,
																					"src": "7524:4:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 805,
																					"name": "to",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 755,
																					"src": "7530:2:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 806,
																					"name": "id",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 789,
																					"src": "7534:2:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 807,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 796,
																					"src": "7538:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 808,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 763,
																					"src": "7545:4:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				],
																				"id": 802,
																				"name": "_doSafeTransferAcceptanceCheck",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1248,
																				"src": "7483:30:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
																					"typeString": "function (address,address,address,uint256,uint256,bytes memory)"
																				}
																			},
																			"id": 809,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7483:67:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 810,
																		"nodeType": "ExpressionStatement",
																		"src": "7483:67:2"
																	}
																]
															}
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 751,
										"nodeType": "StructuredDocumentation",
										"src": "6431:568:2",
										"text": " @dev Version of {_update} that performs the token acceptance check by calling\n {IERC1155Receiver-onERC1155Received} or {IERC1155Receiver-onERC1155BatchReceived} on the receiver address if it\n contains code (eg. is a smart contract at the moment of execution).\n IMPORTANT: Overriding this function is discouraged because it poses a reentrancy risk from the receiver. So any\n update to the contract state after this function would break the check-effect-interaction pattern. Consider\n overriding {_update} instead."
									},
									"id": 826,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_updateWithAcceptanceCheck",
									"nameLocation": "7013:26:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 764,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 753,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "7057:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 826,
												"src": "7049:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 752,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7049:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 755,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "7079:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 826,
												"src": "7071:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 754,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7071:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 758,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "7108:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 826,
												"src": "7091:20:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 756,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "7091:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 757,
													"nodeType": "ArrayTypeName",
													"src": "7091:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 761,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "7138:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 826,
												"src": "7121:23:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 759,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "7121:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 760,
													"nodeType": "ArrayTypeName",
													"src": "7121:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 763,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7167:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 826,
												"src": "7154:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 762,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7154:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7039:138:2"
									},
									"returnParameters": {
										"id": 765,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7195:0:2"
									},
									"scope": 1335,
									"src": "7004:690:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 891,
										"nodeType": "Block",
										"src": "8259:355:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 845,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 840,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 831,
														"src": "8273:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 843,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8287:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 842,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8279:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 841,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8279:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 844,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8279:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8273:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 854,
												"nodeType": "IfStatement",
												"src": "8269:88:2",
												"trueBody": {
													"id": 853,
													"nodeType": "Block",
													"src": "8291:66:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 849,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8343:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 848,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8335:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 847,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8335:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 850,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8335:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 846,
																	"name": "ERC1155InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 259,
																	"src": "8312:22:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 851,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8312:34:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 852,
															"nodeType": "RevertStatement",
															"src": "8305:41:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 860,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 855,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 829,
														"src": "8370:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 858,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8386:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 857,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8378:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 856,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8378:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 859,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8378:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8370:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 869,
												"nodeType": "IfStatement",
												"src": "8366:88:2",
												"trueBody": {
													"id": 868,
													"nodeType": "Block",
													"src": "8390:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 864,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8440:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 863,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8432:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 862,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8432:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 865,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8432:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 861,
																	"name": "ERC1155InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 254,
																	"src": "8411:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 866,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8411:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 867,
															"nodeType": "RevertStatement",
															"src": "8404:39:2"
														}
													]
												}
											},
											{
												"assignments": [
													874,
													877
												],
												"declarations": [
													{
														"constant": false,
														"id": 874,
														"mutability": "mutable",
														"name": "ids",
														"nameLocation": "8481:3:2",
														"nodeType": "VariableDeclaration",
														"scope": 891,
														"src": "8464:20:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 872,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "8464:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 873,
															"nodeType": "ArrayTypeName",
															"src": "8464:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 877,
														"mutability": "mutable",
														"name": "values",
														"nameLocation": "8503:6:2",
														"nodeType": "VariableDeclaration",
														"scope": 891,
														"src": "8486:23:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 875,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "8486:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 876,
															"nodeType": "ArrayTypeName",
															"src": "8486:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 882,
												"initialValue": {
													"arguments": [
														{
															"id": 879,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 833,
															"src": "8532:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 880,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 835,
															"src": "8536:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 878,
														"name": "_asSingletonArrays",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1334,
														"src": "8513:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256,uint256) pure returns (uint256[] memory,uint256[] memory)"
														}
													},
													"id": 881,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8513:29:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$",
														"typeString": "tuple(uint256[] memory,uint256[] memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8463:79:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 884,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 829,
															"src": "8579:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 885,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 831,
															"src": "8585:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 886,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 874,
															"src": "8589:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 887,
															"name": "values",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 877,
															"src": "8594:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 888,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 837,
															"src": "8602:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 883,
														"name": "_updateWithAcceptanceCheck",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 826,
														"src": "8552:26:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 889,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8552:55:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 890,
												"nodeType": "ExpressionStatement",
												"src": "8552:55:2"
											}
										]
									},
									"documentation": {
										"id": 827,
										"nodeType": "StructuredDocumentation",
										"src": "7700:446:2",
										"text": " @dev Transfers a `value` tokens of token type `id` from `from` to `to`.\n Emits a {TransferSingle} event.\n Requirements:\n - `to` cannot be the zero address.\n - `from` must have a balance of tokens of type `id` of at least `value` amount.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."
									},
									"id": 892,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeTransferFrom",
									"nameLocation": "8160:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 838,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 829,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "8186:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 892,
												"src": "8178:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 828,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8178:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 831,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "8200:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 892,
												"src": "8192:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 830,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8192:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 833,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "8212:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 892,
												"src": "8204:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 832,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8204:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 835,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8224:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 892,
												"src": "8216:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 834,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8216:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 837,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "8244:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 892,
												"src": "8231:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 836,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8231:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8177:72:2"
									},
									"returnParameters": {
										"id": 839,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8259:0:2"
									},
									"scope": 1335,
									"src": "8151:463:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 946,
										"nodeType": "Block",
										"src": "9194:266:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 913,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 908,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 897,
														"src": "9208:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 911,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9222:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 910,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9214:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 909,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9214:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 912,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9214:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9208:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 922,
												"nodeType": "IfStatement",
												"src": "9204:88:2",
												"trueBody": {
													"id": 921,
													"nodeType": "Block",
													"src": "9226:66:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 917,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9278:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 916,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9270:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 915,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9270:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 918,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9270:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 914,
																	"name": "ERC1155InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 259,
																	"src": "9247:22:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 919,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9247:34:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 920,
															"nodeType": "RevertStatement",
															"src": "9240:41:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 928,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 923,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 895,
														"src": "9305:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 926,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9321:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 925,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9313:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 924,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9313:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 927,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9313:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9305:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 937,
												"nodeType": "IfStatement",
												"src": "9301:88:2",
												"trueBody": {
													"id": 936,
													"nodeType": "Block",
													"src": "9325:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 932,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9375:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 931,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9367:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 930,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9367:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 933,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9367:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 929,
																	"name": "ERC1155InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 254,
																	"src": "9346:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 934,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9346:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 935,
															"nodeType": "RevertStatement",
															"src": "9339:39:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 939,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 895,
															"src": "9425:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 940,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 897,
															"src": "9431:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 941,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 900,
															"src": "9435:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 942,
															"name": "values",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 903,
															"src": "9440:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 943,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 905,
															"src": "9448:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 938,
														"name": "_updateWithAcceptanceCheck",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 826,
														"src": "9398:26:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 944,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9398:55:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 945,
												"nodeType": "ExpressionStatement",
												"src": "9398:55:2"
											}
										]
									},
									"documentation": {
										"id": 893,
										"nodeType": "StructuredDocumentation",
										"src": "8620:390:2",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_safeTransferFrom}.\n Emits a {TransferBatch} event.\n Requirements:\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n acceptance magic value.\n - `ids` and `values` must have the same length."
									},
									"id": 947,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeBatchTransferFrom",
									"nameLocation": "9024:22:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 906,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 895,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "9064:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 947,
												"src": "9056:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 894,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9056:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 897,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "9086:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 947,
												"src": "9078:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 896,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9078:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 900,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "9115:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 947,
												"src": "9098:20:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 898,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "9098:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 899,
													"nodeType": "ArrayTypeName",
													"src": "9098:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 903,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "9145:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 947,
												"src": "9128:23:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 901,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "9128:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 902,
													"nodeType": "ArrayTypeName",
													"src": "9128:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 905,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "9174:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 947,
												"src": "9161:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 904,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "9161:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9046:138:2"
									},
									"returnParameters": {
										"id": 907,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9194:0:2"
									},
									"scope": 1335,
									"src": "9015:445:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 957,
										"nodeType": "Block",
										"src": "10338:30:2",
										"statements": [
											{
												"expression": {
													"id": 955,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 953,
														"name": "_uri",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 334,
														"src": "10348:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 954,
														"name": "newuri",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 950,
														"src": "10355:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "10348:13:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 956,
												"nodeType": "ExpressionStatement",
												"src": "10348:13:2"
											}
										]
									},
									"documentation": {
										"id": 948,
										"nodeType": "StructuredDocumentation",
										"src": "9466:811:2",
										"text": " @dev Sets a new URI for all token types, by relying on the token type ID\n substitution mechanism\n https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\n By this mechanism, any occurrence of the `\\{id\\}` substring in either the\n URI or any of the values in the JSON file at said URI will be replaced by\n clients with the token type ID.\n For example, the `https://token-cdn-domain/\\{id\\}.json` URI would be\n interpreted by clients as\n `https://token-cdn-domain/000000000000000000000000000000000000000000000000000000000004cce0.json`\n for token type ID 0x4cce0.\n See {uri}.\n Because these URIs cannot be meaningfully represented by the {URI} event,\n this function emits no events."
									},
									"id": 958,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setURI",
									"nameLocation": "10291:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 951,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 950,
												"mutability": "mutable",
												"name": "newuri",
												"nameLocation": "10313:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 958,
												"src": "10299:20:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 949,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "10299:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10298:22:2"
									},
									"returnParameters": {
										"id": 952,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10338:0:2"
									},
									"scope": 1335,
									"src": "10282:86:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1009,
										"nodeType": "Block",
										"src": "10828:264:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 975,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 970,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 961,
														"src": "10842:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 973,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10856:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 972,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10848:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 971,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10848:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 974,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10848:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10842:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 984,
												"nodeType": "IfStatement",
												"src": "10838:88:2",
												"trueBody": {
													"id": 983,
													"nodeType": "Block",
													"src": "10860:66:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 979,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10912:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 978,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10904:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 977,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10904:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 980,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10904:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 976,
																	"name": "ERC1155InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 259,
																	"src": "10881:22:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 981,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10881:34:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 982,
															"nodeType": "RevertStatement",
															"src": "10874:41:2"
														}
													]
												}
											},
											{
												"assignments": [
													989,
													992
												],
												"declarations": [
													{
														"constant": false,
														"id": 989,
														"mutability": "mutable",
														"name": "ids",
														"nameLocation": "10953:3:2",
														"nodeType": "VariableDeclaration",
														"scope": 1009,
														"src": "10936:20:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 987,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "10936:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 988,
															"nodeType": "ArrayTypeName",
															"src": "10936:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 992,
														"mutability": "mutable",
														"name": "values",
														"nameLocation": "10975:6:2",
														"nodeType": "VariableDeclaration",
														"scope": 1009,
														"src": "10958:23:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 990,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "10958:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 991,
															"nodeType": "ArrayTypeName",
															"src": "10958:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 997,
												"initialValue": {
													"arguments": [
														{
															"id": 994,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 963,
															"src": "11004:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 995,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 965,
															"src": "11008:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 993,
														"name": "_asSingletonArrays",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1334,
														"src": "10985:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256,uint256) pure returns (uint256[] memory,uint256[] memory)"
														}
													},
													"id": 996,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10985:29:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$",
														"typeString": "tuple(uint256[] memory,uint256[] memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10935:79:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1001,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11059:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1000,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11051:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 999,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11051:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 1002,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11051:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1003,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 961,
															"src": "11063:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1004,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 989,
															"src": "11067:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 1005,
															"name": "values",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 992,
															"src": "11072:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 1006,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 967,
															"src": "11080:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 998,
														"name": "_updateWithAcceptanceCheck",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 826,
														"src": "11024:26:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 1007,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11024:61:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1008,
												"nodeType": "ExpressionStatement",
												"src": "11024:61:2"
											}
										]
									},
									"documentation": {
										"id": 959,
										"nodeType": "StructuredDocumentation",
										"src": "10374:367:2",
										"text": " @dev Creates a `value` amount of tokens of type `id`, and assigns them to `to`.\n Emits a {TransferSingle} event.\n Requirements:\n - `to` cannot be the zero address.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."
									},
									"id": 1010,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "10755:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 968,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 961,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "10769:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1010,
												"src": "10761:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 960,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10761:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 963,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "10781:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1010,
												"src": "10773:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 962,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10773:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 965,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10793:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1010,
												"src": "10785:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 964,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10785:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 967,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "10813:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1010,
												"src": "10800:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 966,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "10800:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10760:58:2"
									},
									"returnParameters": {
										"id": 969,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10828:0:2"
									},
									"scope": 1335,
									"src": "10746:346:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1050,
										"nodeType": "Block",
										"src": "11630:175:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1029,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1024,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1013,
														"src": "11644:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1027,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11658:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1026,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "11650:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1025,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "11650:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 1028,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "11650:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "11644:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1038,
												"nodeType": "IfStatement",
												"src": "11640:88:2",
												"trueBody": {
													"id": 1037,
													"nodeType": "Block",
													"src": "11662:66:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1033,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "11714:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1032,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "11706:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1031,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "11706:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1034,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11706:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1030,
																	"name": "ERC1155InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 259,
																	"src": "11683:22:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 1035,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11683:34:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1036,
															"nodeType": "RevertStatement",
															"src": "11676:41:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1042,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11772:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1041,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11764:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1040,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11764:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 1043,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11764:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1044,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1013,
															"src": "11776:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1045,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1016,
															"src": "11780:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 1046,
															"name": "values",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1019,
															"src": "11785:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 1047,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1021,
															"src": "11793:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1039,
														"name": "_updateWithAcceptanceCheck",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 826,
														"src": "11737:26:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 1048,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11737:61:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1049,
												"nodeType": "ExpressionStatement",
												"src": "11737:61:2"
											}
										]
									},
									"documentation": {
										"id": 1011,
										"nodeType": "StructuredDocumentation",
										"src": "11098:420:2",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_mint}.\n Emits a {TransferBatch} event.\n Requirements:\n - `ids` and `values` must have the same length.\n - `to` cannot be the zero address.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n acceptance magic value."
									},
									"id": 1051,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mintBatch",
									"nameLocation": "11532:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1022,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1013,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "11551:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1051,
												"src": "11543:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1012,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11543:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1016,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "11572:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 1051,
												"src": "11555:20:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1014,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "11555:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1015,
													"nodeType": "ArrayTypeName",
													"src": "11555:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1019,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "11594:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 1051,
												"src": "11577:23:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1017,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "11577:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1018,
													"nodeType": "ArrayTypeName",
													"src": "11577:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1021,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "11615:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1051,
												"src": "11602:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1020,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "11602:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11542:78:2"
									},
									"returnParameters": {
										"id": 1023,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11630:0:2"
									},
									"scope": 1335,
									"src": "11523:282:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1100,
										"nodeType": "Block",
										"src": "12164:264:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1066,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1061,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1054,
														"src": "12178:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1064,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12194:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1063,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "12186:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1062,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "12186:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 1065,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "12186:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "12178:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1075,
												"nodeType": "IfStatement",
												"src": "12174:88:2",
												"trueBody": {
													"id": 1074,
													"nodeType": "Block",
													"src": "12198:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1070,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12248:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1069,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "12240:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1068,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "12240:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1071,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "12240:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1067,
																	"name": "ERC1155InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 254,
																	"src": "12219:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 1072,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12219:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1073,
															"nodeType": "RevertStatement",
															"src": "12212:39:2"
														}
													]
												}
											},
											{
												"assignments": [
													1080,
													1083
												],
												"declarations": [
													{
														"constant": false,
														"id": 1080,
														"mutability": "mutable",
														"name": "ids",
														"nameLocation": "12289:3:2",
														"nodeType": "VariableDeclaration",
														"scope": 1100,
														"src": "12272:20:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 1078,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "12272:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1079,
															"nodeType": "ArrayTypeName",
															"src": "12272:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1083,
														"mutability": "mutable",
														"name": "values",
														"nameLocation": "12311:6:2",
														"nodeType": "VariableDeclaration",
														"scope": 1100,
														"src": "12294:23:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 1081,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "12294:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1082,
															"nodeType": "ArrayTypeName",
															"src": "12294:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1088,
												"initialValue": {
													"arguments": [
														{
															"id": 1085,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1056,
															"src": "12340:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1086,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1058,
															"src": "12344:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1084,
														"name": "_asSingletonArrays",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1334,
														"src": "12321:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256,uint256) pure returns (uint256[] memory,uint256[] memory)"
														}
													},
													"id": 1087,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12321:29:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$",
														"typeString": "tuple(uint256[] memory,uint256[] memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12271:79:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1090,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1054,
															"src": "12387:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1093,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12401:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1092,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "12393:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1091,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "12393:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 1094,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12393:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1095,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1080,
															"src": "12405:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 1096,
															"name": "values",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1083,
															"src": "12410:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"hexValue": "",
															"id": 1097,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12418:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 1089,
														"name": "_updateWithAcceptanceCheck",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 826,
														"src": "12360:26:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 1098,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12360:61:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1099,
												"nodeType": "ExpressionStatement",
												"src": "12360:61:2"
											}
										]
									},
									"documentation": {
										"id": 1052,
										"nodeType": "StructuredDocumentation",
										"src": "11811:283:2",
										"text": " @dev Destroys a `value` amount of tokens of type `id` from `from`\n Emits a {TransferSingle} event.\n Requirements:\n - `from` cannot be the zero address.\n - `from` must have at least `value` amount of tokens of type `id`."
									},
									"id": 1101,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "12108:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1059,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1054,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "12122:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1101,
												"src": "12114:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1053,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12114:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1056,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "12136:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1101,
												"src": "12128:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1055,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12128:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1058,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "12148:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1101,
												"src": "12140:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1057,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12140:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12113:41:2"
									},
									"returnParameters": {
										"id": 1060,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12164:0:2"
									},
									"scope": 1335,
									"src": "12099:329:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1139,
										"nodeType": "Block",
										"src": "12874:175:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1118,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1113,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1104,
														"src": "12888:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1116,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12904:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1115,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "12896:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1114,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "12896:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 1117,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "12896:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "12888:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1127,
												"nodeType": "IfStatement",
												"src": "12884:88:2",
												"trueBody": {
													"id": 1126,
													"nodeType": "Block",
													"src": "12908:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1122,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12958:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1121,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "12950:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1120,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "12950:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1123,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "12950:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1119,
																	"name": "ERC1155InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 254,
																	"src": "12929:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 1124,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12929:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1125,
															"nodeType": "RevertStatement",
															"src": "12922:39:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1129,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1104,
															"src": "13008:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1132,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13022:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1131,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "13014:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1130,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "13014:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 1133,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13014:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1134,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1107,
															"src": "13026:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 1135,
															"name": "values",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1110,
															"src": "13031:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"hexValue": "",
															"id": 1136,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13039:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 1128,
														"name": "_updateWithAcceptanceCheck",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 826,
														"src": "12981:26:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 1137,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12981:61:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1138,
												"nodeType": "ExpressionStatement",
												"src": "12981:61:2"
											}
										]
									},
									"documentation": {
										"id": 1102,
										"nodeType": "StructuredDocumentation",
										"src": "12434:345:2",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_burn}.\n Emits a {TransferBatch} event.\n Requirements:\n - `from` cannot be the zero address.\n - `from` must have at least `value` amount of tokens of type `id`.\n - `ids` and `values` must have the same length."
									},
									"id": 1140,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burnBatch",
									"nameLocation": "12793:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1111,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1104,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "12812:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1140,
												"src": "12804:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1103,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12804:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1107,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "12835:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 1140,
												"src": "12818:20:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1105,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "12818:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1106,
													"nodeType": "ArrayTypeName",
													"src": "12818:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1110,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "12857:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 1140,
												"src": "12840:23:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1108,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "12840:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1109,
													"nodeType": "ArrayTypeName",
													"src": "12840:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12803:61:2"
									},
									"returnParameters": {
										"id": 1112,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12874:0:2"
									},
									"scope": 1335,
									"src": "12784:265:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1179,
										"nodeType": "Block",
										"src": "13361:222:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1155,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1150,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1145,
														"src": "13375:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1153,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "13395:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1152,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "13387:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1151,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "13387:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 1154,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "13387:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "13375:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1164,
												"nodeType": "IfStatement",
												"src": "13371:94:2",
												"trueBody": {
													"id": 1163,
													"nodeType": "Block",
													"src": "13399:66:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1159,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "13451:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1158,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "13443:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1157,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "13443:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1160,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "13443:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1156,
																	"name": "ERC1155InvalidOperator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 276,
																	"src": "13420:22:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 1161,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "13420:34:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1162,
															"nodeType": "RevertStatement",
															"src": "13413:41:2"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1171,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1165,
																"name": "_operatorApprovals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 332,
																"src": "13474:18:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																	"typeString": "mapping(address => mapping(address => bool))"
																}
															},
															"id": 1168,
															"indexExpression": {
																"id": 1166,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1143,
																"src": "13493:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "13474:25:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1169,
														"indexExpression": {
															"id": 1167,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1145,
															"src": "13500:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "13474:35:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1170,
														"name": "approved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1147,
														"src": "13512:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "13474:46:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1172,
												"nodeType": "ExpressionStatement",
												"src": "13474:46:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1174,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1143,
															"src": "13550:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1175,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1145,
															"src": "13557:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1176,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1147,
															"src": "13567:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1173,
														"name": "ApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1379,
														"src": "13535:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 1177,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13535:41:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1178,
												"nodeType": "EmitStatement",
												"src": "13530:46:2"
											}
										]
									},
									"documentation": {
										"id": 1141,
										"nodeType": "StructuredDocumentation",
										"src": "13055:208:2",
										"text": " @dev Approve `operator` to operate on all of `owner` tokens\n Emits an {ApprovalForAll} event.\n Requirements:\n - `operator` cannot be the zero address."
									},
									"id": 1180,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setApprovalForAll",
									"nameLocation": "13277:18:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1148,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1143,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "13304:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1180,
												"src": "13296:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1142,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13296:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1145,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "13319:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1180,
												"src": "13311:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1144,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13311:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1147,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "13334:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1180,
												"src": "13329:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1146,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "13329:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13295:48:2"
									},
									"returnParameters": {
										"id": 1149,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13361:0:2"
									},
									"scope": 1335,
									"src": "13268:315:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1247,
										"nodeType": "Block",
										"src": "13953:782:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1200,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 1196,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1187,
																"src": "13967:2:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1197,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "13970:4:2",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "13967:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1198,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "13975:6:2",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "13967:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1199,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "13984:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "13967:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1246,
												"nodeType": "IfStatement",
												"src": "13963:766:2",
												"trueBody": {
													"id": 1245,
													"nodeType": "Block",
													"src": "13987:742:2",
													"statements": [
														{
															"clauses": [
																{
																	"block": {
																		"id": 1225,
																		"nodeType": "Block",
																		"src": "14103:206:2",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					},
																					"id": 1218,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1214,
																						"name": "response",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1212,
																						"src": "14125:8:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "!=",
																					"rightExpression": {
																						"expression": {
																							"expression": {
																								"id": 1215,
																								"name": "IERC1155Receiver",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1500,
																								"src": "14137:16:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$1500_$",
																									"typeString": "type(contract IERC1155Receiver)"
																								}
																							},
																							"id": 1216,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"memberLocation": "14154:17:2",
																							"memberName": "onERC1155Received",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1481,
																							"src": "14137:34:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$",
																								"typeString": "function IERC1155Receiver.onERC1155Received(address,address,uint256,uint256,bytes calldata) returns (bytes4)"
																							}
																						},
																						"id": 1217,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"memberLocation": "14172:8:2",
																						"memberName": "selector",
																						"nodeType": "MemberAccess",
																						"src": "14137:43:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"src": "14125:55:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 1224,
																				"nodeType": "IfStatement",
																				"src": "14121:174:2",
																				"trueBody": {
																					"id": 1223,
																					"nodeType": "Block",
																					"src": "14182:113:2",
																					"statements": [
																						{
																							"errorCall": {
																								"arguments": [
																									{
																										"id": 1220,
																										"name": "to",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1187,
																										"src": "14273:2:2",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									],
																									"id": 1219,
																									"name": "ERC1155InvalidReceiver",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 259,
																									"src": "14250:22:2",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																										"typeString": "function (address) pure"
																									}
																								},
																								"id": 1221,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "14250:26:2",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 1222,
																							"nodeType": "RevertStatement",
																							"src": "14243:33:2"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1226,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1213,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1212,
																				"mutability": "mutable",
																				"name": "response",
																				"nameLocation": "14093:8:2",
																				"nodeType": "VariableDeclaration",
																				"scope": 1226,
																				"src": "14086:15:2",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				},
																				"typeName": {
																					"id": 1211,
																					"name": "bytes4",
																					"nodeType": "ElementaryTypeName",
																					"src": "14086:6:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "14085:17:2"
																	},
																	"src": "14077:232:2"
																},
																{
																	"block": {
																		"id": 1242,
																		"nodeType": "Block",
																		"src": "14338:381:2",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1233,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"expression": {
																							"id": 1230,
																							"name": "reason",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1228,
																							"src": "14360:6:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes_memory_ptr",
																								"typeString": "bytes memory"
																							}
																						},
																						"id": 1231,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "14367:6:2",
																						"memberName": "length",
																						"nodeType": "MemberAccess",
																						"src": "14360:13:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "==",
																					"rightExpression": {
																						"hexValue": "30",
																						"id": 1232,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "14377:1:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					},
																					"src": "14360:18:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"falseBody": {
																					"id": 1240,
																					"nodeType": "Block",
																					"src": "14515:190:2",
																					"statements": [
																						{
																							"AST": {
																								"nodeType": "YulBlock",
																								"src": "14601:86:2",
																								"statements": [
																									{
																										"expression": {
																											"arguments": [
																												{
																													"arguments": [
																														{
																															"kind": "number",
																															"nodeType": "YulLiteral",
																															"src": "14638:2:2",
																															"type": "",
																															"value": "32"
																														},
																														{
																															"name": "reason",
																															"nodeType": "YulIdentifier",
																															"src": "14642:6:2"
																														}
																													],
																													"functionName": {
																														"name": "add",
																														"nodeType": "YulIdentifier",
																														"src": "14634:3:2"
																													},
																													"nodeType": "YulFunctionCall",
																													"src": "14634:15:2"
																												},
																												{
																													"arguments": [
																														{
																															"name": "reason",
																															"nodeType": "YulIdentifier",
																															"src": "14657:6:2"
																														}
																													],
																													"functionName": {
																														"name": "mload",
																														"nodeType": "YulIdentifier",
																														"src": "14651:5:2"
																													},
																													"nodeType": "YulFunctionCall",
																													"src": "14651:13:2"
																												}
																											],
																											"functionName": {
																												"name": "revert",
																												"nodeType": "YulIdentifier",
																												"src": "14627:6:2"
																											},
																											"nodeType": "YulFunctionCall",
																											"src": "14627:38:2"
																										},
																										"nodeType": "YulExpressionStatement",
																										"src": "14627:38:2"
																									}
																								]
																							},
																							"documentation": "@solidity memory-safe-assembly",
																							"evmVersion": "shanghai",
																							"externalReferences": [
																								{
																									"declaration": 1228,
																									"isOffset": false,
																									"isSlot": false,
																									"src": "14642:6:2",
																									"valueSize": 1
																								},
																								{
																									"declaration": 1228,
																									"isOffset": false,
																									"isSlot": false,
																									"src": "14657:6:2",
																									"valueSize": 1
																								}
																							],
																							"id": 1239,
																							"nodeType": "InlineAssembly",
																							"src": "14592:95:2"
																						}
																					]
																				},
																				"id": 1241,
																				"nodeType": "IfStatement",
																				"src": "14356:349:2",
																				"trueBody": {
																					"id": 1238,
																					"nodeType": "Block",
																					"src": "14380:129:2",
																					"statements": [
																						{
																							"errorCall": {
																								"arguments": [
																									{
																										"id": 1235,
																										"name": "to",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1187,
																										"src": "14487:2:2",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									],
																									"id": 1234,
																									"name": "ERC1155InvalidReceiver",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 259,
																									"src": "14464:22:2",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																										"typeString": "function (address) pure"
																									}
																								},
																								"id": 1236,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "14464:26:2",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 1237,
																							"nodeType": "RevertStatement",
																							"src": "14457:33:2"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1243,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1229,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1228,
																				"mutability": "mutable",
																				"name": "reason",
																				"nameLocation": "14330:6:2",
																				"nodeType": "VariableDeclaration",
																				"scope": 1243,
																				"src": "14317:19:2",
																				"stateVariable": false,
																				"storageLocation": "memory",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes"
																				},
																				"typeName": {
																					"id": 1227,
																					"name": "bytes",
																					"nodeType": "ElementaryTypeName",
																					"src": "14317:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_storage_ptr",
																						"typeString": "bytes"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "14316:21:2"
																	},
																	"src": "14310:409:2"
																}
															],
															"externalCall": {
																"arguments": [
																	{
																		"id": 1205,
																		"name": "operator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1183,
																		"src": "14044:8:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1206,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1185,
																		"src": "14054:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1207,
																		"name": "id",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1189,
																		"src": "14060:2:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1208,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1191,
																		"src": "14064:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1209,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1193,
																		"src": "14071:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1202,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1187,
																				"src": "14022:2:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1201,
																			"name": "IERC1155Receiver",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1500,
																			"src": "14005:16:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$1500_$",
																				"typeString": "type(contract IERC1155Receiver)"
																			}
																		},
																		"id": 1203,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "14005:20:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1155Receiver_$1500",
																			"typeString": "contract IERC1155Receiver"
																		}
																	},
																	"id": 1204,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "14026:17:2",
																	"memberName": "onERC1155Received",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1481,
																	"src": "14005:38:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																		"typeString": "function (address,address,uint256,uint256,bytes memory) external returns (bytes4)"
																	}
																},
																"id": 1210,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14005:71:2",
																"tryCall": true,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"id": 1244,
															"nodeType": "TryStatement",
															"src": "14001:718:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1181,
										"nodeType": "StructuredDocumentation",
										"src": "13589:167:2",
										"text": " @dev Performs an acceptance check by calling {IERC1155-onERC1155Received} on the `to` address\n if it contains code at the moment of execution."
									},
									"id": 1248,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_doSafeTransferAcceptanceCheck",
									"nameLocation": "13770:30:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1183,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "13818:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1248,
												"src": "13810:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1182,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13810:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1185,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "13844:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1248,
												"src": "13836:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1184,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13836:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1187,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "13866:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1248,
												"src": "13858:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1186,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13858:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1189,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "13886:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1248,
												"src": "13878:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1188,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13878:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1191,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "13906:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1248,
												"src": "13898:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1190,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13898:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1193,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "13934:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1248,
												"src": "13921:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1192,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "13921:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13800:144:2"
									},
									"returnParameters": {
										"id": 1195,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13953:0:2"
									},
									"scope": 1335,
									"src": "13761:974:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1317,
										"nodeType": "Block",
										"src": "15140:824:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1270,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 1266,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1255,
																"src": "15154:2:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1267,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "15157:4:2",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "15154:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1268,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "15162:6:2",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "15154:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1269,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "15171:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "15154:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1316,
												"nodeType": "IfStatement",
												"src": "15150:808:2",
												"trueBody": {
													"id": 1315,
													"nodeType": "Block",
													"src": "15174:784:2",
													"statements": [
														{
															"clauses": [
																{
																	"block": {
																		"id": 1295,
																		"nodeType": "Block",
																		"src": "15327:211:2",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					},
																					"id": 1288,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1284,
																						"name": "response",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1282,
																						"src": "15349:8:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "!=",
																					"rightExpression": {
																						"expression": {
																							"expression": {
																								"id": 1285,
																								"name": "IERC1155Receiver",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1500,
																								"src": "15361:16:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$1500_$",
																									"typeString": "type(contract IERC1155Receiver)"
																								}
																							},
																							"id": 1286,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"memberLocation": "15378:22:2",
																							"memberName": "onERC1155BatchReceived",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1499,
																							"src": "15361:39:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_calldata_ptr_$_t_array$_t_uint256_$dyn_calldata_ptr_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$",
																								"typeString": "function IERC1155Receiver.onERC1155BatchReceived(address,address,uint256[] calldata,uint256[] calldata,bytes calldata) returns (bytes4)"
																							}
																						},
																						"id": 1287,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"memberLocation": "15401:8:2",
																						"memberName": "selector",
																						"nodeType": "MemberAccess",
																						"src": "15361:48:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"src": "15349:60:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 1294,
																				"nodeType": "IfStatement",
																				"src": "15345:179:2",
																				"trueBody": {
																					"id": 1293,
																					"nodeType": "Block",
																					"src": "15411:113:2",
																					"statements": [
																						{
																							"errorCall": {
																								"arguments": [
																									{
																										"id": 1290,
																										"name": "to",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1255,
																										"src": "15502:2:2",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									],
																									"id": 1289,
																									"name": "ERC1155InvalidReceiver",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 259,
																									"src": "15479:22:2",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																										"typeString": "function (address) pure"
																									}
																								},
																								"id": 1291,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "15479:26:2",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 1292,
																							"nodeType": "RevertStatement",
																							"src": "15472:33:2"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1296,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1283,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1282,
																				"mutability": "mutable",
																				"name": "response",
																				"nameLocation": "15304:8:2",
																				"nodeType": "VariableDeclaration",
																				"scope": 1296,
																				"src": "15297:15:2",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				},
																				"typeName": {
																					"id": 1281,
																					"name": "bytes4",
																					"nodeType": "ElementaryTypeName",
																					"src": "15297:6:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "15279:47:2"
																	},
																	"src": "15271:267:2"
																},
																{
																	"block": {
																		"id": 1312,
																		"nodeType": "Block",
																		"src": "15567:381:2",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1303,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"expression": {
																							"id": 1300,
																							"name": "reason",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1298,
																							"src": "15589:6:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes_memory_ptr",
																								"typeString": "bytes memory"
																							}
																						},
																						"id": 1301,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "15596:6:2",
																						"memberName": "length",
																						"nodeType": "MemberAccess",
																						"src": "15589:13:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "==",
																					"rightExpression": {
																						"hexValue": "30",
																						"id": 1302,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "15606:1:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					},
																					"src": "15589:18:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"falseBody": {
																					"id": 1310,
																					"nodeType": "Block",
																					"src": "15744:190:2",
																					"statements": [
																						{
																							"AST": {
																								"nodeType": "YulBlock",
																								"src": "15830:86:2",
																								"statements": [
																									{
																										"expression": {
																											"arguments": [
																												{
																													"arguments": [
																														{
																															"kind": "number",
																															"nodeType": "YulLiteral",
																															"src": "15867:2:2",
																															"type": "",
																															"value": "32"
																														},
																														{
																															"name": "reason",
																															"nodeType": "YulIdentifier",
																															"src": "15871:6:2"
																														}
																													],
																													"functionName": {
																														"name": "add",
																														"nodeType": "YulIdentifier",
																														"src": "15863:3:2"
																													},
																													"nodeType": "YulFunctionCall",
																													"src": "15863:15:2"
																												},
																												{
																													"arguments": [
																														{
																															"name": "reason",
																															"nodeType": "YulIdentifier",
																															"src": "15886:6:2"
																														}
																													],
																													"functionName": {
																														"name": "mload",
																														"nodeType": "YulIdentifier",
																														"src": "15880:5:2"
																													},
																													"nodeType": "YulFunctionCall",
																													"src": "15880:13:2"
																												}
																											],
																											"functionName": {
																												"name": "revert",
																												"nodeType": "YulIdentifier",
																												"src": "15856:6:2"
																											},
																											"nodeType": "YulFunctionCall",
																											"src": "15856:38:2"
																										},
																										"nodeType": "YulExpressionStatement",
																										"src": "15856:38:2"
																									}
																								]
																							},
																							"documentation": "@solidity memory-safe-assembly",
																							"evmVersion": "shanghai",
																							"externalReferences": [
																								{
																									"declaration": 1298,
																									"isOffset": false,
																									"isSlot": false,
																									"src": "15871:6:2",
																									"valueSize": 1
																								},
																								{
																									"declaration": 1298,
																									"isOffset": false,
																									"isSlot": false,
																									"src": "15886:6:2",
																									"valueSize": 1
																								}
																							],
																							"id": 1309,
																							"nodeType": "InlineAssembly",
																							"src": "15821:95:2"
																						}
																					]
																				},
																				"id": 1311,
																				"nodeType": "IfStatement",
																				"src": "15585:349:2",
																				"trueBody": {
																					"id": 1308,
																					"nodeType": "Block",
																					"src": "15609:129:2",
																					"statements": [
																						{
																							"errorCall": {
																								"arguments": [
																									{
																										"id": 1305,
																										"name": "to",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1255,
																										"src": "15716:2:2",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									],
																									"id": 1304,
																									"name": "ERC1155InvalidReceiver",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 259,
																									"src": "15693:22:2",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																										"typeString": "function (address) pure"
																									}
																								},
																								"id": 1306,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "15693:26:2",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 1307,
																							"nodeType": "RevertStatement",
																							"src": "15686:33:2"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1313,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1299,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1298,
																				"mutability": "mutable",
																				"name": "reason",
																				"nameLocation": "15559:6:2",
																				"nodeType": "VariableDeclaration",
																				"scope": 1313,
																				"src": "15546:19:2",
																				"stateVariable": false,
																				"storageLocation": "memory",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes"
																				},
																				"typeName": {
																					"id": 1297,
																					"name": "bytes",
																					"nodeType": "ElementaryTypeName",
																					"src": "15546:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_storage_ptr",
																						"typeString": "bytes"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "15545:21:2"
																	},
																	"src": "15539:409:2"
																}
															],
															"externalCall": {
																"arguments": [
																	{
																		"id": 1275,
																		"name": "operator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1251,
																		"src": "15236:8:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1276,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1253,
																		"src": "15246:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1277,
																		"name": "ids",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1258,
																		"src": "15252:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	{
																		"id": 1278,
																		"name": "values",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1261,
																		"src": "15257:6:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	{
																		"id": 1279,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1263,
																		"src": "15265:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		},
																		{
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1272,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1255,
																				"src": "15209:2:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1271,
																			"name": "IERC1155Receiver",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1500,
																			"src": "15192:16:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$1500_$",
																				"typeString": "type(contract IERC1155Receiver)"
																			}
																		},
																		"id": 1273,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "15192:20:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1155Receiver_$1500",
																			"typeString": "contract IERC1155Receiver"
																		}
																	},
																	"id": 1274,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "15213:22:2",
																	"memberName": "onERC1155BatchReceived",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1499,
																	"src": "15192:43:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																		"typeString": "function (address,address,uint256[] memory,uint256[] memory,bytes memory) external returns (bytes4)"
																	}
																},
																"id": 1280,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "15192:78:2",
																"tryCall": true,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"id": 1314,
															"nodeType": "TryStatement",
															"src": "15188:760:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1249,
										"nodeType": "StructuredDocumentation",
										"src": "14741:177:2",
										"text": " @dev Performs a batch acceptance check by calling {IERC1155-onERC1155BatchReceived} on the `to` address\n if it contains code at the moment of execution."
									},
									"id": 1318,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_doSafeBatchTransferAcceptanceCheck",
									"nameLocation": "14932:35:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1264,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1251,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "14985:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1318,
												"src": "14977:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1250,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14977:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1253,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "15011:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1318,
												"src": "15003:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1252,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15003:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1255,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "15033:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1318,
												"src": "15025:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1254,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15025:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1258,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "15062:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 1318,
												"src": "15045:20:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1256,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "15045:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1257,
													"nodeType": "ArrayTypeName",
													"src": "15045:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1261,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "15092:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 1318,
												"src": "15075:23:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1259,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "15075:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1260,
													"nodeType": "ArrayTypeName",
													"src": "15075:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1263,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "15121:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1318,
												"src": "15108:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1262,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "15108:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14967:164:2"
									},
									"returnParameters": {
										"id": 1265,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15140:0:2"
									},
									"scope": 1335,
									"src": "14923:1041:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1333,
										"nodeType": "Block",
										"src": "16238:691:2",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "16300:623:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16358:21:2",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16374:4:2",
																		"type": "",
																		"value": "0x40"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "16368:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "16368:11:2"
															},
															"variableNames": [
																{
																	"name": "array1",
																	"nodeType": "YulIdentifier",
																	"src": "16358:6:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array1",
																		"nodeType": "YulIdentifier",
																		"src": "16436:6:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16444:1:2",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16429:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "16429:17:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16429:17:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "array1",
																				"nodeType": "YulIdentifier",
																				"src": "16567:6:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16575:4:2",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16563:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16563:17:2"
																	},
																	{
																		"name": "element1",
																		"nodeType": "YulIdentifier",
																		"src": "16582:8:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16556:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "16556:35:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16556:35:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16682:27:2",
															"value": {
																"arguments": [
																	{
																		"name": "array1",
																		"nodeType": "YulIdentifier",
																		"src": "16696:6:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16704:4:2",
																		"type": "",
																		"value": "0x40"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16692:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "16692:17:2"
															},
															"variableNames": [
																{
																	"name": "array2",
																	"nodeType": "YulIdentifier",
																	"src": "16682:6:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array2",
																		"nodeType": "YulIdentifier",
																		"src": "16729:6:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16737:1:2",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16722:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "16722:17:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16722:17:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "array2",
																				"nodeType": "YulIdentifier",
																				"src": "16763:6:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16771:4:2",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16759:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16759:17:2"
																	},
																	{
																		"name": "element2",
																		"nodeType": "YulIdentifier",
																		"src": "16778:8:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16752:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "16752:35:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16752:35:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16889:4:2",
																		"type": "",
																		"value": "0x40"
																	},
																	{
																		"arguments": [
																			{
																				"name": "array2",
																				"nodeType": "YulIdentifier",
																				"src": "16899:6:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16907:4:2",
																				"type": "",
																				"value": "0x40"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16895:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16895:17:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16882:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "16882:31:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16882:31:2"
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 1327,
														"isOffset": false,
														"isSlot": false,
														"src": "16358:6:2",
														"valueSize": 1
													},
													{
														"declaration": 1327,
														"isOffset": false,
														"isSlot": false,
														"src": "16436:6:2",
														"valueSize": 1
													},
													{
														"declaration": 1327,
														"isOffset": false,
														"isSlot": false,
														"src": "16567:6:2",
														"valueSize": 1
													},
													{
														"declaration": 1327,
														"isOffset": false,
														"isSlot": false,
														"src": "16696:6:2",
														"valueSize": 1
													},
													{
														"declaration": 1330,
														"isOffset": false,
														"isSlot": false,
														"src": "16682:6:2",
														"valueSize": 1
													},
													{
														"declaration": 1330,
														"isOffset": false,
														"isSlot": false,
														"src": "16729:6:2",
														"valueSize": 1
													},
													{
														"declaration": 1330,
														"isOffset": false,
														"isSlot": false,
														"src": "16763:6:2",
														"valueSize": 1
													},
													{
														"declaration": 1330,
														"isOffset": false,
														"isSlot": false,
														"src": "16899:6:2",
														"valueSize": 1
													},
													{
														"declaration": 1321,
														"isOffset": false,
														"isSlot": false,
														"src": "16582:8:2",
														"valueSize": 1
													},
													{
														"declaration": 1323,
														"isOffset": false,
														"isSlot": false,
														"src": "16778:8:2",
														"valueSize": 1
													}
												],
												"id": 1332,
												"nodeType": "InlineAssembly",
												"src": "16291:632:2"
											}
										]
									},
									"documentation": {
										"id": 1319,
										"nodeType": "StructuredDocumentation",
										"src": "15970:105:2",
										"text": " @dev Creates an array in memory with only one value for each of the elements provided."
									},
									"id": 1334,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_asSingletonArrays",
									"nameLocation": "16089:18:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1324,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1321,
												"mutability": "mutable",
												"name": "element1",
												"nameLocation": "16125:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1334,
												"src": "16117:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1320,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16117:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1323,
												"mutability": "mutable",
												"name": "element2",
												"nameLocation": "16151:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1334,
												"src": "16143:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1322,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16143:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16107:58:2"
									},
									"returnParameters": {
										"id": 1331,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1327,
												"mutability": "mutable",
												"name": "array1",
												"nameLocation": "16205:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 1334,
												"src": "16188:23:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1325,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "16188:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1326,
													"nodeType": "ArrayTypeName",
													"src": "16188:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1330,
												"mutability": "mutable",
												"name": "array2",
												"nameLocation": "16230:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 1334,
												"src": "16213:23:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1328,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "16213:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1329,
													"nodeType": "ArrayTypeName",
													"src": "16213:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16187:50:2"
									},
									"scope": 1335,
									"src": "16080:849:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1336,
							"src": "727:16204:2",
							"usedErrors": [
								249,
								254,
								259,
								266,
								271,
								276,
								283
							],
							"usedEvents": [
								1355,
								1370,
								1379,
								1386
							]
						}
					],
					"src": "109:16823:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC1155/IERC1155.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC1155/IERC1155.sol",
					"exportedSymbols": {
						"IERC1155": [
							1458
						],
						"IERC165": [
							2119
						]
					},
					"id": 1459,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1337,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "110:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../../utils/introspection/IERC165.sol",
							"id": 1339,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1459,
							"sourceUnit": 2120,
							"src": "136:62:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1338,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2119,
										"src": "144:7:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1341,
										"name": "IERC165",
										"nameLocations": [
											"358:7:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2119,
										"src": "358:7:3"
									},
									"id": 1342,
									"nodeType": "InheritanceSpecifier",
									"src": "358:7:3"
								}
							],
							"canonicalName": "IERC1155",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1340,
								"nodeType": "StructuredDocumentation",
								"src": "200:135:3",
								"text": " @dev Required interface of an ERC1155 compliant contract, as defined in the\n https://eips.ethereum.org/EIPS/eip-1155[EIP]."
							},
							"fullyImplemented": false,
							"id": 1458,
							"linearizedBaseContracts": [
								1458,
								2119
							],
							"name": "IERC1155",
							"nameLocation": "346:8:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1343,
										"nodeType": "StructuredDocumentation",
										"src": "372:125:3",
										"text": " @dev Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`."
									},
									"eventSelector": "c3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62",
									"id": 1355,
									"name": "TransferSingle",
									"nameLocation": "508:14:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1354,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1345,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "539:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1355,
												"src": "523:24:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1344,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "523:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1347,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "565:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1355,
												"src": "549:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1346,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "549:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1349,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "587:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1355,
												"src": "571:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1348,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "571:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1351,
												"indexed": false,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "599:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1355,
												"src": "591:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1350,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "591:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1353,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "611:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1355,
												"src": "603:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1352,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "603:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "522:95:3"
									},
									"src": "502:116:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1356,
										"nodeType": "StructuredDocumentation",
										"src": "624:144:3",
										"text": " @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\n transfers."
									},
									"eventSelector": "4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb",
									"id": 1370,
									"name": "TransferBatch",
									"nameLocation": "779:13:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1369,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1358,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "818:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1370,
												"src": "802:24:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1357,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "802:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1360,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "852:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1370,
												"src": "836:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1359,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "836:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1362,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "882:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1370,
												"src": "866:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1361,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "866:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1365,
												"indexed": false,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "904:3:3",
												"nodeType": "VariableDeclaration",
												"scope": 1370,
												"src": "894:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1363,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "894:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1364,
													"nodeType": "ArrayTypeName",
													"src": "894:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1368,
												"indexed": false,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "927:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 1370,
												"src": "917:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1366,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "917:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1367,
													"nodeType": "ArrayTypeName",
													"src": "917:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:147:3"
									},
									"src": "773:167:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1371,
										"nodeType": "StructuredDocumentation",
										"src": "946:147:3",
										"text": " @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\n `approved`."
									},
									"eventSelector": "17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31",
									"id": 1379,
									"name": "ApprovalForAll",
									"nameLocation": "1104:14:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1378,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1373,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1135:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1379,
												"src": "1119:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1372,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1119:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1375,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "1160:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1379,
												"src": "1144:24:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1374,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1144:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1377,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "1175:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1379,
												"src": "1170:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1376,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1170:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1118:66:3"
									},
									"src": "1098:87:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1380,
										"nodeType": "StructuredDocumentation",
										"src": "1191:343:3",
										"text": " @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\n If an {URI} event was emitted for `id`, the standard\n https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\n returned by {IERC1155MetadataURI-uri}."
									},
									"eventSelector": "6bb7ff708619ba0610cba295a58592e0451dee2622938c8755667688daf3529b",
									"id": 1386,
									"name": "URI",
									"nameLocation": "1545:3:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1385,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1382,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1556:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1386,
												"src": "1549:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1381,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1549:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1384,
												"indexed": true,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "1579:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1386,
												"src": "1563:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1383,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1563:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1548:34:3"
									},
									"src": "1539:44:3"
								},
								{
									"documentation": {
										"id": 1387,
										"nodeType": "StructuredDocumentation",
										"src": "1589:172:3",
										"text": " @dev Returns the value of tokens of token type `id` owned by `account`.\n Requirements:\n - `account` cannot be the zero address."
									},
									"functionSelector": "00fdd58e",
									"id": 1396,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "1775:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1392,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1389,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1793:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1396,
												"src": "1785:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1388,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1785:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1391,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "1810:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1396,
												"src": "1802:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1390,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1802:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1784:29:3"
									},
									"returnParameters": {
										"id": 1395,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1394,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1396,
												"src": "1837:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1393,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1837:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1836:9:3"
									},
									"scope": 1458,
									"src": "1766:80:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1397,
										"nodeType": "StructuredDocumentation",
										"src": "1852:188:3",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\n Requirements:\n - `accounts` and `ids` must have the same length."
									},
									"functionSelector": "4e1273f4",
									"id": 1409,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOfBatch",
									"nameLocation": "2054:14:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1404,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1400,
												"mutability": "mutable",
												"name": "accounts",
												"nameLocation": "2097:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1409,
												"src": "2078:27:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1398,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2078:7:3",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1399,
													"nodeType": "ArrayTypeName",
													"src": "2078:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1403,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "2134:3:3",
												"nodeType": "VariableDeclaration",
												"scope": 1409,
												"src": "2115:22:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1401,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2115:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1402,
													"nodeType": "ArrayTypeName",
													"src": "2115:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2068:75:3"
									},
									"returnParameters": {
										"id": 1408,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1407,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1409,
												"src": "2167:16:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1405,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2167:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1406,
													"nodeType": "ArrayTypeName",
													"src": "2167:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2166:18:3"
									},
									"scope": 1458,
									"src": "2045:140:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1410,
										"nodeType": "StructuredDocumentation",
										"src": "2191:248:3",
										"text": " @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\n Emits an {ApprovalForAll} event.\n Requirements:\n - `operator` cannot be the caller."
									},
									"functionSelector": "a22cb465",
									"id": 1417,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "2453:17:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1415,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1412,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "2479:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1417,
												"src": "2471:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1411,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2471:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1414,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "2494:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1417,
												"src": "2489:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1413,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2489:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2470:33:3"
									},
									"returnParameters": {
										"id": 1416,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2512:0:3"
									},
									"scope": 1458,
									"src": "2444:69:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1418,
										"nodeType": "StructuredDocumentation",
										"src": "2519:135:3",
										"text": " @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\n See {setApprovalForAll}."
									},
									"functionSelector": "e985e9c5",
									"id": 1427,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "2668:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1423,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1420,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2693:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1427,
												"src": "2685:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1419,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2685:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1422,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "2710:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1427,
												"src": "2702:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1421,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2702:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2684:35:3"
									},
									"returnParameters": {
										"id": 1426,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1425,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1427,
												"src": "2743:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1424,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2743:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2742:6:3"
									},
									"scope": 1458,
									"src": "2659:90:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1428,
										"nodeType": "StructuredDocumentation",
										"src": "2755:910:3",
										"text": " @dev Transfers a `value` amount of tokens of type `id` from `from` to `to`.\n WARNING: This function can potentially allow a reentrancy attack when transferring tokens\n to an untrusted contract, when invoking {onERC1155Received} on the receiver.\n Ensure to follow the checks-effects-interactions pattern and consider employing\n reentrancy guards when interacting with untrusted contracts.\n Emits a {TransferSingle} event.\n Requirements:\n - `to` cannot be the zero address.\n - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}.\n - `from` must have a balance of tokens of type `id` of at least `value` amount.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."
									},
									"functionSelector": "f242432a",
									"id": 1441,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "3679:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1439,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1430,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3704:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1441,
												"src": "3696:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1429,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3696:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1432,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3718:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1441,
												"src": "3710:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1431,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3710:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1434,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "3730:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1441,
												"src": "3722:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1433,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3722:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1436,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3742:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1441,
												"src": "3734:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1435,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3734:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1438,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3764:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1441,
												"src": "3749:19:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1437,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3749:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3695:74:3"
									},
									"returnParameters": {
										"id": 1440,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3778:0:3"
									},
									"scope": 1458,
									"src": "3670:109:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1442,
										"nodeType": "StructuredDocumentation",
										"src": "3785:744:3",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\n WARNING: This function can potentially allow a reentrancy attack when transferring tokens\n to an untrusted contract, when invoking {onERC1155BatchReceived} on the receiver.\n Ensure to follow the checks-effects-interactions pattern and consider employing\n reentrancy guards when interacting with untrusted contracts.\n Emits a {TransferBatch} event.\n Requirements:\n - `ids` and `values` must have the same length.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n acceptance magic value."
									},
									"functionSelector": "2eb2c2d6",
									"id": 1457,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeBatchTransferFrom",
									"nameLocation": "4543:21:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1455,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1444,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4582:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1457,
												"src": "4574:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1443,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4574:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1446,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4604:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1457,
												"src": "4596:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1445,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4596:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1449,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "4635:3:3",
												"nodeType": "VariableDeclaration",
												"scope": 1457,
												"src": "4616:22:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1447,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "4616:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1448,
													"nodeType": "ArrayTypeName",
													"src": "4616:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1452,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "4667:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 1457,
												"src": "4648:25:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1450,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "4648:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1451,
													"nodeType": "ArrayTypeName",
													"src": "4648:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1454,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4698:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1457,
												"src": "4683:19:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1453,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4683:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4564:144:3"
									},
									"returnParameters": {
										"id": 1456,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4717:0:3"
									},
									"scope": 1458,
									"src": "4534:184:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1459,
							"src": "336:4384:3",
							"usedErrors": [],
							"usedEvents": [
								1355,
								1370,
								1379,
								1386
							]
						}
					],
					"src": "110:4611:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol",
					"exportedSymbols": {
						"IERC1155Receiver": [
							1500
						],
						"IERC165": [
							2119
						]
					},
					"id": 1501,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1460,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "118:24:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../../utils/introspection/IERC165.sol",
							"id": 1462,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1501,
							"sourceUnit": 2120,
							"src": "144:62:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1461,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2119,
										"src": "152:7:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1464,
										"name": "IERC165",
										"nameLocations": [
											"357:7:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2119,
										"src": "357:7:4"
									},
									"id": 1465,
									"nodeType": "InheritanceSpecifier",
									"src": "357:7:4"
								}
							],
							"canonicalName": "IERC1155Receiver",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1463,
								"nodeType": "StructuredDocumentation",
								"src": "208:118:4",
								"text": " @dev Interface that must be implemented by smart contracts in order to receive\n ERC-1155 token transfers."
							},
							"fullyImplemented": false,
							"id": 1500,
							"linearizedBaseContracts": [
								1500,
								2119
							],
							"name": "IERC1155Receiver",
							"nameLocation": "337:16:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1466,
										"nodeType": "StructuredDocumentation",
										"src": "371:826:4",
										"text": " @dev Handles the receipt of a single ERC1155 token type. This function is\n called at the end of a `safeTransferFrom` after the balance has been updated.\n NOTE: To accept the transfer, this must return\n `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))`\n (i.e. 0xf23a6e61, or its own function selector).\n @param operator The address which initiated the transfer (i.e. msg.sender)\n @param from The address which previously owned the token\n @param id The ID of the token being transferred\n @param value The amount of tokens being transferred\n @param data Additional data with no specified format\n @return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed"
									},
									"functionSelector": "f23a6e61",
									"id": 1481,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC1155Received",
									"nameLocation": "1211:17:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1477,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1468,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "1246:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1481,
												"src": "1238:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1467,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1238:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1470,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1272:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1481,
												"src": "1264:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1469,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1264:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1472,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "1294:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1481,
												"src": "1286:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1471,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1286:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1474,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1314:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1481,
												"src": "1306:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1473,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1306:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1476,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1344:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1481,
												"src": "1329:19:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1475,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1329:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1228:126:4"
									},
									"returnParameters": {
										"id": 1480,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1479,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1481,
												"src": "1373:6:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1478,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1373:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1372:8:4"
									},
									"scope": 1500,
									"src": "1202:179:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1482,
										"nodeType": "StructuredDocumentation",
										"src": "1387:994:4",
										"text": " @dev Handles the receipt of a multiple ERC1155 token types. This function\n is called at the end of a `safeBatchTransferFrom` after the balances have\n been updated.\n NOTE: To accept the transfer(s), this must return\n `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))`\n (i.e. 0xbc197c81, or its own function selector).\n @param operator The address which initiated the batch transfer (i.e. msg.sender)\n @param from The address which previously owned the token\n @param ids An array containing ids of each token being transferred (order and length must match values array)\n @param values An array containing amounts of each token being transferred (order and length must match ids array)\n @param data Additional data with no specified format\n @return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed"
									},
									"functionSelector": "bc197c81",
									"id": 1499,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC1155BatchReceived",
									"nameLocation": "2395:22:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1495,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1484,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "2435:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1499,
												"src": "2427:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1483,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2427:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1486,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2461:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1499,
												"src": "2453:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1485,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2453:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1489,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "2494:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 1499,
												"src": "2475:22:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1487,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2475:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1488,
													"nodeType": "ArrayTypeName",
													"src": "2475:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1492,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "2526:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1499,
												"src": "2507:25:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1490,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2507:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1491,
													"nodeType": "ArrayTypeName",
													"src": "2507:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1494,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2557:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1499,
												"src": "2542:19:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1493,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2542:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2417:150:4"
									},
									"returnParameters": {
										"id": 1498,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1497,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1499,
												"src": "2586:6:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1496,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "2586:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2585:8:4"
									},
									"scope": 1500,
									"src": "2386:208:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1501,
							"src": "327:2269:4",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "118:2479:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol",
					"exportedSymbols": {
						"ERC1155": [
							1335
						],
						"ERC1155Burnable": [
							1580
						]
					},
					"id": 1581,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1502,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "128:24:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol",
							"file": "../ERC1155.sol",
							"id": 1504,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1581,
							"sourceUnit": 1336,
							"src": "154:39:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1503,
										"name": "ERC1155",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1335,
										"src": "162:7:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1506,
										"name": "ERC1155",
										"nameLocations": [
											"380:7:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1335,
										"src": "380:7:5"
									},
									"id": 1507,
									"nodeType": "InheritanceSpecifier",
									"src": "380:7:5"
								}
							],
							"canonicalName": "ERC1155Burnable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1505,
								"nodeType": "StructuredDocumentation",
								"src": "195:147:5",
								"text": " @dev Extension of {ERC1155} that allows token holders to destroy both their\n own tokens and those that they have been approved to use."
							},
							"fullyImplemented": true,
							"id": 1580,
							"linearizedBaseContracts": [
								1580,
								1335,
								284,
								1768,
								1458,
								2107,
								2119,
								1973
							],
							"name": "ERC1155Burnable",
							"nameLocation": "361:15:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1541,
										"nodeType": "Block",
										"src": "467:208:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1526,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 1519,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1516,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1509,
															"src": "481:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1517,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1963,
																"src": "492:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1518,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "492:12:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "481:23:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 1525,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "508:40:5",
														"subExpression": {
															"arguments": [
																{
																	"id": 1521,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1509,
																	"src": "526:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 1522,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1963,
																		"src": "535:10:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 1523,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "535:12:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1520,
																"name": "isApprovedForAll",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 507,
																"src": "509:16:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address,address) view returns (bool)"
																}
															},
															"id": 1524,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "509:39:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "481:67:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1534,
												"nodeType": "IfStatement",
												"src": "477:156:5",
												"trueBody": {
													"id": 1533,
													"nodeType": "Block",
													"src": "550:83:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 1528,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1963,
																			"src": "600:10:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 1529,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "600:12:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1530,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1509,
																		"src": "614:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1527,
																	"name": "ERC1155MissingApprovalForAll",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 266,
																	"src": "571:28:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (address,address) pure"
																	}
																},
																"id": 1531,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "571:51:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1532,
															"nodeType": "RevertStatement",
															"src": "564:58:5"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1536,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1509,
															"src": "649:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1537,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1511,
															"src": "658:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1538,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1513,
															"src": "662:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1535,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1101,
														"src": "643:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 1539,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "643:25:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1540,
												"nodeType": "ExpressionStatement",
												"src": "643:25:5"
											}
										]
									},
									"functionSelector": "f5298aca",
									"id": 1542,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nameLocation": "403:4:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1514,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1509,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "416:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1542,
												"src": "408:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1508,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "408:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1511,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "433:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1542,
												"src": "425:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1510,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "425:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1513,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "445:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1542,
												"src": "437:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1512,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "437:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "407:44:5"
									},
									"returnParameters": {
										"id": 1515,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "467:0:5"
									},
									"scope": 1580,
									"src": "394:281:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1578,
										"nodeType": "Block",
										"src": "779:215:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1563,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 1556,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1553,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1544,
															"src": "793:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1554,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1963,
																"src": "804:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1555,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "804:12:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "793:23:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 1562,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "820:40:5",
														"subExpression": {
															"arguments": [
																{
																	"id": 1558,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1544,
																	"src": "838:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 1559,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1963,
																		"src": "847:10:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 1560,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "847:12:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1557,
																"name": "isApprovedForAll",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 507,
																"src": "821:16:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address,address) view returns (bool)"
																}
															},
															"id": 1561,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "821:39:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "793:67:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1571,
												"nodeType": "IfStatement",
												"src": "789:156:5",
												"trueBody": {
													"id": 1570,
													"nodeType": "Block",
													"src": "862:83:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 1565,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1963,
																			"src": "912:10:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 1566,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "912:12:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1567,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1544,
																		"src": "926:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1564,
																	"name": "ERC1155MissingApprovalForAll",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 266,
																	"src": "883:28:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (address,address) pure"
																	}
																},
																"id": 1568,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "883:51:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1569,
															"nodeType": "RevertStatement",
															"src": "876:58:5"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1573,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1544,
															"src": "966:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1574,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1547,
															"src": "975:3:5",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 1575,
															"name": "values",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1550,
															"src": "980:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														],
														"id": 1572,
														"name": "_burnBatch",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1140,
														"src": "955:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
															"typeString": "function (address,uint256[] memory,uint256[] memory)"
														}
													},
													"id": 1576,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "955:32:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1577,
												"nodeType": "ExpressionStatement",
												"src": "955:32:5"
											}
										]
									},
									"functionSelector": "6b20c454",
									"id": 1579,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "burnBatch",
									"nameLocation": "690:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1551,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1544,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "708:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1579,
												"src": "700:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1543,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "700:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1547,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "734:3:5",
												"nodeType": "VariableDeclaration",
												"scope": 1579,
												"src": "717:20:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1545,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "717:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1546,
													"nodeType": "ArrayTypeName",
													"src": "717:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1550,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "756:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1579,
												"src": "739:23:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1548,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "739:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1549,
													"nodeType": "ArrayTypeName",
													"src": "739:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "699:64:5"
									},
									"returnParameters": {
										"id": 1552,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "779:0:5"
									},
									"scope": 1580,
									"src": "681:313:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 1581,
							"src": "343:653:5",
							"usedErrors": [
								249,
								254,
								259,
								266,
								271,
								276,
								283
							],
							"usedEvents": [
								1355,
								1370,
								1379,
								1386
							]
						}
					],
					"src": "128:869:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol",
					"exportedSymbols": {
						"ERC1155": [
							1335
						],
						"ERC1155Supply": [
							1752
						]
					},
					"id": 1753,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1582,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "126:24:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol",
							"file": "../ERC1155.sol",
							"id": 1584,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1753,
							"sourceUnit": 1336,
							"src": "152:39:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1583,
										"name": "ERC1155",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1335,
										"src": "160:7:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1586,
										"name": "ERC1155",
										"nameLocations": [
											"780:7:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1335,
										"src": "780:7:6"
									},
									"id": 1587,
									"nodeType": "InheritanceSpecifier",
									"src": "780:7:6"
								}
							],
							"canonicalName": "ERC1155Supply",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1585,
								"nodeType": "StructuredDocumentation",
								"src": "193:551:6",
								"text": " @dev Extension of ERC1155 that adds tracking of total supply per id.\n Useful for scenarios where Fungible and Non-fungible tokens have to be\n clearly identified. Note: While a totalSupply of 1 might mean the\n corresponding is an NFT, there is no guarantees that no other token with the\n same id are not going to be minted.\n NOTE: This contract implies a global limit of 2**256 - 1 to the number of tokens\n that can be minted.\n CAUTION: This extension should not be added in an upgrade to an already deployed contract."
							},
							"fullyImplemented": true,
							"id": 1752,
							"linearizedBaseContracts": [
								1752,
								1335,
								284,
								1768,
								1458,
								2107,
								2119,
								1973
							],
							"name": "ERC1155Supply",
							"nameLocation": "763:13:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 1591,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "833:12:6",
									"nodeType": "VariableDeclaration",
									"scope": 1752,
									"src": "794:51:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
										"typeString": "mapping(uint256 => uint256)"
									},
									"typeName": {
										"id": 1590,
										"keyName": "id",
										"keyNameLocation": "810:2:6",
										"keyType": {
											"id": 1588,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "802:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "794:30:6",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
											"typeString": "mapping(uint256 => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1589,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "816:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1593,
									"mutability": "mutable",
									"name": "_totalSupplyAll",
									"nameLocation": "867:15:6",
									"nodeType": "VariableDeclaration",
									"scope": 1752,
									"src": "851:31:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1592,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "851:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 1605,
										"nodeType": "Block",
										"src": "1030:40:6",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 1601,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1591,
														"src": "1047:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
															"typeString": "mapping(uint256 => uint256)"
														}
													},
													"id": 1603,
													"indexExpression": {
														"id": 1602,
														"name": "id",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1596,
														"src": "1060:2:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1047:16:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1600,
												"id": 1604,
												"nodeType": "Return",
												"src": "1040:23:6"
											}
										]
									},
									"documentation": {
										"id": 1594,
										"nodeType": "StructuredDocumentation",
										"src": "889:65:6",
										"text": " @dev Total value of tokens in with a given id."
									},
									"functionSelector": "bd85b039",
									"id": 1606,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "968:11:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1597,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1596,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "988:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1606,
												"src": "980:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1595,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "980:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "979:12:6"
									},
									"returnParameters": {
										"id": 1600,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1599,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1606,
												"src": "1021:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1598,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1021:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1020:9:6"
									},
									"scope": 1752,
									"src": "959:111:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1614,
										"nodeType": "Block",
										"src": "1188:39:6",
										"statements": [
											{
												"expression": {
													"id": 1612,
													"name": "_totalSupplyAll",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1593,
													"src": "1205:15:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1611,
												"id": 1613,
												"nodeType": "Return",
												"src": "1198:22:6"
											}
										]
									},
									"documentation": {
										"id": 1607,
										"nodeType": "StructuredDocumentation",
										"src": "1076:46:6",
										"text": " @dev Total value of tokens."
									},
									"functionSelector": "18160ddd",
									"id": 1615,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "1136:11:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1608,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1147:2:6"
									},
									"returnParameters": {
										"id": 1611,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1610,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1615,
												"src": "1179:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1609,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1179:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1178:9:6"
									},
									"scope": 1752,
									"src": "1127:100:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1629,
										"nodeType": "Block",
										"src": "1383:43:6",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1627,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 1624,
																"name": "id",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1618,
																"src": "1412:2:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 1623,
															"name": "totalSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [
																1606,
																1615
															],
															"referencedDeclaration": 1606,
															"src": "1400:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
																"typeString": "function (uint256) view returns (uint256)"
															}
														},
														"id": 1625,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1400:15:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1626,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1418:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1400:19:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1622,
												"id": 1628,
												"nodeType": "Return",
												"src": "1393:26:6"
											}
										]
									},
									"documentation": {
										"id": 1616,
										"nodeType": "StructuredDocumentation",
										"src": "1233:82:6",
										"text": " @dev Indicates whether any token exist with a given id, or not."
									},
									"functionSelector": "4f558e79",
									"id": 1630,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "exists",
									"nameLocation": "1329:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1619,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1618,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "1344:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1630,
												"src": "1336:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1617,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1336:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1335:12:6"
									},
									"returnParameters": {
										"id": 1622,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1621,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1630,
												"src": "1377:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1620,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1377:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1376:6:6"
									},
									"scope": 1752,
									"src": "1320:106:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										750
									],
									"body": {
										"id": 1750,
										"nodeType": "Block",
										"src": "1637:1364:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1648,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1633,
															"src": "1661:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1649,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1635,
															"src": "1667:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1650,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1638,
															"src": "1671:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 1651,
															"name": "values",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1641,
															"src": "1676:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														],
														"expression": {
															"id": 1645,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "1647:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_ERC1155Supply_$1752_$",
																"typeString": "type(contract super ERC1155Supply)"
															}
														},
														"id": 1647,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1653:7:6",
														"memberName": "_update",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 750,
														"src": "1647:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256[] memory,uint256[] memory)"
														}
													},
													"id": 1652,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1647:36:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1653,
												"nodeType": "ExpressionStatement",
												"src": "1647:36:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1659,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1654,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1633,
														"src": "1698:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1657,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1714:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1656,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1706:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1655,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1706:7:6",
																"typeDescriptions": {}
															}
														},
														"id": 1658,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1706:10:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1698:18:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1700,
												"nodeType": "IfStatement",
												"src": "1694:533:6",
												"trueBody": {
													"id": 1699,
													"nodeType": "Block",
													"src": "1718:509:6",
													"statements": [
														{
															"assignments": [
																1661
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1661,
																	"mutability": "mutable",
																	"name": "totalMintValue",
																	"nameLocation": "1740:14:6",
																	"nodeType": "VariableDeclaration",
																	"scope": 1699,
																	"src": "1732:22:6",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1660,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "1732:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1663,
															"initialValue": {
																"hexValue": "30",
																"id": 1662,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1757:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "1732:26:6"
														},
														{
															"body": {
																"id": 1693,
																"nodeType": "Block",
																"src": "1813:252:6",
																"statements": [
																	{
																		"assignments": [
																			1676
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 1676,
																				"mutability": "mutable",
																				"name": "value",
																				"nameLocation": "1839:5:6",
																				"nodeType": "VariableDeclaration",
																				"scope": 1693,
																				"src": "1831:13:6",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 1675,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "1831:7:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 1680,
																		"initialValue": {
																			"baseExpression": {
																				"id": 1677,
																				"name": "values",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1641,
																				"src": "1847:6:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																					"typeString": "uint256[] memory"
																				}
																			},
																			"id": 1679,
																			"indexExpression": {
																				"id": 1678,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1665,
																				"src": "1854:1:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "1847:9:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "1831:25:6"
																	},
																	{
																		"expression": {
																			"id": 1687,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"baseExpression": {
																					"id": 1681,
																					"name": "_totalSupply",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1591,
																					"src": "1980:12:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																						"typeString": "mapping(uint256 => uint256)"
																					}
																				},
																				"id": 1685,
																				"indexExpression": {
																					"baseExpression": {
																						"id": 1682,
																						"name": "ids",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1638,
																						"src": "1993:3:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																							"typeString": "uint256[] memory"
																						}
																					},
																					"id": 1684,
																					"indexExpression": {
																						"id": 1683,
																						"name": "i",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1665,
																						"src": "1997:1:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "1993:6:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "1980:20:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "+=",
																			"rightHandSide": {
																				"id": 1686,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1676,
																				"src": "2004:5:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "1980:29:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1688,
																		"nodeType": "ExpressionStatement",
																		"src": "1980:29:6"
																	},
																	{
																		"expression": {
																			"id": 1691,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 1689,
																				"name": "totalMintValue",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1661,
																				"src": "2027:14:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "+=",
																			"rightHandSide": {
																				"id": 1690,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1676,
																				"src": "2045:5:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "2027:23:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1692,
																		"nodeType": "ExpressionStatement",
																		"src": "2027:23:6"
																	}
																]
															},
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1671,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1668,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1665,
																	"src": "1792:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"expression": {
																		"id": 1669,
																		"name": "ids",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1638,
																		"src": "1796:3:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 1670,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1800:6:6",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "1796:10:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1792:14:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1694,
															"initializationExpression": {
																"assignments": [
																	1665
																],
																"declarations": [
																	{
																		"constant": false,
																		"id": 1665,
																		"mutability": "mutable",
																		"name": "i",
																		"nameLocation": "1785:1:6",
																		"nodeType": "VariableDeclaration",
																		"scope": 1694,
																		"src": "1777:9:6",
																		"stateVariable": false,
																		"storageLocation": "default",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"typeName": {
																			"id": 1664,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "1777:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"visibility": "internal"
																	}
																],
																"id": 1667,
																"initialValue": {
																	"hexValue": "30",
																	"id": 1666,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1789:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"nodeType": "VariableDeclarationStatement",
																"src": "1777:13:6"
															},
															"loopExpression": {
																"expression": {
																	"id": 1673,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "++",
																	"prefix": true,
																	"src": "1808:3:6",
																	"subExpression": {
																		"id": 1672,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1665,
																		"src": "1810:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1674,
																"nodeType": "ExpressionStatement",
																"src": "1808:3:6"
															},
															"nodeType": "ForStatement",
															"src": "1772:293:6"
														},
														{
															"expression": {
																"id": 1697,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1695,
																	"name": "_totalSupplyAll",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1593,
																	"src": "2183:15:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 1696,
																	"name": "totalMintValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1661,
																	"src": "2202:14:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2183:33:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1698,
															"nodeType": "ExpressionStatement",
															"src": "2183:33:6"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1706,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1701,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1635,
														"src": "2241:2:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1704,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2255:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1703,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2247:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1702,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2247:7:6",
																"typeDescriptions": {}
															}
														},
														"id": 1705,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2247:10:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2241:16:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1749,
												"nodeType": "IfStatement",
												"src": "2237:758:6",
												"trueBody": {
													"id": 1748,
													"nodeType": "Block",
													"src": "2259:736:6",
													"statements": [
														{
															"assignments": [
																1708
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1708,
																	"mutability": "mutable",
																	"name": "totalBurnValue",
																	"nameLocation": "2281:14:6",
																	"nodeType": "VariableDeclaration",
																	"scope": 1748,
																	"src": "2273:22:6",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1707,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "2273:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1710,
															"initialValue": {
																"hexValue": "30",
																"id": 1709,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2298:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "2273:26:6"
														},
														{
															"body": {
																"id": 1741,
																"nodeType": "Block",
																"src": "2354:418:6",
																"statements": [
																	{
																		"assignments": [
																			1723
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 1723,
																				"mutability": "mutable",
																				"name": "value",
																				"nameLocation": "2380:5:6",
																				"nodeType": "VariableDeclaration",
																				"scope": 1741,
																				"src": "2372:13:6",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 1722,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "2372:7:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 1727,
																		"initialValue": {
																			"baseExpression": {
																				"id": 1724,
																				"name": "values",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1641,
																				"src": "2388:6:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																					"typeString": "uint256[] memory"
																				}
																			},
																			"id": 1726,
																			"indexExpression": {
																				"id": 1725,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1712,
																				"src": "2395:1:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "2388:9:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "2372:25:6"
																	},
																	{
																		"id": 1740,
																		"nodeType": "UncheckedBlock",
																		"src": "2416:342:6",
																		"statements": [
																			{
																				"expression": {
																					"id": 1734,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftHandSide": {
																						"baseExpression": {
																							"id": 1728,
																							"name": "_totalSupply",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1591,
																							"src": "2554:12:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																								"typeString": "mapping(uint256 => uint256)"
																							}
																						},
																						"id": 1732,
																						"indexExpression": {
																							"baseExpression": {
																								"id": 1729,
																								"name": "ids",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1638,
																								"src": "2567:3:6",
																								"typeDescriptions": {
																									"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																									"typeString": "uint256[] memory"
																								}
																							},
																							"id": 1731,
																							"indexExpression": {
																								"id": 1730,
																								"name": "i",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1712,
																								"src": "2571:1:6",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "IndexAccess",
																							"src": "2567:6:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": true,
																						"nodeType": "IndexAccess",
																						"src": "2554:20:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "Assignment",
																					"operator": "-=",
																					"rightHandSide": {
																						"id": 1733,
																						"name": "value",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1723,
																						"src": "2578:5:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "2554:29:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 1735,
																				"nodeType": "ExpressionStatement",
																				"src": "2554:29:6"
																			},
																			{
																				"expression": {
																					"id": 1738,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftHandSide": {
																						"id": 1736,
																						"name": "totalBurnValue",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1708,
																						"src": "2716:14:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "Assignment",
																					"operator": "+=",
																					"rightHandSide": {
																						"id": 1737,
																						"name": "value",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1723,
																						"src": "2734:5:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "2716:23:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 1739,
																				"nodeType": "ExpressionStatement",
																				"src": "2716:23:6"
																			}
																		]
																	}
																]
															},
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1718,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1715,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1712,
																	"src": "2333:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"expression": {
																		"id": 1716,
																		"name": "ids",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1638,
																		"src": "2337:3:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 1717,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2341:6:6",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "2337:10:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2333:14:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1742,
															"initializationExpression": {
																"assignments": [
																	1712
																],
																"declarations": [
																	{
																		"constant": false,
																		"id": 1712,
																		"mutability": "mutable",
																		"name": "i",
																		"nameLocation": "2326:1:6",
																		"nodeType": "VariableDeclaration",
																		"scope": 1742,
																		"src": "2318:9:6",
																		"stateVariable": false,
																		"storageLocation": "default",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"typeName": {
																			"id": 1711,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "2318:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"visibility": "internal"
																	}
																],
																"id": 1714,
																"initialValue": {
																	"hexValue": "30",
																	"id": 1713,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2330:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"nodeType": "VariableDeclarationStatement",
																"src": "2318:13:6"
															},
															"loopExpression": {
																"expression": {
																	"id": 1720,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "++",
																	"prefix": true,
																	"src": "2349:3:6",
																	"subExpression": {
																		"id": 1719,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1712,
																		"src": "2351:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1721,
																"nodeType": "ExpressionStatement",
																"src": "2349:3:6"
															},
															"nodeType": "ForStatement",
															"src": "2313:459:6"
														},
														{
															"id": 1747,
															"nodeType": "UncheckedBlock",
															"src": "2785:200:6",
															"statements": [
																{
																	"expression": {
																		"id": 1745,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1743,
																			"name": "_totalSupplyAll",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1593,
																			"src": "2937:15:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 1744,
																			"name": "totalBurnValue",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1708,
																			"src": "2956:14:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "2937:33:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1746,
																	"nodeType": "ExpressionStatement",
																	"src": "2937:33:6"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1631,
										"nodeType": "StructuredDocumentation",
										"src": "1432:46:6",
										"text": " @dev See {ERC1155-_update}."
									},
									"id": 1751,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "1492:7:6",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1643,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1628:8:6"
									},
									"parameters": {
										"id": 1642,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1633,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1517:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1751,
												"src": "1509:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1632,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1509:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1635,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1539:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1751,
												"src": "1531:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1634,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1531:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1638,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "1568:3:6",
												"nodeType": "VariableDeclaration",
												"scope": 1751,
												"src": "1551:20:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1636,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "1551:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1637,
													"nodeType": "ArrayTypeName",
													"src": "1551:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1641,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "1598:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1751,
												"src": "1581:23:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1639,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "1581:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1640,
													"nodeType": "ArrayTypeName",
													"src": "1581:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1499:111:6"
									},
									"returnParameters": {
										"id": 1644,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1637:0:6"
									},
									"scope": 1752,
									"src": "1483:1518:6",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1753,
							"src": "745:2258:6",
							"usedErrors": [
								249,
								254,
								259,
								266,
								271,
								276,
								283
							],
							"usedEvents": [
								1355,
								1370,
								1379,
								1386
							]
						}
					],
					"src": "126:2878:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol",
					"exportedSymbols": {
						"IERC1155": [
							1458
						],
						"IERC1155MetadataURI": [
							1768
						]
					},
					"id": 1769,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1754,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "132:24:7"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC1155/IERC1155.sol",
							"file": "../IERC1155.sol",
							"id": 1756,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1769,
							"sourceUnit": 1459,
							"src": "158:41:7",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1755,
										"name": "IERC1155",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1458,
										"src": "166:8:7",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1758,
										"name": "IERC1155",
										"nameLocations": [
											"399:8:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1458,
										"src": "399:8:7"
									},
									"id": 1759,
									"nodeType": "InheritanceSpecifier",
									"src": "399:8:7"
								}
							],
							"canonicalName": "IERC1155MetadataURI",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1757,
								"nodeType": "StructuredDocumentation",
								"src": "201:164:7",
								"text": " @dev Interface of the optional ERC1155MetadataExtension interface, as defined\n in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[EIP]."
							},
							"fullyImplemented": false,
							"id": 1768,
							"linearizedBaseContracts": [
								1768,
								1458,
								2119
							],
							"name": "IERC1155MetadataURI",
							"nameLocation": "376:19:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1760,
										"nodeType": "StructuredDocumentation",
										"src": "414:192:7",
										"text": " @dev Returns the URI for token type `id`.\n If the `\\{id\\}` substring is present in the URI, it must be replaced by\n clients with the actual token type ID."
									},
									"functionSelector": "0e89341c",
									"id": 1767,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "uri",
									"nameLocation": "620:3:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1763,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1762,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "632:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 1767,
												"src": "624:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1761,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "624:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "623:12:7"
									},
									"returnParameters": {
										"id": 1766,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1765,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1767,
												"src": "659:13:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1764,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "659:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "658:15:7"
									},
									"scope": 1768,
									"src": "611:63:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1769,
							"src": "366:310:7",
							"usedErrors": [],
							"usedEvents": [
								1355,
								1370,
								1379,
								1386
							]
						}
					],
					"src": "132:545:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts/utils/Arrays.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Arrays.sol",
					"exportedSymbols": {
						"Arrays": [
							1951
						],
						"Math": [
							3173
						],
						"StorageSlot": [
							2083
						]
					},
					"id": 1952,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1770,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "100:24:8"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/StorageSlot.sol",
							"file": "./StorageSlot.sol",
							"id": 1772,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1952,
							"sourceUnit": 2084,
							"src": "126:46:8",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1771,
										"name": "StorageSlot",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2083,
										"src": "134:11:8",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/Math.sol",
							"file": "./math/Math.sol",
							"id": 1774,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1952,
							"sourceUnit": 3174,
							"src": "173:37:8",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1773,
										"name": "Math",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 3173,
										"src": "181:4:8",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Arrays",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1775,
								"nodeType": "StructuredDocumentation",
								"src": "212:63:8",
								"text": " @dev Collection of functions related to array types."
							},
							"fullyImplemented": true,
							"id": 1951,
							"linearizedBaseContracts": [
								1951
							],
							"name": "Arrays",
							"nameLocation": "284:6:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 1778,
									"libraryName": {
										"id": 1776,
										"name": "StorageSlot",
										"nameLocations": [
											"303:11:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2083,
										"src": "303:11:8"
									},
									"nodeType": "UsingForDirective",
									"src": "297:30:8",
									"typeName": {
										"id": 1777,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "319:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									}
								},
								{
									"body": {
										"id": 1860,
										"nodeType": "Block",
										"src": "843:834:8",
										"statements": [
											{
												"assignments": [
													1790
												],
												"declarations": [
													{
														"constant": false,
														"id": 1790,
														"mutability": "mutable",
														"name": "low",
														"nameLocation": "861:3:8",
														"nodeType": "VariableDeclaration",
														"scope": 1860,
														"src": "853:11:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1789,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "853:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1792,
												"initialValue": {
													"hexValue": "30",
													"id": 1791,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "867:1:8",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "853:15:8"
											},
											{
												"assignments": [
													1794
												],
												"declarations": [
													{
														"constant": false,
														"id": 1794,
														"mutability": "mutable",
														"name": "high",
														"nameLocation": "886:4:8",
														"nodeType": "VariableDeclaration",
														"scope": 1860,
														"src": "878:12:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1793,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "878:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1797,
												"initialValue": {
													"expression": {
														"id": 1795,
														"name": "array",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1782,
														"src": "893:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
															"typeString": "uint256[] storage pointer"
														}
													},
													"id": 1796,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "899:6:8",
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "893:12:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "878:27:8"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1800,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1798,
														"name": "high",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1794,
														"src": "920:4:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1799,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "928:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "920:9:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1804,
												"nodeType": "IfStatement",
												"src": "916:48:8",
												"trueBody": {
													"id": 1803,
													"nodeType": "Block",
													"src": "931:33:8",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 1801,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "952:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 1788,
															"id": 1802,
															"nodeType": "Return",
															"src": "945:8:8"
														}
													]
												}
											},
											{
												"body": {
													"id": 1836,
													"nodeType": "Block",
													"src": "993:423:8",
													"statements": [
														{
															"assignments": [
																1809
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1809,
																	"mutability": "mutable",
																	"name": "mid",
																	"nameLocation": "1015:3:8",
																	"nodeType": "VariableDeclaration",
																	"scope": 1836,
																	"src": "1007:11:8",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1808,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "1007:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1815,
															"initialValue": {
																"arguments": [
																	{
																		"id": 1812,
																		"name": "low",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1790,
																		"src": "1034:3:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1813,
																		"name": "high",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1794,
																		"src": "1039:4:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1810,
																		"name": "Math",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3173,
																		"src": "1021:4:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Math_$3173_$",
																			"typeString": "type(library Math)"
																		}
																	},
																	"id": 1811,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1026:7:8",
																	"memberName": "average",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2347,
																	"src": "1021:12:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1814,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1021:23:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "1007:37:8"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1822,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"arguments": [
																			{
																				"id": 1817,
																				"name": "array",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1782,
																				"src": "1282:5:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																					"typeString": "uint256[] storage pointer"
																				}
																			},
																			{
																				"id": 1818,
																				"name": "mid",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1809,
																				"src": "1289:3:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																					"typeString": "uint256[] storage pointer"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 1816,
																			"name": "unsafeAccess",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				1882,
																				1903,
																				1924
																			],
																			"referencedDeclaration": 1924,
																			"src": "1269:12:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Uint256Slot_$1988_storage_ptr_$",
																				"typeString": "function (uint256[] storage pointer,uint256) pure returns (struct StorageSlot.Uint256Slot storage pointer)"
																			}
																		},
																		"id": 1819,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1269:24:8",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Uint256Slot_$1988_storage_ptr",
																			"typeString": "struct StorageSlot.Uint256Slot storage pointer"
																		}
																	},
																	"id": 1820,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1294:5:8",
																	"memberName": "value",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1987,
																	"src": "1269:30:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"id": 1821,
																	"name": "element",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1784,
																	"src": "1302:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1269:40:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 1834,
																"nodeType": "Block",
																"src": "1360:46:8",
																"statements": [
																	{
																		"expression": {
																			"id": 1832,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 1828,
																				"name": "low",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1790,
																				"src": "1378:3:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1831,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1829,
																					"name": "mid",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1809,
																					"src": "1384:3:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "+",
																				"rightExpression": {
																					"hexValue": "31",
																					"id": 1830,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "1390:1:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1_by_1",
																						"typeString": "int_const 1"
																					},
																					"value": "1"
																				},
																				"src": "1384:7:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "1378:13:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1833,
																		"nodeType": "ExpressionStatement",
																		"src": "1378:13:8"
																	}
																]
															},
															"id": 1835,
															"nodeType": "IfStatement",
															"src": "1265:141:8",
															"trueBody": {
																"id": 1827,
																"nodeType": "Block",
																"src": "1311:43:8",
																"statements": [
																	{
																		"expression": {
																			"id": 1825,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 1823,
																				"name": "high",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1794,
																				"src": "1329:4:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"id": 1824,
																				"name": "mid",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1809,
																				"src": "1336:3:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "1329:10:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1826,
																		"nodeType": "ExpressionStatement",
																		"src": "1329:10:8"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1807,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1805,
														"name": "low",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1790,
														"src": "981:3:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1806,
														"name": "high",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1794,
														"src": "987:4:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "981:10:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1837,
												"nodeType": "WhileStatement",
												"src": "974:442:8"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1850,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1840,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1838,
															"name": "low",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1790,
															"src": "1533:3:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 1839,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1539:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "1533:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1849,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 1842,
																		"name": "array",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1782,
																		"src": "1557:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																			"typeString": "uint256[] storage pointer"
																		}
																	},
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1845,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1843,
																			"name": "low",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1790,
																			"src": "1564:3:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 1844,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1570:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "1564:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																			"typeString": "uint256[] storage pointer"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1841,
																	"name": "unsafeAccess",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		1882,
																		1903,
																		1924
																	],
																	"referencedDeclaration": 1924,
																	"src": "1544:12:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Uint256Slot_$1988_storage_ptr_$",
																		"typeString": "function (uint256[] storage pointer,uint256) pure returns (struct StorageSlot.Uint256Slot storage pointer)"
																	}
																},
																"id": 1846,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1544:28:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Uint256Slot_$1988_storage_ptr",
																	"typeString": "struct StorageSlot.Uint256Slot storage pointer"
																}
															},
															"id": 1847,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1573:5:8",
															"memberName": "value",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1987,
															"src": "1544:34:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"id": 1848,
															"name": "element",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1784,
															"src": "1582:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1544:45:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1533:56:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1858,
													"nodeType": "Block",
													"src": "1636:35:8",
													"statements": [
														{
															"expression": {
																"id": 1856,
																"name": "low",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1790,
																"src": "1657:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 1788,
															"id": 1857,
															"nodeType": "Return",
															"src": "1650:10:8"
														}
													]
												},
												"id": 1859,
												"nodeType": "IfStatement",
												"src": "1529:142:8",
												"trueBody": {
													"id": 1855,
													"nodeType": "Block",
													"src": "1591:39:8",
													"statements": [
														{
															"expression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1853,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1851,
																	"name": "low",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1790,
																	"src": "1612:3:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1852,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1618:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "1612:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 1788,
															"id": 1854,
															"nodeType": "Return",
															"src": "1605:14:8"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1779,
										"nodeType": "StructuredDocumentation",
										"src": "333:407:8",
										"text": " @dev Searches a sorted `array` and returns the first index that contains\n a value greater or equal to `element`. If no such index exists (i.e. all\n values in the array are strictly less than `element`), the array length is\n returned. Time complexity O(log n).\n `array` is expected to be sorted in ascending order, and to contain no\n repeated elements."
									},
									"id": 1861,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "findUpperBound",
									"nameLocation": "754:14:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1785,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1782,
												"mutability": "mutable",
												"name": "array",
												"nameLocation": "787:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1861,
												"src": "769:23:8",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1780,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "769:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1781,
													"nodeType": "ArrayTypeName",
													"src": "769:9:8",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1784,
												"mutability": "mutable",
												"name": "element",
												"nameLocation": "802:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1861,
												"src": "794:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1783,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "794:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "768:42:8"
									},
									"returnParameters": {
										"id": 1788,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1787,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1861,
												"src": "834:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1786,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "834:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "833:9:8"
									},
									"scope": 1951,
									"src": "745:932:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1881,
										"nodeType": "Block",
										"src": "1993:459:8",
										"statements": [
											{
												"assignments": [
													1874
												],
												"declarations": [
													{
														"constant": false,
														"id": 1874,
														"mutability": "mutable",
														"name": "slot",
														"nameLocation": "2011:4:8",
														"nodeType": "VariableDeclaration",
														"scope": 1881,
														"src": "2003:12:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 1873,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "2003:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1875,
												"nodeType": "VariableDeclarationStatement",
												"src": "2003:12:8"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "2316:92:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2337:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "arr.slot",
																		"nodeType": "YulIdentifier",
																		"src": "2340:8:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2330:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2330:19:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2330:19:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2362:36:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2384:1:8",
																				"type": "",
																				"value": "0"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2387:4:8",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "keccak256",
																			"nodeType": "YulIdentifier",
																			"src": "2374:9:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2374:18:8"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2394:3:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2370:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2370:28:8"
															},
															"variableNames": [
																{
																	"name": "slot",
																	"nodeType": "YulIdentifier",
																	"src": "2362:4:8"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 1865,
														"isOffset": false,
														"isSlot": true,
														"src": "2340:8:8",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1867,
														"isOffset": false,
														"isSlot": false,
														"src": "2394:3:8",
														"valueSize": 1
													},
													{
														"declaration": 1874,
														"isOffset": false,
														"isSlot": false,
														"src": "2362:4:8",
														"valueSize": 1
													}
												],
												"id": 1876,
												"nodeType": "InlineAssembly",
												"src": "2307:101:8"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1877,
															"name": "slot",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1874,
															"src": "2424:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"id": 1878,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2429:14:8",
														"memberName": "getAddressSlot",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2005,
														"src": "2424:19:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1979_storage_ptr_$attached_to$_t_bytes32_$",
															"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
														}
													},
													"id": 1879,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2424:21:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSlot_$1979_storage_ptr",
														"typeString": "struct StorageSlot.AddressSlot storage pointer"
													}
												},
												"functionReturnParameters": 1872,
												"id": 1880,
												"nodeType": "Return",
												"src": "2417:28:8"
											}
										]
									},
									"documentation": {
										"id": 1862,
										"nodeType": "StructuredDocumentation",
										"src": "1683:191:8",
										"text": " @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."
									},
									"id": 1882,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unsafeAccess",
									"nameLocation": "1888:12:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1868,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1865,
												"mutability": "mutable",
												"name": "arr",
												"nameLocation": "1919:3:8",
												"nodeType": "VariableDeclaration",
												"scope": 1882,
												"src": "1901:21:8",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1863,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "1901:7:8",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1864,
													"nodeType": "ArrayTypeName",
													"src": "1901:9:8",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1867,
												"mutability": "mutable",
												"name": "pos",
												"nameLocation": "1932:3:8",
												"nodeType": "VariableDeclaration",
												"scope": 1882,
												"src": "1924:11:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1866,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1924:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1900:36:8"
									},
									"returnParameters": {
										"id": 1872,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1871,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1882,
												"src": "1960:31:8",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSlot_$1979_storage_ptr",
													"typeString": "struct StorageSlot.AddressSlot"
												},
												"typeName": {
													"id": 1870,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1869,
														"name": "StorageSlot.AddressSlot",
														"nameLocations": [
															"1960:11:8",
															"1972:11:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1979,
														"src": "1960:23:8"
													},
													"referencedDeclaration": 1979,
													"src": "1960:23:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSlot_$1979_storage_ptr",
														"typeString": "struct StorageSlot.AddressSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1959:33:8"
									},
									"scope": 1951,
									"src": "1879:573:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1902,
										"nodeType": "Block",
										"src": "2768:459:8",
										"statements": [
											{
												"assignments": [
													1895
												],
												"declarations": [
													{
														"constant": false,
														"id": 1895,
														"mutability": "mutable",
														"name": "slot",
														"nameLocation": "2786:4:8",
														"nodeType": "VariableDeclaration",
														"scope": 1902,
														"src": "2778:12:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 1894,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "2778:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1896,
												"nodeType": "VariableDeclarationStatement",
												"src": "2778:12:8"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "3091:92:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3112:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "arr.slot",
																		"nodeType": "YulIdentifier",
																		"src": "3115:8:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3105:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3105:19:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3105:19:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3137:36:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3159:1:8",
																				"type": "",
																				"value": "0"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3162:4:8",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "keccak256",
																			"nodeType": "YulIdentifier",
																			"src": "3149:9:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3149:18:8"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3169:3:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3145:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3145:28:8"
															},
															"variableNames": [
																{
																	"name": "slot",
																	"nodeType": "YulIdentifier",
																	"src": "3137:4:8"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 1886,
														"isOffset": false,
														"isSlot": true,
														"src": "3115:8:8",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1888,
														"isOffset": false,
														"isSlot": false,
														"src": "3169:3:8",
														"valueSize": 1
													},
													{
														"declaration": 1895,
														"isOffset": false,
														"isSlot": false,
														"src": "3137:4:8",
														"valueSize": 1
													}
												],
												"id": 1897,
												"nodeType": "InlineAssembly",
												"src": "3082:101:8"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1898,
															"name": "slot",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1895,
															"src": "3199:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"id": 1899,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3204:14:8",
														"memberName": "getBytes32Slot",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2027,
														"src": "3199:19:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_Bytes32Slot_$1985_storage_ptr_$attached_to$_t_bytes32_$",
															"typeString": "function (bytes32) pure returns (struct StorageSlot.Bytes32Slot storage pointer)"
														}
													},
													"id": 1900,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3199:21:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Slot_$1985_storage_ptr",
														"typeString": "struct StorageSlot.Bytes32Slot storage pointer"
													}
												},
												"functionReturnParameters": 1893,
												"id": 1901,
												"nodeType": "Return",
												"src": "3192:28:8"
											}
										]
									},
									"documentation": {
										"id": 1883,
										"nodeType": "StructuredDocumentation",
										"src": "2458:191:8",
										"text": " @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."
									},
									"id": 1903,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unsafeAccess",
									"nameLocation": "2663:12:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1889,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1886,
												"mutability": "mutable",
												"name": "arr",
												"nameLocation": "2694:3:8",
												"nodeType": "VariableDeclaration",
												"scope": 1903,
												"src": "2676:21:8",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
													"typeString": "bytes32[]"
												},
												"typeName": {
													"baseType": {
														"id": 1884,
														"name": "bytes32",
														"nodeType": "ElementaryTypeName",
														"src": "2676:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"id": 1885,
													"nodeType": "ArrayTypeName",
													"src": "2676:9:8",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
														"typeString": "bytes32[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1888,
												"mutability": "mutable",
												"name": "pos",
												"nameLocation": "2707:3:8",
												"nodeType": "VariableDeclaration",
												"scope": 1903,
												"src": "2699:11:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1887,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2699:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2675:36:8"
									},
									"returnParameters": {
										"id": 1893,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1892,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1903,
												"src": "2735:31:8",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Slot_$1985_storage_ptr",
													"typeString": "struct StorageSlot.Bytes32Slot"
												},
												"typeName": {
													"id": 1891,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1890,
														"name": "StorageSlot.Bytes32Slot",
														"nameLocations": [
															"2735:11:8",
															"2747:11:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1985,
														"src": "2735:23:8"
													},
													"referencedDeclaration": 1985,
													"src": "2735:23:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Slot_$1985_storage_ptr",
														"typeString": "struct StorageSlot.Bytes32Slot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2734:33:8"
									},
									"scope": 1951,
									"src": "2654:573:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1923,
										"nodeType": "Block",
										"src": "3543:459:8",
										"statements": [
											{
												"assignments": [
													1916
												],
												"declarations": [
													{
														"constant": false,
														"id": 1916,
														"mutability": "mutable",
														"name": "slot",
														"nameLocation": "3561:4:8",
														"nodeType": "VariableDeclaration",
														"scope": 1923,
														"src": "3553:12:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 1915,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "3553:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1917,
												"nodeType": "VariableDeclarationStatement",
												"src": "3553:12:8"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "3866:92:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3887:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "arr.slot",
																		"nodeType": "YulIdentifier",
																		"src": "3890:8:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3880:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3880:19:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3880:19:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3912:36:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3934:1:8",
																				"type": "",
																				"value": "0"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3937:4:8",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "keccak256",
																			"nodeType": "YulIdentifier",
																			"src": "3924:9:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3924:18:8"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3944:3:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3920:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3920:28:8"
															},
															"variableNames": [
																{
																	"name": "slot",
																	"nodeType": "YulIdentifier",
																	"src": "3912:4:8"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 1907,
														"isOffset": false,
														"isSlot": true,
														"src": "3890:8:8",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1909,
														"isOffset": false,
														"isSlot": false,
														"src": "3944:3:8",
														"valueSize": 1
													},
													{
														"declaration": 1916,
														"isOffset": false,
														"isSlot": false,
														"src": "3912:4:8",
														"valueSize": 1
													}
												],
												"id": 1918,
												"nodeType": "InlineAssembly",
												"src": "3857:101:8"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1919,
															"name": "slot",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1916,
															"src": "3974:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"id": 1920,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3979:14:8",
														"memberName": "getUint256Slot",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2038,
														"src": "3974:19:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_Uint256Slot_$1988_storage_ptr_$attached_to$_t_bytes32_$",
															"typeString": "function (bytes32) pure returns (struct StorageSlot.Uint256Slot storage pointer)"
														}
													},
													"id": 1921,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3974:21:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Uint256Slot_$1988_storage_ptr",
														"typeString": "struct StorageSlot.Uint256Slot storage pointer"
													}
												},
												"functionReturnParameters": 1914,
												"id": 1922,
												"nodeType": "Return",
												"src": "3967:28:8"
											}
										]
									},
									"documentation": {
										"id": 1904,
										"nodeType": "StructuredDocumentation",
										"src": "3233:191:8",
										"text": " @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."
									},
									"id": 1924,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unsafeAccess",
									"nameLocation": "3438:12:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1910,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1907,
												"mutability": "mutable",
												"name": "arr",
												"nameLocation": "3469:3:8",
												"nodeType": "VariableDeclaration",
												"scope": 1924,
												"src": "3451:21:8",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1905,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "3451:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1906,
													"nodeType": "ArrayTypeName",
													"src": "3451:9:8",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1909,
												"mutability": "mutable",
												"name": "pos",
												"nameLocation": "3482:3:8",
												"nodeType": "VariableDeclaration",
												"scope": 1924,
												"src": "3474:11:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1908,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3474:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3450:36:8"
									},
									"returnParameters": {
										"id": 1914,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1913,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1924,
												"src": "3510:31:8",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Uint256Slot_$1988_storage_ptr",
													"typeString": "struct StorageSlot.Uint256Slot"
												},
												"typeName": {
													"id": 1912,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1911,
														"name": "StorageSlot.Uint256Slot",
														"nameLocations": [
															"3510:11:8",
															"3522:11:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1988,
														"src": "3510:23:8"
													},
													"referencedDeclaration": 1988,
													"src": "3510:23:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Uint256Slot_$1988_storage_ptr",
														"typeString": "struct StorageSlot.Uint256Slot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3509:33:8"
									},
									"scope": 1951,
									"src": "3429:573:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1936,
										"nodeType": "Block",
										"src": "4303:98:8",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "4322:73:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4336:49:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "arr",
																						"nodeType": "YulIdentifier",
																						"src": "4357:3:8"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4362:4:8",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4353:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4353:14:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "4373:3:8"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4378:4:8",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nodeType": "YulIdentifier",
																					"src": "4369:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4369:14:8"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4349:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4349:35:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "4343:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4343:42:8"
															},
															"variableNames": [
																{
																	"name": "res",
																	"nodeType": "YulIdentifier",
																	"src": "4336:3:8"
																}
															]
														}
													]
												},
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 1928,
														"isOffset": false,
														"isSlot": false,
														"src": "4357:3:8",
														"valueSize": 1
													},
													{
														"declaration": 1930,
														"isOffset": false,
														"isSlot": false,
														"src": "4373:3:8",
														"valueSize": 1
													},
													{
														"declaration": 1933,
														"isOffset": false,
														"isSlot": false,
														"src": "4336:3:8",
														"valueSize": 1
													}
												],
												"id": 1935,
												"nodeType": "InlineAssembly",
												"src": "4313:82:8"
											}
										]
									},
									"documentation": {
										"id": 1925,
										"nodeType": "StructuredDocumentation",
										"src": "4008:191:8",
										"text": " @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."
									},
									"id": 1937,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unsafeMemoryAccess",
									"nameLocation": "4213:18:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1931,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1928,
												"mutability": "mutable",
												"name": "arr",
												"nameLocation": "4249:3:8",
												"nodeType": "VariableDeclaration",
												"scope": 1937,
												"src": "4232:20:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1926,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "4232:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1927,
													"nodeType": "ArrayTypeName",
													"src": "4232:9:8",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1930,
												"mutability": "mutable",
												"name": "pos",
												"nameLocation": "4262:3:8",
												"nodeType": "VariableDeclaration",
												"scope": 1937,
												"src": "4254:11:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1929,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4254:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4231:35:8"
									},
									"returnParameters": {
										"id": 1934,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1933,
												"mutability": "mutable",
												"name": "res",
												"nameLocation": "4298:3:8",
												"nodeType": "VariableDeclaration",
												"scope": 1937,
												"src": "4290:11:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1932,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4290:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4289:13:8"
									},
									"scope": 1951,
									"src": "4204:197:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1949,
										"nodeType": "Block",
										"src": "4702:98:8",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "4721:73:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4735:49:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "arr",
																						"nodeType": "YulIdentifier",
																						"src": "4756:3:8"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4761:4:8",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4752:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4752:14:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "4772:3:8"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4777:4:8",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nodeType": "YulIdentifier",
																					"src": "4768:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4768:14:8"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4748:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4748:35:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "4742:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4742:42:8"
															},
															"variableNames": [
																{
																	"name": "res",
																	"nodeType": "YulIdentifier",
																	"src": "4735:3:8"
																}
															]
														}
													]
												},
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 1941,
														"isOffset": false,
														"isSlot": false,
														"src": "4756:3:8",
														"valueSize": 1
													},
													{
														"declaration": 1943,
														"isOffset": false,
														"isSlot": false,
														"src": "4772:3:8",
														"valueSize": 1
													},
													{
														"declaration": 1946,
														"isOffset": false,
														"isSlot": false,
														"src": "4735:3:8",
														"valueSize": 1
													}
												],
												"id": 1948,
												"nodeType": "InlineAssembly",
												"src": "4712:82:8"
											}
										]
									},
									"documentation": {
										"id": 1938,
										"nodeType": "StructuredDocumentation",
										"src": "4407:191:8",
										"text": " @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."
									},
									"id": 1950,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unsafeMemoryAccess",
									"nameLocation": "4612:18:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1944,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1941,
												"mutability": "mutable",
												"name": "arr",
												"nameLocation": "4648:3:8",
												"nodeType": "VariableDeclaration",
												"scope": 1950,
												"src": "4631:20:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1939,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "4631:7:8",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1940,
													"nodeType": "ArrayTypeName",
													"src": "4631:9:8",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1943,
												"mutability": "mutable",
												"name": "pos",
												"nameLocation": "4661:3:8",
												"nodeType": "VariableDeclaration",
												"scope": 1950,
												"src": "4653:11:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1942,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4653:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4630:35:8"
									},
									"returnParameters": {
										"id": 1947,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1946,
												"mutability": "mutable",
												"name": "res",
												"nameLocation": "4697:3:8",
												"nodeType": "VariableDeclaration",
												"scope": 1950,
												"src": "4689:11:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1945,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4689:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4688:13:8"
									},
									"scope": 1951,
									"src": "4603:197:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1952,
							"src": "276:4526:8",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "100:4703:8"
				},
				"id": 8
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							1973
						]
					},
					"id": 1974,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1953,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:9"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1954,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:9",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1973,
							"linearizedBaseContracts": [
								1973
							],
							"name": "Context",
							"nameLocation": "642:7:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1962,
										"nodeType": "Block",
										"src": "718:34:9",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1959,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:9",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1960,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:9",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1958,
												"id": 1961,
												"nodeType": "Return",
												"src": "728:17:9"
											}
										]
									},
									"id": 1963,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1955,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:9"
									},
									"returnParameters": {
										"id": 1958,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1957,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1963,
												"src": "709:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1956,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:9"
									},
									"scope": 1973,
									"src": "656:96:9",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1971,
										"nodeType": "Block",
										"src": "825:32:9",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1968,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:9",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1969,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:9",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1967,
												"id": 1970,
												"nodeType": "Return",
												"src": "835:15:9"
											}
										]
									},
									"id": 1972,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1964,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:9"
									},
									"returnParameters": {
										"id": 1967,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1966,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1972,
												"src": "809:14:9",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1965,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:9"
									},
									"scope": 1973,
									"src": "758:99:9",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1974,
							"src": "624:235:9",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:759:9"
				},
				"id": 9
			},
			"@openzeppelin/contracts/utils/StorageSlot.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/StorageSlot.sol",
					"exportedSymbols": {
						"StorageSlot": [
							2083
						]
					},
					"id": 2084,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1975,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "193:24:10"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "StorageSlot",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1976,
								"nodeType": "StructuredDocumentation",
								"src": "219:1025:10",
								"text": " @dev Library for reading and writing primitive types to specific storage slots.\n Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n This library helps with reading and writing to such slots without the need for inline assembly.\n The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n Example usage to set ERC1967 implementation slot:\n ```solidity\n contract ERC1967 {\n     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n     function _getImplementation() internal view returns (address) {\n         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n     }\n     function _setImplementation(address newImplementation) internal {\n         require(newImplementation.code.length > 0);\n         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n     }\n }\n ```"
							},
							"fullyImplemented": true,
							"id": 2083,
							"linearizedBaseContracts": [
								2083
							],
							"name": "StorageSlot",
							"nameLocation": "1253:11:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "StorageSlot.AddressSlot",
									"id": 1979,
									"members": [
										{
											"constant": false,
											"id": 1978,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1308:5:10",
											"nodeType": "VariableDeclaration",
											"scope": 1979,
											"src": "1300:13:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1977,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1300:7:10",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "AddressSlot",
									"nameLocation": "1278:11:10",
									"nodeType": "StructDefinition",
									"scope": 2083,
									"src": "1271:49:10",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.BooleanSlot",
									"id": 1982,
									"members": [
										{
											"constant": false,
											"id": 1981,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1360:5:10",
											"nodeType": "VariableDeclaration",
											"scope": 1982,
											"src": "1355:10:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 1980,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1355:4:10",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "BooleanSlot",
									"nameLocation": "1333:11:10",
									"nodeType": "StructDefinition",
									"scope": 2083,
									"src": "1326:46:10",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.Bytes32Slot",
									"id": 1985,
									"members": [
										{
											"constant": false,
											"id": 1984,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1415:5:10",
											"nodeType": "VariableDeclaration",
											"scope": 1985,
											"src": "1407:13:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 1983,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "1407:7:10",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Bytes32Slot",
									"nameLocation": "1385:11:10",
									"nodeType": "StructDefinition",
									"scope": 2083,
									"src": "1378:49:10",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.Uint256Slot",
									"id": 1988,
									"members": [
										{
											"constant": false,
											"id": 1987,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1470:5:10",
											"nodeType": "VariableDeclaration",
											"scope": 1988,
											"src": "1462:13:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1986,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1462:7:10",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Uint256Slot",
									"nameLocation": "1440:11:10",
									"nodeType": "StructDefinition",
									"scope": 2083,
									"src": "1433:49:10",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.StringSlot",
									"id": 1991,
									"members": [
										{
											"constant": false,
											"id": 1990,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1523:5:10",
											"nodeType": "VariableDeclaration",
											"scope": 1991,
											"src": "1516:12:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 1989,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "1516:6:10",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "StringSlot",
									"nameLocation": "1495:10:10",
									"nodeType": "StructDefinition",
									"scope": 2083,
									"src": "1488:47:10",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.BytesSlot",
									"id": 1994,
									"members": [
										{
											"constant": false,
											"id": 1993,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1574:5:10",
											"nodeType": "VariableDeclaration",
											"scope": 1994,
											"src": "1568:11:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes_storage_ptr",
												"typeString": "bytes"
											},
											"typeName": {
												"id": 1992,
												"name": "bytes",
												"nodeType": "ElementaryTypeName",
												"src": "1568:5:10",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "BytesSlot",
									"nameLocation": "1548:9:10",
									"nodeType": "StructDefinition",
									"scope": 2083,
									"src": "1541:45:10",
									"visibility": "public"
								},
								{
									"body": {
										"id": 2004,
										"nodeType": "Block",
										"src": "1768:106:10",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "1830:38:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1844:14:10",
															"value": {
																"name": "slot",
																"nodeType": "YulIdentifier",
																"src": "1854:4:10"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nodeType": "YulIdentifier",
																	"src": "1844:6:10"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 2001,
														"isOffset": false,
														"isSlot": true,
														"src": "1844:6:10",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1997,
														"isOffset": false,
														"isSlot": false,
														"src": "1854:4:10",
														"valueSize": 1
													}
												],
												"id": 2003,
												"nodeType": "InlineAssembly",
												"src": "1821:47:10"
											}
										]
									},
									"documentation": {
										"id": 1995,
										"nodeType": "StructuredDocumentation",
										"src": "1592:87:10",
										"text": " @dev Returns an `AddressSlot` with member `value` located at `slot`."
									},
									"id": 2005,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAddressSlot",
									"nameLocation": "1693:14:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1998,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1997,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "1716:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 2005,
												"src": "1708:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1996,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1708:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1707:14:10"
									},
									"returnParameters": {
										"id": 2002,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2001,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "1765:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2005,
												"src": "1745:21:10",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSlot_$1979_storage_ptr",
													"typeString": "struct StorageSlot.AddressSlot"
												},
												"typeName": {
													"id": 2000,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1999,
														"name": "AddressSlot",
														"nameLocations": [
															"1745:11:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1979,
														"src": "1745:11:10"
													},
													"referencedDeclaration": 1979,
													"src": "1745:11:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSlot_$1979_storage_ptr",
														"typeString": "struct StorageSlot.AddressSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1744:23:10"
									},
									"scope": 2083,
									"src": "1684:190:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2015,
										"nodeType": "Block",
										"src": "2056:106:10",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "2118:38:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2132:14:10",
															"value": {
																"name": "slot",
																"nodeType": "YulIdentifier",
																"src": "2142:4:10"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nodeType": "YulIdentifier",
																	"src": "2132:6:10"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 2012,
														"isOffset": false,
														"isSlot": true,
														"src": "2132:6:10",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 2008,
														"isOffset": false,
														"isSlot": false,
														"src": "2142:4:10",
														"valueSize": 1
													}
												],
												"id": 2014,
												"nodeType": "InlineAssembly",
												"src": "2109:47:10"
											}
										]
									},
									"documentation": {
										"id": 2006,
										"nodeType": "StructuredDocumentation",
										"src": "1880:87:10",
										"text": " @dev Returns an `BooleanSlot` with member `value` located at `slot`."
									},
									"id": 2016,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBooleanSlot",
									"nameLocation": "1981:14:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2009,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2008,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2004:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 2016,
												"src": "1996:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2007,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1996:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1995:14:10"
									},
									"returnParameters": {
										"id": 2013,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2012,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2053:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2016,
												"src": "2033:21:10",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BooleanSlot_$1982_storage_ptr",
													"typeString": "struct StorageSlot.BooleanSlot"
												},
												"typeName": {
													"id": 2011,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2010,
														"name": "BooleanSlot",
														"nameLocations": [
															"2033:11:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1982,
														"src": "2033:11:10"
													},
													"referencedDeclaration": 1982,
													"src": "2033:11:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BooleanSlot_$1982_storage_ptr",
														"typeString": "struct StorageSlot.BooleanSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2032:23:10"
									},
									"scope": 2083,
									"src": "1972:190:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2026,
										"nodeType": "Block",
										"src": "2344:106:10",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "2406:38:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2420:14:10",
															"value": {
																"name": "slot",
																"nodeType": "YulIdentifier",
																"src": "2430:4:10"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nodeType": "YulIdentifier",
																	"src": "2420:6:10"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 2023,
														"isOffset": false,
														"isSlot": true,
														"src": "2420:6:10",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 2019,
														"isOffset": false,
														"isSlot": false,
														"src": "2430:4:10",
														"valueSize": 1
													}
												],
												"id": 2025,
												"nodeType": "InlineAssembly",
												"src": "2397:47:10"
											}
										]
									},
									"documentation": {
										"id": 2017,
										"nodeType": "StructuredDocumentation",
										"src": "2168:87:10",
										"text": " @dev Returns an `Bytes32Slot` with member `value` located at `slot`."
									},
									"id": 2027,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBytes32Slot",
									"nameLocation": "2269:14:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2020,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2019,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2292:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 2027,
												"src": "2284:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2018,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2284:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2283:14:10"
									},
									"returnParameters": {
										"id": 2024,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2023,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2341:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2027,
												"src": "2321:21:10",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Slot_$1985_storage_ptr",
													"typeString": "struct StorageSlot.Bytes32Slot"
												},
												"typeName": {
													"id": 2022,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2021,
														"name": "Bytes32Slot",
														"nameLocations": [
															"2321:11:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1985,
														"src": "2321:11:10"
													},
													"referencedDeclaration": 1985,
													"src": "2321:11:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Slot_$1985_storage_ptr",
														"typeString": "struct StorageSlot.Bytes32Slot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2320:23:10"
									},
									"scope": 2083,
									"src": "2260:190:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2037,
										"nodeType": "Block",
										"src": "2632:106:10",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "2694:38:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2708:14:10",
															"value": {
																"name": "slot",
																"nodeType": "YulIdentifier",
																"src": "2718:4:10"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nodeType": "YulIdentifier",
																	"src": "2708:6:10"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 2034,
														"isOffset": false,
														"isSlot": true,
														"src": "2708:6:10",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 2030,
														"isOffset": false,
														"isSlot": false,
														"src": "2718:4:10",
														"valueSize": 1
													}
												],
												"id": 2036,
												"nodeType": "InlineAssembly",
												"src": "2685:47:10"
											}
										]
									},
									"documentation": {
										"id": 2028,
										"nodeType": "StructuredDocumentation",
										"src": "2456:87:10",
										"text": " @dev Returns an `Uint256Slot` with member `value` located at `slot`."
									},
									"id": 2038,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getUint256Slot",
									"nameLocation": "2557:14:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2031,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2030,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2580:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 2038,
												"src": "2572:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2029,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2572:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2571:14:10"
									},
									"returnParameters": {
										"id": 2035,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2034,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2629:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2038,
												"src": "2609:21:10",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Uint256Slot_$1988_storage_ptr",
													"typeString": "struct StorageSlot.Uint256Slot"
												},
												"typeName": {
													"id": 2033,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2032,
														"name": "Uint256Slot",
														"nameLocations": [
															"2609:11:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1988,
														"src": "2609:11:10"
													},
													"referencedDeclaration": 1988,
													"src": "2609:11:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Uint256Slot_$1988_storage_ptr",
														"typeString": "struct StorageSlot.Uint256Slot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2608:23:10"
									},
									"scope": 2083,
									"src": "2548:190:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2048,
										"nodeType": "Block",
										"src": "2917:106:10",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "2979:38:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2993:14:10",
															"value": {
																"name": "slot",
																"nodeType": "YulIdentifier",
																"src": "3003:4:10"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nodeType": "YulIdentifier",
																	"src": "2993:6:10"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 2045,
														"isOffset": false,
														"isSlot": true,
														"src": "2993:6:10",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 2041,
														"isOffset": false,
														"isSlot": false,
														"src": "3003:4:10",
														"valueSize": 1
													}
												],
												"id": 2047,
												"nodeType": "InlineAssembly",
												"src": "2970:47:10"
											}
										]
									},
									"documentation": {
										"id": 2039,
										"nodeType": "StructuredDocumentation",
										"src": "2744:86:10",
										"text": " @dev Returns an `StringSlot` with member `value` located at `slot`."
									},
									"id": 2049,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getStringSlot",
									"nameLocation": "2844:13:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2042,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2041,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2866:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 2049,
												"src": "2858:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2040,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2858:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2857:14:10"
									},
									"returnParameters": {
										"id": 2046,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2045,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2914:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2049,
												"src": "2895:20:10",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_StringSlot_$1991_storage_ptr",
													"typeString": "struct StorageSlot.StringSlot"
												},
												"typeName": {
													"id": 2044,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2043,
														"name": "StringSlot",
														"nameLocations": [
															"2895:10:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1991,
														"src": "2895:10:10"
													},
													"referencedDeclaration": 1991,
													"src": "2895:10:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StringSlot_$1991_storage_ptr",
														"typeString": "struct StorageSlot.StringSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2894:22:10"
									},
									"scope": 2083,
									"src": "2835:188:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2059,
										"nodeType": "Block",
										"src": "3225:112:10",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "3287:44:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3301:20:10",
															"value": {
																"name": "store.slot",
																"nodeType": "YulIdentifier",
																"src": "3311:10:10"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nodeType": "YulIdentifier",
																	"src": "3301:6:10"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 2056,
														"isOffset": false,
														"isSlot": true,
														"src": "3301:6:10",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 2052,
														"isOffset": false,
														"isSlot": true,
														"src": "3311:10:10",
														"suffix": "slot",
														"valueSize": 1
													}
												],
												"id": 2058,
												"nodeType": "InlineAssembly",
												"src": "3278:53:10"
											}
										]
									},
									"documentation": {
										"id": 2050,
										"nodeType": "StructuredDocumentation",
										"src": "3029:101:10",
										"text": " @dev Returns an `StringSlot` representation of the string storage pointer `store`."
									},
									"id": 2060,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getStringSlot",
									"nameLocation": "3144:13:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2053,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2052,
												"mutability": "mutable",
												"name": "store",
												"nameLocation": "3173:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 2060,
												"src": "3158:20:10",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2051,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3158:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3157:22:10"
									},
									"returnParameters": {
										"id": 2057,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2056,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3222:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2060,
												"src": "3203:20:10",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_StringSlot_$1991_storage_ptr",
													"typeString": "struct StorageSlot.StringSlot"
												},
												"typeName": {
													"id": 2055,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2054,
														"name": "StringSlot",
														"nameLocations": [
															"3203:10:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1991,
														"src": "3203:10:10"
													},
													"referencedDeclaration": 1991,
													"src": "3203:10:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StringSlot_$1991_storage_ptr",
														"typeString": "struct StorageSlot.StringSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3202:22:10"
									},
									"scope": 2083,
									"src": "3135:202:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2070,
										"nodeType": "Block",
										"src": "3513:106:10",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "3575:38:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3589:14:10",
															"value": {
																"name": "slot",
																"nodeType": "YulIdentifier",
																"src": "3599:4:10"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nodeType": "YulIdentifier",
																	"src": "3589:6:10"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 2067,
														"isOffset": false,
														"isSlot": true,
														"src": "3589:6:10",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 2063,
														"isOffset": false,
														"isSlot": false,
														"src": "3599:4:10",
														"valueSize": 1
													}
												],
												"id": 2069,
												"nodeType": "InlineAssembly",
												"src": "3566:47:10"
											}
										]
									},
									"documentation": {
										"id": 2061,
										"nodeType": "StructuredDocumentation",
										"src": "3343:85:10",
										"text": " @dev Returns an `BytesSlot` with member `value` located at `slot`."
									},
									"id": 2071,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBytesSlot",
									"nameLocation": "3442:12:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2064,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2063,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "3463:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 2071,
												"src": "3455:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2062,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3455:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3454:14:10"
									},
									"returnParameters": {
										"id": 2068,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2067,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3510:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2071,
												"src": "3492:19:10",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BytesSlot_$1994_storage_ptr",
													"typeString": "struct StorageSlot.BytesSlot"
												},
												"typeName": {
													"id": 2066,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2065,
														"name": "BytesSlot",
														"nameLocations": [
															"3492:9:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1994,
														"src": "3492:9:10"
													},
													"referencedDeclaration": 1994,
													"src": "3492:9:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BytesSlot_$1994_storage_ptr",
														"typeString": "struct StorageSlot.BytesSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3491:21:10"
									},
									"scope": 2083,
									"src": "3433:186:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2081,
										"nodeType": "Block",
										"src": "3816:112:10",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "3878:44:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3892:20:10",
															"value": {
																"name": "store.slot",
																"nodeType": "YulIdentifier",
																"src": "3902:10:10"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nodeType": "YulIdentifier",
																	"src": "3892:6:10"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 2078,
														"isOffset": false,
														"isSlot": true,
														"src": "3892:6:10",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 2074,
														"isOffset": false,
														"isSlot": true,
														"src": "3902:10:10",
														"suffix": "slot",
														"valueSize": 1
													}
												],
												"id": 2080,
												"nodeType": "InlineAssembly",
												"src": "3869:53:10"
											}
										]
									},
									"documentation": {
										"id": 2072,
										"nodeType": "StructuredDocumentation",
										"src": "3625:99:10",
										"text": " @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`."
									},
									"id": 2082,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBytesSlot",
									"nameLocation": "3738:12:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2075,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2074,
												"mutability": "mutable",
												"name": "store",
												"nameLocation": "3765:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 2082,
												"src": "3751:19:10",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2073,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3751:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3750:21:10"
									},
									"returnParameters": {
										"id": 2079,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2078,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3813:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2082,
												"src": "3795:19:10",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BytesSlot_$1994_storage_ptr",
													"typeString": "struct StorageSlot.BytesSlot"
												},
												"typeName": {
													"id": 2077,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2076,
														"name": "BytesSlot",
														"nameLocations": [
															"3795:9:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1994,
														"src": "3795:9:10"
													},
													"referencedDeclaration": 1994,
													"src": "3795:9:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BytesSlot_$1994_storage_ptr",
														"typeString": "struct StorageSlot.BytesSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3794:21:10"
									},
									"scope": 2083,
									"src": "3729:199:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2084,
							"src": "1245:2685:10",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "193:3738:10"
				},
				"id": 10
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
					"exportedSymbols": {
						"ERC165": [
							2107
						],
						"IERC165": [
							2119
						]
					},
					"id": 2108,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2085,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "114:24:11"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 2087,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2108,
							"sourceUnit": 2120,
							"src": "140:38:11",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2086,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2119,
										"src": "148:7:11",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 2089,
										"name": "IERC165",
										"nameLocations": [
											"687:7:11"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2119,
										"src": "687:7:11"
									},
									"id": 2090,
									"nodeType": "InheritanceSpecifier",
									"src": "687:7:11"
								}
							],
							"canonicalName": "ERC165",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2088,
								"nodeType": "StructuredDocumentation",
								"src": "180:478:11",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```"
							},
							"fullyImplemented": true,
							"id": 2107,
							"linearizedBaseContracts": [
								2107,
								2119
							],
							"name": "ERC165",
							"nameLocation": "677:6:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										2118
									],
									"body": {
										"id": 2105,
										"nodeType": "Block",
										"src": "844:64:11",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 2103,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2098,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2093,
														"src": "861:11:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 2100,
																	"name": "IERC165",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2119,
																	"src": "881:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$2119_$",
																		"typeString": "type(contract IERC165)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$2119_$",
																		"typeString": "type(contract IERC165)"
																	}
																],
																"id": 2099,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "876:4:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 2101,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "876:13:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$2119",
																"typeString": "type(contract IERC165)"
															}
														},
														"id": 2102,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "890:11:11",
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "876:25:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "861:40:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2097,
												"id": 2104,
												"nodeType": "Return",
												"src": "854:47:11"
											}
										]
									},
									"documentation": {
										"id": 2091,
										"nodeType": "StructuredDocumentation",
										"src": "701:56:11",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 2106,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "771:17:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2094,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2093,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "796:11:11",
												"nodeType": "VariableDeclaration",
												"scope": 2106,
												"src": "789:18:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 2092,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "789:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "788:20:11"
									},
									"returnParameters": {
										"id": 2097,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2096,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2106,
												"src": "838:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2095,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "838:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "837:6:11"
									},
									"scope": 2107,
									"src": "762:146:11",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 2108,
							"src": "659:251:11",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "114:797:11"
				},
				"id": 11
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							2119
						]
					},
					"id": 2120,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2109,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:12"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2110,
								"nodeType": "StructuredDocumentation",
								"src": "141:279:12",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 2119,
							"linearizedBaseContracts": [
								2119
							],
							"name": "IERC165",
							"nameLocation": "431:7:12",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 2111,
										"nodeType": "StructuredDocumentation",
										"src": "445:340:12",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 2118,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "799:17:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2114,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2113,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "824:11:12",
												"nodeType": "VariableDeclaration",
												"scope": 2118,
												"src": "817:18:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 2112,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "817:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "816:20:12"
									},
									"returnParameters": {
										"id": 2117,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2116,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2118,
												"src": "860:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2115,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "860:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "859:6:12"
									},
									"scope": 2119,
									"src": "790:76:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2120,
							"src": "421:447:12",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "115:754:12"
				},
				"id": 12
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/Math.sol",
					"exportedSymbols": {
						"Math": [
							3173
						]
					},
					"id": 3174,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2121,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "103:24:13"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Math",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2122,
								"nodeType": "StructuredDocumentation",
								"src": "129:73:13",
								"text": " @dev Standard math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 3173,
							"linearizedBaseContracts": [
								3173
							],
							"name": "Math",
							"nameLocation": "211:4:13",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 2123,
										"nodeType": "StructuredDocumentation",
										"src": "222:50:13",
										"text": " @dev Muldiv operation overflow."
									},
									"errorSelector": "227bc153",
									"id": 2125,
									"name": "MathOverflowedMulDiv",
									"nameLocation": "283:20:13",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2124,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "303:2:13"
									},
									"src": "277:29:13"
								},
								{
									"canonicalName": "Math.Rounding",
									"id": 2130,
									"members": [
										{
											"id": 2126,
											"name": "Floor",
											"nameLocation": "336:5:13",
											"nodeType": "EnumValue",
											"src": "336:5:13"
										},
										{
											"id": 2127,
											"name": "Ceil",
											"nameLocation": "379:4:13",
											"nodeType": "EnumValue",
											"src": "379:4:13"
										},
										{
											"id": 2128,
											"name": "Trunc",
											"nameLocation": "421:5:13",
											"nodeType": "EnumValue",
											"src": "421:5:13"
										},
										{
											"id": 2129,
											"name": "Expand",
											"nameLocation": "451:6:13",
											"nodeType": "EnumValue",
											"src": "451:6:13"
										}
									],
									"name": "Rounding",
									"nameLocation": "317:8:13",
									"nodeType": "EnumDefinition",
									"src": "312:169:13"
								},
								{
									"body": {
										"id": 2161,
										"nodeType": "Block",
										"src": "661:140:13",
										"statements": [
											{
												"id": 2160,
												"nodeType": "UncheckedBlock",
												"src": "671:124:13",
												"statements": [
													{
														"assignments": [
															2143
														],
														"declarations": [
															{
																"constant": false,
																"id": 2143,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "703:1:13",
																"nodeType": "VariableDeclaration",
																"scope": 2160,
																"src": "695:9:13",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2142,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "695:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2147,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2146,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2144,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2133,
																"src": "707:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 2145,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2135,
																"src": "711:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "707:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "695:17:13"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2150,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2148,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2143,
																"src": "730:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 2149,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2133,
																"src": "734:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "730:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2155,
														"nodeType": "IfStatement",
														"src": "726:28:13",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2151,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "745:5:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2152,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "752:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2153,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "744:10:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2141,
															"id": 2154,
															"nodeType": "Return",
															"src": "737:17:13"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2156,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "776:4:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 2157,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2143,
																	"src": "782:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2158,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "775:9:13",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2141,
														"id": 2159,
														"nodeType": "Return",
														"src": "768:16:13"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2131,
										"nodeType": "StructuredDocumentation",
										"src": "487:93:13",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag."
									},
									"id": 2162,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "594:6:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2136,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2133,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "609:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2162,
												"src": "601:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2132,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "601:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2135,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "620:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2162,
												"src": "612:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2134,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "612:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "600:22:13"
									},
									"returnParameters": {
										"id": 2141,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2138,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2162,
												"src": "646:4:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2137,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "646:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2140,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2162,
												"src": "652:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2139,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "645:15:13"
									},
									"scope": 3173,
									"src": "585:216:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2189,
										"nodeType": "Block",
										"src": "984:113:13",
										"statements": [
											{
												"id": 2188,
												"nodeType": "UncheckedBlock",
												"src": "994:97:13",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2176,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2174,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2167,
																"src": "1022:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 2175,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2165,
																"src": "1026:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1022:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2181,
														"nodeType": "IfStatement",
														"src": "1018:28:13",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2177,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1037:5:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2178,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1044:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2179,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1036:10:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2173,
															"id": 2180,
															"nodeType": "Return",
															"src": "1029:17:13"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2182,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1068:4:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2185,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2183,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2165,
																		"src": "1074:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 2184,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2167,
																		"src": "1078:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1074:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2186,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1067:13:13",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2173,
														"id": 2187,
														"nodeType": "Return",
														"src": "1060:20:13"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2163,
										"nodeType": "StructuredDocumentation",
										"src": "807:96:13",
										"text": " @dev Returns the subtraction of two unsigned integers, with an overflow flag."
									},
									"id": 2190,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "917:6:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2165,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "932:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2190,
												"src": "924:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2164,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "924:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2167,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "943:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2190,
												"src": "935:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2166,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "935:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "923:22:13"
									},
									"returnParameters": {
										"id": 2173,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2170,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2190,
												"src": "969:4:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2169,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "969:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2172,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2190,
												"src": "975:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2171,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "975:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "968:15:13"
									},
									"scope": 3173,
									"src": "908:189:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2231,
										"nodeType": "Block",
										"src": "1283:417:13",
										"statements": [
											{
												"id": 2230,
												"nodeType": "UncheckedBlock",
												"src": "1293:401:13",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2204,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2202,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2193,
																"src": "1551:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2203,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1556:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1551:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2209,
														"nodeType": "IfStatement",
														"src": "1547:28:13",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 2205,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1567:4:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 2206,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1573:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2207,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1566:9:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2201,
															"id": 2208,
															"nodeType": "Return",
															"src": "1559:16:13"
														}
													},
													{
														"assignments": [
															2211
														],
														"declarations": [
															{
																"constant": false,
																"id": 2211,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1597:1:13",
																"nodeType": "VariableDeclaration",
																"scope": 2230,
																"src": "1589:9:13",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2210,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1589:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2215,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2214,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2212,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2193,
																"src": "1601:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 2213,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2195,
																"src": "1605:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1601:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1589:17:13"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2220,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2218,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2216,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2211,
																	"src": "1624:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 2217,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2193,
																	"src": "1628:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1624:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 2219,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2195,
																"src": "1633:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1624:10:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2225,
														"nodeType": "IfStatement",
														"src": "1620:33:13",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2221,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1644:5:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2222,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1651:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2223,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1643:10:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2201,
															"id": 2224,
															"nodeType": "Return",
															"src": "1636:17:13"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2226,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1675:4:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 2227,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2211,
																	"src": "1681:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2228,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1674:9:13",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2201,
														"id": 2229,
														"nodeType": "Return",
														"src": "1667:16:13"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2191,
										"nodeType": "StructuredDocumentation",
										"src": "1103:99:13",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag."
									},
									"id": 2232,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1216:6:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2196,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2193,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1231:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2232,
												"src": "1223:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2192,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2195,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1242:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2232,
												"src": "1234:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2194,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1222:22:13"
									},
									"returnParameters": {
										"id": 2201,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2198,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2232,
												"src": "1268:4:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2197,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1268:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2200,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2232,
												"src": "1274:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2199,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1274:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1267:15:13"
									},
									"scope": 3173,
									"src": "1207:493:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2259,
										"nodeType": "Block",
										"src": "1887:114:13",
										"statements": [
											{
												"id": 2258,
												"nodeType": "UncheckedBlock",
												"src": "1897:98:13",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2246,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2244,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2237,
																"src": "1925:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2245,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1930:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1925:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2251,
														"nodeType": "IfStatement",
														"src": "1921:29:13",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2247,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1941:5:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2248,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1948:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2249,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1940:10:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2243,
															"id": 2250,
															"nodeType": "Return",
															"src": "1933:17:13"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2252,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1972:4:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2255,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2253,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2235,
																		"src": "1978:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 2254,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2237,
																		"src": "1982:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1978:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2256,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1971:13:13",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2243,
														"id": 2257,
														"nodeType": "Return",
														"src": "1964:20:13"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2233,
										"nodeType": "StructuredDocumentation",
										"src": "1706:100:13",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag."
									},
									"id": 2260,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1820:6:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2238,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2235,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1835:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2260,
												"src": "1827:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2234,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1827:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2237,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1846:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2260,
												"src": "1838:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2236,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1838:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1826:22:13"
									},
									"returnParameters": {
										"id": 2243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2240,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2260,
												"src": "1872:4:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2239,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1872:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2242,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2260,
												"src": "1878:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2241,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1878:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1871:15:13"
									},
									"scope": 3173,
									"src": "1811:190:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2287,
										"nodeType": "Block",
										"src": "2198:114:13",
										"statements": [
											{
												"id": 2286,
												"nodeType": "UncheckedBlock",
												"src": "2208:98:13",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2274,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2272,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2265,
																"src": "2236:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2273,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2241:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2236:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2279,
														"nodeType": "IfStatement",
														"src": "2232:29:13",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2275,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2252:5:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2276,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2259:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2277,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2251:10:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2271,
															"id": 2278,
															"nodeType": "Return",
															"src": "2244:17:13"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2280,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2283:4:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2283,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2281,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2263,
																		"src": "2289:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 2282,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2265,
																		"src": "2293:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2289:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2284,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2282:13:13",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2271,
														"id": 2285,
														"nodeType": "Return",
														"src": "2275:20:13"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2261,
										"nodeType": "StructuredDocumentation",
										"src": "2007:110:13",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag."
									},
									"id": 2288,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2131:6:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2266,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2263,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2146:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2288,
												"src": "2138:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2262,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2138:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2265,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2157:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2288,
												"src": "2149:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2264,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2149:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2137:22:13"
									},
									"returnParameters": {
										"id": 2271,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2268,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2288,
												"src": "2183:4:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2267,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2183:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2270,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2288,
												"src": "2189:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2269,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2189:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2182:15:13"
									},
									"scope": 3173,
									"src": "2122:190:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2305,
										"nodeType": "Block",
										"src": "2449:37:13",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2300,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2298,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2291,
															"src": "2466:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 2299,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2293,
															"src": "2470:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2466:5:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 2302,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2293,
														"src": "2478:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2303,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2466:13:13",
													"trueExpression": {
														"id": 2301,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2291,
														"src": "2474:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2297,
												"id": 2304,
												"nodeType": "Return",
												"src": "2459:20:13"
											}
										]
									},
									"documentation": {
										"id": 2289,
										"nodeType": "StructuredDocumentation",
										"src": "2318:59:13",
										"text": " @dev Returns the largest of two numbers."
									},
									"id": 2306,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "2391:3:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2294,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2291,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2403:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2306,
												"src": "2395:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2290,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2395:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2293,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2414:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2306,
												"src": "2406:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2292,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2406:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2394:22:13"
									},
									"returnParameters": {
										"id": 2297,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2296,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2306,
												"src": "2440:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2295,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2440:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2439:9:13"
									},
									"scope": 3173,
									"src": "2382:104:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2323,
										"nodeType": "Block",
										"src": "2624:37:13",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2318,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2316,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2309,
															"src": "2641:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 2317,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2311,
															"src": "2645:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2641:5:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 2320,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2311,
														"src": "2653:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2321,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2641:13:13",
													"trueExpression": {
														"id": 2319,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2309,
														"src": "2649:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2315,
												"id": 2322,
												"nodeType": "Return",
												"src": "2634:20:13"
											}
										]
									},
									"documentation": {
										"id": 2307,
										"nodeType": "StructuredDocumentation",
										"src": "2492:60:13",
										"text": " @dev Returns the smallest of two numbers."
									},
									"id": 2324,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "2566:3:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2312,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2309,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2578:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2324,
												"src": "2570:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2308,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2311,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2589:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2324,
												"src": "2581:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2310,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2581:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:22:13"
									},
									"returnParameters": {
										"id": 2315,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2314,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2324,
												"src": "2615:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2313,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2615:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2614:9:13"
									},
									"scope": 3173,
									"src": "2557:104:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2346,
										"nodeType": "Block",
										"src": "2845:82:13",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2344,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2336,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2334,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2327,
																	"src": "2900:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 2335,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2329,
																	"src": "2904:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2900:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 2337,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2899:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2343,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2340,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2338,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2327,
																		"src": "2910:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "^",
																	"rightExpression": {
																		"id": 2339,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2329,
																		"src": "2914:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2910:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2341,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2909:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "32",
															"id": 2342,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2919:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "2909:11:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2899:21:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2333,
												"id": 2345,
												"nodeType": "Return",
												"src": "2892:28:13"
											}
										]
									},
									"documentation": {
										"id": 2325,
										"nodeType": "StructuredDocumentation",
										"src": "2667:102:13",
										"text": " @dev Returns the average of two numbers. The result is rounded towards\n zero."
									},
									"id": 2347,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "2783:7:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2330,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2327,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2799:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2347,
												"src": "2791:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2326,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2791:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2329,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2810:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2347,
												"src": "2802:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2328,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2802:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2790:22:13"
									},
									"returnParameters": {
										"id": 2333,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2332,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2347,
												"src": "2836:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2331,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2836:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2835:9:13"
									},
									"scope": 3173,
									"src": "2774:153:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2380,
										"nodeType": "Block",
										"src": "3219:260:13",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2359,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2357,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2352,
														"src": "3233:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 2358,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3238:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3233:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2365,
												"nodeType": "IfStatement",
												"src": "3229:127:13",
												"trueBody": {
													"id": 2364,
													"nodeType": "Block",
													"src": "3241:115:13",
													"statements": [
														{
															"expression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2362,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2360,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2350,
																	"src": "3340:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 2361,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2352,
																	"src": "3344:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3340:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 2356,
															"id": 2363,
															"nodeType": "Return",
															"src": "3333:12:13"
														}
													]
												}
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2368,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2366,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2350,
															"src": "3444:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 2367,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3449:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "3444:6:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2377,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2375,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2372,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2370,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2350,
																			"src": "3458:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 2371,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3462:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "3458:5:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2373,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3457:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 2374,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2352,
																"src": "3467:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3457:11:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 2376,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3471:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "3457:15:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2378,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "3444:28:13",
													"trueExpression": {
														"hexValue": "30",
														"id": 2369,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3453:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2356,
												"id": 2379,
												"nodeType": "Return",
												"src": "3437:35:13"
											}
										]
									},
									"documentation": {
										"id": 2348,
										"nodeType": "StructuredDocumentation",
										"src": "2933:210:13",
										"text": " @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds towards infinity instead\n of rounding towards zero."
									},
									"id": 2381,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ceilDiv",
									"nameLocation": "3157:7:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2353,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2350,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3173:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2381,
												"src": "3165:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2349,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3165:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2352,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3184:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2381,
												"src": "3176:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2351,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3176:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3164:22:13"
									},
									"returnParameters": {
										"id": 2356,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2355,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2381,
												"src": "3210:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2354,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3210:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3209:9:13"
									},
									"scope": 3173,
									"src": "3148:331:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2506,
										"nodeType": "Block",
										"src": "3901:4018:13",
										"statements": [
											{
												"id": 2505,
												"nodeType": "UncheckedBlock",
												"src": "3911:4002:13",
												"statements": [
													{
														"assignments": [
															2394
														],
														"declarations": [
															{
																"constant": false,
																"id": 2394,
																"mutability": "mutable",
																"name": "prod0",
																"nameLocation": "4240:5:13",
																"nodeType": "VariableDeclaration",
																"scope": 2505,
																"src": "4232:13:13",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2393,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4232:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2398,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2397,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2395,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2384,
																"src": "4248:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 2396,
																"name": "y",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2386,
																"src": "4252:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4248:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "4232:21:13"
													},
													{
														"assignments": [
															2400
														],
														"declarations": [
															{
																"constant": false,
																"id": 2400,
																"mutability": "mutable",
																"name": "prod1",
																"nameLocation": "4320:5:13",
																"nodeType": "VariableDeclaration",
																"scope": 2505,
																"src": "4312:13:13",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2399,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4312:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2401,
														"nodeType": "VariableDeclarationStatement",
														"src": "4312:13:13"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "4392:122:13",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4410:30:13",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "4427:1:13"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "4430:1:13"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4437:1:13",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "4433:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4433:6:13"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nodeType": "YulIdentifier",
																			"src": "4420:6:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4420:20:13"
																	},
																	"variables": [
																		{
																			"name": "mm",
																			"nodeType": "YulTypedName",
																			"src": "4414:2:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4457:43:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nodeType": "YulIdentifier",
																						"src": "4474:2:13"
																					},
																					{
																						"name": "prod0",
																						"nodeType": "YulIdentifier",
																						"src": "4478:5:13"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "4470:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4470:14:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nodeType": "YulIdentifier",
																						"src": "4489:2:13"
																					},
																					{
																						"name": "prod0",
																						"nodeType": "YulIdentifier",
																						"src": "4493:5:13"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "4486:2:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4486:13:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4466:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4466:34:13"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nodeType": "YulIdentifier",
																			"src": "4457:5:13"
																		}
																	]
																}
															]
														},
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 2394,
																"isOffset": false,
																"isSlot": false,
																"src": "4478:5:13",
																"valueSize": 1
															},
															{
																"declaration": 2394,
																"isOffset": false,
																"isSlot": false,
																"src": "4493:5:13",
																"valueSize": 1
															},
															{
																"declaration": 2400,
																"isOffset": false,
																"isSlot": false,
																"src": "4457:5:13",
																"valueSize": 1
															},
															{
																"declaration": 2384,
																"isOffset": false,
																"isSlot": false,
																"src": "4427:1:13",
																"valueSize": 1
															},
															{
																"declaration": 2386,
																"isOffset": false,
																"isSlot": false,
																"src": "4430:1:13",
																"valueSize": 1
															}
														],
														"id": 2402,
														"nodeType": "InlineAssembly",
														"src": "4383:131:13"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2405,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2403,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2400,
																"src": "4595:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2404,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4604:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4595:10:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2411,
														"nodeType": "IfStatement",
														"src": "4591:368:13",
														"trueBody": {
															"id": 2410,
															"nodeType": "Block",
															"src": "4607:352:13",
															"statements": [
																{
																	"expression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2408,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2406,
																			"name": "prod0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2394,
																			"src": "4925:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 2407,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2388,
																			"src": "4933:11:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "4925:19:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"functionReturnParameters": 2392,
																	"id": 2409,
																	"nodeType": "Return",
																	"src": "4918:26:13"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2414,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2412,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2388,
																"src": "5065:11:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 2413,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2400,
																"src": "5080:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5065:20:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2419,
														"nodeType": "IfStatement",
														"src": "5061:88:13",
														"trueBody": {
															"id": 2418,
															"nodeType": "Block",
															"src": "5087:62:13",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 2415,
																			"name": "MathOverflowedMulDiv",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2125,
																			"src": "5112:20:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 2416,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5112:22:13",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 2417,
																	"nodeType": "RevertStatement",
																	"src": "5105:29:13"
																}
															]
														}
													},
													{
														"assignments": [
															2421
														],
														"declarations": [
															{
																"constant": false,
																"id": 2421,
																"mutability": "mutable",
																"name": "remainder",
																"nameLocation": "5412:9:13",
																"nodeType": "VariableDeclaration",
																"scope": 2505,
																"src": "5404:17:13",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2420,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "5404:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2422,
														"nodeType": "VariableDeclarationStatement",
														"src": "5404:17:13"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "5444:291:13",
															"statements": [
																{
																	"nodeType": "YulAssignment",
																	"src": "5513:38:13",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "5533:1:13"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "5536:1:13"
																			},
																			{
																				"name": "denominator",
																				"nodeType": "YulIdentifier",
																				"src": "5539:11:13"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nodeType": "YulIdentifier",
																			"src": "5526:6:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5526:25:13"
																	},
																	"variableNames": [
																		{
																			"name": "remainder",
																			"nodeType": "YulIdentifier",
																			"src": "5513:9:13"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5633:41:13",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod1",
																				"nodeType": "YulIdentifier",
																				"src": "5646:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "remainder",
																						"nodeType": "YulIdentifier",
																						"src": "5656:9:13"
																					},
																					{
																						"name": "prod0",
																						"nodeType": "YulIdentifier",
																						"src": "5667:5:13"
																					}
																				],
																				"functionName": {
																					"name": "gt",
																					"nodeType": "YulIdentifier",
																					"src": "5653:2:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5653:20:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5642:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5642:32:13"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nodeType": "YulIdentifier",
																			"src": "5633:5:13"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5691:30:13",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nodeType": "YulIdentifier",
																				"src": "5704:5:13"
																			},
																			{
																				"name": "remainder",
																				"nodeType": "YulIdentifier",
																				"src": "5711:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5700:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5700:21:13"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nodeType": "YulIdentifier",
																			"src": "5691:5:13"
																		}
																	]
																}
															]
														},
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 2388,
																"isOffset": false,
																"isSlot": false,
																"src": "5539:11:13",
																"valueSize": 1
															},
															{
																"declaration": 2394,
																"isOffset": false,
																"isSlot": false,
																"src": "5667:5:13",
																"valueSize": 1
															},
															{
																"declaration": 2394,
																"isOffset": false,
																"isSlot": false,
																"src": "5691:5:13",
																"valueSize": 1
															},
															{
																"declaration": 2394,
																"isOffset": false,
																"isSlot": false,
																"src": "5704:5:13",
																"valueSize": 1
															},
															{
																"declaration": 2400,
																"isOffset": false,
																"isSlot": false,
																"src": "5633:5:13",
																"valueSize": 1
															},
															{
																"declaration": 2400,
																"isOffset": false,
																"isSlot": false,
																"src": "5646:5:13",
																"valueSize": 1
															},
															{
																"declaration": 2421,
																"isOffset": false,
																"isSlot": false,
																"src": "5513:9:13",
																"valueSize": 1
															},
															{
																"declaration": 2421,
																"isOffset": false,
																"isSlot": false,
																"src": "5656:9:13",
																"valueSize": 1
															},
															{
																"declaration": 2421,
																"isOffset": false,
																"isSlot": false,
																"src": "5711:9:13",
																"valueSize": 1
															},
															{
																"declaration": 2384,
																"isOffset": false,
																"isSlot": false,
																"src": "5533:1:13",
																"valueSize": 1
															},
															{
																"declaration": 2386,
																"isOffset": false,
																"isSlot": false,
																"src": "5536:1:13",
																"valueSize": 1
															}
														],
														"id": 2423,
														"nodeType": "InlineAssembly",
														"src": "5435:300:13"
													},
													{
														"assignments": [
															2425
														],
														"declarations": [
															{
																"constant": false,
																"id": 2425,
																"mutability": "mutable",
																"name": "twos",
																"nameLocation": "5947:4:13",
																"nodeType": "VariableDeclaration",
																"scope": 2505,
																"src": "5939:12:13",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2424,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "5939:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2432,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2431,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2426,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2388,
																"src": "5954:11:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2429,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "30",
																			"id": 2427,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5969:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"id": 2428,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2388,
																			"src": "5973:11:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "5969:15:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2430,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "5968:17:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5954:31:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "5939:46:13"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "6008:362:13",
															"statements": [
																{
																	"nodeType": "YulAssignment",
																	"src": "6073:37:13",
																	"value": {
																		"arguments": [
																			{
																				"name": "denominator",
																				"nodeType": "YulIdentifier",
																				"src": "6092:11:13"
																			},
																			{
																				"name": "twos",
																				"nodeType": "YulIdentifier",
																				"src": "6105:4:13"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nodeType": "YulIdentifier",
																			"src": "6088:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6088:22:13"
																	},
																	"variableNames": [
																		{
																			"name": "denominator",
																			"nodeType": "YulIdentifier",
																			"src": "6073:11:13"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6177:25:13",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nodeType": "YulIdentifier",
																				"src": "6190:5:13"
																			},
																			{
																				"name": "twos",
																				"nodeType": "YulIdentifier",
																				"src": "6197:4:13"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nodeType": "YulIdentifier",
																			"src": "6186:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6186:16:13"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nodeType": "YulIdentifier",
																			"src": "6177:5:13"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6317:39:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "6337:1:13",
																								"type": "",
																								"value": "0"
																							},
																							{
																								"name": "twos",
																								"nodeType": "YulIdentifier",
																								"src": "6340:4:13"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "6333:3:13"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "6333:12:13"
																					},
																					{
																						"name": "twos",
																						"nodeType": "YulIdentifier",
																						"src": "6347:4:13"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "6329:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6329:23:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6354:1:13",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6325:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6325:31:13"
																	},
																	"variableNames": [
																		{
																			"name": "twos",
																			"nodeType": "YulIdentifier",
																			"src": "6317:4:13"
																		}
																	]
																}
															]
														},
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 2388,
																"isOffset": false,
																"isSlot": false,
																"src": "6073:11:13",
																"valueSize": 1
															},
															{
																"declaration": 2388,
																"isOffset": false,
																"isSlot": false,
																"src": "6092:11:13",
																"valueSize": 1
															},
															{
																"declaration": 2394,
																"isOffset": false,
																"isSlot": false,
																"src": "6177:5:13",
																"valueSize": 1
															},
															{
																"declaration": 2394,
																"isOffset": false,
																"isSlot": false,
																"src": "6190:5:13",
																"valueSize": 1
															},
															{
																"declaration": 2425,
																"isOffset": false,
																"isSlot": false,
																"src": "6105:4:13",
																"valueSize": 1
															},
															{
																"declaration": 2425,
																"isOffset": false,
																"isSlot": false,
																"src": "6197:4:13",
																"valueSize": 1
															},
															{
																"declaration": 2425,
																"isOffset": false,
																"isSlot": false,
																"src": "6317:4:13",
																"valueSize": 1
															},
															{
																"declaration": 2425,
																"isOffset": false,
																"isSlot": false,
																"src": "6340:4:13",
																"valueSize": 1
															},
															{
																"declaration": 2425,
																"isOffset": false,
																"isSlot": false,
																"src": "6347:4:13",
																"valueSize": 1
															}
														],
														"id": 2433,
														"nodeType": "InlineAssembly",
														"src": "5999:371:13"
													},
													{
														"expression": {
															"id": 2438,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2434,
																"name": "prod0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2394,
																"src": "6436:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "|=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2437,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2435,
																	"name": "prod1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2400,
																	"src": "6445:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 2436,
																	"name": "twos",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2425,
																	"src": "6453:4:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6445:12:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6436:21:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2439,
														"nodeType": "ExpressionStatement",
														"src": "6436:21:13"
													},
													{
														"assignments": [
															2441
														],
														"declarations": [
															{
																"constant": false,
																"id": 2441,
																"mutability": "mutable",
																"name": "inverse",
																"nameLocation": "6783:7:13",
																"nodeType": "VariableDeclaration",
																"scope": 2505,
																"src": "6775:15:13",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2440,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "6775:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2448,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2447,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2444,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "33",
																			"id": 2442,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "6794:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_3_by_1",
																				"typeString": "int_const 3"
																			},
																			"value": "3"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 2443,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2388,
																			"src": "6798:11:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6794:15:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2445,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "6793:17:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "^",
															"rightExpression": {
																"hexValue": "32",
																"id": 2446,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6813:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "6793:21:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "6775:39:13"
													},
													{
														"expression": {
															"id": 2455,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2449,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2441,
																"src": "7031:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2454,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2450,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7042:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2453,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2451,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2388,
																		"src": "7046:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2452,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2441,
																		"src": "7060:7:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7046:21:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7042:25:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7031:36:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2456,
														"nodeType": "ExpressionStatement",
														"src": "7031:36:13"
													},
													{
														"expression": {
															"id": 2463,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2457,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2441,
																"src": "7100:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2462,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2458,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7111:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2461,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2459,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2388,
																		"src": "7115:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2460,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2441,
																		"src": "7129:7:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7115:21:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7111:25:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7100:36:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2464,
														"nodeType": "ExpressionStatement",
														"src": "7100:36:13"
													},
													{
														"expression": {
															"id": 2471,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2465,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2441,
																"src": "7170:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2470,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2466,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7181:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2469,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2467,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2388,
																		"src": "7185:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2468,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2441,
																		"src": "7199:7:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7185:21:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7181:25:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7170:36:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2472,
														"nodeType": "ExpressionStatement",
														"src": "7170:36:13"
													},
													{
														"expression": {
															"id": 2479,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2473,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2441,
																"src": "7240:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2478,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2474,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7251:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2477,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2475,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2388,
																		"src": "7255:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2476,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2441,
																		"src": "7269:7:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7255:21:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7251:25:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7240:36:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2480,
														"nodeType": "ExpressionStatement",
														"src": "7240:36:13"
													},
													{
														"expression": {
															"id": 2487,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2481,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2441,
																"src": "7310:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2486,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2482,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7321:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2485,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2483,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2388,
																		"src": "7325:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2484,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2441,
																		"src": "7339:7:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7325:21:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7321:25:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7310:36:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2488,
														"nodeType": "ExpressionStatement",
														"src": "7310:36:13"
													},
													{
														"expression": {
															"id": 2495,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2489,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2441,
																"src": "7381:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2494,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2490,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7392:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2493,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2491,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2388,
																		"src": "7396:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2492,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2441,
																		"src": "7410:7:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7396:21:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7392:25:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7381:36:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2496,
														"nodeType": "ExpressionStatement",
														"src": "7381:36:13"
													},
													{
														"expression": {
															"id": 2501,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2497,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2391,
																"src": "7851:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2500,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2498,
																	"name": "prod0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2394,
																	"src": "7860:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 2499,
																	"name": "inverse",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2441,
																	"src": "7868:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7860:15:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7851:24:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2502,
														"nodeType": "ExpressionStatement",
														"src": "7851:24:13"
													},
													{
														"expression": {
															"id": 2503,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2391,
															"src": "7896:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2392,
														"id": 2504,
														"nodeType": "Return",
														"src": "7889:13:13"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2382,
										"nodeType": "StructuredDocumentation",
										"src": "3485:313:13",
										"text": " @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n denominator == 0.\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n Uniswap Labs also under MIT license."
									},
									"id": 2507,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "3812:6:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2389,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2384,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "3827:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2507,
												"src": "3819:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2383,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3819:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2386,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "3838:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2507,
												"src": "3830:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2385,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3830:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2388,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "3849:11:13",
												"nodeType": "VariableDeclaration",
												"scope": 2507,
												"src": "3841:19:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2387,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3841:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3818:43:13"
									},
									"returnParameters": {
										"id": 2392,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2391,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "3893:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 2507,
												"src": "3885:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2390,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3885:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3884:16:13"
									},
									"scope": 3173,
									"src": "3803:4116:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2549,
										"nodeType": "Block",
										"src": "8161:192:13",
										"statements": [
											{
												"assignments": [
													2523
												],
												"declarations": [
													{
														"constant": false,
														"id": 2523,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "8179:6:13",
														"nodeType": "VariableDeclaration",
														"scope": 2549,
														"src": "8171:14:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2522,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8171:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2529,
												"initialValue": {
													"arguments": [
														{
															"id": 2525,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2510,
															"src": "8195:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2526,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2512,
															"src": "8198:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2527,
															"name": "denominator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2514,
															"src": "8201:11:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2524,
														"name": "mulDiv",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2507,
															2550
														],
														"referencedDeclaration": 2507,
														"src": "8188:6:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 2528,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8188:25:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8171:42:13"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 2540,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 2531,
																"name": "rounding",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2517,
																"src": "8244:8:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Rounding_$2130",
																	"typeString": "enum Math.Rounding"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_enum$_Rounding_$2130",
																	"typeString": "enum Math.Rounding"
																}
															],
															"id": 2530,
															"name": "unsignedRoundsUp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3172,
															"src": "8227:16:13",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$2130_$returns$_t_bool_$",
																"typeString": "function (enum Math.Rounding) pure returns (bool)"
															}
														},
														"id": 2532,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8227:26:13",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2539,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 2534,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2510,
																	"src": "8264:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 2535,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2512,
																	"src": "8267:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 2536,
																	"name": "denominator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2514,
																	"src": "8270:11:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2533,
																"name": "mulmod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967280,
																"src": "8257:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 2537,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8257:25:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 2538,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8285:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8257:29:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "8227:59:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2546,
												"nodeType": "IfStatement",
												"src": "8223:101:13",
												"trueBody": {
													"id": 2545,
													"nodeType": "Block",
													"src": "8288:36:13",
													"statements": [
														{
															"expression": {
																"id": 2543,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2541,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2523,
																	"src": "8302:6:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 2542,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8312:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "8302:11:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2544,
															"nodeType": "ExpressionStatement",
															"src": "8302:11:13"
														}
													]
												}
											},
											{
												"expression": {
													"id": 2547,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2523,
													"src": "8340:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2521,
												"id": 2548,
												"nodeType": "Return",
												"src": "8333:13:13"
											}
										]
									},
									"documentation": {
										"id": 2508,
										"nodeType": "StructuredDocumentation",
										"src": "7925:121:13",
										"text": " @notice Calculates x * y / denominator with full precision, following the selected rounding direction."
									},
									"id": 2550,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "8060:6:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2518,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2510,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "8075:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2550,
												"src": "8067:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2509,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8067:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2512,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "8086:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2550,
												"src": "8078:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2511,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8078:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2514,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "8097:11:13",
												"nodeType": "VariableDeclaration",
												"scope": 2550,
												"src": "8089:19:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2513,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8089:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2517,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "8119:8:13",
												"nodeType": "VariableDeclaration",
												"scope": 2550,
												"src": "8110:17:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$2130",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2516,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2515,
														"name": "Rounding",
														"nameLocations": [
															"8110:8:13"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2130,
														"src": "8110:8:13"
													},
													"referencedDeclaration": 2130,
													"src": "8110:8:13",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$2130",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8066:62:13"
									},
									"returnParameters": {
										"id": 2521,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2520,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2550,
												"src": "8152:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2519,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8152:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8151:9:13"
									},
									"scope": 3173,
									"src": "8051:302:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2661,
										"nodeType": "Block",
										"src": "8644:1585:13",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2560,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2558,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2553,
														"src": "8658:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 2559,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8663:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8658:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2564,
												"nodeType": "IfStatement",
												"src": "8654:45:13",
												"trueBody": {
													"id": 2563,
													"nodeType": "Block",
													"src": "8666:33:13",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 2561,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8687:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 2557,
															"id": 2562,
															"nodeType": "Return",
															"src": "8680:8:13"
														}
													]
												}
											},
											{
												"assignments": [
													2566
												],
												"declarations": [
													{
														"constant": false,
														"id": 2566,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "9386:6:13",
														"nodeType": "VariableDeclaration",
														"scope": 2661,
														"src": "9378:14:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2565,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9378:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2575,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2574,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 2567,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9395:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2572,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 2569,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2553,
																			"src": "9406:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 2568,
																		"name": "log2",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			2829,
																			2864
																		],
																		"referencedDeclaration": 2829,
																		"src": "9401:4:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) pure returns (uint256)"
																		}
																	},
																	"id": 2570,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9401:7:13",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2571,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9412:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9401:12:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 2573,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "9400:14:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9395:19:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9378:36:13"
											},
											{
												"id": 2660,
												"nodeType": "UncheckedBlock",
												"src": "9815:408:13",
												"statements": [
													{
														"expression": {
															"id": 2585,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2576,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2566,
																"src": "9839:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2584,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2581,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2577,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2566,
																				"src": "9849:6:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2580,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2578,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2553,
																					"src": "9858:1:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2579,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2566,
																					"src": "9862:6:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9858:10:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9849:19:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2582,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9848:21:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2583,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9873:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9848:26:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9839:35:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2586,
														"nodeType": "ExpressionStatement",
														"src": "9839:35:13"
													},
													{
														"expression": {
															"id": 2596,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2587,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2566,
																"src": "9888:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2595,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2592,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2588,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2566,
																				"src": "9898:6:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2591,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2589,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2553,
																					"src": "9907:1:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2590,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2566,
																					"src": "9911:6:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9907:10:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9898:19:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2593,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9897:21:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2594,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9922:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9897:26:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9888:35:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2597,
														"nodeType": "ExpressionStatement",
														"src": "9888:35:13"
													},
													{
														"expression": {
															"id": 2607,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2598,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2566,
																"src": "9937:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2606,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2603,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2599,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2566,
																				"src": "9947:6:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2602,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2600,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2553,
																					"src": "9956:1:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2601,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2566,
																					"src": "9960:6:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9956:10:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9947:19:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2604,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9946:21:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2605,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9971:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9946:26:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9937:35:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2608,
														"nodeType": "ExpressionStatement",
														"src": "9937:35:13"
													},
													{
														"expression": {
															"id": 2618,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2609,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2566,
																"src": "9986:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2617,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2614,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2610,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2566,
																				"src": "9996:6:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2613,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2611,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2553,
																					"src": "10005:1:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2612,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2566,
																					"src": "10009:6:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10005:10:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9996:19:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2615,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9995:21:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2616,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10020:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9995:26:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9986:35:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2619,
														"nodeType": "ExpressionStatement",
														"src": "9986:35:13"
													},
													{
														"expression": {
															"id": 2629,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2620,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2566,
																"src": "10035:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2628,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2625,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2621,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2566,
																				"src": "10045:6:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2624,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2622,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2553,
																					"src": "10054:1:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2623,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2566,
																					"src": "10058:6:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10054:10:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10045:19:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2626,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10044:21:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2627,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10069:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10044:26:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10035:35:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2630,
														"nodeType": "ExpressionStatement",
														"src": "10035:35:13"
													},
													{
														"expression": {
															"id": 2640,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2631,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2566,
																"src": "10084:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2639,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2636,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2632,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2566,
																				"src": "10094:6:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2635,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2633,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2553,
																					"src": "10103:1:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2634,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2566,
																					"src": "10107:6:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10103:10:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10094:19:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2637,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10093:21:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2638,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10118:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10093:26:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10084:35:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2641,
														"nodeType": "ExpressionStatement",
														"src": "10084:35:13"
													},
													{
														"expression": {
															"id": 2651,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2642,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2566,
																"src": "10133:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2650,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2647,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2643,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2566,
																				"src": "10143:6:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2646,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2644,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2553,
																					"src": "10152:1:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2645,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2566,
																					"src": "10156:6:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10152:10:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10143:19:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2648,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10142:21:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2649,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10167:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10142:26:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10133:35:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2652,
														"nodeType": "ExpressionStatement",
														"src": "10133:35:13"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 2654,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2566,
																	"src": "10193:6:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2657,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2655,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2553,
																		"src": "10201:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 2656,
																		"name": "result",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2566,
																		"src": "10205:6:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "10201:10:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2653,
																"name": "min",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2324,
																"src": "10189:3:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 2658,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10189:23:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2557,
														"id": 2659,
														"nodeType": "Return",
														"src": "10182:30:13"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2551,
										"nodeType": "StructuredDocumentation",
										"src": "8359:223:13",
										"text": " @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n towards zero.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."
									},
									"id": 2662,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "8596:4:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2554,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2553,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "8609:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2662,
												"src": "8601:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2552,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8601:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8600:11:13"
									},
									"returnParameters": {
										"id": 2557,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2556,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2662,
												"src": "8635:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2555,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8635:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8634:9:13"
									},
									"scope": 3173,
									"src": "8587:1642:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2696,
										"nodeType": "Block",
										"src": "10405:164:13",
										"statements": [
											{
												"id": 2695,
												"nodeType": "UncheckedBlock",
												"src": "10415:148:13",
												"statements": [
													{
														"assignments": [
															2674
														],
														"declarations": [
															{
																"constant": false,
																"id": 2674,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "10447:6:13",
																"nodeType": "VariableDeclaration",
																"scope": 2695,
																"src": "10439:14:13",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2673,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "10439:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2678,
														"initialValue": {
															"arguments": [
																{
																	"id": 2676,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2665,
																	"src": "10461:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2675,
																"name": "sqrt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2662,
																	2697
																],
																"referencedDeclaration": 2662,
																"src": "10456:4:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2677,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10456:7:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "10439:24:13"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2693,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2679,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2674,
																"src": "10484:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2688,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2681,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2668,
																						"src": "10511:8:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$2130",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$2130",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 2680,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3172,
																					"src": "10494:16:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$2130_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 2682,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "10494:26:13",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2687,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2685,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 2683,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2674,
																						"src": "10524:6:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"id": 2684,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2674,
																						"src": "10533:6:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "10524:15:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2686,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2665,
																					"src": "10542:1:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10524:19:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "10494:49:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2690,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10550:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2691,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "10494:57:13",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2689,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10546:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2692,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "10493:59:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "10484:68:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2672,
														"id": 2694,
														"nodeType": "Return",
														"src": "10477:75:13"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2663,
										"nodeType": "StructuredDocumentation",
										"src": "10235:89:13",
										"text": " @notice Calculates sqrt(a), following the selected rounding direction."
									},
									"id": 2697,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "10338:4:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2669,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2665,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "10351:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2697,
												"src": "10343:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2664,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10343:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2668,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "10363:8:13",
												"nodeType": "VariableDeclaration",
												"scope": 2697,
												"src": "10354:17:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$2130",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2667,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2666,
														"name": "Rounding",
														"nameLocations": [
															"10354:8:13"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2130,
														"src": "10354:8:13"
													},
													"referencedDeclaration": 2130,
													"src": "10354:8:13",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$2130",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10342:30:13"
									},
									"returnParameters": {
										"id": 2672,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2671,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2697,
												"src": "10396:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2670,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10396:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10395:9:13"
									},
									"scope": 3173,
									"src": "10329:240:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2828,
										"nodeType": "Block",
										"src": "10760:922:13",
										"statements": [
											{
												"assignments": [
													2706
												],
												"declarations": [
													{
														"constant": false,
														"id": 2706,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "10778:6:13",
														"nodeType": "VariableDeclaration",
														"scope": 2828,
														"src": "10770:14:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2705,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10770:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2708,
												"initialValue": {
													"hexValue": "30",
													"id": 2707,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "10787:1:13",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10770:18:13"
											},
											{
												"id": 2825,
												"nodeType": "UncheckedBlock",
												"src": "10798:855:13",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2713,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2711,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2709,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2700,
																	"src": "10826:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 2710,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10835:3:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "10826:12:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2712,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10841:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "10826:16:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2723,
														"nodeType": "IfStatement",
														"src": "10822:99:13",
														"trueBody": {
															"id": 2722,
															"nodeType": "Block",
															"src": "10844:77:13",
															"statements": [
																{
																	"expression": {
																		"id": 2716,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2714,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2700,
																			"src": "10862:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2715,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10872:3:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "10862:13:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2717,
																	"nodeType": "ExpressionStatement",
																	"src": "10862:13:13"
																},
																{
																	"expression": {
																		"id": 2720,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2718,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2706,
																			"src": "10893:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2719,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10903:3:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "10893:13:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2721,
																	"nodeType": "ExpressionStatement",
																	"src": "10893:13:13"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2728,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2726,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2724,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2700,
																	"src": "10938:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2725,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10947:2:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "10938:11:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2727,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10952:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "10938:15:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2738,
														"nodeType": "IfStatement",
														"src": "10934:96:13",
														"trueBody": {
															"id": 2737,
															"nodeType": "Block",
															"src": "10955:75:13",
															"statements": [
																{
																	"expression": {
																		"id": 2731,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2729,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2700,
																			"src": "10973:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2730,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10983:2:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "10973:12:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2732,
																	"nodeType": "ExpressionStatement",
																	"src": "10973:12:13"
																},
																{
																	"expression": {
																		"id": 2735,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2733,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2706,
																			"src": "11003:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2734,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11013:2:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "11003:12:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2736,
																	"nodeType": "ExpressionStatement",
																	"src": "11003:12:13"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2743,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2741,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2739,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2700,
																	"src": "11047:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2740,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11056:2:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "11047:11:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2742,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11061:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11047:15:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2753,
														"nodeType": "IfStatement",
														"src": "11043:96:13",
														"trueBody": {
															"id": 2752,
															"nodeType": "Block",
															"src": "11064:75:13",
															"statements": [
																{
																	"expression": {
																		"id": 2746,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2744,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2700,
																			"src": "11082:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2745,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11092:2:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "11082:12:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2747,
																	"nodeType": "ExpressionStatement",
																	"src": "11082:12:13"
																},
																{
																	"expression": {
																		"id": 2750,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2748,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2706,
																			"src": "11112:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2749,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11122:2:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "11112:12:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2751,
																	"nodeType": "ExpressionStatement",
																	"src": "11112:12:13"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2758,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2756,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2754,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2700,
																	"src": "11156:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2755,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11165:2:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "11156:11:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2757,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11170:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11156:15:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2768,
														"nodeType": "IfStatement",
														"src": "11152:96:13",
														"trueBody": {
															"id": 2767,
															"nodeType": "Block",
															"src": "11173:75:13",
															"statements": [
																{
																	"expression": {
																		"id": 2761,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2759,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2700,
																			"src": "11191:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2760,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11201:2:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11191:12:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2762,
																	"nodeType": "ExpressionStatement",
																	"src": "11191:12:13"
																},
																{
																	"expression": {
																		"id": 2765,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2763,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2706,
																			"src": "11221:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2764,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11231:2:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11221:12:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2766,
																	"nodeType": "ExpressionStatement",
																	"src": "11221:12:13"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2773,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2771,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2769,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2700,
																	"src": "11265:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2770,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11274:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "11265:10:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2772,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11278:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11265:14:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2783,
														"nodeType": "IfStatement",
														"src": "11261:93:13",
														"trueBody": {
															"id": 2782,
															"nodeType": "Block",
															"src": "11281:73:13",
															"statements": [
																{
																	"expression": {
																		"id": 2776,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2774,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2700,
																			"src": "11299:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2775,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11309:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "11299:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2777,
																	"nodeType": "ExpressionStatement",
																	"src": "11299:11:13"
																},
																{
																	"expression": {
																		"id": 2780,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2778,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2706,
																			"src": "11328:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2779,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11338:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "11328:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2781,
																	"nodeType": "ExpressionStatement",
																	"src": "11328:11:13"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2788,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2786,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2784,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2700,
																	"src": "11371:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 2785,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11380:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "11371:10:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2787,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11384:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11371:14:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2798,
														"nodeType": "IfStatement",
														"src": "11367:93:13",
														"trueBody": {
															"id": 2797,
															"nodeType": "Block",
															"src": "11387:73:13",
															"statements": [
																{
																	"expression": {
																		"id": 2791,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2789,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2700,
																			"src": "11405:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2790,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11415:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "11405:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2792,
																	"nodeType": "ExpressionStatement",
																	"src": "11405:11:13"
																},
																{
																	"expression": {
																		"id": 2795,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2793,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2706,
																			"src": "11434:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2794,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11444:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "11434:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2796,
																	"nodeType": "ExpressionStatement",
																	"src": "11434:11:13"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2803,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2801,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2799,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2700,
																	"src": "11477:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 2800,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11486:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "11477:10:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2802,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11490:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11477:14:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2813,
														"nodeType": "IfStatement",
														"src": "11473:93:13",
														"trueBody": {
															"id": 2812,
															"nodeType": "Block",
															"src": "11493:73:13",
															"statements": [
																{
																	"expression": {
																		"id": 2806,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2804,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2700,
																			"src": "11511:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2805,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11521:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "11511:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2807,
																	"nodeType": "ExpressionStatement",
																	"src": "11511:11:13"
																},
																{
																	"expression": {
																		"id": 2810,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2808,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2706,
																			"src": "11540:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2809,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11550:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "11540:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2811,
																	"nodeType": "ExpressionStatement",
																	"src": "11540:11:13"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2818,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2816,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2814,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2700,
																	"src": "11583:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2815,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11592:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "11583:10:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2817,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11596:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11583:14:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2824,
														"nodeType": "IfStatement",
														"src": "11579:64:13",
														"trueBody": {
															"id": 2823,
															"nodeType": "Block",
															"src": "11599:44:13",
															"statements": [
																{
																	"expression": {
																		"id": 2821,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2819,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2706,
																			"src": "11617:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2820,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11627:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "11617:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2822,
																	"nodeType": "ExpressionStatement",
																	"src": "11617:11:13"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 2826,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2706,
													"src": "11669:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2704,
												"id": 2827,
												"nodeType": "Return",
												"src": "11662:13:13"
											}
										]
									},
									"documentation": {
										"id": 2698,
										"nodeType": "StructuredDocumentation",
										"src": "10575:119:13",
										"text": " @dev Return the log in base 2 of a positive value rounded towards zero.\n Returns 0 if given 0."
									},
									"id": 2829,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "10708:4:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2701,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2700,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10721:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 2829,
												"src": "10713:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2699,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10713:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10712:15:13"
									},
									"returnParameters": {
										"id": 2704,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2703,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2829,
												"src": "10751:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2702,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10751:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10750:9:13"
									},
									"scope": 3173,
									"src": "10699:983:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2863,
										"nodeType": "Block",
										"src": "11915:168:13",
										"statements": [
											{
												"id": 2862,
												"nodeType": "UncheckedBlock",
												"src": "11925:152:13",
												"statements": [
													{
														"assignments": [
															2841
														],
														"declarations": [
															{
																"constant": false,
																"id": 2841,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "11957:6:13",
																"nodeType": "VariableDeclaration",
																"scope": 2862,
																"src": "11949:14:13",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2840,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "11949:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2845,
														"initialValue": {
															"arguments": [
																{
																	"id": 2843,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2832,
																	"src": "11971:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2842,
																"name": "log2",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2829,
																	2864
																],
																"referencedDeclaration": 2829,
																"src": "11966:4:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2844,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11966:11:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "11949:28:13"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2860,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2846,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2841,
																"src": "11998:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2855,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2848,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2835,
																						"src": "12025:8:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$2130",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$2130",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 2847,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3172,
																					"src": "12008:16:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$2130_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 2849,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "12008:26:13",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2854,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2852,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 2850,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "12038:1:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"id": 2851,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2841,
																						"src": "12043:6:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "12038:11:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2853,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2832,
																					"src": "12052:5:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "12038:19:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "12008:49:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2857,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12064:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2858,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "12008:57:13",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2856,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12060:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2859,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "12007:59:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "11998:68:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2839,
														"id": 2861,
														"nodeType": "Return",
														"src": "11991:75:13"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2830,
										"nodeType": "StructuredDocumentation",
										"src": "11688:142:13",
										"text": " @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2864,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "11844:4:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2836,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2832,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11857:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 2864,
												"src": "11849:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2831,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11849:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2835,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "11873:8:13",
												"nodeType": "VariableDeclaration",
												"scope": 2864,
												"src": "11864:17:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$2130",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2834,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2833,
														"name": "Rounding",
														"nameLocations": [
															"11864:8:13"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2130,
														"src": "11864:8:13"
													},
													"referencedDeclaration": 2130,
													"src": "11864:8:13",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$2130",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11848:34:13"
									},
									"returnParameters": {
										"id": 2839,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2838,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2864,
												"src": "11906:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2837,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11906:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11905:9:13"
									},
									"scope": 3173,
									"src": "11835:248:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2992,
										"nodeType": "Block",
										"src": "12276:854:13",
										"statements": [
											{
												"assignments": [
													2873
												],
												"declarations": [
													{
														"constant": false,
														"id": 2873,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "12294:6:13",
														"nodeType": "VariableDeclaration",
														"scope": 2992,
														"src": "12286:14:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2872,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "12286:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2875,
												"initialValue": {
													"hexValue": "30",
													"id": 2874,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "12303:1:13",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12286:18:13"
											},
											{
												"id": 2989,
												"nodeType": "UncheckedBlock",
												"src": "12314:787:13",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2880,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2876,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2867,
																"src": "12342:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																},
																"id": 2879,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2877,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12351:2:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2878,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12357:2:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "12351:8:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																}
															},
															"src": "12342:17:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2892,
														"nodeType": "IfStatement",
														"src": "12338:103:13",
														"trueBody": {
															"id": 2891,
															"nodeType": "Block",
															"src": "12361:80:13",
															"statements": [
																{
																	"expression": {
																		"id": 2885,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2881,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2867,
																			"src": "12379:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			},
																			"id": 2884,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2882,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12388:2:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3634",
																				"id": 2883,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12394:2:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_64_by_1",
																					"typeString": "int_const 64"
																				},
																				"value": "64"
																			},
																			"src": "12388:8:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			}
																		},
																		"src": "12379:17:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2886,
																	"nodeType": "ExpressionStatement",
																	"src": "12379:17:13"
																},
																{
																	"expression": {
																		"id": 2889,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2887,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2873,
																			"src": "12414:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2888,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12424:2:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "12414:12:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2890,
																	"nodeType": "ExpressionStatement",
																	"src": "12414:12:13"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2897,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2893,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2867,
																"src": "12458:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																},
																"id": 2896,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2894,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12467:2:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2895,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12473:2:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "12467:8:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																}
															},
															"src": "12458:17:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2909,
														"nodeType": "IfStatement",
														"src": "12454:103:13",
														"trueBody": {
															"id": 2908,
															"nodeType": "Block",
															"src": "12477:80:13",
															"statements": [
																{
																	"expression": {
																		"id": 2902,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2898,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2867,
																			"src": "12495:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			},
																			"id": 2901,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2899,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12504:2:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3332",
																				"id": 2900,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12510:2:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_32_by_1",
																					"typeString": "int_const 32"
																				},
																				"value": "32"
																			},
																			"src": "12504:8:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			}
																		},
																		"src": "12495:17:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2903,
																	"nodeType": "ExpressionStatement",
																	"src": "12495:17:13"
																},
																{
																	"expression": {
																		"id": 2906,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2904,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2873,
																			"src": "12530:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2905,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12540:2:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "12530:12:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2907,
																	"nodeType": "ExpressionStatement",
																	"src": "12530:12:13"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2914,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2910,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2867,
																"src": "12574:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																},
																"id": 2913,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2911,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12583:2:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2912,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12589:2:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "12583:8:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																}
															},
															"src": "12574:17:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2926,
														"nodeType": "IfStatement",
														"src": "12570:103:13",
														"trueBody": {
															"id": 2925,
															"nodeType": "Block",
															"src": "12593:80:13",
															"statements": [
																{
																	"expression": {
																		"id": 2919,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2915,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2867,
																			"src": "12611:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			},
																			"id": 2918,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2916,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12620:2:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3136",
																				"id": 2917,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12626:2:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_16_by_1",
																					"typeString": "int_const 16"
																				},
																				"value": "16"
																			},
																			"src": "12620:8:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			}
																		},
																		"src": "12611:17:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2920,
																	"nodeType": "ExpressionStatement",
																	"src": "12611:17:13"
																},
																{
																	"expression": {
																		"id": 2923,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2921,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2873,
																			"src": "12646:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2922,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12656:2:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "12646:12:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2924,
																	"nodeType": "ExpressionStatement",
																	"src": "12646:12:13"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2931,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2927,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2867,
																"src": "12690:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																},
																"id": 2930,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2928,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12699:2:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2929,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12705:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "12699:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																}
															},
															"src": "12690:16:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2943,
														"nodeType": "IfStatement",
														"src": "12686:100:13",
														"trueBody": {
															"id": 2942,
															"nodeType": "Block",
															"src": "12708:78:13",
															"statements": [
																{
																	"expression": {
																		"id": 2936,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2932,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2867,
																			"src": "12726:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			},
																			"id": 2935,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2933,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12735:2:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "38",
																				"id": 2934,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12741:1:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_8_by_1",
																					"typeString": "int_const 8"
																				},
																				"value": "8"
																			},
																			"src": "12735:7:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			}
																		},
																		"src": "12726:16:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2937,
																	"nodeType": "ExpressionStatement",
																	"src": "12726:16:13"
																},
																{
																	"expression": {
																		"id": 2940,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2938,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2873,
																			"src": "12760:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2939,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12770:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "12760:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2941,
																	"nodeType": "ExpressionStatement",
																	"src": "12760:11:13"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2948,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2944,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2867,
																"src": "12803:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																},
																"id": 2947,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2945,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12812:2:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 2946,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12818:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "12812:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																}
															},
															"src": "12803:16:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2960,
														"nodeType": "IfStatement",
														"src": "12799:100:13",
														"trueBody": {
															"id": 2959,
															"nodeType": "Block",
															"src": "12821:78:13",
															"statements": [
																{
																	"expression": {
																		"id": 2953,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2949,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2867,
																			"src": "12839:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			},
																			"id": 2952,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2950,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12848:2:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "34",
																				"id": 2951,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12854:1:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_4_by_1",
																					"typeString": "int_const 4"
																				},
																				"value": "4"
																			},
																			"src": "12848:7:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			}
																		},
																		"src": "12839:16:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2954,
																	"nodeType": "ExpressionStatement",
																	"src": "12839:16:13"
																},
																{
																	"expression": {
																		"id": 2957,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2955,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2873,
																			"src": "12873:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2956,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12883:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "12873:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2958,
																	"nodeType": "ExpressionStatement",
																	"src": "12873:11:13"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2965,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2961,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2867,
																"src": "12916:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"id": 2964,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2962,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12925:2:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 2963,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12931:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "12925:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																}
															},
															"src": "12916:16:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2977,
														"nodeType": "IfStatement",
														"src": "12912:100:13",
														"trueBody": {
															"id": 2976,
															"nodeType": "Block",
															"src": "12934:78:13",
															"statements": [
																{
																	"expression": {
																		"id": 2970,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2966,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2867,
																			"src": "12952:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			},
																			"id": 2969,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2967,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12961:2:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "32",
																				"id": 2968,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12967:1:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				},
																				"value": "2"
																			},
																			"src": "12961:7:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			}
																		},
																		"src": "12952:16:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2971,
																	"nodeType": "ExpressionStatement",
																	"src": "12952:16:13"
																},
																{
																	"expression": {
																		"id": 2974,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2972,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2873,
																			"src": "12986:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2973,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12996:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "12986:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2975,
																	"nodeType": "ExpressionStatement",
																	"src": "12986:11:13"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2982,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2978,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2867,
																"src": "13029:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"id": 2981,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2979,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13038:2:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2980,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13044:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "13038:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																}
															},
															"src": "13029:16:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2988,
														"nodeType": "IfStatement",
														"src": "13025:66:13",
														"trueBody": {
															"id": 2987,
															"nodeType": "Block",
															"src": "13047:44:13",
															"statements": [
																{
																	"expression": {
																		"id": 2985,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2983,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2873,
																			"src": "13065:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2984,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13075:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "13065:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2986,
																	"nodeType": "ExpressionStatement",
																	"src": "13065:11:13"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 2990,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2873,
													"src": "13117:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2871,
												"id": 2991,
												"nodeType": "Return",
												"src": "13110:13:13"
											}
										]
									},
									"documentation": {
										"id": 2865,
										"nodeType": "StructuredDocumentation",
										"src": "12089:120:13",
										"text": " @dev Return the log in base 10 of a positive value rounded towards zero.\n Returns 0 if given 0."
									},
									"id": 2993,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "12223:5:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2868,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2867,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "12237:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 2993,
												"src": "12229:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2866,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12229:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12228:15:13"
									},
									"returnParameters": {
										"id": 2871,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2870,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2993,
												"src": "12267:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2869,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12267:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12266:9:13"
									},
									"scope": 3173,
									"src": "12214:916:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3027,
										"nodeType": "Block",
										"src": "13365:170:13",
										"statements": [
											{
												"id": 3026,
												"nodeType": "UncheckedBlock",
												"src": "13375:154:13",
												"statements": [
													{
														"assignments": [
															3005
														],
														"declarations": [
															{
																"constant": false,
																"id": 3005,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "13407:6:13",
																"nodeType": "VariableDeclaration",
																"scope": 3026,
																"src": "13399:14:13",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 3004,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "13399:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 3009,
														"initialValue": {
															"arguments": [
																{
																	"id": 3007,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2996,
																	"src": "13422:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 3006,
																"name": "log10",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2993,
																	3028
																],
																"referencedDeclaration": 2993,
																"src": "13416:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 3008,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13416:12:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "13399:29:13"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3024,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3010,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3005,
																"src": "13449:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 3019,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 3012,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2999,
																						"src": "13476:8:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$2130",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$2130",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 3011,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3172,
																					"src": "13459:16:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$2130_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 3013,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "13459:26:13",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 3018,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 3016,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "3130",
																						"id": 3014,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "13489:2:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_10_by_1",
																							"typeString": "int_const 10"
																						},
																						"value": "10"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "**",
																					"rightExpression": {
																						"id": 3015,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3005,
																						"src": "13495:6:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "13489:12:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 3017,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2996,
																					"src": "13504:5:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "13489:20:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "13459:50:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 3021,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13516:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 3022,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "13459:58:13",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 3020,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13512:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 3023,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "13458:60:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "13449:69:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 3003,
														"id": 3025,
														"nodeType": "Return",
														"src": "13442:76:13"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2994,
										"nodeType": "StructuredDocumentation",
										"src": "13136:143:13",
										"text": " @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 3028,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "13293:5:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3000,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2996,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "13307:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 3028,
												"src": "13299:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2995,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13299:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2999,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "13323:8:13",
												"nodeType": "VariableDeclaration",
												"scope": 3028,
												"src": "13314:17:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$2130",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2998,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2997,
														"name": "Rounding",
														"nameLocations": [
															"13314:8:13"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2130,
														"src": "13314:8:13"
													},
													"referencedDeclaration": 2130,
													"src": "13314:8:13",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$2130",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13298:34:13"
									},
									"returnParameters": {
										"id": 3003,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3002,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3028,
												"src": "13356:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3001,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13356:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13355:9:13"
									},
									"scope": 3173,
									"src": "13284:251:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3114,
										"nodeType": "Block",
										"src": "13855:600:13",
										"statements": [
											{
												"assignments": [
													3037
												],
												"declarations": [
													{
														"constant": false,
														"id": 3037,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "13873:6:13",
														"nodeType": "VariableDeclaration",
														"scope": 3114,
														"src": "13865:14:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3036,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "13865:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3039,
												"initialValue": {
													"hexValue": "30",
													"id": 3038,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "13882:1:13",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13865:18:13"
											},
											{
												"id": 3111,
												"nodeType": "UncheckedBlock",
												"src": "13893:533:13",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3044,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3042,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3040,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3031,
																	"src": "13921:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 3041,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13930:3:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "13921:12:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3043,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "13936:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "13921:16:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3054,
														"nodeType": "IfStatement",
														"src": "13917:98:13",
														"trueBody": {
															"id": 3053,
															"nodeType": "Block",
															"src": "13939:76:13",
															"statements": [
																{
																	"expression": {
																		"id": 3047,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3045,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3031,
																			"src": "13957:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 3046,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13967:3:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "13957:13:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3048,
																	"nodeType": "ExpressionStatement",
																	"src": "13957:13:13"
																},
																{
																	"expression": {
																		"id": 3051,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3049,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3037,
																			"src": "13988:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 3050,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13998:2:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "13988:12:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3052,
																	"nodeType": "ExpressionStatement",
																	"src": "13988:12:13"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3059,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3057,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3055,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3031,
																	"src": "14032:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 3056,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14041:2:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "14032:11:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3058,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14046:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14032:15:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3069,
														"nodeType": "IfStatement",
														"src": "14028:95:13",
														"trueBody": {
															"id": 3068,
															"nodeType": "Block",
															"src": "14049:74:13",
															"statements": [
																{
																	"expression": {
																		"id": 3062,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3060,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3031,
																			"src": "14067:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 3061,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14077:2:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "14067:12:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3063,
																	"nodeType": "ExpressionStatement",
																	"src": "14067:12:13"
																},
																{
																	"expression": {
																		"id": 3066,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3064,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3037,
																			"src": "14097:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 3065,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14107:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "14097:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3067,
																	"nodeType": "ExpressionStatement",
																	"src": "14097:11:13"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3074,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3072,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3070,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3031,
																	"src": "14140:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 3071,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14149:2:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "14140:11:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3073,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14154:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14140:15:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3084,
														"nodeType": "IfStatement",
														"src": "14136:95:13",
														"trueBody": {
															"id": 3083,
															"nodeType": "Block",
															"src": "14157:74:13",
															"statements": [
																{
																	"expression": {
																		"id": 3077,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3075,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3031,
																			"src": "14175:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 3076,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14185:2:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "14175:12:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3078,
																	"nodeType": "ExpressionStatement",
																	"src": "14175:12:13"
																},
																{
																	"expression": {
																		"id": 3081,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3079,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3037,
																			"src": "14205:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 3080,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14215:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "14205:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3082,
																	"nodeType": "ExpressionStatement",
																	"src": "14205:11:13"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3089,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3087,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3085,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3031,
																	"src": "14248:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 3086,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14257:2:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "14248:11:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3088,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14262:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14248:15:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3099,
														"nodeType": "IfStatement",
														"src": "14244:95:13",
														"trueBody": {
															"id": 3098,
															"nodeType": "Block",
															"src": "14265:74:13",
															"statements": [
																{
																	"expression": {
																		"id": 3092,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3090,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3031,
																			"src": "14283:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 3091,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14293:2:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "14283:12:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3093,
																	"nodeType": "ExpressionStatement",
																	"src": "14283:12:13"
																},
																{
																	"expression": {
																		"id": 3096,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3094,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3037,
																			"src": "14313:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 3095,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14323:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "14313:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3097,
																	"nodeType": "ExpressionStatement",
																	"src": "14313:11:13"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3104,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3102,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3100,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3031,
																	"src": "14356:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 3101,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14365:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "14356:10:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3103,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14369:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14356:14:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3110,
														"nodeType": "IfStatement",
														"src": "14352:64:13",
														"trueBody": {
															"id": 3109,
															"nodeType": "Block",
															"src": "14372:44:13",
															"statements": [
																{
																	"expression": {
																		"id": 3107,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3105,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3037,
																			"src": "14390:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 3106,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14400:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "14390:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3108,
																	"nodeType": "ExpressionStatement",
																	"src": "14390:11:13"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 3112,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3037,
													"src": "14442:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 3035,
												"id": 3113,
												"nodeType": "Return",
												"src": "14435:13:13"
											}
										]
									},
									"documentation": {
										"id": 3029,
										"nodeType": "StructuredDocumentation",
										"src": "13541:246:13",
										"text": " @dev Return the log in base 256 of a positive value rounded towards zero.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."
									},
									"id": 3115,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "13801:6:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3032,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3031,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "13816:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 3115,
												"src": "13808:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3030,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13808:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13807:15:13"
									},
									"returnParameters": {
										"id": 3035,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3034,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3115,
												"src": "13846:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3033,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13846:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13845:9:13"
									},
									"scope": 3173,
									"src": "13792:663:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3152,
										"nodeType": "Block",
										"src": "14692:177:13",
										"statements": [
											{
												"id": 3151,
												"nodeType": "UncheckedBlock",
												"src": "14702:161:13",
												"statements": [
													{
														"assignments": [
															3127
														],
														"declarations": [
															{
																"constant": false,
																"id": 3127,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "14734:6:13",
																"nodeType": "VariableDeclaration",
																"scope": 3151,
																"src": "14726:14:13",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 3126,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "14726:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 3131,
														"initialValue": {
															"arguments": [
																{
																	"id": 3129,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3118,
																	"src": "14750:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 3128,
																"name": "log256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	3115,
																	3153
																],
																"referencedDeclaration": 3115,
																"src": "14743:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 3130,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14743:13:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "14726:30:13"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3149,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3132,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3127,
																"src": "14777:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 3144,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 3134,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3121,
																						"src": "14804:8:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$2130",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$2130",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 3133,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3172,
																					"src": "14787:16:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$2130_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 3135,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "14787:26:13",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 3143,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 3141,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 3136,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "14817:1:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"components": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 3139,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 3137,
																									"name": "result",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 3127,
																									"src": "14823:6:13",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "<<",
																								"rightExpression": {
																									"hexValue": "33",
																									"id": 3138,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "14833:1:13",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_3_by_1",
																										"typeString": "int_const 3"
																									},
																									"value": "3"
																								},
																								"src": "14823:11:13",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"id": 3140,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "14822:13:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "14817:18:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 3142,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3118,
																					"src": "14838:5:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "14817:26:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "14787:56:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 3146,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14850:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 3147,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "14787:64:13",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 3145,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14846:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 3148,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "14786:66:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "14777:75:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 3125,
														"id": 3150,
														"nodeType": "Return",
														"src": "14770:82:13"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 3116,
										"nodeType": "StructuredDocumentation",
										"src": "14461:144:13",
										"text": " @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 3153,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "14619:6:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3122,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3118,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "14634:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 3153,
												"src": "14626:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3117,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14626:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3121,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "14650:8:13",
												"nodeType": "VariableDeclaration",
												"scope": 3153,
												"src": "14641:17:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$2130",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 3120,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3119,
														"name": "Rounding",
														"nameLocations": [
															"14641:8:13"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2130,
														"src": "14641:8:13"
													},
													"referencedDeclaration": 2130,
													"src": "14641:8:13",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$2130",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14625:34:13"
									},
									"returnParameters": {
										"id": 3125,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3124,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3153,
												"src": "14683:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3123,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14683:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14682:9:13"
									},
									"scope": 3173,
									"src": "14610:259:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3171,
										"nodeType": "Block",
										"src": "15067:48:13",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													},
													"id": 3169,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"id": 3167,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 3164,
																	"name": "rounding",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3157,
																	"src": "15090:8:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_Rounding_$2130",
																		"typeString": "enum Math.Rounding"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_enum$_Rounding_$2130",
																		"typeString": "enum Math.Rounding"
																	}
																],
																"id": 3163,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "15084:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint8_$",
																	"typeString": "type(uint8)"
																},
																"typeName": {
																	"id": 3162,
																	"name": "uint8",
																	"nodeType": "ElementaryTypeName",
																	"src": "15084:5:13",
																	"typeDescriptions": {}
																}
															},
															"id": 3165,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15084:15:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "%",
														"rightExpression": {
															"hexValue": "32",
															"id": 3166,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15102:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "15084:19:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "31",
														"id": 3168,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "15107:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "15084:24:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 3161,
												"id": 3170,
												"nodeType": "Return",
												"src": "15077:31:13"
											}
										]
									},
									"documentation": {
										"id": 3154,
										"nodeType": "StructuredDocumentation",
										"src": "14875:113:13",
										"text": " @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers."
									},
									"id": 3172,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unsignedRoundsUp",
									"nameLocation": "15002:16:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3157,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "15028:8:13",
												"nodeType": "VariableDeclaration",
												"scope": 3172,
												"src": "15019:17:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$2130",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 3156,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3155,
														"name": "Rounding",
														"nameLocations": [
															"15019:8:13"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2130,
														"src": "15019:8:13"
													},
													"referencedDeclaration": 2130,
													"src": "15019:8:13",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$2130",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15018:19:13"
									},
									"returnParameters": {
										"id": 3161,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3160,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3172,
												"src": "15061:4:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3159,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15061:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15060:6:13"
									},
									"scope": 3173,
									"src": "14993:122:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 3174,
							"src": "203:14914:13",
							"usedErrors": [
								2125
							],
							"usedEvents": []
						}
					],
					"src": "103:15015:13"
				},
				"id": 13
			},
			"contracts/SomTokens/SomTokens.sol": {
				"ast": {
					"absolutePath": "contracts/SomTokens/SomTokens.sol",
					"exportedSymbols": {
						"Arrays": [
							1951
						],
						"Context": [
							1973
						],
						"ERC1155": [
							1335
						],
						"ERC1155Burnable": [
							1580
						],
						"ERC1155Supply": [
							1752
						],
						"ERC165": [
							2107
						],
						"IERC1155": [
							1458
						],
						"IERC1155Errors": [
							284
						],
						"IERC1155MetadataURI": [
							1768
						],
						"IERC1155Receiver": [
							1500
						],
						"IERC165": [
							2119
						],
						"Ownable": [
							147
						],
						"SomTokens": [
							3327
						]
					},
					"id": 3328,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 3175,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:14"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 3176,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3328,
							"sourceUnit": 148,
							"src": "58:52:14",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol",
							"file": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol",
							"id": 3177,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3328,
							"sourceUnit": 1336,
							"src": "111:59:14",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol",
							"file": "@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol",
							"id": 3178,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3328,
							"sourceUnit": 1581,
							"src": "171:78:14",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol",
							"file": "@openzeppelin/contracts/token/ERC1155/extensions/ERC1155Supply.sol",
							"id": 3179,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3328,
							"sourceUnit": 1753,
							"src": "250:76:14",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 3181,
										"name": "ERC1155",
										"nameLocations": [
											"398:7:14"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1335,
										"src": "398:7:14"
									},
									"id": 3182,
									"nodeType": "InheritanceSpecifier",
									"src": "398:7:14"
								},
								{
									"baseName": {
										"id": 3183,
										"name": "ERC1155Burnable",
										"nameLocations": [
											"407:15:14"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1580,
										"src": "407:15:14"
									},
									"id": 3184,
									"nodeType": "InheritanceSpecifier",
									"src": "407:15:14"
								},
								{
									"baseName": {
										"id": 3185,
										"name": "Ownable",
										"nameLocations": [
											"424:7:14"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "424:7:14"
									},
									"id": 3186,
									"nodeType": "InheritanceSpecifier",
									"src": "424:7:14"
								},
								{
									"baseName": {
										"id": 3187,
										"name": "ERC1155Supply",
										"nameLocations": [
											"433:13:14"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1752,
										"src": "433:13:14"
									},
									"id": 3188,
									"nodeType": "InheritanceSpecifier",
									"src": "433:13:14"
								}
							],
							"canonicalName": "SomTokens",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 3180,
								"nodeType": "StructuredDocumentation",
								"src": "328:48:14",
								"text": "@custom:security-contact krlebyte@gmail.com"
							},
							"fullyImplemented": true,
							"id": 3327,
							"linearizedBaseContracts": [
								3327,
								1752,
								147,
								1580,
								1335,
								284,
								1768,
								1458,
								2107,
								2119,
								1973
							],
							"name": "SomTokens",
							"nameLocation": "385:9:14",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "a168d873",
									"id": 3190,
									"mutability": "mutable",
									"name": "gameAddress",
									"nameLocation": "466:11:14",
									"nodeType": "VariableDeclaration",
									"scope": 3327,
									"src": "451:26:14",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 3189,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "451:7:14",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 3201,
										"nodeType": "Block",
										"src": "590:2:14",
										"statements": []
									},
									"id": 3202,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "68747470733a2f2f736f6d2e657465726e697461732e67616d65732f6a736f6e",
													"id": 3195,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "528:34:14",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_f093146c159b7c12d8fb28c25874ba2265309239099c0dcf30939cae3f3144b8",
														"typeString": "literal_string \"https://som.eternitas.games/json\""
													},
													"value": "https://som.eternitas.games/json"
												}
											],
											"id": 3196,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 3194,
												"name": "ERC1155",
												"nameLocations": [
													"520:7:14"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1335,
												"src": "520:7:14"
											},
											"nodeType": "ModifierInvocation",
											"src": "520:43:14"
										},
										{
											"arguments": [
												{
													"id": 3198,
													"name": "initialOwner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3192,
													"src": "576:12:14",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 3199,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 3197,
												"name": "Ownable",
												"nameLocations": [
													"568:7:14"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "568:7:14"
											},
											"nodeType": "ModifierInvocation",
											"src": "568:21:14"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3193,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3192,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "502:12:14",
												"nodeType": "VariableDeclaration",
												"scope": 3202,
												"src": "494:20:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3191,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "494:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "493:22:14"
									},
									"returnParameters": {
										"id": 3200,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "590:0:14"
									},
									"scope": 3327,
									"src": "482:110:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3238,
										"nodeType": "Block",
										"src": "702:180:14",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 3219,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3214,
																"name": "gameAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3190,
																"src": "716:11:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 3217,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "739:1:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 3216,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "731:7:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 3215,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "731:7:14",
																		"typeDescriptions": {}
																	}
																},
																"id": 3218,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "731:10:14",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "716:25:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "47616d652061646472657373206e6f74207365742e",
															"id": 3220,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "743:23:14",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_af594d337044a8f569b563e5e50dceadb0c730709838c18fb2ed04a3ebd09d4c",
																"typeString": "literal_string \"Game address not set.\""
															},
															"value": "Game address not set."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_af594d337044a8f569b563e5e50dceadb0c730709838c18fb2ed04a3ebd09d4c",
																"typeString": "literal_string \"Game address not set.\""
															}
														],
														"id": 3213,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "708:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3221,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "708:59:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3222,
												"nodeType": "ExpressionStatement",
												"src": "708:59:14"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 3227,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 3224,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "781:3:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 3225,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "785:6:14",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "781:10:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 3226,
																"name": "gameAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3190,
																"src": "795:11:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "781:25:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f6e6c792067616d6520636f6e74726163742063616e206d696e742e",
															"id": 3228,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "808:30:14",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c65de3f23241930bb68890104d2a62495b3bdd480b7c2f8cdc49ef74d02acb25",
																"typeString": "literal_string \"Only game contract can mint.\""
															},
															"value": "Only game contract can mint."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c65de3f23241930bb68890104d2a62495b3bdd480b7c2f8cdc49ef74d02acb25",
																"typeString": "literal_string \"Only game contract can mint.\""
															}
														],
														"id": 3223,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "773:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3229,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "773:66:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3230,
												"nodeType": "ExpressionStatement",
												"src": "773:66:14"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3232,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3204,
															"src": "851:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3233,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3206,
															"src": "860:2:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 3234,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3208,
															"src": "864:6:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 3235,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3210,
															"src": "872:4:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 3231,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1010,
														"src": "845:5:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,uint256,uint256,bytes memory)"
														}
													},
													"id": 3236,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "845:32:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3237,
												"nodeType": "ExpressionStatement",
												"src": "845:32:14"
											}
										]
									},
									"functionSelector": "731133e9",
									"id": 3239,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mint",
									"nameLocation": "605:4:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3211,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3204,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "624:7:14",
												"nodeType": "VariableDeclaration",
												"scope": 3239,
												"src": "616:15:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3203,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "616:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3206,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "645:2:14",
												"nodeType": "VariableDeclaration",
												"scope": 3239,
												"src": "637:10:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3205,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "637:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3208,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "661:6:14",
												"nodeType": "VariableDeclaration",
												"scope": 3239,
												"src": "653:14:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3207,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "653:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3210,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "686:4:14",
												"nodeType": "VariableDeclaration",
												"scope": 3239,
												"src": "673:17:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 3209,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "673:5:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "610:84:14"
									},
									"returnParameters": {
										"id": 3212,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "702:0:14"
									},
									"scope": 3327,
									"src": "596:286:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3277,
										"nodeType": "Block",
										"src": "1012:182:14",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 3258,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3253,
																"name": "gameAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3190,
																"src": "1026:11:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 3256,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1049:1:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 3255,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1041:7:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 3254,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1041:7:14",
																		"typeDescriptions": {}
																	}
																},
																"id": 3257,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1041:10:14",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1026:25:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "47616d652061646472657373206e6f74207365742e",
															"id": 3259,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1053:23:14",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_af594d337044a8f569b563e5e50dceadb0c730709838c18fb2ed04a3ebd09d4c",
																"typeString": "literal_string \"Game address not set.\""
															},
															"value": "Game address not set."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_af594d337044a8f569b563e5e50dceadb0c730709838c18fb2ed04a3ebd09d4c",
																"typeString": "literal_string \"Game address not set.\""
															}
														],
														"id": 3252,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1018:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3260,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1018:59:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3261,
												"nodeType": "ExpressionStatement",
												"src": "1018:59:14"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 3266,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 3263,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1091:3:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 3264,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1095:6:14",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1091:10:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 3265,
																"name": "gameAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3190,
																"src": "1105:11:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1091:25:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f6e6c792067616d6520636f6e74726163742063616e206d696e742e",
															"id": 3267,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1118:30:14",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c65de3f23241930bb68890104d2a62495b3bdd480b7c2f8cdc49ef74d02acb25",
																"typeString": "literal_string \"Only game contract can mint.\""
															},
															"value": "Only game contract can mint."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c65de3f23241930bb68890104d2a62495b3bdd480b7c2f8cdc49ef74d02acb25",
																"typeString": "literal_string \"Only game contract can mint.\""
															}
														],
														"id": 3262,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1083:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3268,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1083:66:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3269,
												"nodeType": "ExpressionStatement",
												"src": "1083:66:14"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3271,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3241,
															"src": "1166:2:14",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3272,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3244,
															"src": "1170:3:14",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 3273,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3247,
															"src": "1175:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 3274,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3249,
															"src": "1184:4:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 3270,
														"name": "_mintBatch",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1051,
														"src": "1155:10:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 3275,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1155:34:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3276,
												"nodeType": "ExpressionStatement",
												"src": "1155:34:14"
											}
										]
									},
									"functionSelector": "1f7fdffa",
									"id": 3278,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mintBatch",
									"nameLocation": "895:9:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3250,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3241,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "919:2:14",
												"nodeType": "VariableDeclaration",
												"scope": 3278,
												"src": "911:10:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3240,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "911:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3244,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "944:3:14",
												"nodeType": "VariableDeclaration",
												"scope": 3278,
												"src": "927:20:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 3242,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "927:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 3243,
													"nodeType": "ArrayTypeName",
													"src": "927:9:14",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3247,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "970:7:14",
												"nodeType": "VariableDeclaration",
												"scope": 3278,
												"src": "953:24:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 3245,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "953:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 3246,
													"nodeType": "ArrayTypeName",
													"src": "953:9:14",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3249,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "996:4:14",
												"nodeType": "VariableDeclaration",
												"scope": 3278,
												"src": "983:17:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 3248,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "983:5:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "905:99:14"
									},
									"returnParameters": {
										"id": 3251,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1012:0:14"
									},
									"scope": 3327,
									"src": "886:308:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3299,
										"nodeType": "Block",
										"src": "1965:104:14",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 3291,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3286,
																"name": "gameAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3190,
																"src": "1979:11:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 3289,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2002:1:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 3288,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1994:7:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 3287,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1994:7:14",
																		"typeDescriptions": {}
																	}
																},
																"id": 3290,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1994:10:14",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1979:25:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "47616d65206164647265737320697320616c7265616479207365742e",
															"id": 3292,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2006:30:14",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_732fb107256944bc8e16b4baa2a1ee32d437565fb724a962aaca04c4544c866c",
																"typeString": "literal_string \"Game address is already set.\""
															},
															"value": "Game address is already set."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_732fb107256944bc8e16b4baa2a1ee32d437565fb724a962aaca04c4544c866c",
																"typeString": "literal_string \"Game address is already set.\""
															}
														],
														"id": 3285,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1971:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3293,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1971:66:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3294,
												"nodeType": "ExpressionStatement",
												"src": "1971:66:14"
											},
											{
												"expression": {
													"id": 3297,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3295,
														"name": "gameAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3190,
														"src": "2043:11:14",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 3296,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3280,
														"src": "2057:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2043:21:14",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 3298,
												"nodeType": "ExpressionStatement",
												"src": "2043:21:14"
											}
										]
									},
									"functionSelector": "711953ef",
									"id": 3300,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 3283,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 3282,
												"name": "onlyOwner",
												"nameLocations": [
													"1955:9:14"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "1955:9:14"
											},
											"nodeType": "ModifierInvocation",
											"src": "1955:9:14"
										}
									],
									"name": "setGameAddress",
									"nameLocation": "1915:14:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3281,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3280,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1939:7:14",
												"nodeType": "VariableDeclaration",
												"scope": 3300,
												"src": "1931:15:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3279,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1931:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1930:17:14"
									},
									"returnParameters": {
										"id": 3284,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1965:0:14"
									},
									"scope": 3327,
									"src": "1906:163:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										750,
										1751
									],
									"body": {
										"id": 3325,
										"nodeType": "Block",
										"src": "2226:47:14",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 3319,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3302,
															"src": "2246:4:14",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3320,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3304,
															"src": "2252:2:14",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3321,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3307,
															"src": "2256:3:14",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 3322,
															"name": "values",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3310,
															"src": "2261:6:14",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														],
														"expression": {
															"id": 3316,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "2232:5:14",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_SomTokens_$3327_$",
																"typeString": "type(contract super SomTokens)"
															}
														},
														"id": 3318,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2238:7:14",
														"memberName": "_update",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1751,
														"src": "2232:13:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256[] memory,uint256[] memory)"
														}
													},
													"id": 3323,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2232:36:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3324,
												"nodeType": "ExpressionStatement",
												"src": "2232:36:14"
											}
										]
									},
									"id": 3326,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "2082:7:14",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 3314,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 3312,
												"name": "ERC1155",
												"nameLocations": [
													"2202:7:14"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1335,
												"src": "2202:7:14"
											},
											{
												"id": 3313,
												"name": "ERC1155Supply",
												"nameLocations": [
													"2211:13:14"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1752,
												"src": "2211:13:14"
											}
										],
										"src": "2193:32:14"
									},
									"parameters": {
										"id": 3311,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3302,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2104:4:14",
												"nodeType": "VariableDeclaration",
												"scope": 3326,
												"src": "2096:12:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3301,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2096:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3304,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2122:2:14",
												"nodeType": "VariableDeclaration",
												"scope": 3326,
												"src": "2114:10:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3303,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2114:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3307,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "2147:3:14",
												"nodeType": "VariableDeclaration",
												"scope": 3326,
												"src": "2130:20:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 3305,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2130:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 3306,
													"nodeType": "ArrayTypeName",
													"src": "2130:9:14",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3310,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "2173:6:14",
												"nodeType": "VariableDeclaration",
												"scope": 3326,
												"src": "2156:23:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 3308,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2156:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 3309,
													"nodeType": "ArrayTypeName",
													"src": "2156:9:14",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2090:93:14"
									},
									"returnParameters": {
										"id": 3315,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2226:0:14"
									},
									"scope": 3327,
									"src": "2073:200:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 3328,
							"src": "376:1899:14",
							"usedErrors": [
								13,
								18,
								249,
								254,
								259,
								266,
								271,
								276,
								283
							],
							"usedEvents": [
								24,
								1355,
								1370,
								1379,
								1386
							]
						}
					],
					"src": "32:2244:14"
				},
				"id": 14
			}
		}
	}
}